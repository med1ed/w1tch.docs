SYSTEM = {}

-- void WAIT(int ms) // 0x4EDE34FBADD967A6
--[[
Pauses execution of the current script, please note this behavior is only seen when called from one of the game script files(ysc). In order to wait an asi script use "static void WAIT(DWORD time);" found in main.h
--]]
function SYSTEM.WAIT(ms)
  native.invoke(
    Type.Void, 0, false,
    arg(Type.Int, ms)
  )
end

-- int START_NEW_SCRIPT(const char* scriptName, int stackSize) // 0xE81651AD79516E48
--[[
Examples:
 g_384A = SYSTEM::START_NEW_SCRIPT("cellphone_flashhand", 1424);
 l_10D = SYSTEM::START_NEW_SCRIPT("taxiService", 1828);
 SYSTEM::START_NEW_SCRIPT("AM_MP_YACHT", 5000);
 SYSTEM::START_NEW_SCRIPT("emergencycall", 512);
 SYSTEM::START_NEW_SCRIPT("emergencycall", 512); 
 SYSTEM::START_NEW_SCRIPT("FM_maintain_cloud_header_data", 1424);
 SYSTEM::START_NEW_SCRIPT("FM_Mission_Controller", 31000);
 SYSTEM::START_NEW_SCRIPT("tennis_family", 3650);
 SYSTEM::START_NEW_SCRIPT("Celebrations", 3650);

Decompiled examples of usage when starting a script:
 
    SCRIPT::REQUEST_SCRIPT(a_0);
    if (SCRIPT::HAS_SCRIPT_LOADED(a_0)) {
        SYSTEM::START_NEW_SCRIPT(a_0, v_3);
        SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(a_0);
        return 1;
    }
 
or:

    v_2 = "MrsPhilips2";
    SCRIPT::REQUEST_SCRIPT(v_2);
    while (!SCRIPT::HAS_SCRIPT_LOADED(v_2)) {
    SCRIPT::REQUEST_SCRIPT(v_2);
    SYSTEM::WAIT(0);
    }
    sub_8792(36);
    SYSTEM::START_NEW_SCRIPT(v_2, 17000);
    SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(v_2);
--]]
function SYSTEM.START_NEW_SCRIPT(scriptName, stackSize)
  return native.invoke(
    Type.Int, 1, false,
    arg(Type.String, scriptName),
    arg(Type.Int, stackSize)
  )
end

-- int START_NEW_SCRIPT_WITH_ARGS(const char* scriptName, Any* args, int argCount, int stackSize) // 0xB8BA7F44DF1575E1
--[[
return : script thread id, 0 if failed
Pass pointer to struct of args in p1, size of struct goes into p2
--]]
function SYSTEM.START_NEW_SCRIPT_WITH_ARGS(scriptName, args, argCount, stackSize)
  return native.invoke(
    Type.Int, 2, false,
    arg(Type.String, scriptName),
    arg(Type.Any, args),
    arg(Type.Int, argCount),
    arg(Type.Int, stackSize)
  )
end

-- int START_NEW_SCRIPT_WITH_NAME_HASH(Hash scriptHash, int stackSize) // 0xEB1C67C3A5333A92
function SYSTEM.START_NEW_SCRIPT_WITH_NAME_HASH(scriptHash, stackSize)
  return native.invoke(
    Type.Int, 3, false,
    arg(Type.Hash, scriptHash),
    arg(Type.Int, stackSize)
  )
end

-- int START_NEW_SCRIPT_WITH_NAME_HASH_AND_ARGS(Hash scriptHash, Any* args, int argCount, int stackSize) // 0xC4BB298BD441BE78
function SYSTEM.START_NEW_SCRIPT_WITH_NAME_HASH_AND_ARGS(scriptHash, args, argCount, stackSize)
  return native.invoke(
    Type.Int, 4, false,
    arg(Type.Hash, scriptHash),
    arg(Type.Any, args),
    arg(Type.Int, argCount),
    arg(Type.Int, stackSize)
  )
end

-- int TIMERA() // 0x83666F9FB8FEBD4B
--[[
Counts up. Every 1000 is 1 real-time second. Use SETTIMERA(int value) to set the timer (e.g.: SETTIMERA(0)).
--]]
function SYSTEM.TIMERA()
  return native.invoke(
    Type.Int, 5, false
  )
end

-- int TIMERB() // 0xC9D9444186B5A374
function SYSTEM.TIMERB()
  return native.invoke(
    Type.Int, 6, false
  )
end

-- void SETTIMERA(int value) // 0xC1B1E9A034A63A62
function SYSTEM.SETTIMERA(value)
  native.invoke(
    Type.Void, 7, false,
    arg(Type.Int, value)
  )
end

-- void SETTIMERB(int value) // 0x5AE11BC36633DE4E
function SYSTEM.SETTIMERB(value)
  native.invoke(
    Type.Void, 8, false,
    arg(Type.Int, value)
  )
end

-- float TIMESTEP() // 0x0000000050597EE2
--[[
Gets the current frame time.
--]]
function SYSTEM.TIMESTEP()
  return native.invoke(
    Type.Float, 9, false
  )
end

-- float SIN(float value) // 0x0BADBFA3B172435F
function SYSTEM.SIN(value)
  return native.invoke(
    Type.Float, 10, false,
    arg(Type.Float, value)
  )
end

-- float COS(float value) // 0xD0FFB162F40A139C
function SYSTEM.COS(value)
  return native.invoke(
    Type.Float, 11, false,
    arg(Type.Float, value)
  )
end

-- float SQRT(float value) // 0x71D93B57D07F9804
function SYSTEM.SQRT(value)
  return native.invoke(
    Type.Float, 12, false,
    arg(Type.Float, value)
  )
end

-- float POW(float base, float exponent) // 0xE3621CC40F31FE2E
function SYSTEM.POW(base, exponent)
  return native.invoke(
    Type.Float, 13, false,
    arg(Type.Float, base),
    arg(Type.Float, exponent)
  )
end

-- float LOG10(float value) // 0xE816E655DE37FE20
function SYSTEM.LOG10(value)
  return native.invoke(
    Type.Float, 14, false,
    arg(Type.Float, value)
  )
end

-- float VMAG(float x, float y, float z) // 0x652D2EEEF1D3E62C
--[[
Calculates the magnitude of a vector.
--]]
function SYSTEM.VMAG(x, y, z)
  return native.invoke(
    Type.Float, 15, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- float VMAG2(float x, float y, float z) // 0xA8CEACB4F35AE058
--[[
Calculates the magnitude of a vector but does not perform Sqrt operations. (Its way faster)
--]]
function SYSTEM.VMAG2(x, y, z)
  return native.invoke(
    Type.Float, 16, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- float VDIST(float x1, float y1, float z1, float x2, float y2, float z2) // 0x2A488C176D52CCA5
--[[
Calculates distance between vectors.
--]]
function SYSTEM.VDIST(x1, y1, z1, x2, y2, z2)
  return native.invoke(
    Type.Float, 17, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2)
  )
end

-- float VDIST2(float x1, float y1, float z1, float x2, float y2, float z2) // 0xB7A628320EFF8E47
--[[
Calculates distance between vectors but does not perform Sqrt operations. (Its way faster)
--]]
function SYSTEM.VDIST2(x1, y1, z1, x2, y2, z2)
  return native.invoke(
    Type.Float, 18, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2)
  )
end

-- int SHIFT_LEFT(int value, int bitShift) // 0xEDD95A39E5544DE8
function SYSTEM.SHIFT_LEFT(value, bitShift)
  return native.invoke(
    Type.Int, 19, false,
    arg(Type.Int, value),
    arg(Type.Int, bitShift)
  )
end

-- int SHIFT_RIGHT(int value, int bitShift) // 0x97EF1E5BCE9DC075
function SYSTEM.SHIFT_RIGHT(value, bitShift)
  return native.invoke(
    Type.Int, 20, false,
    arg(Type.Int, value),
    arg(Type.Int, bitShift)
  )
end

-- int FLOOR(float value) // 0xF34EE736CF047844
function SYSTEM.FLOOR(value)
  return native.invoke(
    Type.Int, 21, false,
    arg(Type.Float, value)
  )
end

-- int CEIL(float value) // 0x11E019C8F43ACC8A
--[[
I'm guessing this rounds a float value up to the next whole number, and FLOOR rounds it down
--]]
function SYSTEM.CEIL(value)
  return native.invoke(
    Type.Int, 22, false,
    arg(Type.Float, value)
  )
end

-- int ROUND(float value) // 0xF2DB717A73826179
function SYSTEM.ROUND(value)
  return native.invoke(
    Type.Int, 23, false,
    arg(Type.Float, value)
  )
end

-- float TO_FLOAT(int value) // 0xBBDA792448DB5A89
function SYSTEM.TO_FLOAT(value)
  return native.invoke(
    Type.Float, 24, false,
    arg(Type.Int, value)
  )
end

-- void SET_THIS_THREAD_PRIORITY(int priority) // 0x42B65DEEF2EDF2A1
--[[
THREAD_PRIO_HIGHEST = 0
THREAD_PRIO_NORMAL = 1
THREAD_PRIO_LOWEST = 2
THREAD_PRIO_MANUAL_UPDATE = 100
--]]
function SYSTEM.SET_THIS_THREAD_PRIORITY(priority)
  native.invoke(
    Type.Void, 25, false,
    arg(Type.Int, priority)
  )
end


APP = {}

-- BOOL APP_DATA_VALID() // 0x846AA8E7D55EE5B6
function APP.APP_DATA_VALID()
  return native.invoke(
    Type.Bool, 26, false
  )
end

-- int APP_GET_INT(const char* property) // 0xD3A58A12C77D9D4B
function APP.APP_GET_INT(property)
  return native.invoke(
    Type.Int, 27, false,
    arg(Type.String, property)
  )
end

-- float APP_GET_FLOAT(const char* property) // 0x1514FB24C02C2322
function APP.APP_GET_FLOAT(property)
  return native.invoke(
    Type.Float, 28, false,
    arg(Type.String, property)
  )
end

-- const char* APP_GET_STRING(const char* property) // 0x749B023950D2311C
function APP.APP_GET_STRING(property)
  return native.invoke(
    Type.Const char, 29, false,
    arg(Type.String, property)
  )
end

-- void APP_SET_INT(const char* property, int value) // 0x607E8E3D3E4F9611
function APP.APP_SET_INT(property, value)
  native.invoke(
    Type.Void, 30, false,
    arg(Type.String, property),
    arg(Type.Int, value)
  )
end

-- void APP_SET_FLOAT(const char* property, float value) // 0x25D7687C68E0DAA4
function APP.APP_SET_FLOAT(property, value)
  native.invoke(
    Type.Void, 31, false,
    arg(Type.String, property),
    arg(Type.Float, value)
  )
end

-- void APP_SET_STRING(const char* property, const char* value) // 0x3FF2FCEC4B7721B4
function APP.APP_SET_STRING(property, value)
  native.invoke(
    Type.Void, 32, false,
    arg(Type.String, property),
    arg(Type.String, value)
  )
end

-- void APP_SET_APP(const char* appName) // 0xCFD0406ADAF90D2B
--[[
Called in the gamescripts like:
APP::APP_SET_APP("car");
APP::APP_SET_APP("dog");
--]]
function APP.APP_SET_APP(appName)
  native.invoke(
    Type.Void, 33, false,
    arg(Type.String, appName)
  )
end

-- void APP_SET_BLOCK(const char* blockName) // 0x262AB456A3D21F93
function APP.APP_SET_BLOCK(blockName)
  native.invoke(
    Type.Void, 34, false,
    arg(Type.String, blockName)
  )
end

-- void APP_CLEAR_BLOCK() // 0x5FE1DF3342DB7DBA
function APP.APP_CLEAR_BLOCK()
  native.invoke(
    Type.Void, 35, false
  )
end

-- void APP_CLOSE_APP() // 0xE41C65E07A5F05FC
function APP.APP_CLOSE_APP()
  native.invoke(
    Type.Void, 36, false
  )
end

-- void APP_CLOSE_BLOCK() // 0xE8E3FCF72EAC0EF8
function APP.APP_CLOSE_BLOCK()
  native.invoke(
    Type.Void, 37, false
  )
end

-- BOOL APP_HAS_LINKED_SOCIAL_CLUB_ACCOUNT() // 0x71EEE69745088DA0
function APP.APP_HAS_LINKED_SOCIAL_CLUB_ACCOUNT()
  return native.invoke(
    Type.Bool, 38, false
  )
end

-- BOOL APP_HAS_SYNCED_DATA(const char* appName) // 0xCA52279A7271517F
function APP.APP_HAS_SYNCED_DATA(appName)
  return native.invoke(
    Type.Bool, 39, false,
    arg(Type.String, appName)
  )
end

-- void APP_SAVE_DATA() // 0x95C5D356CDA6E85F
function APP.APP_SAVE_DATA()
  native.invoke(
    Type.Void, 40, false
  )
end

-- int APP_GET_DELETED_FILE_STATUS() // 0xC9853A2BE3DED1A6
function APP.APP_GET_DELETED_FILE_STATUS()
  return native.invoke(
    Type.Int, 41, false
  )
end

-- BOOL APP_DELETE_APP_DATA(const char* appName) // 0x44151AEA95C8A003
function APP.APP_DELETE_APP_DATA(appName)
  return native.invoke(
    Type.Bool, 42, false,
    arg(Type.String, appName)
  )
end


AUDIO = {}

-- void PLAY_PED_RINGTONE(const char* ringtoneName, Ped ped, BOOL p2) // 0xF9E56683CA8E11A5
--[[
All found occurrences in b617d, sorted alphabetically and identical lines removed: https://pastebin.com/RFb4GTny

AUDIO::PLAY_PED_RINGTONE("Remote_Ring", PLAYER::PLAYER_PED_ID(), 1);
AUDIO::PLAY_PED_RINGTONE("Dial_and_Remote_Ring", PLAYER::PLAYER_PED_ID(), 1);

--]]
function AUDIO.PLAY_PED_RINGTONE(ringtoneName, ped, p2)
  native.invoke(
    Type.Void, 43, false,
    arg(Type.String, ringtoneName),
    arg(Type.Ped, ped),
    arg(Type.Bool, p2)
  )
end

-- BOOL IS_PED_RINGTONE_PLAYING(Ped ped) // 0x1E8E5E20937E3137
function AUDIO.IS_PED_RINGTONE_PLAYING(ped)
  return native.invoke(
    Type.Bool, 44, false,
    arg(Type.Ped, ped)
  )
end

-- void STOP_PED_RINGTONE(Ped ped) // 0x6C5AE23EFA885092
function AUDIO.STOP_PED_RINGTONE(ped)
  native.invoke(
    Type.Void, 45, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_MOBILE_PHONE_CALL_ONGOING() // 0x7497D2CE2C30D24C
function AUDIO.IS_MOBILE_PHONE_CALL_ONGOING()
  return native.invoke(
    Type.Bool, 46, false
  )
end

-- BOOL IS_MOBILE_INTERFERENCE_ACTIVE() // 0xC8B1B2425604CDD0
function AUDIO.IS_MOBILE_INTERFERENCE_ACTIVE()
  return native.invoke(
    Type.Bool, 47, false
  )
end

-- int GET_CURRENT_TV_SHOW_PLAY_TIME() // 0xDD3AA743AB7D4D75
function AUDIO.GET_CURRENT_TV_SHOW_PLAY_TIME()
  return native.invoke(
    Type.Int, 48, false
  )
end

-- void CREATE_NEW_SCRIPTED_CONVERSATION() // 0xD2C91A0B572AAE56
function AUDIO.CREATE_NEW_SCRIPTED_CONVERSATION()
  native.invoke(
    Type.Void, 49, false
  )
end

-- void ADD_LINE_TO_CONVERSATION(int index, const char* p1, const char* p2, int p3, int p4, BOOL p5, BOOL p6, BOOL p7, BOOL p8, int p9, BOOL p10, BOOL p11, BOOL p12) // 0xC5EF963405593646
--[[
NOTE: ones that are -1, 0 - 35 are determined by a function where it gets a TextLabel from a global then runs,
GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME and depending on what the result is it goes in check order of 0 - 9 then A - Z then z (lowercase). So it will then return 0 - 35 or -1 if it's 'z'. The func to handle that ^^ is func_67 in dialog_handler.c atleast in TU27 Xbox360 scripts.

p0 is -1, 0 - 35
p1 is a char or string (whatever you wanna call it)
p2 is Global 10597 + i * 6. 'i' is a while(i < 70) loop
p3 is again -1, 0 - 35 
p4 is again -1, 0 - 35 
p5 is either 0 or 1 (bool ?)
p6 is either 0 or 1 (The func to determine this is bool)
p7 is either 0 or 1 (The func to determine this is bool)
p8 is either 0 or 1 (The func to determine this is bool)
p9 is 0 - 3 (Determined by func_60 in dialogue_handler.c)
p10 is either 0 or 1 (The func to determine this is bool)
p11 is either 0 or 1 (The func to determine this is bool)
p12 is unknown as in TU27 X360 scripts it only goes to p11.
--]]
function AUDIO.ADD_LINE_TO_CONVERSATION(index, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12)
  native.invoke(
    Type.Void, 50, false,
    arg(Type.Int, index),
    arg(Type.String, p1),
    arg(Type.String, p2),
    arg(Type.Int, p3),
    arg(Type.Int, p4),
    arg(Type.Bool, p5),
    arg(Type.Bool, p6),
    arg(Type.Bool, p7),
    arg(Type.Bool, p8),
    arg(Type.Int, p9),
    arg(Type.Bool, p10),
    arg(Type.Bool, p11),
    arg(Type.Bool, p12)
  )
end

-- void ADD_PED_TO_CONVERSATION(int index, Ped ped, const char* p2) // 0x95D9F4BC443956E7
--[[
4 calls in the b617d scripts. The only one with p0 and p2 in clear text:

AUDIO::ADD_PED_TO_CONVERSATION(5, l_AF, "DINAPOLI");

=================================================
One of the 2 calls in dialogue_handler.c p0 is in a while-loop, and so is determined to also possibly be 0 - 15.
--]]
function AUDIO.ADD_PED_TO_CONVERSATION(index, ped, p2)
  native.invoke(
    Type.Void, 51, false,
    arg(Type.Int, index),
    arg(Type.Ped, ped),
    arg(Type.String, p2)
  )
end

-- void SET_POSITION_FOR_NULL_CONV_PED(Any p0, float p1, float p2, float p3) // 0x33E3C6C6F2F0B506
function AUDIO.SET_POSITION_FOR_NULL_CONV_PED(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 52, false,
    arg(Type.Any, p0),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3)
  )
end

-- void SET_ENTITY_FOR_NULL_CONV_PED(int p0, Entity entity) // 0x892B6AB8F33606F5
function AUDIO.SET_ENTITY_FOR_NULL_CONV_PED(p0, entity)
  native.invoke(
    Type.Void, 53, false,
    arg(Type.Int, p0),
    arg(Type.Entity, entity)
  )
end

-- void SET_MICROPHONE_POSITION(BOOL toggle, float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3) // 0xB6AE90EDDE95C762
--[[
This native controls where the game plays audio from. By default the microphone is positioned on the player.
When p0 is true the game will play audio from the 3 positions inputted.
It is recommended to set all 3 positions to the same value as mixing different positions doesn't seem to work well.
The scripts mostly use it with only one position such as in fbi3.c: 
AUDIO::SET_MICROPHONE_POSITION(true, ENTITY::GET_ENTITY_COORDS(iLocal_3091, true), ENTITY::GET_ENTITY_COORDS(iLocal_3091, true), ENTITY::GET_ENTITY_COORDS(iLocal_3091, true));
--]]
function AUDIO.SET_MICROPHONE_POSITION(toggle, x1, y1, z1, x2, y2, z2, x3, y3, z3)
  native.invoke(
    Type.Void, 54, false,
    arg(Type.Bool, toggle),
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Float, x3),
    arg(Type.Float, y3),
    arg(Type.Float, z3)
  )
end

-- void SET_CONVERSATION_AUDIO_CONTROLLED_BY_ANIM(BOOL p0) // 0x0B568201DD99F0EB
function AUDIO.SET_CONVERSATION_AUDIO_CONTROLLED_BY_ANIM(p0)
  native.invoke(
    Type.Void, 55, false,
    arg(Type.Bool, p0)
  )
end

-- void SET_CONVERSATION_AUDIO_PLACEHOLDER(BOOL p0) // 0x61631F5DF50D1C34
function AUDIO.SET_CONVERSATION_AUDIO_PLACEHOLDER(p0)
  native.invoke(
    Type.Void, 56, false,
    arg(Type.Bool, p0)
  )
end

-- void START_SCRIPT_PHONE_CONVERSATION(BOOL p0, BOOL p1) // 0x252E5F915EABB675
function AUDIO.START_SCRIPT_PHONE_CONVERSATION(p0, p1)
  native.invoke(
    Type.Void, 57, false,
    arg(Type.Bool, p0),
    arg(Type.Bool, p1)
  )
end

-- void PRELOAD_SCRIPT_PHONE_CONVERSATION(BOOL p0, BOOL p1) // 0x6004BCB0E226AAEA
function AUDIO.PRELOAD_SCRIPT_PHONE_CONVERSATION(p0, p1)
  native.invoke(
    Type.Void, 58, false,
    arg(Type.Bool, p0),
    arg(Type.Bool, p1)
  )
end

-- void START_SCRIPT_CONVERSATION(BOOL p0, BOOL p1, BOOL p2, BOOL p3) // 0x6B17C62C9635D2DC
function AUDIO.START_SCRIPT_CONVERSATION(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 59, false,
    arg(Type.Bool, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3)
  )
end

-- void PRELOAD_SCRIPT_CONVERSATION(BOOL p0, BOOL p1, BOOL p2, BOOL p3) // 0x3B3CAD6166916D87
function AUDIO.PRELOAD_SCRIPT_CONVERSATION(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 60, false,
    arg(Type.Bool, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3)
  )
end

-- void START_PRELOADED_CONVERSATION() // 0x23641AFE870AF385
function AUDIO.START_PRELOADED_CONVERSATION()
  native.invoke(
    Type.Void, 61, false
  )
end

-- BOOL GET_IS_PRELOADED_CONVERSATION_READY() // 0xE73364DB90778FFA
function AUDIO.GET_IS_PRELOADED_CONVERSATION_READY()
  return native.invoke(
    Type.Bool, 62, false
  )
end

-- BOOL IS_SCRIPTED_CONVERSATION_ONGOING() // 0x16754C556D2EDE3D
function AUDIO.IS_SCRIPTED_CONVERSATION_ONGOING()
  return native.invoke(
    Type.Bool, 63, false
  )
end

-- BOOL IS_SCRIPTED_CONVERSATION_LOADED() // 0xDF0D54BE7A776737
function AUDIO.IS_SCRIPTED_CONVERSATION_LOADED()
  return native.invoke(
    Type.Bool, 64, false
  )
end

-- int GET_CURRENT_SCRIPTED_CONVERSATION_LINE() // 0x480357EE890C295A
function AUDIO.GET_CURRENT_SCRIPTED_CONVERSATION_LINE()
  return native.invoke(
    Type.Int, 65, false
  )
end

-- void PAUSE_SCRIPTED_CONVERSATION(BOOL p0) // 0x8530AD776CD72B12
function AUDIO.PAUSE_SCRIPTED_CONVERSATION(p0)
  native.invoke(
    Type.Void, 66, false,
    arg(Type.Bool, p0)
  )
end

-- void RESTART_SCRIPTED_CONVERSATION() // 0x9AEB285D1818C9AC
function AUDIO.RESTART_SCRIPTED_CONVERSATION()
  native.invoke(
    Type.Void, 67, false
  )
end

-- int STOP_SCRIPTED_CONVERSATION(BOOL p0) // 0xD79DEEFB53455EBA
function AUDIO.STOP_SCRIPTED_CONVERSATION(p0)
  return native.invoke(
    Type.Int, 68, false,
    arg(Type.Bool, p0)
  )
end

-- void SKIP_TO_NEXT_SCRIPTED_CONVERSATION_LINE() // 0x9663FE6B7A61EB00
function AUDIO.SKIP_TO_NEXT_SCRIPTED_CONVERSATION_LINE()
  native.invoke(
    Type.Void, 69, false
  )
end

-- void INTERRUPT_CONVERSATION(Ped ped, const char* voiceline, const char* speaker) // 0xA018A12E5C5C2FA6
--[[
Example from carsteal3.c: AUDIO::INTERRUPT_CONVERSATION(PLAYER::PLAYER_PED_ID(), "CST4_CFAA", "FRANKLIN");
Voicelines can be found in GTAV\x64\audio\sfx in files starting with "SS_" which seems to mean scripted speech.
--]]
function AUDIO.INTERRUPT_CONVERSATION(ped, voiceline, speaker)
  native.invoke(
    Type.Void, 70, false,
    arg(Type.Ped, ped),
    arg(Type.String, voiceline),
    arg(Type.String, speaker)
  )
end

-- void INTERRUPT_CONVERSATION_AND_PAUSE(Ped ped, const char* p1, const char* speaker) // 0x8A694D7A68F8DC38
--[[
One call found in the b617d scripts:

AUDIO::INTERRUPT_CONVERSATION_AND_PAUSE(NETWORK::NET_TO_PED(l_3989._f26F[0/*1*/]), "CONV_INTERRUPT_QUIT_IT", "LESTER");
--]]
function AUDIO.INTERRUPT_CONVERSATION_AND_PAUSE(ped, p1, speaker)
  native.invoke(
    Type.Void, 71, false,
    arg(Type.Ped, ped),
    arg(Type.String, p1),
    arg(Type.String, speaker)
  )
end

-- int GET_VARIATION_CHOSEN_FOR_SCRIPTED_LINE(Any* p0) // 0xAA19F5572C38B564
function AUDIO.GET_VARIATION_CHOSEN_FOR_SCRIPTED_LINE(p0)
  return native.invoke(
    Type.Int, 72, false,
    arg(Type.Any, p0)
  )
end

-- void SET_NO_DUCKING_FOR_CONVERSATION(BOOL p0) // 0xB542DE8C3D1CB210
function AUDIO.SET_NO_DUCKING_FOR_CONVERSATION(p0)
  native.invoke(
    Type.Void, 73, false,
    arg(Type.Bool, p0)
  )
end

-- void REGISTER_SCRIPT_WITH_AUDIO(int p0) // 0xC6ED9D5092438D91
--[[
This native does absolutely nothing, just a nullsub
--]]
function AUDIO.REGISTER_SCRIPT_WITH_AUDIO(p0)
  native.invoke(
    Type.Void, 74, false,
    arg(Type.Int, p0)
  )
end

-- void UNREGISTER_SCRIPT_WITH_AUDIO() // 0xA8638BE228D4751A
--[[
This native does absolutely nothing, just a nullsub
--]]
function AUDIO.UNREGISTER_SCRIPT_WITH_AUDIO()
  native.invoke(
    Type.Void, 75, false
  )
end

-- BOOL REQUEST_MISSION_AUDIO_BANK(const char* audioBank, BOOL p1, Any p2) // 0x7345BDD95E62E0F2
--[[
All occurrences and usages found in b617d: https://pastebin.com/NzZZ2Tmm
Full list of mission audio bank names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/missionAudioBankNames.json
p2 is always -1
--]]
function AUDIO.REQUEST_MISSION_AUDIO_BANK(audioBank, p1, p2)
  return native.invoke(
    Type.Bool, 76, false,
    arg(Type.String, audioBank),
    arg(Type.Bool, p1),
    arg(Type.Any, p2)
  )
end

-- BOOL REQUEST_AMBIENT_AUDIO_BANK(const char* audioBank, BOOL p1, Any p2) // 0xFE02FFBED8CA9D99
--[[
All occurrences and usages found in b617d, sorted alphabetically and identical lines removed: https://pastebin.com/XZ1tmGEz
Full list of ambient audio bank names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ambientAudioBankNames.json
p2 is always -1
--]]
function AUDIO.REQUEST_AMBIENT_AUDIO_BANK(audioBank, p1, p2)
  return native.invoke(
    Type.Bool, 77, false,
    arg(Type.String, audioBank),
    arg(Type.Bool, p1),
    arg(Type.Any, p2)
  )
end

-- BOOL REQUEST_SCRIPT_AUDIO_BANK(const char* audioBank, BOOL p1, Any p2) // 0x2F844A8B08D76685
--[[
All occurrences and usages found in b617d, sorted alphabetically and identical lines removed: https://pastebin.com/AkmDAVn6
Full list of script audio bank names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scriptAudioBankNames.json
p2 is always -1
--]]
function AUDIO.REQUEST_SCRIPT_AUDIO_BANK(audioBank, p1, p2)
  return native.invoke(
    Type.Bool, 78, false,
    arg(Type.String, audioBank),
    arg(Type.Bool, p1),
    arg(Type.Any, p2)
  )
end

-- BOOL HINT_MISSION_AUDIO_BANK(const char* audioBank, BOOL p1, Any p2) // 0x40763EA7B9B783E7
--[[
p2 is always -1
--]]
function AUDIO.HINT_MISSION_AUDIO_BANK(audioBank, p1, p2)
  return native.invoke(
    Type.Bool, 79, false,
    arg(Type.String, audioBank),
    arg(Type.Bool, p1),
    arg(Type.Any, p2)
  )
end

-- BOOL HINT_AMBIENT_AUDIO_BANK(const char* audioBank, BOOL p1, Any p2) // 0x8F8C0E370AE62F5C
--[[
p2 is always -1
--]]
function AUDIO.HINT_AMBIENT_AUDIO_BANK(audioBank, p1, p2)
  return native.invoke(
    Type.Bool, 80, false,
    arg(Type.String, audioBank),
    arg(Type.Bool, p1),
    arg(Type.Any, p2)
  )
end

-- BOOL HINT_SCRIPT_AUDIO_BANK(const char* audioBank, BOOL p1, Any p2) // 0xFB380A29641EC31A
--[[
p2 is always -1
--]]
function AUDIO.HINT_SCRIPT_AUDIO_BANK(audioBank, p1, p2)
  return native.invoke(
    Type.Bool, 81, false,
    arg(Type.String, audioBank),
    arg(Type.Bool, p1),
    arg(Type.Any, p2)
  )
end

-- void RELEASE_MISSION_AUDIO_BANK() // 0x0EC92A1BF0857187
function AUDIO.RELEASE_MISSION_AUDIO_BANK()
  native.invoke(
    Type.Void, 82, false
  )
end

-- void RELEASE_AMBIENT_AUDIO_BANK() // 0x65475A218FFAA93D
function AUDIO.RELEASE_AMBIENT_AUDIO_BANK()
  native.invoke(
    Type.Void, 83, false
  )
end

-- void RELEASE_NAMED_SCRIPT_AUDIO_BANK(const char* audioBank) // 0x77ED170667F50170
--[[
Full list of script audio bank names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scriptAudioBankNames.json
--]]
function AUDIO.RELEASE_NAMED_SCRIPT_AUDIO_BANK(audioBank)
  native.invoke(
    Type.Void, 84, false,
    arg(Type.String, audioBank)
  )
end

-- void RELEASE_SCRIPT_AUDIO_BANK() // 0x7A2D8AD0A9EB9C3F
function AUDIO.RELEASE_SCRIPT_AUDIO_BANK()
  native.invoke(
    Type.Void, 85, false
  )
end

-- void UNHINT_AMBIENT_AUDIO_BANK() // 0x19AF7ED9B9D23058
function AUDIO.UNHINT_AMBIENT_AUDIO_BANK()
  native.invoke(
    Type.Void, 86, false
  )
end

-- void UNHINT_SCRIPT_AUDIO_BANK() // 0x9AC92EED5E4793AB
function AUDIO.UNHINT_SCRIPT_AUDIO_BANK()
  native.invoke(
    Type.Void, 87, false
  )
end

-- void UNHINT_NAMED_SCRIPT_AUDIO_BANK(const char* audioBank) // 0x11579D940949C49E
function AUDIO.UNHINT_NAMED_SCRIPT_AUDIO_BANK(audioBank)
  native.invoke(
    Type.Void, 88, false,
    arg(Type.String, audioBank)
  )
end

-- int GET_SOUND_ID() // 0x430386FE9BF80B45
function AUDIO.GET_SOUND_ID()
  return native.invoke(
    Type.Int, 89, false
  )
end

-- void RELEASE_SOUND_ID(int soundId) // 0x353FC880830B88FA
function AUDIO.RELEASE_SOUND_ID(soundId)
  native.invoke(
    Type.Void, 90, false,
    arg(Type.Int, soundId)
  )
end

-- void PLAY_SOUND(int soundId, const char* audioName, const char* audioRef, BOOL p3, Any p4, BOOL p5) // 0x7FF4944CC209192D
--[[
All found occurrences in b617d, sorted alphabetically and identical lines removed: https://pastebin.com/A8Ny8AHZ

Full list of audio / sound names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/soundNames.json
--]]
function AUDIO.PLAY_SOUND(soundId, audioName, audioRef, p3, p4, p5)
  native.invoke(
    Type.Void, 91, false,
    arg(Type.Int, soundId),
    arg(Type.String, audioName),
    arg(Type.String, audioRef),
    arg(Type.Bool, p3),
    arg(Type.Any, p4),
    arg(Type.Bool, p5)
  )
end

-- void PLAY_SOUND_FRONTEND(int soundId, const char* audioName, const char* audioRef, BOOL p3) // 0x67C540AA08E4A6F5
--[[
List: https://pastebin.com/DCeRiaLJ

All occurrences as of Cayo Perico Heist DLC (b2189), sorted alphabetically and identical lines removed: https://git.io/JtLxM

Full list of audio / sound names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/soundNames.json
--]]
function AUDIO.PLAY_SOUND_FRONTEND(soundId, audioName, audioRef, p3)
  native.invoke(
    Type.Void, 92, false,
    arg(Type.Int, soundId),
    arg(Type.String, audioName),
    arg(Type.String, audioRef),
    arg(Type.Bool, p3)
  )
end

-- void PLAY_DEFERRED_SOUND_FRONTEND(const char* soundName, const char* soundsetName) // 0xCADA5A0D0702381E
--[[
Only call found in the b617d scripts:

AUDIO::PLAY_DEFERRED_SOUND_FRONTEND("BACK", "HUD_FREEMODE_SOUNDSET");

Full list of audio / sound names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/soundNames.json
--]]
function AUDIO.PLAY_DEFERRED_SOUND_FRONTEND(soundName, soundsetName)
  native.invoke(
    Type.Void, 93, false,
    arg(Type.String, soundName),
    arg(Type.String, soundsetName)
  )
end

-- void PLAY_SOUND_FROM_ENTITY(int soundId, const char* audioName, Entity entity, const char* audioRef, BOOL isNetwork, Any p5) // 0xE65F427EB70AB1ED
--[[
All found occurrences in b617d, sorted alphabetically and identical lines removed: https://pastebin.com/f2A7vTj0 
No changes made in b678d.

gtaforums.com/topic/795622-audio-for-mods

Full list of audio / sound names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/soundNames.json
--]]
function AUDIO.PLAY_SOUND_FROM_ENTITY(soundId, audioName, entity, audioRef, isNetwork, p5)
  native.invoke(
    Type.Void, 94, false,
    arg(Type.Int, soundId),
    arg(Type.String, audioName),
    arg(Type.Entity, entity),
    arg(Type.String, audioRef),
    arg(Type.Bool, isNetwork),
    arg(Type.Any, p5)
  )
end

-- void PLAY_SOUND_FROM_ENTITY_HASH(int soundId, Hash model, Entity entity, Hash soundSetHash, Any p4, Any p5) // 0x5B9853296731E88D
--[[
Only used with "formation_flying_blips_soundset" and "biker_formation_blips_soundset".
p1 is always the model of p2
--]]
function AUDIO.PLAY_SOUND_FROM_ENTITY_HASH(soundId, model, entity, soundSetHash, p4, p5)
  native.invoke(
    Type.Void, 95, false,
    arg(Type.Int, soundId),
    arg(Type.Hash, model),
    arg(Type.Entity, entity),
    arg(Type.Hash, soundSetHash),
    arg(Type.Any, p4),
    arg(Type.Any, p5)
  )
end

-- void PLAY_SOUND_FROM_COORD(int soundId, const char* audioName, float x, float y, float z, const char* audioRef, BOOL isNetwork, int range, BOOL p8) // 0x8D8686B622B88120
--[[
All found occurrences in b617d, sorted alphabetically and identical lines removed: https://pastebin.com/eeFc5DiW

gtaforums.com/topic/795622-audio-for-mods

Full list of audio / sound names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/soundNames.json
--]]
function AUDIO.PLAY_SOUND_FROM_COORD(soundId, audioName, x, y, z, audioRef, isNetwork, range, p8)
  native.invoke(
    Type.Void, 96, false,
    arg(Type.Int, soundId),
    arg(Type.String, audioName),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.String, audioRef),
    arg(Type.Bool, isNetwork),
    arg(Type.Int, range),
    arg(Type.Bool, p8)
  )
end

-- void UPDATE_SOUND_COORD(int soundId, float x, float y, float z) // 0x7EC3C679D0E7E46B
function AUDIO.UPDATE_SOUND_COORD(soundId, x, y, z)
  native.invoke(
    Type.Void, 97, false,
    arg(Type.Int, soundId),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void STOP_SOUND(int soundId) // 0xA3B0C41BA5CC0BB5
function AUDIO.STOP_SOUND(soundId)
  native.invoke(
    Type.Void, 98, false,
    arg(Type.Int, soundId)
  )
end

-- int GET_NETWORK_ID_FROM_SOUND_ID(int soundId) // 0x2DE3F0A134FFBC0D
--[[
Could this be used alongside either, 
SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES or _SET_NETWORK_ID_SYNC_TO_PLAYER to make it so other players can hear the sound while online? It'd be a bit troll-fun to be able to play the Zancudo UFO creepy sounds globally.
--]]
function AUDIO.GET_NETWORK_ID_FROM_SOUND_ID(soundId)
  return native.invoke(
    Type.Int, 99, false,
    arg(Type.Int, soundId)
  )
end

-- int GET_SOUND_ID_FROM_NETWORK_ID(int netId) // 0x75262FD12D0A1C84
function AUDIO.GET_SOUND_ID_FROM_NETWORK_ID(netId)
  return native.invoke(
    Type.Int, 100, false,
    arg(Type.Int, netId)
  )
end

-- void SET_VARIABLE_ON_SOUND(int soundId, const char* variable, float p2) // 0xAD6B3148A78AE9B6
function AUDIO.SET_VARIABLE_ON_SOUND(soundId, variable, p2)
  native.invoke(
    Type.Void, 101, false,
    arg(Type.Int, soundId),
    arg(Type.String, variable),
    arg(Type.Float, p2)
  )
end

-- void SET_VARIABLE_ON_STREAM(const char* variable, float p1) // 0x2F9D3834AEB9EF79
--[[
From the scripts, p0:

"ArmWrestlingIntensity",
"INOUT",
"Monkey_Stream",
"ZoomLevel"
--]]
function AUDIO.SET_VARIABLE_ON_STREAM(variable, p1)
  native.invoke(
    Type.Void, 102, false,
    arg(Type.String, variable),
    arg(Type.Float, p1)
  )
end

-- void OVERRIDE_UNDERWATER_STREAM(const char* p0, BOOL p1) // 0xF2A9CDABCEA04BD6
function AUDIO.OVERRIDE_UNDERWATER_STREAM(p0, p1)
  native.invoke(
    Type.Void, 103, false,
    arg(Type.String, p0),
    arg(Type.Bool, p1)
  )
end

-- void SET_VARIABLE_ON_UNDER_WATER_STREAM(const char* variableName, float value) // 0x733ADF241531E5C2
--[[
AUDIO::SET_VARIABLE_ON_UNDER_WATER_STREAM("inTunnel", 1.0);
AUDIO::SET_VARIABLE_ON_UNDER_WATER_STREAM("inTunnel", 0.0);
--]]
function AUDIO.SET_VARIABLE_ON_UNDER_WATER_STREAM(variableName, value)
  native.invoke(
    Type.Void, 104, false,
    arg(Type.String, variableName),
    arg(Type.Float, value)
  )
end

-- BOOL HAS_SOUND_FINISHED(int soundId) // 0xFCBDCE714A7C88E5
function AUDIO.HAS_SOUND_FINISHED(soundId)
  return native.invoke(
    Type.Bool, 105, false,
    arg(Type.Int, soundId)
  )
end

-- void PLAY_PED_AMBIENT_SPEECH_NATIVE(Ped ped, const char* speechName, const char* speechParam, Any p3) // 0x8E04FEDD28D42462
--[[
Plays ambient speech. See also _0x444180DB.

ped: The ped to play the ambient speech.
speechName: Name of the speech to play, eg. "GENERIC_HI".
speechParam: Can be one of the following:
SPEECH_PARAMS_STANDARD
SPEECH_PARAMS_ALLOW_REPEAT
SPEECH_PARAMS_BEAT
SPEECH_PARAMS_FORCE
SPEECH_PARAMS_FORCE_FRONTEND
SPEECH_PARAMS_FORCE_NO_REPEAT_FRONTEND
SPEECH_PARAMS_FORCE_NORMAL
SPEECH_PARAMS_FORCE_NORMAL_CLEAR
SPEECH_PARAMS_FORCE_NORMAL_CRITICAL
SPEECH_PARAMS_FORCE_SHOUTED
SPEECH_PARAMS_FORCE_SHOUTED_CLEAR
SPEECH_PARAMS_FORCE_SHOUTED_CRITICAL
SPEECH_PARAMS_FORCE_PRELOAD_ONLY
SPEECH_PARAMS_MEGAPHONE
SPEECH_PARAMS_HELI
SPEECH_PARAMS_FORCE_MEGAPHONE
SPEECH_PARAMS_FORCE_HELI
SPEECH_PARAMS_INTERRUPT
SPEECH_PARAMS_INTERRUPT_SHOUTED
SPEECH_PARAMS_INTERRUPT_SHOUTED_CLEAR
SPEECH_PARAMS_INTERRUPT_SHOUTED_CRITICAL
SPEECH_PARAMS_INTERRUPT_NO_FORCE
SPEECH_PARAMS_INTERRUPT_FRONTEND
SPEECH_PARAMS_INTERRUPT_NO_FORCE_FRONTEND
SPEECH_PARAMS_ADD_BLIP
SPEECH_PARAMS_ADD_BLIP_ALLOW_REPEAT
SPEECH_PARAMS_ADD_BLIP_FORCE
SPEECH_PARAMS_ADD_BLIP_SHOUTED
SPEECH_PARAMS_ADD_BLIP_SHOUTED_FORCE
SPEECH_PARAMS_ADD_BLIP_INTERRUPT
SPEECH_PARAMS_ADD_BLIP_INTERRUPT_FORCE
SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED
SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CLEAR
SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CRITICAL
SPEECH_PARAMS_SHOUTED
SPEECH_PARAMS_SHOUTED_CLEAR
SPEECH_PARAMS_SHOUTED_CRITICAL

Note: A list of Name and Parameters can be found here https://pastebin.com/1GZS5dCL

Full list of speeches and voices names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/speeches.json
--]]
function AUDIO.PLAY_PED_AMBIENT_SPEECH_NATIVE(ped, speechName, speechParam, p3)
  native.invoke(
    Type.Void, 106, false,
    arg(Type.Ped, ped),
    arg(Type.String, speechName),
    arg(Type.String, speechParam),
    arg(Type.Any, p3)
  )
end

-- void PLAY_PED_AMBIENT_SPEECH_AND_CLONE_NATIVE(Ped ped, const char* speechName, const char* speechParam, Any p3) // 0xC6941B4A3A8FBBB9
--[[
Plays ambient speech. See also _0x5C57B85D.

See PLAY_PED_AMBIENT_SPEECH_NATIVE for parameter specifications.

Full list of speeches and voices names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/speeches.json
--]]
function AUDIO.PLAY_PED_AMBIENT_SPEECH_AND_CLONE_NATIVE(ped, speechName, speechParam, p3)
  native.invoke(
    Type.Void, 107, false,
    arg(Type.Ped, ped),
    arg(Type.String, speechName),
    arg(Type.String, speechParam),
    arg(Type.Any, p3)
  )
end

-- void PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE(Ped ped, const char* speechName, const char* voiceName, const char* speechParam, BOOL p4) // 0x3523634255FC3318
--[[
This is the same as PLAY_PED_AMBIENT_SPEECH_NATIVE and PLAY_PED_AMBIENT_SPEECH_AND_CLONE_NATIVE but it will allow you to play a speech file from a specific voice file. It works on players and all peds, even animals.

EX (C#):
GTA.Native.Function.Call(Hash.PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE, Game.Player.Character, "GENERIC_INSULT_HIGH", "s_m_y_sheriff_01_white_full_01", "SPEECH_PARAMS_FORCE_SHOUTED", 0);

The first param is the ped you want to play it on, the second is the speech name, the third is the voice name, the fourth is the speech param, and the last param is usually always 0.

Full list of speeches and voices names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/speeches.json
--]]
function AUDIO.PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE(ped, speechName, voiceName, speechParam, p4)
  native.invoke(
    Type.Void, 108, false,
    arg(Type.Ped, ped),
    arg(Type.String, speechName),
    arg(Type.String, voiceName),
    arg(Type.String, speechParam),
    arg(Type.Bool, p4)
  )
end

-- void PLAY_AMBIENT_SPEECH_FROM_POSITION_NATIVE(const char* speechName, const char* voiceName, float x, float y, float z, const char* speechParam) // 0xED640017ED337E45
--[[
Full list of speeches and voices names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/speeches.json
--]]
function AUDIO.PLAY_AMBIENT_SPEECH_FROM_POSITION_NATIVE(speechName, voiceName, x, y, z, speechParam)
  native.invoke(
    Type.Void, 109, false,
    arg(Type.String, speechName),
    arg(Type.String, voiceName),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.String, speechParam)
  )
end

-- void OVERRIDE_TREVOR_RAGE(const char* voiceEffect) // 0x13AD665062541A7E
--[[
This native enables the audio flag "TrevorRageIsOverridden" and sets the voice effect to `voiceEffect`
--]]
function AUDIO.OVERRIDE_TREVOR_RAGE(voiceEffect)
  native.invoke(
    Type.Void, 110, false,
    arg(Type.String, voiceEffect)
  )
end

-- void RESET_TREVOR_RAGE() // 0xE78503B10C4314E0
function AUDIO.RESET_TREVOR_RAGE()
  native.invoke(
    Type.Void, 111, false
  )
end

-- void SET_PLAYER_ANGRY(Ped ped, BOOL toggle) // 0xEA241BB04110F091
function AUDIO.SET_PLAYER_ANGRY(ped, toggle)
  native.invoke(
    Type.Void, 112, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void PLAY_PAIN(Ped ped, int painID, int p1, Any p3) // 0xBC9AE166038A5CEC
--[[
Needs another parameter [int p2]. The signature is PED::PLAY_PAIN(Ped ped, int painID, int p1, int p2);

Last 2 parameters always seem to be 0.

EX: Function.Call(Hash.PLAY_PAIN, TestPed, 6, 0, 0);

Known Pain IDs
________________________

1 - Doesn't seem to do anything. Does NOT crash the game like previously said. (Latest patch)
6 - Scream (Short)
7 - Scared Scream (Kinda Long)
8 - On Fire

--]]
function AUDIO.PLAY_PAIN(ped, painID, p1, p3)
  native.invoke(
    Type.Void, 113, false,
    arg(Type.Ped, ped),
    arg(Type.Int, painID),
    arg(Type.Int, p1),
    arg(Type.Any, p3)
  )
end

-- void RELEASE_WEAPON_AUDIO() // 0xCE4AC0439F607045
function AUDIO.RELEASE_WEAPON_AUDIO()
  native.invoke(
    Type.Void, 114, false
  )
end

-- void ACTIVATE_AUDIO_SLOWMO_MODE(const char* mode) // 0xD01005D2BA2EB778
--[[
mode can be any of these: 
SLOWMO_T1_TRAILER_SMASH
SLOWMO_T1_RAYFIRE_EXPLOSION
SLOWMO_PROLOGUE_VAULT
NIGEL_02_SLOWMO_SETTING
JSH_EXIT_TUNNEL_SLOWMO
SLOWMO_BIG_SCORE_JUMP
SLOWMO_FIB4_TRUCK_SMASH
SLOWMO_EXTREME_04
SLOW_MO_METH_HOUSE_RAYFIRE
BARRY_02_SLOWMO
BARRY_01_SLOWMO
--]]
function AUDIO.ACTIVATE_AUDIO_SLOWMO_MODE(mode)
  native.invoke(
    Type.Void, 115, false,
    arg(Type.String, mode)
  )
end

-- void DEACTIVATE_AUDIO_SLOWMO_MODE(const char* mode) // 0xDDC635D5B3262C56
--[[
see ACTIVATE_AUDIO_SLOWMO_MODE for modes
--]]
function AUDIO.DEACTIVATE_AUDIO_SLOWMO_MODE(mode)
  native.invoke(
    Type.Void, 116, false,
    arg(Type.String, mode)
  )
end

-- void SET_AMBIENT_VOICE_NAME(Ped ped, const char* name) // 0x6C8065A3B780185B
--[[
Audio List
gtaforums.com/topic/795622-audio-for-mods/

All found occurrences in b617d, sorted alphabetically and identical lines removed: https://pastebin.com/FTeAj4yZ
--]]
function AUDIO.SET_AMBIENT_VOICE_NAME(ped, name)
  native.invoke(
    Type.Void, 117, false,
    arg(Type.Ped, ped),
    arg(Type.String, name)
  )
end

-- void SET_AMBIENT_VOICE_NAME_HASH(Ped ped, Hash hash) // 0x9A53DED9921DE990
function AUDIO.SET_AMBIENT_VOICE_NAME_HASH(ped, hash)
  native.invoke(
    Type.Void, 118, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, hash)
  )
end

-- Hash GET_AMBIENT_VOICE_NAME_HASH(Ped ped) // 0x5E203DA2BA15D436
function AUDIO.GET_AMBIENT_VOICE_NAME_HASH(ped)
  return native.invoke(
    Type.Hash, 119, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_VOICE_FULL(Ped ped) // 0x40CF0D12D142A9E8
--[[
Assigns some ambient voice to the ped.
--]]
function AUDIO.SET_PED_VOICE_FULL(ped)
  native.invoke(
    Type.Void, 120, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_RACE_AND_VOICE_GROUP(Ped ped, int p1, Hash voiceGroup) // 0x1B7ABE26CBCBF8C7
function AUDIO.SET_PED_RACE_AND_VOICE_GROUP(ped, p1, voiceGroup)
  native.invoke(
    Type.Void, 121, false,
    arg(Type.Ped, ped),
    arg(Type.Int, p1),
    arg(Type.Hash, voiceGroup)
  )
end

-- void SET_PED_VOICE_GROUP(Ped ped, Hash voiceGroupHash) // 0x7CDC8C3B89F661B3
--[[
From the scripts:

AUDIO::SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("PAIGE_PVG"));
AUDIO::SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("TALINA_PVG"));
AUDIO::SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("FEMALE_LOST_BLACK_PVG"));
AUDIO::SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("FEMALE_LOST_WHITE_PVG"));
--]]
function AUDIO.SET_PED_VOICE_GROUP(ped, voiceGroupHash)
  native.invoke(
    Type.Void, 122, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, voiceGroupHash)
  )
end

-- void SET_PED_VOICE_GROUP_FROM_RACE_TO_PVG(Ped ped, Hash voiceGroupHash) // 0x0BABC1345ABBFB16
--[[
Dat151RelType == 29
--]]
function AUDIO.SET_PED_VOICE_GROUP_FROM_RACE_TO_PVG(ped, voiceGroupHash)
  native.invoke(
    Type.Void, 123, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, voiceGroupHash)
  )
end

-- void SET_PED_GENDER(Ped ped, BOOL p1) // 0xA5342D390CDA41D6
--[[
BOOL p1: 0 = Female; 1 = Male
--]]
function AUDIO.SET_PED_GENDER(ped, p1)
  native.invoke(
    Type.Void, 124, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1)
  )
end

-- void STOP_CURRENT_PLAYING_SPEECH(Ped ped) // 0x7A73D05A607734C7
function AUDIO.STOP_CURRENT_PLAYING_SPEECH(ped)
  native.invoke(
    Type.Void, 125, false,
    arg(Type.Ped, ped)
  )
end

-- void STOP_CURRENT_PLAYING_AMBIENT_SPEECH(Ped ped) // 0xB8BEC0CA6F0EDB0F
function AUDIO.STOP_CURRENT_PLAYING_AMBIENT_SPEECH(ped)
  native.invoke(
    Type.Void, 126, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_AMBIENT_SPEECH_PLAYING(Ped ped) // 0x9072C8B49907BFAD
function AUDIO.IS_AMBIENT_SPEECH_PLAYING(ped)
  return native.invoke(
    Type.Bool, 127, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_SCRIPTED_SPEECH_PLAYING(Ped p0) // 0xCC9AA18DCC7084F4
function AUDIO.IS_SCRIPTED_SPEECH_PLAYING(p0)
  return native.invoke(
    Type.Bool, 128, false,
    arg(Type.Ped, p0)
  )
end

-- BOOL IS_ANY_SPEECH_PLAYING(Ped ped) // 0x729072355FA39EC9
function AUDIO.IS_ANY_SPEECH_PLAYING(ped)
  return native.invoke(
    Type.Bool, 129, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_ANY_POSITIONAL_SPEECH_PLAYING() // 0x30CA2EF91D15ADF8
function AUDIO.IS_ANY_POSITIONAL_SPEECH_PLAYING()
  return native.invoke(
    Type.Bool, 130, false
  )
end

-- BOOL DOES_CONTEXT_EXIST_FOR_THIS_PED(Ped ped, const char* speechName, BOOL p2) // 0x49B99BF3FDA89A7A
--[[
Checks if the ped can play the speech or has the speech file, p2 is usually false.
--]]
function AUDIO.DOES_CONTEXT_EXIST_FOR_THIS_PED(ped, speechName, p2)
  return native.invoke(
    Type.Bool, 131, false,
    arg(Type.Ped, ped),
    arg(Type.String, speechName),
    arg(Type.Bool, p2)
  )
end

-- BOOL IS_PED_IN_CURRENT_CONVERSATION(Ped ped) // 0x049E937F18F4020C
function AUDIO.IS_PED_IN_CURRENT_CONVERSATION(ped)
  return native.invoke(
    Type.Bool, 132, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_IS_DRUNK(Ped ped, BOOL toggle) // 0x95D2D383D5396B8A
--[[
Sets the ped drunk sounds.  Only works with PLAYER_PED_ID

====================================================

As mentioned above, this only sets the drunk sound to ped/player.

To give the Ped a drunk effect with drunk walking animation try using SET_PED_MOVEMENT_CLIPSET

Below is an example

if (!Function.Call<bool>(Hash.HAS_ANIM_SET_LOADED, "move_m@drunk@verydrunk"))
                {
                    Function.Call(Hash.REQUEST_ANIM_SET, "move_m@drunk@verydrunk");
                }
                Function.Call(Hash.SET_PED_MOVEMENT_CLIPSET, Ped.Handle, "move_m@drunk@verydrunk", 0x3E800000);



And to stop the effect use
RESET_PED_MOVEMENT_CLIPSET
--]]
function AUDIO.SET_PED_IS_DRUNK(ped, toggle)
  native.invoke(
    Type.Void, 133, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void PLAY_ANIMAL_VOCALIZATION(Ped pedHandle, int p1, const char* speechName) // 0xEE066C7006C49C0A
--[[
Plays sounds from a ped with chop model. For example it used to play bark or sniff sounds. p1 is always 3 or 4294967295 in decompiled scripts. By a quick disassembling I can assume that this arg is unused.
This native is works only when you call it on the ped with right model (ac_chop only ?)
Speech Name can be: CHOP_SNIFF_SEQ CHOP_WHINE CHOP_LICKS_MOUTH CHOP_PANT bark GROWL SNARL BARK_SEQ
--]]
function AUDIO.PLAY_ANIMAL_VOCALIZATION(pedHandle, p1, speechName)
  native.invoke(
    Type.Void, 134, false,
    arg(Type.Ped, pedHandle),
    arg(Type.Int, p1),
    arg(Type.String, speechName)
  )
end

-- BOOL IS_ANIMAL_VOCALIZATION_PLAYING(Ped pedHandle) // 0xC265DF9FB44A9FBD
function AUDIO.IS_ANIMAL_VOCALIZATION_PLAYING(pedHandle)
  return native.invoke(
    Type.Bool, 135, false,
    arg(Type.Ped, pedHandle)
  )
end

-- void SET_ANIMAL_MOOD(Ped animal, int mood) // 0xCC97B29285B1DC3B
--[[
mood can be 0 or 1 (it's not a boolean value!). Effects audio of the animal.
--]]
function AUDIO.SET_ANIMAL_MOOD(animal, mood)
  native.invoke(
    Type.Void, 136, false,
    arg(Type.Ped, animal),
    arg(Type.Int, mood)
  )
end

-- BOOL IS_MOBILE_PHONE_RADIO_ACTIVE() // 0xB35CE999E8EF317E
function AUDIO.IS_MOBILE_PHONE_RADIO_ACTIVE()
  return native.invoke(
    Type.Bool, 137, false
  )
end

-- void SET_MOBILE_PHONE_RADIO_STATE(BOOL state) // 0xBF286C554784F3DF
function AUDIO.SET_MOBILE_PHONE_RADIO_STATE(state)
  native.invoke(
    Type.Void, 138, false,
    arg(Type.Bool, state)
  )
end

-- int GET_PLAYER_RADIO_STATION_INDEX() // 0xE8AF77C4C06ADC93
--[[
Returns 255 (radio off index) if the function fails.
--]]
function AUDIO.GET_PLAYER_RADIO_STATION_INDEX()
  return native.invoke(
    Type.Int, 139, false
  )
end

-- const char* GET_PLAYER_RADIO_STATION_NAME() // 0xF6D733C32076AD03
--[[
Returns active radio station name
--]]
function AUDIO.GET_PLAYER_RADIO_STATION_NAME()
  return native.invoke(
    Type.Const char, 140, false
  )
end

-- const char* GET_RADIO_STATION_NAME(int radioStation) // 0xB28ECA15046CA8B9
--[[
Converts radio station index to string. Use HUD::GET_FILENAME_FOR_AUDIO_CONVERSATION to get the user-readable text.
--]]
function AUDIO.GET_RADIO_STATION_NAME(radioStation)
  return native.invoke(
    Type.Const char, 141, false,
    arg(Type.Int, radioStation)
  )
end

-- int GET_PLAYER_RADIO_STATION_GENRE() // 0xA571991A7FE6CCEB
function AUDIO.GET_PLAYER_RADIO_STATION_GENRE()
  return native.invoke(
    Type.Int, 142, false
  )
end

-- BOOL IS_RADIO_RETUNING() // 0xA151A7394A214E65
function AUDIO.IS_RADIO_RETUNING()
  return native.invoke(
    Type.Bool, 143, false
  )
end

-- BOOL IS_RADIO_FADED_OUT() // 0x0626A247D2405330
function AUDIO.IS_RADIO_FADED_OUT()
  return native.invoke(
    Type.Bool, 144, false
  )
end

-- void SET_RADIO_RETUNE_UP() // 0xFF266D1D0EB1195D
--[[
Tune Forward...
--]]
function AUDIO.SET_RADIO_RETUNE_UP()
  native.invoke(
    Type.Void, 145, false
  )
end

-- void SET_RADIO_RETUNE_DOWN() // 0xDD6BCF9E94425DF9
--[[
Tune Backwards...
--]]
function AUDIO.SET_RADIO_RETUNE_DOWN()
  native.invoke(
    Type.Void, 146, false
  )
end

-- void SET_RADIO_TO_STATION_NAME(const char* stationName) // 0xC69EDA28699D5107
--[[
List of radio stations that are in the wheel, in clockwise order, as of LS Tuners DLC: https://git.io/J8a3k
An older list including hidden radio stations: https://pastebin.com/Kj9t38KF
--]]
function AUDIO.SET_RADIO_TO_STATION_NAME(stationName)
  native.invoke(
    Type.Void, 147, false,
    arg(Type.String, stationName)
  )
end

-- void SET_VEH_RADIO_STATION(Vehicle vehicle, const char* radioStation) // 0x1B9C0099CB942AC6
--[[
List of radio stations that are in the wheel, in clockwise order, as of LS Tuners DLC: https://git.io/J8a3k
An older list including hidden radio stations: https://pastebin.com/Kj9t38KF
--]]
function AUDIO.SET_VEH_RADIO_STATION(vehicle, radioStation)
  native.invoke(
    Type.Void, 148, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.String, radioStation)
  )
end

-- void SET_VEH_HAS_NORMAL_RADIO(Vehicle vehicle) // 0x3E45765F3FBB582F
function AUDIO.SET_VEH_HAS_NORMAL_RADIO(vehicle)
  native.invoke(
    Type.Void, 149, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL IS_VEHICLE_RADIO_ON(Vehicle vehicle) // 0x0BE4BE946463F917
function AUDIO.IS_VEHICLE_RADIO_ON(vehicle)
  return native.invoke(
    Type.Bool, 150, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEH_FORCED_RADIO_THIS_FRAME(Vehicle vehicle) // 0xC1805D05E6D4FE10
function AUDIO.SET_VEH_FORCED_RADIO_THIS_FRAME(vehicle)
  native.invoke(
    Type.Void, 151, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_EMITTER_RADIO_STATION(const char* emitterName, const char* radioStation, Any p2) // 0xACF57305B12AF907
--[[
Full list of static emitters by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/staticEmitters.json
--]]
function AUDIO.SET_EMITTER_RADIO_STATION(emitterName, radioStation, p2)
  native.invoke(
    Type.Void, 152, false,
    arg(Type.String, emitterName),
    arg(Type.String, radioStation),
    arg(Type.Any, p2)
  )
end

-- void SET_STATIC_EMITTER_ENABLED(const char* emitterName, BOOL toggle) // 0x399D2D3B33F1B8EB
--[[
Example:
AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_01_STAGE", false);    AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_02_MAIN_ROOM", false);    AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_03_BACK_ROOM", false);

This turns off surrounding sounds not connected directly to peds.

Full list of static emitters by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/staticEmitters.json
--]]
function AUDIO.SET_STATIC_EMITTER_ENABLED(emitterName, toggle)
  native.invoke(
    Type.Void, 153, false,
    arg(Type.String, emitterName),
    arg(Type.Bool, toggle)
  )
end

-- void LINK_STATIC_EMITTER_TO_ENTITY(const char* emitterName, Entity entity) // 0x651D3228960D08AF
--[[
Full list of static emitters by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/staticEmitters.json
--]]
function AUDIO.LINK_STATIC_EMITTER_TO_ENTITY(emitterName, entity)
  native.invoke(
    Type.Void, 154, false,
    arg(Type.String, emitterName),
    arg(Type.Entity, entity)
  )
end

-- void SET_RADIO_TO_STATION_INDEX(int radioStation) // 0xA619B168B8A8570F
--[[
Sets radio station by index.
--]]
function AUDIO.SET_RADIO_TO_STATION_INDEX(radioStation)
  native.invoke(
    Type.Void, 155, false,
    arg(Type.Int, radioStation)
  )
end

-- void SET_FRONTEND_RADIO_ACTIVE(BOOL active) // 0xF7F26C6E9CC9EBB8
function AUDIO.SET_FRONTEND_RADIO_ACTIVE(active)
  native.invoke(
    Type.Void, 156, false,
    arg(Type.Bool, active)
  )
end

-- void UNLOCK_MISSION_NEWS_STORY(int newsStory) // 0xB165AB7C248B2DC1
--[[
"news" that play on the radio after you've done something in story mode(?)
--]]
function AUDIO.UNLOCK_MISSION_NEWS_STORY(newsStory)
  native.invoke(
    Type.Void, 157, false,
    arg(Type.Int, newsStory)
  )
end

-- BOOL IS_MISSION_NEWS_STORY_UNLOCKED(int newsStory) // 0x66E49BF55B4B1874
function AUDIO.IS_MISSION_NEWS_STORY_UNLOCKED(newsStory)
  return native.invoke(
    Type.Bool, 158, false,
    arg(Type.Int, newsStory)
  )
end

-- int GET_AUDIBLE_MUSIC_TRACK_TEXT_ID() // 0x50B196FC9ED6545B
function AUDIO.GET_AUDIBLE_MUSIC_TRACK_TEXT_ID()
  return native.invoke(
    Type.Int, 159, false
  )
end

-- void PLAY_END_CREDITS_MUSIC(BOOL play) // 0xCD536C4D33DCC900
function AUDIO.PLAY_END_CREDITS_MUSIC(play)
  native.invoke(
    Type.Void, 160, false,
    arg(Type.Bool, play)
  )
end

-- void SKIP_RADIO_FORWARD() // 0x6DDBBDD98E2E9C25
function AUDIO.SKIP_RADIO_FORWARD()
  native.invoke(
    Type.Void, 161, false
  )
end

-- void FREEZE_RADIO_STATION(const char* radioStation) // 0x344F393B027E38C3
function AUDIO.FREEZE_RADIO_STATION(radioStation)
  native.invoke(
    Type.Void, 162, false,
    arg(Type.String, radioStation)
  )
end

-- void UNFREEZE_RADIO_STATION(const char* radioStation) // 0xFC00454CF60B91DD
function AUDIO.UNFREEZE_RADIO_STATION(radioStation)
  native.invoke(
    Type.Void, 163, false,
    arg(Type.String, radioStation)
  )
end

-- void SET_RADIO_AUTO_UNFREEZE(BOOL toggle) // 0xC1AA9F53CE982990
function AUDIO.SET_RADIO_AUTO_UNFREEZE(toggle)
  native.invoke(
    Type.Void, 164, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_INITIAL_PLAYER_STATION(const char* radioStation) // 0x88795F13FACDA88D
function AUDIO.SET_INITIAL_PLAYER_STATION(radioStation)
  native.invoke(
    Type.Void, 165, false,
    arg(Type.String, radioStation)
  )
end

-- void SET_USER_RADIO_CONTROL_ENABLED(BOOL toggle) // 0x19F21E63AE6EAE4E
function AUDIO.SET_USER_RADIO_CONTROL_ENABLED(toggle)
  native.invoke(
    Type.Void, 166, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_RADIO_TRACK(const char* radioStation, const char* radioTrack) // 0xB39786F201FEE30B
--[[
Only found this one in the decompiled scripts:

AUDIO::SET_RADIO_TRACK("RADIO_03_HIPHOP_NEW", "ARM1_RADIO_STARTS");

--]]
function AUDIO.SET_RADIO_TRACK(radioStation, radioTrack)
  native.invoke(
    Type.Void, 167, false,
    arg(Type.String, radioStation),
    arg(Type.String, radioTrack)
  )
end

-- void SET_RADIO_TRACK_WITH_START_OFFSET(const char* radioStationName, const char* mixName, int p2) // 0x2CB0075110BE1E56
function AUDIO.SET_RADIO_TRACK_WITH_START_OFFSET(radioStationName, mixName, p2)
  native.invoke(
    Type.Void, 168, false,
    arg(Type.String, radioStationName),
    arg(Type.String, mixName),
    arg(Type.Int, p2)
  )
end

-- void SET_NEXT_RADIO_TRACK(const char* radioName, const char* radioTrack, const char* p2, const char* p3) // 0x55ECF4D13D9903B0
function AUDIO.SET_NEXT_RADIO_TRACK(radioName, radioTrack, p2, p3)
  native.invoke(
    Type.Void, 169, false,
    arg(Type.String, radioName),
    arg(Type.String, radioTrack),
    arg(Type.String, p2),
    arg(Type.String, p3)
  )
end

-- void SET_VEHICLE_RADIO_LOUD(Vehicle vehicle, BOOL toggle) // 0xBB6F1CAEC68B0BCE
function AUDIO.SET_VEHICLE_RADIO_LOUD(vehicle, toggle)
  native.invoke(
    Type.Void, 170, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- BOOL CAN_VEHICLE_RECEIVE_CB_RADIO(Vehicle vehicle) // 0x032A116663A4D5AC
function AUDIO.CAN_VEHICLE_RECEIVE_CB_RADIO(vehicle)
  return native.invoke(
    Type.Bool, 171, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_MOBILE_RADIO_ENABLED_DURING_GAMEPLAY(BOOL toggle) // 0x1098355A16064BB3
function AUDIO.SET_MOBILE_RADIO_ENABLED_DURING_GAMEPLAY(toggle)
  native.invoke(
    Type.Void, 172, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL DOES_PLAYER_VEH_HAVE_RADIO() // 0x109697E2FFBAC8A1
function AUDIO.DOES_PLAYER_VEH_HAVE_RADIO()
  return native.invoke(
    Type.Bool, 173, false
  )
end

-- BOOL IS_PLAYER_VEH_RADIO_ENABLE() // 0x5F43D83FD6738741
function AUDIO.IS_PLAYER_VEH_RADIO_ENABLE()
  return native.invoke(
    Type.Bool, 174, false
  )
end

-- void SET_VEHICLE_RADIO_ENABLED(Vehicle vehicle, BOOL toggle) // 0x3B988190C0AA6C0B
--[[
can't seem to enable radio on cop cars etc
--]]
function AUDIO.SET_VEHICLE_RADIO_ENABLED(vehicle, toggle)
  native.invoke(
    Type.Void, 175, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_POSITIONED_PLAYER_VEHICLE_RADIO_EMITTER_ENABLED(Any p0) // 0xDA07819E452FFE8F
function AUDIO.SET_POSITIONED_PLAYER_VEHICLE_RADIO_EMITTER_ENABLED(p0)
  native.invoke(
    Type.Void, 176, false,
    arg(Type.Any, p0)
  )
end

-- void SET_CUSTOM_RADIO_TRACK_LIST(const char* radioStation, const char* trackListName, BOOL p2) // 0x4E404A9361F75BB2
--[[
Examples:

AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "END_CREDITS_KILL_MICHAEL", 1);
AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "END_CREDITS_KILL_MICHAEL", 1);
AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "END_CREDITS_KILL_TREVOR", 1);
AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "END_CREDITS_SAVE_MICHAEL_TREVOR", 1);
AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "OFF_ROAD_RADIO_ROCK_LIST", 1);
AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_06_COUNTRY", "MAGDEMO2_RADIO_DINGHY", 1);
AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_16_SILVERLAKE", "SEA_RACE_RADIO_PLAYLIST", 1);
AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "OFF_ROAD_RADIO_ROCK_LIST", 1);
--]]
function AUDIO.SET_CUSTOM_RADIO_TRACK_LIST(radioStation, trackListName, p2)
  native.invoke(
    Type.Void, 177, false,
    arg(Type.String, radioStation),
    arg(Type.String, trackListName),
    arg(Type.Bool, p2)
  )
end

-- void CLEAR_CUSTOM_RADIO_TRACK_LIST(const char* radioStation) // 0x1654F24A88A8E3FE
--[[
3 calls in the b617d scripts, removed duplicate.

AUDIO::CLEAR_CUSTOM_RADIO_TRACK_LIST("RADIO_16_SILVERLAKE");
AUDIO::CLEAR_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK");
--]]
function AUDIO.CLEAR_CUSTOM_RADIO_TRACK_LIST(radioStation)
  native.invoke(
    Type.Void, 178, false,
    arg(Type.String, radioStation)
  )
end

-- int GET_NUM_UNLOCKED_RADIO_STATIONS() // 0xF1620ECB50E01DE7
function AUDIO.GET_NUM_UNLOCKED_RADIO_STATIONS()
  return native.invoke(
    Type.Int, 179, false
  )
end

-- int FIND_RADIO_STATION_INDEX(Hash stationNameHash) // 0x8D67489793FF428B
function AUDIO.FIND_RADIO_STATION_INDEX(stationNameHash)
  return native.invoke(
    Type.Int, 180, false,
    arg(Type.Hash, stationNameHash)
  )
end

-- void SET_RADIO_STATION_MUSIC_ONLY(const char* radioStation, BOOL toggle) // 0x774BD811F656A122
--[[
6 calls in the b617d scripts, removed identical lines:

AUDIO::SET_RADIO_STATION_MUSIC_ONLY("RADIO_01_CLASS_ROCK", 1);
AUDIO::SET_RADIO_STATION_MUSIC_ONLY(AUDIO::GET_RADIO_STATION_NAME(10), 0);
AUDIO::SET_RADIO_STATION_MUSIC_ONLY(AUDIO::GET_RADIO_STATION_NAME(10), 1);
--]]
function AUDIO.SET_RADIO_STATION_MUSIC_ONLY(radioStation, toggle)
  native.invoke(
    Type.Void, 181, false,
    arg(Type.String, radioStation),
    arg(Type.Bool, toggle)
  )
end

-- void SET_RADIO_FRONTEND_FADE_TIME(float fadeTime) // 0x2C96CDB04FCA358E
function AUDIO.SET_RADIO_FRONTEND_FADE_TIME(fadeTime)
  native.invoke(
    Type.Void, 182, false,
    arg(Type.Float, fadeTime)
  )
end

-- void UNLOCK_RADIO_STATION_TRACK_LIST(const char* radioStation, const char* trackListName) // 0x031ACB6ABA18C729
--[[
AUDIO::UNLOCK_RADIO_STATION_TRACK_LIST("RADIO_16_SILVERLAKE", "MIRRORPARK_LOCKED");
--]]
function AUDIO.UNLOCK_RADIO_STATION_TRACK_LIST(radioStation, trackListName)
  native.invoke(
    Type.Void, 183, false,
    arg(Type.String, radioStation),
    arg(Type.String, trackListName)
  )
end

-- void LOCK_RADIO_STATION_TRACK_LIST(const char* radioStation, const char* trackListName) // 0xFF5E5EA2DCEEACF3
function AUDIO.LOCK_RADIO_STATION_TRACK_LIST(radioStation, trackListName)
  native.invoke(
    Type.Void, 184, false,
    arg(Type.String, radioStation),
    arg(Type.String, trackListName)
  )
end

-- void UPDATE_UNLOCKABLE_DJ_RADIO_TRACKS(BOOL enableMixes) // 0x47AED84213A47510
--[[
Just a nullsub (i.e. does absolutely nothing) since build 1604.
--]]
function AUDIO.UPDATE_UNLOCKABLE_DJ_RADIO_TRACKS(enableMixes)
  native.invoke(
    Type.Void, 185, false,
    arg(Type.Bool, enableMixes)
  )
end

-- void LOCK_RADIO_STATION(const char* radioStationName, BOOL toggle) // 0x477D9DB48F889591
--[[
Disables the radio station (hides it from the radio wheel).
--]]
function AUDIO.LOCK_RADIO_STATION(radioStationName, toggle)
  native.invoke(
    Type.Void, 186, false,
    arg(Type.String, radioStationName),
    arg(Type.Bool, toggle)
  )
end

-- void SET_RADIO_STATION_AS_FAVOURITE(const char* radioStation, BOOL toggle) // 0x4CAFEBFA21EC188D
--[[
Doesn't have an effect in Story Mode.
--]]
function AUDIO.SET_RADIO_STATION_AS_FAVOURITE(radioStation, toggle)
  native.invoke(
    Type.Void, 187, false,
    arg(Type.String, radioStation),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_RADIO_STATION_FAVOURITED(const char* radioStation) // 0x2B1784DB08AFEA79
function AUDIO.IS_RADIO_STATION_FAVOURITED(radioStation)
  return native.invoke(
    Type.Bool, 188, false,
    arg(Type.String, radioStation)
  )
end

-- BOOL GET_NEXT_AUDIBLE_BEAT(float* out1, float* out2, int* out3) // 0xC64A06D939F826F5
function AUDIO.GET_NEXT_AUDIBLE_BEAT(out1, out2, out3)
  return native.invoke(
    Type.Bool, 189, false,
    arg(Type.Float, out1),
    arg(Type.Float, out2),
    arg(Type.Int, out3)
  )
end

-- void FORCE_MUSIC_TRACK_LIST(const char* radioStation, const char* trackListName, int milliseconds) // 0x4E0AF9114608257C
--[[
Changes start time of a tracklist (milliseconds)
R* uses a random int: MISC::GET_RANDOM_INT_IN_RANGE(0, 13) * 60000)
--]]
function AUDIO.FORCE_MUSIC_TRACK_LIST(radioStation, trackListName, milliseconds)
  native.invoke(
    Type.Void, 190, false,
    arg(Type.String, radioStation),
    arg(Type.String, trackListName),
    arg(Type.Int, milliseconds)
  )
end

-- int GET_CURRENT_TRACK_PLAY_TIME(const char* radioStationName) // 0x3E65CDE5215832C1
function AUDIO.GET_CURRENT_TRACK_PLAY_TIME(radioStationName)
  return native.invoke(
    Type.Int, 191, false,
    arg(Type.String, radioStationName)
  )
end

-- Hash GET_CURRENT_TRACK_SOUND_NAME(const char* radioStationName) // 0x34D66BC058019CE0
function AUDIO.GET_CURRENT_TRACK_SOUND_NAME(radioStationName)
  return native.invoke(
    Type.Hash, 192, false,
    arg(Type.String, radioStationName)
  )
end

-- void SET_VEHICLE_MISSILE_WARNING_ENABLED(Vehicle vehicle, BOOL toggle) // 0xF3365489E0DD50F9
function AUDIO.SET_VEHICLE_MISSILE_WARNING_ENABLED(vehicle, toggle)
  native.invoke(
    Type.Void, 193, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_AMBIENT_ZONE_STATE(const char* zoneName, BOOL p1, BOOL p2) // 0xBDA07E5950085E46
--[[
Full list of ambient zones by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ambientZones.json
--]]
function AUDIO.SET_AMBIENT_ZONE_STATE(zoneName, p1, p2)
  native.invoke(
    Type.Void, 194, false,
    arg(Type.String, zoneName),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void CLEAR_AMBIENT_ZONE_STATE(const char* zoneName, BOOL p1) // 0x218DD44AAAC964FF
--[[
This function also has a p2, unknown. Signature AUDIO::CLEAR_AMBIENT_ZONE_STATE(const char* zoneName, bool p1, Any p2);

Still needs more research.

Full list of ambient zones by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ambientZones.json
--]]
function AUDIO.CLEAR_AMBIENT_ZONE_STATE(zoneName, p1)
  native.invoke(
    Type.Void, 195, false,
    arg(Type.String, zoneName),
    arg(Type.Bool, p1)
  )
end

-- void SET_AMBIENT_ZONE_LIST_STATE(const char* ambientZone, BOOL p1, BOOL p2) // 0x9748FA4DE50CCE3E
function AUDIO.SET_AMBIENT_ZONE_LIST_STATE(ambientZone, p1, p2)
  native.invoke(
    Type.Void, 196, false,
    arg(Type.String, ambientZone),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void CLEAR_AMBIENT_ZONE_LIST_STATE(const char* ambientZone, BOOL p1) // 0x120C48C614909FA4
function AUDIO.CLEAR_AMBIENT_ZONE_LIST_STATE(ambientZone, p1)
  native.invoke(
    Type.Void, 197, false,
    arg(Type.String, ambientZone),
    arg(Type.Bool, p1)
  )
end

-- void SET_AMBIENT_ZONE_STATE_PERSISTENT(const char* ambientZone, BOOL p1, BOOL p2) // 0x1D6650420CEC9D3B
--[[
Full list of ambient zones by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ambientZones.json
--]]
function AUDIO.SET_AMBIENT_ZONE_STATE_PERSISTENT(ambientZone, p1, p2)
  native.invoke(
    Type.Void, 198, false,
    arg(Type.String, ambientZone),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void SET_AMBIENT_ZONE_LIST_STATE_PERSISTENT(const char* ambientZone, BOOL p1, BOOL p2) // 0xF3638DAE8C4045E1
--[[
Full list of ambient zones by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ambientZones.json
--]]
function AUDIO.SET_AMBIENT_ZONE_LIST_STATE_PERSISTENT(ambientZone, p1, p2)
  native.invoke(
    Type.Void, 199, false,
    arg(Type.String, ambientZone),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- BOOL IS_AMBIENT_ZONE_ENABLED(const char* ambientZone) // 0x01E2817A479A7F9B
--[[
Full list of ambient zones by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ambientZones.json
--]]
function AUDIO.IS_AMBIENT_ZONE_ENABLED(ambientZone)
  return native.invoke(
    Type.Bool, 200, false,
    arg(Type.String, ambientZone)
  )
end

-- void REFRESH_CLOSEST_OCEAN_SHORELINE() // 0x5D2BFAAB8D956E0E
function AUDIO.REFRESH_CLOSEST_OCEAN_SHORELINE()
  native.invoke(
    Type.Void, 201, false
  )
end

-- void SET_CUTSCENE_AUDIO_OVERRIDE(const char* name) // 0x3B4BF5F0859204D9
--[[
All occurrences found in b617d, sorted alphabetically and identical lines removed: 

AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_AK");
AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_CUSTOM");
AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_TOOTHLESS");
Full list of cutscene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/cutsceneNames.json
--]]
function AUDIO.SET_CUTSCENE_AUDIO_OVERRIDE(name)
  native.invoke(
    Type.Void, 202, false,
    arg(Type.String, name)
  )
end

-- void SET_VARIABLE_ON_SYNCH_SCENE_AUDIO(const char* variableName, float value) // 0xBCC29F935ED07688
function AUDIO.SET_VARIABLE_ON_SYNCH_SCENE_AUDIO(variableName, value)
  native.invoke(
    Type.Void, 203, false,
    arg(Type.String, variableName),
    arg(Type.Float, value)
  )
end

-- int PLAY_POLICE_REPORT(const char* name, float p1) // 0xDFEBD56D9BD1EB16
--[[
Plays the given police radio message.

All found occurrences in b617d, sorted alphabetically and identical lines removed: https://pastebin.com/GBnsQ5hr
Full list of police report names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/policeReportNames.json
--]]
function AUDIO.PLAY_POLICE_REPORT(name, p1)
  return native.invoke(
    Type.Int, 204, false,
    arg(Type.String, name),
    arg(Type.Float, p1)
  )
end

-- void CANCEL_ALL_POLICE_REPORTS() // 0xB4F90FAF7670B16F
function AUDIO.CANCEL_ALL_POLICE_REPORTS()
  native.invoke(
    Type.Void, 205, false
  )
end

-- void BLIP_SIREN(Vehicle vehicle) // 0x1B9025BDA76822B6
--[[
Plays the siren sound of a vehicle which is otherwise activated when fastly double-pressing the horn key.
Only works on vehicles with a police siren.
--]]
function AUDIO.BLIP_SIREN(vehicle)
  native.invoke(
    Type.Void, 206, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void OVERRIDE_VEH_HORN(Vehicle vehicle, BOOL override, int hornHash) // 0x3CDC1E622CCE0356
--[[
Overrides the vehicle's horn hash.
When changing this hash on a vehicle, it will not return the 'overwritten' hash. It will still always return the default horn hash (same as GET_VEHICLE_DEFAULT_HORN)

vehicle - the vehicle whose horn should be overwritten
mute - p1 seems to be an option for muting the horn
p2 - maybe a horn id, since the function AUDIO::GET_VEHICLE_DEFAULT_HORN(veh) exists?
--]]
function AUDIO.OVERRIDE_VEH_HORN(vehicle, override, hornHash)
  native.invoke(
    Type.Void, 207, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, override),
    arg(Type.Int, hornHash)
  )
end

-- BOOL IS_HORN_ACTIVE(Vehicle vehicle) // 0x9D6BFC12B05C6121
--[[
Checks whether the horn of a vehicle is currently played.
--]]
function AUDIO.IS_HORN_ACTIVE(vehicle)
  return native.invoke(
    Type.Bool, 208, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_AGGRESSIVE_HORNS(BOOL toggle) // 0x395BF71085D1B1D9
--[[
Makes pedestrians sound their horn longer, faster and more agressive when they use their horn.
--]]
function AUDIO.SET_AGGRESSIVE_HORNS(toggle)
  native.invoke(
    Type.Void, 209, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_RADIO_POSITION_AUDIO_MUTE(BOOL p0) // 0x02E93C796ABD3A97
--[[
Does nothing (it's a nullsub).
--]]
function AUDIO.SET_RADIO_POSITION_AUDIO_MUTE(p0)
  native.invoke(
    Type.Void, 210, false,
    arg(Type.Bool, p0)
  )
end

-- void SET_VEHICLE_CONVERSATIONS_PERSIST(BOOL p0, BOOL p1) // 0x58BB377BEC7CD5F4
--[[
SET_VEHICLE_CONVERSATIONS_PERSIST?
--]]
function AUDIO.SET_VEHICLE_CONVERSATIONS_PERSIST(p0, p1)
  native.invoke(
    Type.Void, 211, false,
    arg(Type.Bool, p0),
    arg(Type.Bool, p1)
  )
end

-- void SET_VEHICLE_CONVERSATIONS_PERSIST_NEW(BOOL p0, BOOL p1, BOOL p2) // 0x9BD7BD55E4533183
function AUDIO.SET_VEHICLE_CONVERSATIONS_PERSIST_NEW(p0, p1, p2)
  native.invoke(
    Type.Void, 212, false,
    arg(Type.Bool, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- BOOL IS_STREAM_PLAYING() // 0xD11FA52EB849D978
function AUDIO.IS_STREAM_PLAYING()
  return native.invoke(
    Type.Bool, 213, false
  )
end

-- int GET_STREAM_PLAY_TIME() // 0x4E72BBDBCA58A3DB
function AUDIO.GET_STREAM_PLAY_TIME()
  return native.invoke(
    Type.Int, 214, false
  )
end

-- BOOL LOAD_STREAM(const char* streamName, const char* soundSet) // 0x1F1F957154EC51DF
--[[
Example:
AUDIO::LOAD_STREAM("CAR_STEAL_1_PASSBY", "CAR_STEAL_1_SOUNDSET");

All found occurrences in the b678d decompiled scripts: https://pastebin.com/3rma6w5w

Stream names often ends with "_MASTER", "_SMALL" or "_STREAM". Also "_IN", "_OUT" and numbers.   

soundSet is often set to 0 in the scripts. These are common to end the soundSets: "_SOUNDS", "_SOUNDSET" and numbers.

Full list of audio / sound names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/soundNames.json
--]]
function AUDIO.LOAD_STREAM(streamName, soundSet)
  return native.invoke(
    Type.Bool, 215, false,
    arg(Type.String, streamName),
    arg(Type.String, soundSet)
  )
end

-- BOOL LOAD_STREAM_WITH_START_OFFSET(const char* streamName, int startOffset, const char* soundSet) // 0x59C16B79F53B3712
--[[
Example:
AUDIO::LOAD_STREAM_WITH_START_OFFSET("STASH_TOXIN_STREAM", 2400, "FBI_05_SOUNDS");

Only called a few times in the scripts.

Full list of audio / sound names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/soundNames.json
--]]
function AUDIO.LOAD_STREAM_WITH_START_OFFSET(streamName, startOffset, soundSet)
  return native.invoke(
    Type.Bool, 216, false,
    arg(Type.String, streamName),
    arg(Type.Int, startOffset),
    arg(Type.String, soundSet)
  )
end

-- void PLAY_STREAM_FROM_PED(Ped ped) // 0x89049DD63C08B5D1
function AUDIO.PLAY_STREAM_FROM_PED(ped)
  native.invoke(
    Type.Void, 217, false,
    arg(Type.Ped, ped)
  )
end

-- void PLAY_STREAM_FROM_VEHICLE(Vehicle vehicle) // 0xB70374A758007DFA
function AUDIO.PLAY_STREAM_FROM_VEHICLE(vehicle)
  native.invoke(
    Type.Void, 218, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void PLAY_STREAM_FROM_OBJECT(Object object) // 0xEBAA9B64D76356FD
--[[
Used with AUDIO::LOAD_STREAM

Example from finale_heist2b.c4:
TASK::TASK_SYNCHRONIZED_SCENE(l_4C8[2/*14*/], l_4C8[2/*14*/]._f7, l_30A, "push_out_vault_l", 4.0, -1.5, 5, 713, 4.0, 0);
                    PED::SET_SYNCHRONIZED_SCENE_PHASE(l_4C8[2/*14*/]._f7, 0.0);
                    PED::FORCE_PED_AI_AND_ANIMATION_UPDATE(l_4C8[2/*14*/], 0, 0);
                    PED::SET_PED_COMBAT_ATTRIBUTES(l_4C8[2/*14*/], 38, 1);
                    PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(l_4C8[2/*14*/], 1);
                    if (AUDIO::LOAD_STREAM("Gold_Cart_Push_Anim_01", "BIG_SCORE_3B_SOUNDS")) {
                        AUDIO::PLAY_STREAM_FROM_OBJECT(l_36F[0/*1*/]);
                    }
--]]
function AUDIO.PLAY_STREAM_FROM_OBJECT(object)
  native.invoke(
    Type.Void, 219, false,
    arg(Type.Object, object)
  )
end

-- void PLAY_STREAM_FRONTEND() // 0x58FCE43488F9F5F4
function AUDIO.PLAY_STREAM_FRONTEND()
  native.invoke(
    Type.Void, 220, false
  )
end

-- void PLAY_STREAM_FROM_POSITION(float x, float y, float z) // 0x21442F412E8DE56B
function AUDIO.PLAY_STREAM_FROM_POSITION(x, y, z)
  native.invoke(
    Type.Void, 221, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void STOP_STREAM() // 0xA4718A1419D18151
function AUDIO.STOP_STREAM()
  native.invoke(
    Type.Void, 222, false
  )
end

-- void STOP_PED_SPEAKING(Ped ped, BOOL shaking) // 0x9D64D7405520E3D3
function AUDIO.STOP_PED_SPEAKING(ped, shaking)
  native.invoke(
    Type.Void, 223, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, shaking)
  )
end

-- void BLOCK_ALL_SPEECH_FROM_PED(Ped ped, BOOL p1, BOOL p2) // 0xF8AD2EED7C47E8FE
function AUDIO.BLOCK_ALL_SPEECH_FROM_PED(ped, p1, p2)
  native.invoke(
    Type.Void, 224, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void STOP_PED_SPEAKING_SYNCED(Ped ped, BOOL p1) // 0xAB6781A5F3101470
function AUDIO.STOP_PED_SPEAKING_SYNCED(ped, p1)
  native.invoke(
    Type.Void, 225, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1)
  )
end

-- void DISABLE_PED_PAIN_AUDIO(Ped ped, BOOL toggle) // 0xA9A41C1E940FB0E8
function AUDIO.DISABLE_PED_PAIN_AUDIO(ped, toggle)
  native.invoke(
    Type.Void, 226, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_AMBIENT_SPEECH_DISABLED(Ped ped) // 0x932C2D096A2C3FFF
--[[
Common in the scripts:
AUDIO::IS_AMBIENT_SPEECH_DISABLED(PLAYER::PLAYER_PED_ID());
--]]
function AUDIO.IS_AMBIENT_SPEECH_DISABLED(ped)
  return native.invoke(
    Type.Bool, 227, false,
    arg(Type.Ped, ped)
  )
end

-- void BLOCK_SPEECH_CONTEXT_GROUP(const char* p0, int p1) // 0xA8A7D434AFB4B97B
function AUDIO.BLOCK_SPEECH_CONTEXT_GROUP(p0, p1)
  native.invoke(
    Type.Void, 228, false,
    arg(Type.String, p0),
    arg(Type.Int, p1)
  )
end

-- void UNBLOCK_SPEECH_CONTEXT_GROUP(const char* p0) // 0x2ACABED337622DF2
function AUDIO.UNBLOCK_SPEECH_CONTEXT_GROUP(p0)
  native.invoke(
    Type.Void, 229, false,
    arg(Type.String, p0)
  )
end

-- void SET_SIREN_WITH_NO_DRIVER(Vehicle vehicle, BOOL toggle) // 0x1FEF0683B96EBCF2
function AUDIO.SET_SIREN_WITH_NO_DRIVER(vehicle, toggle)
  native.invoke(
    Type.Void, 230, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_SIREN_BYPASS_MP_DRIVER_CHECK(Vehicle vehicle, BOOL toggle) // 0xF584CF8529B51434
function AUDIO.SET_SIREN_BYPASS_MP_DRIVER_CHECK(vehicle, toggle)
  native.invoke(
    Type.Void, 231, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void TRIGGER_SIREN_AUDIO(Vehicle vehicle) // 0x66C3FB05206041BA
function AUDIO.TRIGGER_SIREN_AUDIO(vehicle)
  native.invoke(
    Type.Void, 232, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_HORN_PERMANENTLY_ON(Vehicle vehicle) // 0x9C11908013EA4715
function AUDIO.SET_HORN_PERMANENTLY_ON(vehicle)
  native.invoke(
    Type.Void, 233, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_HORN_ENABLED(Vehicle vehicle, BOOL toggle) // 0x76D683C108594D0E
function AUDIO.SET_HORN_ENABLED(vehicle, toggle)
  native.invoke(
    Type.Void, 234, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_AUDIO_VEHICLE_PRIORITY(Vehicle vehicle, Any p1) // 0xE5564483E407F914
function AUDIO.SET_AUDIO_VEHICLE_PRIORITY(vehicle, p1)
  native.invoke(
    Type.Void, 235, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Any, p1)
  )
end

-- void SET_HORN_PERMANENTLY_ON_TIME(Vehicle vehicle, float time) // 0x9D3AF56E94C9AE98
function AUDIO.SET_HORN_PERMANENTLY_ON_TIME(vehicle, time)
  native.invoke(
    Type.Void, 236, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, time)
  )
end

-- void USE_SIREN_AS_HORN(Vehicle vehicle, BOOL toggle) // 0xFA932DE350266EF8
function AUDIO.USE_SIREN_AS_HORN(vehicle, toggle)
  native.invoke(
    Type.Void, 237, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void FORCE_USE_AUDIO_GAME_OBJECT(Vehicle vehicle, const char* audioName) // 0x4F0C413926060B38
--[[
This native sets the audio of the specified vehicle to the audioName (p1).

Use the audioNameHash found in vehicles.meta

Example:
_SET_VEHICLE_AUDIO(veh, "ADDER");
The selected vehicle will now have the audio of the Adder.
--]]
function AUDIO.FORCE_USE_AUDIO_GAME_OBJECT(vehicle, audioName)
  native.invoke(
    Type.Void, 238, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.String, audioName)
  )
end

-- void PRELOAD_VEHICLE_AUDIO_BANK(Hash vehicleModel) // 0xCA4CEA6AE0000A7E
function AUDIO.PRELOAD_VEHICLE_AUDIO_BANK(vehicleModel)
  native.invoke(
    Type.Void, 239, false,
    arg(Type.Hash, vehicleModel)
  )
end

-- void SET_VEHICLE_STARTUP_REV_SOUND(Vehicle vehicle, const char* p1, const char* p2) // 0xF1F8157B8C3F171C
function AUDIO.SET_VEHICLE_STARTUP_REV_SOUND(vehicle, p1, p2)
  native.invoke(
    Type.Void, 240, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.String, p1),
    arg(Type.String, p2)
  )
end

-- void RESET_VEHICLE_STARTUP_REV_SOUND(Vehicle vehicle) // 0xD2DCCD8E16E20997
function AUDIO.RESET_VEHICLE_STARTUP_REV_SOUND(vehicle)
  native.invoke(
    Type.Void, 241, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_FORCE_REVERSE_WARNING(Any p0, Any p1) // 0x97FFB4ADEED08066
function AUDIO.SET_VEHICLE_FORCE_REVERSE_WARNING(p0, p1)
  native.invoke(
    Type.Void, 242, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL IS_VEHICLE_AUDIBLY_DAMAGED(Vehicle vehicle) // 0x5DB8010EE71FDEF2
function AUDIO.IS_VEHICLE_AUDIBLY_DAMAGED(vehicle)
  return native.invoke(
    Type.Bool, 243, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_AUDIO_ENGINE_DAMAGE_FACTOR(Vehicle vehicle, float damageFactor) // 0x59E7B488451F4D3A
function AUDIO.SET_VEHICLE_AUDIO_ENGINE_DAMAGE_FACTOR(vehicle, damageFactor)
  native.invoke(
    Type.Void, 244, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, damageFactor)
  )
end

-- void SET_VEHICLE_AUDIO_BODY_DAMAGE_FACTOR(Vehicle vehicle, float intensity) // 0x01BB4D577D38BD9E
--[[
intensity: 0.0f - 1.0f, only used once with 1.0f in R* Scripts (nigel2)
Makes an engine rattling noise when you decelerate, you need to be going faster to hear lower values
--]]
function AUDIO.SET_VEHICLE_AUDIO_BODY_DAMAGE_FACTOR(vehicle, intensity)
  native.invoke(
    Type.Void, 245, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, intensity)
  )
end

-- void ENABLE_VEHICLE_FANBELT_DAMAGE(Vehicle vehicle, BOOL toggle) // 0x1C073274E065C6D2
function AUDIO.ENABLE_VEHICLE_FANBELT_DAMAGE(vehicle, toggle)
  native.invoke(
    Type.Void, 246, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void ENABLE_VEHICLE_EXHAUST_POPS(Vehicle vehicle, BOOL toggle) // 0x2BE4BC731D039D5A
function AUDIO.ENABLE_VEHICLE_EXHAUST_POPS(vehicle, toggle)
  native.invoke(
    Type.Void, 247, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_BOOST_ACTIVE(Vehicle vehicle, BOOL toggle) // 0x4A04DE7CAB2739A1
--[[
SET_VEHICLE_BOOST_ACTIVE(vehicle, 1, 0);
SET_VEHICLE_BOOST_ACTIVE(vehicle, 0, 0); 

Will give a boost-soundeffect.
--]]
function AUDIO.SET_VEHICLE_BOOST_ACTIVE(vehicle, toggle)
  native.invoke(
    Type.Void, 248, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PLAYER_VEHICLE_ALARM_AUDIO_ACTIVE(Vehicle vehicle, BOOL toggle) // 0x6FDDAD856E36988A
function AUDIO.SET_PLAYER_VEHICLE_ALARM_AUDIO_ACTIVE(vehicle, toggle)
  native.invoke(
    Type.Void, 249, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_SCRIPT_UPDATE_DOOR_AUDIO(Hash doorHash, BOOL toggle) // 0x06C0023BED16DD6B
function AUDIO.SET_SCRIPT_UPDATE_DOOR_AUDIO(doorHash, toggle)
  native.invoke(
    Type.Void, 250, false,
    arg(Type.Hash, doorHash),
    arg(Type.Bool, toggle)
  )
end

-- void PLAY_VEHICLE_DOOR_OPEN_SOUND(Vehicle vehicle, int doorId) // 0x3A539D52857EA82D
--[[
doorId: see SET_VEHICLE_DOOR_SHUT
--]]
function AUDIO.PLAY_VEHICLE_DOOR_OPEN_SOUND(vehicle, doorId)
  native.invoke(
    Type.Void, 251, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, doorId)
  )
end

-- void PLAY_VEHICLE_DOOR_CLOSE_SOUND(Vehicle vehicle, int doorId) // 0x62A456AA4769EF34
--[[
doorId: see SET_VEHICLE_DOOR_SHUT
--]]
function AUDIO.PLAY_VEHICLE_DOOR_CLOSE_SOUND(vehicle, doorId)
  native.invoke(
    Type.Void, 252, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, doorId)
  )
end

-- void ENABLE_STALL_WARNING_SOUNDS(Vehicle vehicle, BOOL toggle) // 0xC15907D667F7CFB2
--[[
Works for planes only.
--]]
function AUDIO.ENABLE_STALL_WARNING_SOUNDS(vehicle, toggle)
  native.invoke(
    Type.Void, 253, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void _ENABLE_DRAG_RACE_STATIONARY_WARNING_SOUNDS(Vehicle vehicle, BOOL enable) // 0xBEFB80290414FD4F
function AUDIO._ENABLE_DRAG_RACE_STATIONARY_WARNING_SOUNDS(vehicle, enable)
  native.invoke(
    Type.Void, 254, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, enable)
  )
end

-- BOOL IS_GAME_IN_CONTROL_OF_MUSIC() // 0x6D28DC1671E334FD
--[[
Hardcoded to return 1
--]]
function AUDIO.IS_GAME_IN_CONTROL_OF_MUSIC()
  return native.invoke(
    Type.Bool, 255, false
  )
end

-- void SET_GPS_ACTIVE(BOOL active) // 0x3BD3F52BA9B1E4E8
function AUDIO.SET_GPS_ACTIVE(active)
  native.invoke(
    Type.Void, 256, false,
    arg(Type.Bool, active)
  )
end

-- void PLAY_MISSION_COMPLETE_AUDIO(const char* audioName) // 0xB138AAB8A70D3C69
--[[
Called 38 times in the scripts. There are 5 different audioNames used.
 One unknown removed below.

AUDIO::PLAY_MISSION_COMPLETE_AUDIO("DEAD");
AUDIO::PLAY_MISSION_COMPLETE_AUDIO("FRANKLIN_BIG_01");
AUDIO::PLAY_MISSION_COMPLETE_AUDIO("GENERIC_FAILED");
AUDIO::PLAY_MISSION_COMPLETE_AUDIO("TREVOR_SMALL_01");
--]]
function AUDIO.PLAY_MISSION_COMPLETE_AUDIO(audioName)
  native.invoke(
    Type.Void, 257, false,
    arg(Type.String, audioName)
  )
end

-- BOOL IS_MISSION_COMPLETE_PLAYING() // 0x19A30C23F5827F8A
function AUDIO.IS_MISSION_COMPLETE_PLAYING()
  return native.invoke(
    Type.Bool, 258, false
  )
end

-- BOOL IS_MISSION_COMPLETE_READY_FOR_UI() // 0x6F259F82D873B8B8
function AUDIO.IS_MISSION_COMPLETE_READY_FOR_UI()
  return native.invoke(
    Type.Bool, 259, false
  )
end

-- void BLOCK_DEATH_JINGLE(BOOL toggle) // 0xF154B8D1775B2DEC
function AUDIO.BLOCK_DEATH_JINGLE(toggle)
  native.invoke(
    Type.Void, 260, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL START_AUDIO_SCENE(const char* scene) // 0x013A80FC08F6E4F2
--[[
Used to prepare a scene where the surrounding sound is muted or a bit changed. This does not play any sound.

List of all usable scene names found in b617d. Sorted alphabetically and identical names removed: https://pastebin.com/MtM9N9CC
Full list of audio scene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/audioSceneNames.json
--]]
function AUDIO.START_AUDIO_SCENE(scene)
  return native.invoke(
    Type.Bool, 261, false,
    arg(Type.String, scene)
  )
end

-- void STOP_AUDIO_SCENE(const char* scene) // 0xDFE8422B3B94E688
--[[
Full list of audio scene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/audioSceneNames.json
--]]
function AUDIO.STOP_AUDIO_SCENE(scene)
  native.invoke(
    Type.Void, 262, false,
    arg(Type.String, scene)
  )
end

-- void STOP_AUDIO_SCENES() // 0xBAC7FC81A75EC1A1
--[[
??
--]]
function AUDIO.STOP_AUDIO_SCENES()
  native.invoke(
    Type.Void, 263, false
  )
end

-- BOOL IS_AUDIO_SCENE_ACTIVE(const char* scene) // 0xB65B60556E2A9225
--[[
Full list of audio scene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/audioSceneNames.json
--]]
function AUDIO.IS_AUDIO_SCENE_ACTIVE(scene)
  return native.invoke(
    Type.Bool, 264, false,
    arg(Type.String, scene)
  )
end

-- void SET_AUDIO_SCENE_VARIABLE(const char* scene, const char* variable, float value) // 0xEF21A9EF089A2668
--[[
Full list of audio scene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/audioSceneNames.json
--]]
function AUDIO.SET_AUDIO_SCENE_VARIABLE(scene, variable, value)
  native.invoke(
    Type.Void, 265, false,
    arg(Type.String, scene),
    arg(Type.String, variable),
    arg(Type.Float, value)
  )
end

-- void SET_AUDIO_SCRIPT_CLEANUP_TIME(int time) // 0xA5F377B175A699C5
function AUDIO.SET_AUDIO_SCRIPT_CLEANUP_TIME(time)
  native.invoke(
    Type.Void, 266, false,
    arg(Type.Int, time)
  )
end

-- void ADD_ENTITY_TO_AUDIO_MIX_GROUP(Entity entity, const char* groupName, float p2) // 0x153973AB99FE8980
--[[
All found occurrences in b678d:
https://pastebin.com/ceu67jz8
--]]
function AUDIO.ADD_ENTITY_TO_AUDIO_MIX_GROUP(entity, groupName, p2)
  native.invoke(
    Type.Void, 267, false,
    arg(Type.Entity, entity),
    arg(Type.String, groupName),
    arg(Type.Float, p2)
  )
end

-- void REMOVE_ENTITY_FROM_AUDIO_MIX_GROUP(Entity entity, float p1) // 0x18EB48CFC41F2EA0
function AUDIO.REMOVE_ENTITY_FROM_AUDIO_MIX_GROUP(entity, p1)
  native.invoke(
    Type.Void, 268, false,
    arg(Type.Entity, entity),
    arg(Type.Float, p1)
  )
end

-- BOOL AUDIO_IS_MUSIC_PLAYING() // 0x845FFC3A4FEEFA3E
function AUDIO.AUDIO_IS_MUSIC_PLAYING()
  return native.invoke(
    Type.Bool, 269, false
  )
end

-- BOOL AUDIO_IS_SCRIPTED_MUSIC_PLAYING() // 0x2DD39BF3E2F9C47F
--[[
This is an alias of AUDIO_IS_MUSIC_PLAYING.
--]]
function AUDIO.AUDIO_IS_SCRIPTED_MUSIC_PLAYING()
  return native.invoke(
    Type.Bool, 270, false
  )
end

-- BOOL PREPARE_MUSIC_EVENT(const char* eventName) // 0x1E5185B72EF5158A
--[[
All music event names found in the b617d scripts: https://pastebin.com/GnYt0R3P
Full list of music event names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/musicEventNames.json
--]]
function AUDIO.PREPARE_MUSIC_EVENT(eventName)
  return native.invoke(
    Type.Bool, 271, false,
    arg(Type.String, eventName)
  )
end

-- BOOL CANCEL_MUSIC_EVENT(const char* eventName) // 0x5B17A90291133DA5
--[[
All music event names found in the b617d scripts: https://pastebin.com/GnYt0R3P
Full list of music event names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/musicEventNames.json
--]]
function AUDIO.CANCEL_MUSIC_EVENT(eventName)
  return native.invoke(
    Type.Bool, 272, false,
    arg(Type.String, eventName)
  )
end

-- BOOL TRIGGER_MUSIC_EVENT(const char* eventName) // 0x706D57B0F50DA710
--[[
List of all usable event names found in b617d used with this native. Sorted alphabetically and identical names removed: https://pastebin.com/RzDFmB1W

All music event names found in the b617d scripts: https://pastebin.com/GnYt0R3P
Full list of music event names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/musicEventNames.json
--]]
function AUDIO.TRIGGER_MUSIC_EVENT(eventName)
  return native.invoke(
    Type.Bool, 273, false,
    arg(Type.String, eventName)
  )
end

-- BOOL IS_MUSIC_ONESHOT_PLAYING() // 0xA097AB275061FB21
function AUDIO.IS_MUSIC_ONESHOT_PLAYING()
  return native.invoke(
    Type.Bool, 274, false
  )
end

-- int GET_MUSIC_PLAYTIME() // 0xE7A0D23DC414507B
function AUDIO.GET_MUSIC_PLAYTIME()
  return native.invoke(
    Type.Int, 275, false
  )
end

-- void SET_GLOBAL_RADIO_SIGNAL_LEVEL(Any p0) // 0x159B7318403A1CD8
function AUDIO.SET_GLOBAL_RADIO_SIGNAL_LEVEL(p0)
  native.invoke(
    Type.Void, 276, false,
    arg(Type.Any, p0)
  )
end

-- void RECORD_BROKEN_GLASS(float x, float y, float z, float radius) // 0xFBE20329593DEC9D
function AUDIO.RECORD_BROKEN_GLASS(x, y, z, radius)
  native.invoke(
    Type.Void, 277, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius)
  )
end

-- void CLEAR_ALL_BROKEN_GLASS() // 0xB32209EFFDC04913
function AUDIO.CLEAR_ALL_BROKEN_GLASS()
  native.invoke(
    Type.Void, 278, false
  )
end

-- void SCRIPT_OVERRIDES_WIND_ELEVATION(BOOL p0, Any p1) // 0x70B8EC8FC108A634
function AUDIO.SCRIPT_OVERRIDES_WIND_ELEVATION(p0, p1)
  native.invoke(
    Type.Void, 279, false,
    arg(Type.Bool, p0),
    arg(Type.Any, p1)
  )
end

-- void SET_PED_WALLA_DENSITY(float p0, float p1) // 0x149AEE66F0CB3A99
function AUDIO.SET_PED_WALLA_DENSITY(p0, p1)
  native.invoke(
    Type.Void, 280, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1)
  )
end

-- void SET_PED_INTERIOR_WALLA_DENSITY(float p0, float p1) // 0x8BF907833BE275DE
function AUDIO.SET_PED_INTERIOR_WALLA_DENSITY(p0, p1)
  native.invoke(
    Type.Void, 281, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1)
  )
end

-- void FORCE_PED_PANIC_WALLA() // 0x062D5EAD4DA2FA6A
function AUDIO.FORCE_PED_PANIC_WALLA()
  native.invoke(
    Type.Void, 282, false
  )
end

-- BOOL PREPARE_ALARM(const char* alarmName) // 0x9D74AE343DB65533
--[[
Example:

bool prepareAlarm = AUDIO::PREPARE_ALARM("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS");
Full list of alarm names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/alarmSounds.json
--]]
function AUDIO.PREPARE_ALARM(alarmName)
  return native.invoke(
    Type.Bool, 283, false,
    arg(Type.String, alarmName)
  )
end

-- void START_ALARM(const char* alarmName, BOOL p2) // 0x0355EF116C4C97B2
--[[
Example:

This will start the alarm at Fort Zancudo.

AUDIO::START_ALARM("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS", 1);

First parameter (char) is the name of the alarm.
Second parameter (bool) is unknown, it does not seem to make a difference if this one is 0 or 1.

----------

It DOES make a difference but it has to do with the duration or something I dunno yet

----------

 Found in the b617d scripts:

 AUDIO::START_ALARM("AGENCY_HEIST_FIB_TOWER_ALARMS", 0);
 AUDIO::START_ALARM("AGENCY_HEIST_FIB_TOWER_ALARMS_UPPER", 1);
 AUDIO::START_ALARM("AGENCY_HEIST_FIB_TOWER_ALARMS_UPPER_B", 0);
 AUDIO::START_ALARM("BIG_SCORE_HEIST_VAULT_ALARMS", a_0);
 AUDIO::START_ALARM("FBI_01_MORGUE_ALARMS", 1);
 AUDIO::START_ALARM("FIB_05_BIOTECH_LAB_ALARMS", 0);
 AUDIO::START_ALARM("JEWEL_STORE_HEIST_ALARMS", 0);
 AUDIO::START_ALARM("PALETO_BAY_SCORE_ALARM", 1);
 AUDIO::START_ALARM("PALETO_BAY_SCORE_CHICKEN_FACTORY_ALARM", 0);
 AUDIO::START_ALARM("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS", 1);
 AUDIO::START_ALARM("PORT_OF_LS_HEIST_SHIP_ALARMS", 0);
 AUDIO::START_ALARM("PRISON_ALARMS", 0);
 AUDIO::START_ALARM("PROLOGUE_VAULT_ALARMS", 0);
Full list of alarm names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/alarmSounds.json
--]]
function AUDIO.START_ALARM(alarmName, p2)
  native.invoke(
    Type.Void, 284, false,
    arg(Type.String, alarmName),
    arg(Type.Bool, p2)
  )
end

-- void STOP_ALARM(const char* alarmName, BOOL toggle) // 0xA1CADDCD98415A41
--[[
Example:

This will stop the alarm at Fort Zancudo.

AUDIO::STOP_ALARM("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS", 1);

First parameter (char) is the name of the alarm.
Second parameter (bool) has to be true (1) to have any effect.
Full list of alarm names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/alarmSounds.json
--]]
function AUDIO.STOP_ALARM(alarmName, toggle)
  native.invoke(
    Type.Void, 285, false,
    arg(Type.String, alarmName),
    arg(Type.Bool, toggle)
  )
end

-- void STOP_ALL_ALARMS(BOOL stop) // 0x2F794A877ADD4C92
function AUDIO.STOP_ALL_ALARMS(stop)
  native.invoke(
    Type.Void, 286, false,
    arg(Type.Bool, stop)
  )
end

-- BOOL IS_ALARM_PLAYING(const char* alarmName) // 0x226435CB96CCFC8C
--[[
Example:

bool playing = AUDIO::IS_ALARM_PLAYING("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS");
Full list of alarm names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/alarmSounds.json
--]]
function AUDIO.IS_ALARM_PLAYING(alarmName)
  return native.invoke(
    Type.Bool, 287, false,
    arg(Type.String, alarmName)
  )
end

-- Hash GET_VEHICLE_DEFAULT_HORN(Vehicle vehicle) // 0x02165D55000219AC
--[[
Returns hash of default vehicle horn

Hash is stored in audVehicleAudioEntity
--]]
function AUDIO.GET_VEHICLE_DEFAULT_HORN(vehicle)
  return native.invoke(
    Type.Hash, 288, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- Hash GET_VEHICLE_DEFAULT_HORN_IGNORE_MODS(Vehicle vehicle) // 0xACB5DCCA1EC76840
function AUDIO.GET_VEHICLE_DEFAULT_HORN_IGNORE_MODS(vehicle)
  return native.invoke(
    Type.Hash, 289, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void RESET_PED_AUDIO_FLAGS(Ped ped) // 0xF54BB7B61036F335
function AUDIO.RESET_PED_AUDIO_FLAGS(ped)
  native.invoke(
    Type.Void, 290, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_FOOTSTEPS_EVENTS_ENABLED(Ped ped, BOOL toggle) // 0x0653B735BFBDFE87
--[[
Enables/disables ped's "loud" footstep sound.
--]]
function AUDIO.SET_PED_FOOTSTEPS_EVENTS_ENABLED(ped, toggle)
  native.invoke(
    Type.Void, 291, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_CLOTH_EVENTS_ENABLED(Ped ped, BOOL toggle) // 0x29DA3CA8D8B2692D
--[[
Enables/disables ped's "quiet" footstep sound.
--]]
function AUDIO.SET_PED_CLOTH_EVENTS_ENABLED(ped, toggle)
  native.invoke(
    Type.Void, 292, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void OVERRIDE_PLAYER_GROUND_MATERIAL(Hash hash, BOOL toggle) // 0xD2CC78CD3D0B50F9
--[[
Sets audio flag "OverridePlayerGroundMaterial"
--]]
function AUDIO.OVERRIDE_PLAYER_GROUND_MATERIAL(hash, toggle)
  native.invoke(
    Type.Void, 293, false,
    arg(Type.Hash, hash),
    arg(Type.Bool, toggle)
  )
end

-- void USE_FOOTSTEP_SCRIPT_SWEETENERS(Ped ped, BOOL p1, Hash hash) // 0xBF4DC1784BE94DFA
function AUDIO.USE_FOOTSTEP_SCRIPT_SWEETENERS(ped, p1, hash)
  native.invoke(
    Type.Void, 294, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1),
    arg(Type.Hash, hash)
  )
end

-- void OVERRIDE_MICROPHONE_SETTINGS(Hash hash, BOOL toggle) // 0x75773E11BA459E90
--[[
Sets audio flag "OverrideMicrophoneSettings"
--]]
function AUDIO.OVERRIDE_MICROPHONE_SETTINGS(hash, toggle)
  native.invoke(
    Type.Void, 295, false,
    arg(Type.Hash, hash),
    arg(Type.Bool, toggle)
  )
end

-- void FREEZE_MICROPHONE() // 0xD57AAAE0E2214D11
function AUDIO.FREEZE_MICROPHONE()
  native.invoke(
    Type.Void, 296, false
  )
end

-- void DISTANT_COP_CAR_SIRENS(BOOL value) // 0x552369F549563AD5
--[[
If value is set to true, and ambient siren sound will be played.
Appears to enable/disable an audio flag.
--]]
function AUDIO.DISTANT_COP_CAR_SIRENS(value)
  native.invoke(
    Type.Void, 297, false,
    arg(Type.Bool, value)
  )
end

-- void SET_SIREN_CAN_BE_CONTROLLED_BY_AUDIO(Vehicle vehicle, BOOL p1) // 0x43FA0DFC5DF87815
function AUDIO.SET_SIREN_CAN_BE_CONTROLLED_BY_AUDIO(vehicle, p1)
  native.invoke(
    Type.Void, 298, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1)
  )
end

-- void ENABLE_STUNT_JUMP_AUDIO() // 0xB81CF134AEB56FFB
function AUDIO.ENABLE_STUNT_JUMP_AUDIO()
  native.invoke(
    Type.Void, 299, false
  )
end

-- void SET_AUDIO_FLAG(const char* flagName, BOOL toggle) // 0xB9EFD5C25018725A
--[[
Possible flag names:
"ActivateSwitchWheelAudio"
"AllowAmbientSpeechInSlowMo"
"AllowCutsceneOverScreenFade"
"AllowForceRadioAfterRetune"
"AllowPainAndAmbientSpeechToPlayDuringCutscene"
"AllowPlayerAIOnMission"
"AllowPoliceScannerWhenPlayerHasNoControl"
"AllowRadioDuringSwitch"
"AllowRadioOverScreenFade"
"AllowScoreAndRadio"
"AllowScriptedSpeechInSlowMo"
"AvoidMissionCompleteDelay"
"DisableAbortConversationForDeathAndInjury"
"DisableAbortConversationForRagdoll"
"DisableBarks"
"DisableFlightMusic"
"DisableReplayScriptStreamRecording"
"EnableHeadsetBeep"
"ForceConversationInterrupt"
"ForceSeamlessRadioSwitch"
"ForceSniperAudio"
"FrontendRadioDisabled"
"HoldMissionCompleteWhenPrepared"
"IsDirectorModeActive"
"IsPlayerOnMissionForSpeech"
"ListenerReverbDisabled"
"LoadMPData"
"MobileRadioInGame"
"OnlyAllowScriptTriggerPoliceScanner"
"PlayMenuMusic"
"PoliceScannerDisabled"
"ScriptedConvListenerMaySpeak"
"SpeechDucksScore"
"SuppressPlayerScubaBreathing"
"WantedMusicDisabled"
"WantedMusicOnMission"

-------------------------------
No added flag names between b393d and b573d, including b573d.

#######################################################################

"IsDirectorModeActive" is an audio flag which will allow you to play speech infinitely without any pauses like in Director Mode.

-----------------------------------------------------------------------

All flag IDs and hashes:

ID: 00 | Hash: 0x0FED7A7F
ID: 01 | Hash: 0x20A7858F
ID: 02 | Hash: 0xA11C2259
ID: 03 | Hash: 0x08DE4700
ID: 04 | Hash: 0x989F652F
ID: 05 | Hash: 0x3C9E76BA
ID: 06 | Hash: 0xA805FEB0
ID: 07 | Hash: 0x4B94EA26
ID: 08 | Hash: 0x803ACD34
ID: 09 | Hash: 0x7C741226
ID: 10 | Hash: 0x31DB9EBD
ID: 11 | Hash: 0xDF386F18
ID: 12 | Hash: 0x669CED42
ID: 13 | Hash: 0x51F22743
ID: 14 | Hash: 0x2052B35C
ID: 15 | Hash: 0x071472DC
ID: 16 | Hash: 0xF9928BCC
ID: 17 | Hash: 0x7ADBDD48
ID: 18 | Hash: 0xA959BA1A
ID: 19 | Hash: 0xBBE89B60
ID: 20 | Hash: 0x87A08871
ID: 21 | Hash: 0xED1057CE
ID: 22 | Hash: 0x1584AD7A
ID: 23 | Hash: 0x8582CFCB
ID: 24 | Hash: 0x7E5E2FB0
ID: 25 | Hash: 0xAE4F72DB
ID: 26 | Hash: 0x5D16D1FA
ID: 27 | Hash: 0x06B2F4B8
ID: 28 | Hash: 0x5D4CDC96
ID: 29 | Hash: 0x8B5A48BA
ID: 30 | Hash: 0x98FBD539
ID: 31 | Hash: 0xD8CB0473
ID: 32 | Hash: 0x5CBB4874
ID: 33 | Hash: 0x2E9F93A9
ID: 34 | Hash: 0xD93BEA86
ID: 35 | Hash: 0x92109B7D
ID: 36 | Hash: 0xB7EC9E4D
ID: 37 | Hash: 0xCABDBB1D
ID: 38 | Hash: 0xB3FD4A52
ID: 39 | Hash: 0x370D94E5
ID: 40 | Hash: 0xA0F7938F
ID: 41 | Hash: 0xCBE1CE81
ID: 42 | Hash: 0xC27F1271
ID: 43 | Hash: 0x9E3258EB
ID: 44 | Hash: 0x551CDA5B
ID: 45 | Hash: 0xCB6D663C
ID: 46 | Hash: 0x7DACE87F
ID: 47 | Hash: 0xF9DE416F
ID: 48 | Hash: 0x882E6E9E
ID: 49 | Hash: 0x16B447E7
ID: 50 | Hash: 0xBD867739
ID: 51 | Hash: 0xA3A58604
ID: 52 | Hash: 0x7E046BBC
ID: 53 | Hash: 0xD95FDB98
ID: 54 | Hash: 0x5842C0ED
ID: 55 | Hash: 0x285FECC6
ID: 56 | Hash: 0x9351AC43
ID: 57 | Hash: 0x50032E75
ID: 58 | Hash: 0xAE6D0D59
ID: 59 | Hash: 0xD6351785
ID: 60 | Hash: 0xD25D71BC
ID: 61 | Hash: 0x1F7F6423
ID: 62 | Hash: 0xE24C3AA6
ID: 63 | Hash: 0xBFFDD2B7
--]]
function AUDIO.SET_AUDIO_FLAG(flagName, toggle)
  native.invoke(
    Type.Void, 300, false,
    arg(Type.String, flagName),
    arg(Type.Bool, toggle)
  )
end

-- BOOL PREPARE_SYNCHRONIZED_AUDIO_EVENT(const char* audioEvent, Any p1) // 0xC7ABCACA4985A766
--[[
p1 is always 0 in the scripts
--]]
function AUDIO.PREPARE_SYNCHRONIZED_AUDIO_EVENT(audioEvent, p1)
  return native.invoke(
    Type.Bool, 301, false,
    arg(Type.String, audioEvent),
    arg(Type.Any, p1)
  )
end

-- BOOL PREPARE_SYNCHRONIZED_AUDIO_EVENT_FOR_SCENE(int sceneID, const char* audioEvent) // 0x029FE7CD1B7E2E75
function AUDIO.PREPARE_SYNCHRONIZED_AUDIO_EVENT_FOR_SCENE(sceneID, audioEvent)
  return native.invoke(
    Type.Bool, 302, false,
    arg(Type.Int, sceneID),
    arg(Type.String, audioEvent)
  )
end

-- BOOL PLAY_SYNCHRONIZED_AUDIO_EVENT(int sceneID) // 0x8B2FD4560E55DD2D
function AUDIO.PLAY_SYNCHRONIZED_AUDIO_EVENT(sceneID)
  return native.invoke(
    Type.Bool, 303, false,
    arg(Type.Int, sceneID)
  )
end

-- BOOL STOP_SYNCHRONIZED_AUDIO_EVENT(int sceneID) // 0x92D6A88E64A94430
function AUDIO.STOP_SYNCHRONIZED_AUDIO_EVENT(sceneID)
  return native.invoke(
    Type.Bool, 304, false,
    arg(Type.Int, sceneID)
  )
end

-- void INIT_SYNCH_SCENE_AUDIO_WITH_POSITION(const char* audioEvent, float x, float y, float z) // 0xC8EDE9BDBCCBA6D4
function AUDIO.INIT_SYNCH_SCENE_AUDIO_WITH_POSITION(audioEvent, x, y, z)
  native.invoke(
    Type.Void, 305, false,
    arg(Type.String, audioEvent),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void INIT_SYNCH_SCENE_AUDIO_WITH_ENTITY(const char* audioEvent, Entity entity) // 0x950A154B8DAB6185
function AUDIO.INIT_SYNCH_SCENE_AUDIO_WITH_ENTITY(audioEvent, entity)
  native.invoke(
    Type.Void, 306, false,
    arg(Type.String, audioEvent),
    arg(Type.Entity, entity)
  )
end

-- void SET_AUDIO_SPECIAL_EFFECT_MODE(int mode) // 0x12561FCBB62D5B9C
--[[
Needs to be called every frame.
Audio mode to apply this frame: https://alloc8or.re/gta5/doc/enums/audSpecialEffectMode.txt
--]]
function AUDIO.SET_AUDIO_SPECIAL_EFFECT_MODE(mode)
  native.invoke(
    Type.Void, 307, false,
    arg(Type.Int, mode)
  )
end

-- void SET_PORTAL_SETTINGS_OVERRIDE(const char* p0, const char* p1) // 0x044DBAD7A7FA2BE5
--[[
Found in the b617d scripts, duplicates removed:  

AUDIO::SET_PORTAL_SETTINGS_OVERRIDE("V_CARSHOWROOM_PS_WINDOW_UNBROKEN", "V_CARSHOWROOM_PS_WINDOW_BROKEN");

 AUDIO::SET_PORTAL_SETTINGS_OVERRIDE("V_CIA_PS_WINDOW_UNBROKEN", "V_CIA_PS_WINDOW_BROKEN");

 AUDIO::SET_PORTAL_SETTINGS_OVERRIDE("V_DLC_HEIST_APARTMENT_DOOR_CLOSED", "V_DLC_HEIST_APARTMENT_DOOR_OPEN");

 AUDIO::SET_PORTAL_SETTINGS_OVERRIDE("V_FINALEBANK_PS_VAULT_INTACT", "V_FINALEBANK_PS_VAULT_BLOWN");

 AUDIO::SET_PORTAL_SETTINGS_OVERRIDE("V_MICHAEL_PS_BATHROOM_WITH_WINDOW", "V_MICHAEL_PS_BATHROOM_WITHOUT_WINDOW");
--]]
function AUDIO.SET_PORTAL_SETTINGS_OVERRIDE(p0, p1)
  native.invoke(
    Type.Void, 308, false,
    arg(Type.String, p0),
    arg(Type.String, p1)
  )
end

-- void REMOVE_PORTAL_SETTINGS_OVERRIDE(const char* p0) // 0xB4BBFD9CD8B3922B
--[[
 Found in the b617d scripts, duplicates removed: 

 AUDIO::REMOVE_PORTAL_SETTINGS_OVERRIDE("V_CARSHOWROOM_PS_WINDOW_UNBROKEN");
 AUDIO::REMOVE_PORTAL_SETTINGS_OVERRIDE("V_CIA_PS_WINDOW_UNBROKEN");
 AUDIO::REMOVE_PORTAL_SETTINGS_OVERRIDE("V_DLC_HEIST_APARTMENT_DOOR_CLOSED");
 AUDIO::REMOVE_PORTAL_SETTINGS_OVERRIDE("V_FINALEBANK_PS_VAULT_INTACT");
 AUDIO::REMOVE_PORTAL_SETTINGS_OVERRIDE("V_MICHAEL_PS_BATHROOM_WITH_WINDOW");
--]]
function AUDIO.REMOVE_PORTAL_SETTINGS_OVERRIDE(p0)
  native.invoke(
    Type.Void, 309, false,
    arg(Type.String, p0)
  )
end

-- void STOP_SMOKE_GRENADE_EXPLOSION_SOUNDS() // 0xE4E6DD5566D28C82
--[[
STOP_S[MOKE_GRENADE_EXPLOSION_SOUNDS]?
--]]
function AUDIO.STOP_SMOKE_GRENADE_EXPLOSION_SOUNDS()
  native.invoke(
    Type.Void, 310, false
  )
end

-- int GET_MUSIC_VOL_SLIDER() // 0x3A48AB4445D499BE
function AUDIO.GET_MUSIC_VOL_SLIDER()
  return native.invoke(
    Type.Int, 311, false
  )
end

-- void REQUEST_TENNIS_BANKS(Ped ped) // 0x4ADA3F19BE4A6047
function AUDIO.REQUEST_TENNIS_BANKS(ped)
  native.invoke(
    Type.Void, 312, false,
    arg(Type.Ped, ped)
  )
end

-- void UNREQUEST_TENNIS_BANKS() // 0x0150B6FF25A9E2E5
function AUDIO.UNREQUEST_TENNIS_BANKS()
  native.invoke(
    Type.Void, 313, false
  )
end

-- void SET_SKIP_MINIGUN_SPIN_UP_AUDIO(BOOL p0) // 0xBEF34B1D9624D5DD
function AUDIO.SET_SKIP_MINIGUN_SPIN_UP_AUDIO(p0)
  native.invoke(
    Type.Void, 314, false,
    arg(Type.Bool, p0)
  )
end

-- void STOP_CUTSCENE_AUDIO() // 0x806058BBDC136E06
function AUDIO.STOP_CUTSCENE_AUDIO()
  native.invoke(
    Type.Void, 315, false
  )
end

-- BOOL HAS_LOADED_MP_DATA_SET() // 0x544810ED9DB6BBE6
function AUDIO.HAS_LOADED_MP_DATA_SET()
  return native.invoke(
    Type.Bool, 316, false
  )
end

-- BOOL HAS_LOADED_SP_DATA_SET() // 0x5B50ABB1FE3746F4
function AUDIO.HAS_LOADED_SP_DATA_SET()
  return native.invoke(
    Type.Bool, 317, false
  )
end

-- int GET_VEHICLE_HORN_SOUND_INDEX(Vehicle vehicle) // 0xD53F3A29BCE2580E
function AUDIO.GET_VEHICLE_HORN_SOUND_INDEX(vehicle)
  return native.invoke(
    Type.Int, 318, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_HORN_SOUND_INDEX(Vehicle vehicle, int value) // 0x0350E7E17BA767D0
function AUDIO.SET_VEHICLE_HORN_SOUND_INDEX(vehicle, value)
  native.invoke(
    Type.Void, 319, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, value)
  )
end


BRAIN = {}

-- void ADD_SCRIPT_TO_RANDOM_PED(const char* name, Hash model, float p2, float p3) // 0x4EE5367468A65CCC
--[[
BRAIN::ADD_SCRIPT_TO_RANDOM_PED("pb_prostitute", ${s_f_y_hooker_01}, 100, 0);

- Nacorpio

-----

Hardcoded to not work in Multiplayer.
--]]
function BRAIN.ADD_SCRIPT_TO_RANDOM_PED(name, model, p2, p3)
  native.invoke(
    Type.Void, 320, false,
    arg(Type.String, name),
    arg(Type.Hash, model),
    arg(Type.Float, p2),
    arg(Type.Float, p3)
  )
end

-- void REGISTER_OBJECT_SCRIPT_BRAIN(const char* scriptName, Hash modelHash, int p2, float activationRange, int p4, int p5) // 0x0BE84C318BA6EC22
--[[
Registers a script for any object with a specific model hash.

BRAIN::REGISTER_OBJECT_SCRIPT_BRAIN("ob_telescope", ${prop_telescope_01}, 100, 4.0, -1, 9);

- Nacorpio
--]]
function BRAIN.REGISTER_OBJECT_SCRIPT_BRAIN(scriptName, modelHash, p2, activationRange, p4, p5)
  native.invoke(
    Type.Void, 321, false,
    arg(Type.String, scriptName),
    arg(Type.Hash, modelHash),
    arg(Type.Int, p2),
    arg(Type.Float, activationRange),
    arg(Type.Int, p4),
    arg(Type.Int, p5)
  )
end

-- BOOL IS_OBJECT_WITHIN_BRAIN_ACTIVATION_RANGE(Object object) // 0xCCBA154209823057
function BRAIN.IS_OBJECT_WITHIN_BRAIN_ACTIVATION_RANGE(object)
  return native.invoke(
    Type.Bool, 322, false,
    arg(Type.Object, object)
  )
end

-- void REGISTER_WORLD_POINT_SCRIPT_BRAIN(const char* scriptName, float activationRange, int p2) // 0x3CDC7136613284BD
function BRAIN.REGISTER_WORLD_POINT_SCRIPT_BRAIN(scriptName, activationRange, p2)
  native.invoke(
    Type.Void, 323, false,
    arg(Type.String, scriptName),
    arg(Type.Float, activationRange),
    arg(Type.Int, p2)
  )
end

-- BOOL IS_WORLD_POINT_WITHIN_BRAIN_ACTIVATION_RANGE() // 0xC5042CC6F5E3D450
--[[
Gets whether the world point the calling script is registered to is within desired range of the player.
--]]
function BRAIN.IS_WORLD_POINT_WITHIN_BRAIN_ACTIVATION_RANGE()
  return native.invoke(
    Type.Bool, 324, false
  )
end

-- void ENABLE_SCRIPT_BRAIN_SET(int brainSet) // 0x67AA4D73F0CFA86B
function BRAIN.ENABLE_SCRIPT_BRAIN_SET(brainSet)
  native.invoke(
    Type.Void, 325, false,
    arg(Type.Int, brainSet)
  )
end

-- void DISABLE_SCRIPT_BRAIN_SET(int brainSet) // 0x14D8518E9760F08F
function BRAIN.DISABLE_SCRIPT_BRAIN_SET(brainSet)
  native.invoke(
    Type.Void, 326, false,
    arg(Type.Int, brainSet)
  )
end

-- void REACTIVATE_ALL_WORLD_BRAINS_THAT_ARE_WAITING_TILL_OUT_OF_RANGE() // 0x0B40ED49D7D6FF84
function BRAIN.REACTIVATE_ALL_WORLD_BRAINS_THAT_ARE_WAITING_TILL_OUT_OF_RANGE()
  native.invoke(
    Type.Void, 327, false
  )
end

-- void REACTIVATE_ALL_OBJECT_BRAINS_THAT_ARE_WAITING_TILL_OUT_OF_RANGE() // 0x4D953DF78EBF8158
function BRAIN.REACTIVATE_ALL_OBJECT_BRAINS_THAT_ARE_WAITING_TILL_OUT_OF_RANGE()
  native.invoke(
    Type.Void, 328, false
  )
end

-- void REACTIVATE_NAMED_WORLD_BRAINS_WAITING_TILL_OUT_OF_RANGE(const char* scriptName) // 0x6D6840CEE8845831
--[[
Possible values:

act_cinema
am_mp_carwash_launch
am_mp_carwash_control
am_mp_property_ext
chop
fairgroundHub
launcher_BasejumpHeli
launcher_BasejumpPack
launcher_CarWash
launcher_golf
launcher_Hunting_Ambient
launcher_MrsPhilips
launcher_OffroadRacing
launcher_pilotschool
launcher_Racing
launcher_rampage
launcher_rampage
launcher_range
launcher_stunts
launcher_stunts
launcher_tennis
launcher_Tonya
launcher_Triathlon
launcher_Yoga
ob_mp_bed_low
ob_mp_bed_med
--]]
function BRAIN.REACTIVATE_NAMED_WORLD_BRAINS_WAITING_TILL_OUT_OF_RANGE(scriptName)
  native.invoke(
    Type.Void, 329, false,
    arg(Type.String, scriptName)
  )
end

-- void REACTIVATE_NAMED_OBJECT_BRAINS_WAITING_TILL_OUT_OF_RANGE(const char* scriptName) // 0x6E91B04E08773030
--[[
Looks like a cousin of above function _6D6840CEE8845831 as it was found among them. Must be similar

Here are possible values of argument - 

"ob_tv"
"launcher_Darts"
--]]
function BRAIN.REACTIVATE_NAMED_OBJECT_BRAINS_WAITING_TILL_OUT_OF_RANGE(scriptName)
  native.invoke(
    Type.Void, 330, false,
    arg(Type.String, scriptName)
  )
end


CAM = {}

-- void RENDER_SCRIPT_CAMS(BOOL render, BOOL ease, int easeTime, BOOL p3, BOOL p4, Any p5) // 0x07E5B515DB0636FC
--[[
ease - smooth transition between the camera's positions
easeTime - Time in milliseconds for the transition to happen

If you have created a script (rendering) camera, and want to go back to the 
character (gameplay) camera, call this native with render set to 0.
Setting ease to 1 will smooth the transition.
--]]
function CAM.RENDER_SCRIPT_CAMS(render, ease, easeTime, p3, p4, p5)
  native.invoke(
    Type.Void, 331, false,
    arg(Type.Bool, render),
    arg(Type.Bool, ease),
    arg(Type.Int, easeTime),
    arg(Type.Bool, p3),
    arg(Type.Bool, p4),
    arg(Type.Any, p5)
  )
end

-- void STOP_RENDERING_SCRIPT_CAMS_USING_CATCH_UP(BOOL render, float p1, int p2, Any p3) // 0xC819F3CBB62BF692
--[[
This native makes the gameplay camera zoom into first person/third person with a special effect.
--]]
function CAM.STOP_RENDERING_SCRIPT_CAMS_USING_CATCH_UP(render, p1, p2, p3)
  native.invoke(
    Type.Void, 332, false,
    arg(Type.Bool, render),
    arg(Type.Float, p1),
    arg(Type.Int, p2),
    arg(Type.Any, p3)
  )
end

-- Cam CREATE_CAM(const char* camName, BOOL p1) // 0xC3981DCE61D9E13F
--[[
"DEFAULT_SCRIPTED_CAMERA"
"DEFAULT_ANIMATED_CAMERA"
"DEFAULT_SPLINE_CAMERA"
"DEFAULT_SCRIPTED_FLY_CAMERA"
"TIMED_SPLINE_CAMERA"
--]]
function CAM.CREATE_CAM(camName, p1)
  return native.invoke(
    Type.Cam, 333, false,
    arg(Type.String, camName),
    arg(Type.Bool, p1)
  )
end

-- Cam CREATE_CAM_WITH_PARAMS(const char* camName, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float fov, BOOL p8, int p9) // 0xB51194800B257161
--[[
camName is always set to "DEFAULT_SCRIPTED_CAMERA" in Rockstar's scripts.
------------
Camera names found in the b617d scripts:
"DEFAULT_ANIMATED_CAMERA"
"DEFAULT_SCRIPTED_CAMERA"
"DEFAULT_SCRIPTED_FLY_CAMERA"
"DEFAULT_SPLINE_CAMERA"
------------
Side Note: It seems p8 is basically to represent what would be the bool p1 within CREATE_CAM native. As well as the p9 since it's always 2 in scripts seems to represent what would be the last param within SET_CAM_ROT native which normally would be 2.
--]]
function CAM.CREATE_CAM_WITH_PARAMS(camName, posX, posY, posZ, rotX, rotY, rotZ, fov, p8, p9)
  return native.invoke(
    Type.Cam, 334, false,
    arg(Type.String, camName),
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ),
    arg(Type.Float, rotX),
    arg(Type.Float, rotY),
    arg(Type.Float, rotZ),
    arg(Type.Float, fov),
    arg(Type.Bool, p8),
    arg(Type.Int, p9)
  )
end

-- Cam CREATE_CAMERA(Hash camHash, BOOL p1) // 0x5E3CF89C6BCCA67D
function CAM.CREATE_CAMERA(camHash, p1)
  return native.invoke(
    Type.Cam, 335, false,
    arg(Type.Hash, camHash),
    arg(Type.Bool, p1)
  )
end

-- Cam CREATE_CAMERA_WITH_PARAMS(Hash camHash, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float fov, BOOL p8, Any p9) // 0x6ABFA3E16460F22D
--[[
p9 uses 2 by default
--]]
function CAM.CREATE_CAMERA_WITH_PARAMS(camHash, posX, posY, posZ, rotX, rotY, rotZ, fov, p8, p9)
  return native.invoke(
    Type.Cam, 336, false,
    arg(Type.Hash, camHash),
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ),
    arg(Type.Float, rotX),
    arg(Type.Float, rotY),
    arg(Type.Float, rotZ),
    arg(Type.Float, fov),
    arg(Type.Bool, p8),
    arg(Type.Any, p9)
  )
end

-- void DESTROY_CAM(Cam cam, BOOL bScriptHostCam) // 0x865908C81A2C22E9
--[[
BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
--]]
function CAM.DESTROY_CAM(cam, bScriptHostCam)
  native.invoke(
    Type.Void, 337, false,
    arg(Type.Cam, cam),
    arg(Type.Bool, bScriptHostCam)
  )
end

-- void DESTROY_ALL_CAMS(BOOL bScriptHostCam) // 0x8E5FB15663F79120
--[[
BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
--]]
function CAM.DESTROY_ALL_CAMS(bScriptHostCam)
  native.invoke(
    Type.Void, 338, false,
    arg(Type.Bool, bScriptHostCam)
  )
end

-- BOOL DOES_CAM_EXIST(Cam cam) // 0xA7A932170592B50E
--[[
Returns whether or not the passed camera handle exists.
--]]
function CAM.DOES_CAM_EXIST(cam)
  return native.invoke(
    Type.Bool, 339, false,
    arg(Type.Cam, cam)
  )
end

-- void SET_CAM_ACTIVE(Cam cam, BOOL active) // 0x026FB97D0A425F84
--[[
Set camera as active/inactive.
--]]
function CAM.SET_CAM_ACTIVE(cam, active)
  native.invoke(
    Type.Void, 340, false,
    arg(Type.Cam, cam),
    arg(Type.Bool, active)
  )
end

-- BOOL IS_CAM_ACTIVE(Cam cam) // 0xDFB2B516207D3534
--[[
Returns whether or not the passed camera handle is active.
--]]
function CAM.IS_CAM_ACTIVE(cam)
  return native.invoke(
    Type.Bool, 341, false,
    arg(Type.Cam, cam)
  )
end

-- BOOL IS_CAM_RENDERING(Cam cam) // 0x02EC0AF5C5A49B7A
function CAM.IS_CAM_RENDERING(cam)
  return native.invoke(
    Type.Bool, 342, false,
    arg(Type.Cam, cam)
  )
end

-- Cam GET_RENDERING_CAM() // 0x5234F9F10919EABA
function CAM.GET_RENDERING_CAM()
  return native.invoke(
    Type.Cam, 343, false
  )
end

-- Vector3 GET_CAM_COORD(Cam cam) // 0xBAC038F7459AE5AE
function CAM.GET_CAM_COORD(cam)
  return native.invoke(
    Type.Vector3, 344, false,
    arg(Type.Cam, cam)
  )
end

-- Vector3 GET_CAM_ROT(Cam cam, int rotationOrder) // 0x7D304C1C955E3E12
--[[
The last parameter, as in other "ROT" methods, is usually 2.
--]]
function CAM.GET_CAM_ROT(cam, rotationOrder)
  return native.invoke(
    Type.Vector3, 345, false,
    arg(Type.Cam, cam),
    arg(Type.Int, rotationOrder)
  )
end

-- float GET_CAM_FOV(Cam cam) // 0xC3330A45CCCDB26A
function CAM.GET_CAM_FOV(cam)
  return native.invoke(
    Type.Float, 346, false,
    arg(Type.Cam, cam)
  )
end

-- float GET_CAM_NEAR_CLIP(Cam cam) // 0xC520A34DAFBF24B1
function CAM.GET_CAM_NEAR_CLIP(cam)
  return native.invoke(
    Type.Float, 347, false,
    arg(Type.Cam, cam)
  )
end

-- float GET_CAM_FAR_CLIP(Cam cam) // 0xB60A9CFEB21CA6AA
function CAM.GET_CAM_FAR_CLIP(cam)
  return native.invoke(
    Type.Float, 348, false,
    arg(Type.Cam, cam)
  )
end

-- float GET_CAM_NEAR_DOF(Cam cam) // 0xC2612D223D915A1C
function CAM.GET_CAM_NEAR_DOF(cam)
  return native.invoke(
    Type.Float, 349, false,
    arg(Type.Cam, cam)
  )
end

-- float GET_CAM_FAR_DOF(Cam cam) // 0x255F8DAFD540D397
function CAM.GET_CAM_FAR_DOF(cam)
  return native.invoke(
    Type.Float, 350, false,
    arg(Type.Cam, cam)
  )
end

-- float GET_CAM_DOF_STRENGTH(Cam cam) // 0x06D153C0B99B6128
function CAM.GET_CAM_DOF_STRENGTH(cam)
  return native.invoke(
    Type.Float, 351, false,
    arg(Type.Cam, cam)
  )
end

-- void SET_CAM_PARAMS(Cam cam, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float fieldOfView, Any p8, int p9, int p10, int p11) // 0xBFD8727AEA3CCEBA
function CAM.SET_CAM_PARAMS(cam, posX, posY, posZ, rotX, rotY, rotZ, fieldOfView, p8, p9, p10, p11)
  native.invoke(
    Type.Void, 352, false,
    arg(Type.Cam, cam),
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ),
    arg(Type.Float, rotX),
    arg(Type.Float, rotY),
    arg(Type.Float, rotZ),
    arg(Type.Float, fieldOfView),
    arg(Type.Any, p8),
    arg(Type.Int, p9),
    arg(Type.Int, p10),
    arg(Type.Int, p11)
  )
end

-- void SET_CAM_COORD(Cam cam, float posX, float posY, float posZ) // 0x4D41783FB745E42E
--[[
Sets the position of the cam.
--]]
function CAM.SET_CAM_COORD(cam, posX, posY, posZ)
  native.invoke(
    Type.Void, 353, false,
    arg(Type.Cam, cam),
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ)
  )
end

-- void SET_CAM_ROT(Cam cam, float rotX, float rotY, float rotZ, int rotationOrder) // 0x85973643155D0B07
--[[
Sets the rotation of the cam.
Last parameter unknown.

Last parameter seems to always be set to 2.
--]]
function CAM.SET_CAM_ROT(cam, rotX, rotY, rotZ, rotationOrder)
  native.invoke(
    Type.Void, 354, false,
    arg(Type.Cam, cam),
    arg(Type.Float, rotX),
    arg(Type.Float, rotY),
    arg(Type.Float, rotZ),
    arg(Type.Int, rotationOrder)
  )
end

-- void SET_CAM_FOV(Cam cam, float fieldOfView) // 0xB13C14F66A00D047
--[[
Sets the field of view of the cam.
---------------------------------------------
Min: 1.0f
Max: 130.0f
--]]
function CAM.SET_CAM_FOV(cam, fieldOfView)
  native.invoke(
    Type.Void, 355, false,
    arg(Type.Cam, cam),
    arg(Type.Float, fieldOfView)
  )
end

-- void SET_CAM_NEAR_CLIP(Cam cam, float nearClip) // 0xC7848EFCCC545182
function CAM.SET_CAM_NEAR_CLIP(cam, nearClip)
  native.invoke(
    Type.Void, 356, false,
    arg(Type.Cam, cam),
    arg(Type.Float, nearClip)
  )
end

-- void SET_CAM_FAR_CLIP(Cam cam, float farClip) // 0xAE306F2A904BF86E
function CAM.SET_CAM_FAR_CLIP(cam, farClip)
  native.invoke(
    Type.Void, 357, false,
    arg(Type.Cam, cam),
    arg(Type.Float, farClip)
  )
end

-- void FORCE_CAM_FAR_CLIP(Cam cam, float p1) // 0xAABD62873FFB1A33
function CAM.FORCE_CAM_FAR_CLIP(cam, p1)
  native.invoke(
    Type.Void, 358, false,
    arg(Type.Cam, cam),
    arg(Type.Float, p1)
  )
end

-- void SET_CAM_MOTION_BLUR_STRENGTH(Cam cam, float strength) // 0x6F0F77FBA9A8F2E6
function CAM.SET_CAM_MOTION_BLUR_STRENGTH(cam, strength)
  native.invoke(
    Type.Void, 359, false,
    arg(Type.Cam, cam),
    arg(Type.Float, strength)
  )
end

-- void SET_CAM_NEAR_DOF(Cam cam, float nearDOF) // 0x3FA4BF0A7AB7DE2C
function CAM.SET_CAM_NEAR_DOF(cam, nearDOF)
  native.invoke(
    Type.Void, 360, false,
    arg(Type.Cam, cam),
    arg(Type.Float, nearDOF)
  )
end

-- void SET_CAM_FAR_DOF(Cam cam, float farDOF) // 0xEDD91296CD01AEE0
function CAM.SET_CAM_FAR_DOF(cam, farDOF)
  native.invoke(
    Type.Void, 361, false,
    arg(Type.Cam, cam),
    arg(Type.Float, farDOF)
  )
end

-- void SET_CAM_DOF_STRENGTH(Cam cam, float dofStrength) // 0x5EE29B4D7D5DF897
function CAM.SET_CAM_DOF_STRENGTH(cam, dofStrength)
  native.invoke(
    Type.Void, 362, false,
    arg(Type.Cam, cam),
    arg(Type.Float, dofStrength)
  )
end

-- void SET_CAM_DOF_PLANES(Cam cam, float p1, float p2, float p3, float p4) // 0x3CF48F6F96E749DC
function CAM.SET_CAM_DOF_PLANES(cam, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 363, false,
    arg(Type.Cam, cam),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4)
  )
end

-- void SET_CAM_USE_SHALLOW_DOF_MODE(Cam cam, BOOL toggle) // 0x16A96863A17552BB
function CAM.SET_CAM_USE_SHALLOW_DOF_MODE(cam, toggle)
  native.invoke(
    Type.Void, 364, false,
    arg(Type.Cam, cam),
    arg(Type.Bool, toggle)
  )
end

-- void SET_USE_HI_DOF() // 0xA13B0222F3D94A94
function CAM.SET_USE_HI_DOF()
  native.invoke(
    Type.Void, 365, false
  )
end

-- void SET_USE_HI_DOF_ON_SYNCED_SCENE_THIS_UPDATE() // 0x731A880555DA3647
--[[
Only used in R* Script fm_mission_controller_2020
--]]
function CAM.SET_USE_HI_DOF_ON_SYNCED_SCENE_THIS_UPDATE()
  native.invoke(
    Type.Void, 366, false
  )
end

-- void SET_CAM_DOF_OVERRIDDEN_FOCUS_DISTANCE(Cam camera, float p1) // 0xF55E4046F6F831DC
function CAM.SET_CAM_DOF_OVERRIDDEN_FOCUS_DISTANCE(camera, p1)
  native.invoke(
    Type.Void, 367, false,
    arg(Type.Cam, camera),
    arg(Type.Float, p1)
  )
end

-- void SET_CAM_DOF_OVERRIDDEN_FOCUS_DISTANCE_BLEND_LEVEL(Any p0, float p1) // 0xE111A7C0D200CBC5
function CAM.SET_CAM_DOF_OVERRIDDEN_FOCUS_DISTANCE_BLEND_LEVEL(p0, p1)
  native.invoke(
    Type.Void, 368, false,
    arg(Type.Any, p0),
    arg(Type.Float, p1)
  )
end

-- void SET_CAM_DOF_FNUMBER_OF_LENS(Cam camera, float p1) // 0x7DD234D6F3914C5B
--[[
This native has its name defined inside its codE

--]]
function CAM.SET_CAM_DOF_FNUMBER_OF_LENS(camera, p1)
  native.invoke(
    Type.Void, 369, false,
    arg(Type.Cam, camera),
    arg(Type.Float, p1)
  )
end

-- void SET_CAM_DOF_FOCAL_LENGTH_MULTIPLIER(Cam camera, float multiplier) // 0x47B595D60664CFFA
--[[
Native name labeled within its code
--]]
function CAM.SET_CAM_DOF_FOCAL_LENGTH_MULTIPLIER(camera, multiplier)
  native.invoke(
    Type.Void, 370, false,
    arg(Type.Cam, camera),
    arg(Type.Float, multiplier)
  )
end

-- void SET_CAM_DOF_FOCUS_DISTANCE_BIAS(Cam camera, float p1) // 0xC669EEA5D031B7DE
--[[
This native has a name defined inside its code
--]]
function CAM.SET_CAM_DOF_FOCUS_DISTANCE_BIAS(camera, p1)
  native.invoke(
    Type.Void, 371, false,
    arg(Type.Cam, camera),
    arg(Type.Float, p1)
  )
end

-- void SET_CAM_DOF_MAX_NEAR_IN_FOCUS_DISTANCE(Cam camera, float p1) // 0xC3654A441402562D
--[[
This native has a name defined inside its code
--]]
function CAM.SET_CAM_DOF_MAX_NEAR_IN_FOCUS_DISTANCE(camera, p1)
  native.invoke(
    Type.Void, 372, false,
    arg(Type.Cam, camera),
    arg(Type.Float, p1)
  )
end

-- void SET_CAM_DOF_MAX_NEAR_IN_FOCUS_DISTANCE_BLEND_LEVEL(Cam camera, float p1) // 0x2C654B4943BDDF7C
--[[
This native has a name defined inside its code
--]]
function CAM.SET_CAM_DOF_MAX_NEAR_IN_FOCUS_DISTANCE_BLEND_LEVEL(camera, p1)
  native.invoke(
    Type.Void, 373, false,
    arg(Type.Cam, camera),
    arg(Type.Float, p1)
  )
end

-- void SET_CAM_DOF_SHOULD_KEEP_LOOK_AT_TARGET_IN_FOCUS(Cam camera, BOOL state) // 0x7CF3AF51DCFE4108
--[[
This native has a name defined inside its code
--]]
function CAM.SET_CAM_DOF_SHOULD_KEEP_LOOK_AT_TARGET_IN_FOCUS(camera, state)
  native.invoke(
    Type.Void, 374, false,
    arg(Type.Cam, camera),
    arg(Type.Bool, state)
  )
end

-- void ATTACH_CAM_TO_ENTITY(Cam cam, Entity entity, float xOffset, float yOffset, float zOffset, BOOL isRelative) // 0xFEDB7D269E8C60E3
--[[
Last param determines if its relative to the Entity
--]]
function CAM.ATTACH_CAM_TO_ENTITY(cam, entity, xOffset, yOffset, zOffset, isRelative)
  native.invoke(
    Type.Void, 375, false,
    arg(Type.Cam, cam),
    arg(Type.Entity, entity),
    arg(Type.Float, xOffset),
    arg(Type.Float, yOffset),
    arg(Type.Float, zOffset),
    arg(Type.Bool, isRelative)
  )
end

-- void ATTACH_CAM_TO_PED_BONE(Cam cam, Ped ped, int boneIndex, float x, float y, float z, BOOL heading) // 0x61A3DBA14AB7F411
function CAM.ATTACH_CAM_TO_PED_BONE(cam, ped, boneIndex, x, y, z, heading)
  native.invoke(
    Type.Void, 376, false,
    arg(Type.Cam, cam),
    arg(Type.Ped, ped),
    arg(Type.Int, boneIndex),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Bool, heading)
  )
end

-- void HARD_ATTACH_CAM_TO_PED_BONE(Cam cam, Ped ped, int boneIndex, float p3, float p4, float p5, float p6, float p7, float p8, BOOL p9) // 0x149916F50C34A40D
function CAM.HARD_ATTACH_CAM_TO_PED_BONE(cam, ped, boneIndex, p3, p4, p5, p6, p7, p8, p9)
  native.invoke(
    Type.Void, 377, false,
    arg(Type.Cam, cam),
    arg(Type.Ped, ped),
    arg(Type.Int, boneIndex),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Float, p6),
    arg(Type.Float, p7),
    arg(Type.Float, p8),
    arg(Type.Bool, p9)
  )
end

-- void HARD_ATTACH_CAM_TO_ENTITY(Cam cam, Entity entity, float xRot, float yRot, float zRot, float xOffset, float yOffset, float zOffset, BOOL isRelative) // 0x202A5ED9CE01D6E7
--[[
Example from am_mp_drone script: 

CAM::HARD_ATTACH_CAM_TO_ENTITY(Local_190.f_169, NETWORK::NET_TO_OBJ(Local_190.f_159), 0f, 0f, 180f, Var0, 1);
--]]
function CAM.HARD_ATTACH_CAM_TO_ENTITY(cam, entity, xRot, yRot, zRot, xOffset, yOffset, zOffset, isRelative)
  native.invoke(
    Type.Void, 378, false,
    arg(Type.Cam, cam),
    arg(Type.Entity, entity),
    arg(Type.Float, xRot),
    arg(Type.Float, yRot),
    arg(Type.Float, zRot),
    arg(Type.Float, xOffset),
    arg(Type.Float, yOffset),
    arg(Type.Float, zOffset),
    arg(Type.Bool, isRelative)
  )
end

-- void ATTACH_CAM_TO_VEHICLE_BONE(Cam cam, Vehicle vehicle, int boneIndex, BOOL relativeRotation, float rotX, float rotY, float rotZ, float offsetX, float offsetY, float offsetZ, BOOL fixedDirection) // 0x8DB3F12A02CAEF72
--[[
This native works with vehicles only. Bone indexes are usually given by this native GET_ENTITY_BONE_INDEX_BY_NAME.
--]]
function CAM.ATTACH_CAM_TO_VEHICLE_BONE(cam, vehicle, boneIndex, relativeRotation, rotX, rotY, rotZ, offsetX, offsetY, offsetZ, fixedDirection)
  native.invoke(
    Type.Void, 379, false,
    arg(Type.Cam, cam),
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, boneIndex),
    arg(Type.Bool, relativeRotation),
    arg(Type.Float, rotX),
    arg(Type.Float, rotY),
    arg(Type.Float, rotZ),
    arg(Type.Float, offsetX),
    arg(Type.Float, offsetY),
    arg(Type.Float, offsetZ),
    arg(Type.Bool, fixedDirection)
  )
end

-- void DETACH_CAM(Cam cam) // 0xA2FABBE87F4BAD82
function CAM.DETACH_CAM(cam)
  native.invoke(
    Type.Void, 380, false,
    arg(Type.Cam, cam)
  )
end

-- void SET_CAM_INHERIT_ROLL_VEHICLE(Cam cam, BOOL p1) // 0x45F1DE9C34B93AE6
--[[
The native seems to only be called once.

The native is used as so,
CAM::SET_CAM_INHERIT_ROLL_VEHICLE(l_544, getElem(2, &l_525, 4));
In the exile1 script.
--]]
function CAM.SET_CAM_INHERIT_ROLL_VEHICLE(cam, p1)
  native.invoke(
    Type.Void, 381, false,
    arg(Type.Cam, cam),
    arg(Type.Bool, p1)
  )
end

-- void POINT_CAM_AT_COORD(Cam cam, float x, float y, float z) // 0xF75497BB865F0803
function CAM.POINT_CAM_AT_COORD(cam, x, y, z)
  native.invoke(
    Type.Void, 382, false,
    arg(Type.Cam, cam),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void POINT_CAM_AT_ENTITY(Cam cam, Entity entity, float p2, float p3, float p4, BOOL p5) // 0x5640BFF86B16E8DC
--[[
p5 always seems to be 1 i.e TRUE
--]]
function CAM.POINT_CAM_AT_ENTITY(cam, entity, p2, p3, p4, p5)
  native.invoke(
    Type.Void, 383, false,
    arg(Type.Cam, cam),
    arg(Type.Entity, entity),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Bool, p5)
  )
end

-- void POINT_CAM_AT_PED_BONE(Cam cam, Ped ped, int boneIndex, float x, float y, float z, BOOL p6) // 0x68B2B5F33BA63C41
--[[
Parameters p0-p5 seems correct. The bool p6 is unknown, but through every X360 script it's always 1. Please correct p0-p5 if any prove to be wrong. 
--]]
function CAM.POINT_CAM_AT_PED_BONE(cam, ped, boneIndex, x, y, z, p6)
  native.invoke(
    Type.Void, 384, false,
    arg(Type.Cam, cam),
    arg(Type.Ped, ped),
    arg(Type.Int, boneIndex),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Bool, p6)
  )
end

-- void STOP_CAM_POINTING(Cam cam) // 0xF33AB75780BA57DE
function CAM.STOP_CAM_POINTING(cam)
  native.invoke(
    Type.Void, 385, false,
    arg(Type.Cam, cam)
  )
end

-- void SET_CAM_AFFECTS_AIMING(Cam cam, BOOL toggle) // 0x8C1DC7770C51DC8D
--[[
Allows you to aim and shoot at the direction the camera is facing.
--]]
function CAM.SET_CAM_AFFECTS_AIMING(cam, toggle)
  native.invoke(
    Type.Void, 386, false,
    arg(Type.Cam, cam),
    arg(Type.Bool, toggle)
  )
end

-- void SET_CAM_CONTROLS_MINI_MAP_HEADING(Cam cam, BOOL toggle) // 0x661B5C8654ADD825
--[[
Rotates the radar to match the camera's Z rotation
--]]
function CAM.SET_CAM_CONTROLS_MINI_MAP_HEADING(cam, toggle)
  native.invoke(
    Type.Void, 387, false,
    arg(Type.Cam, cam),
    arg(Type.Bool, toggle)
  )
end

-- void SET_CAM_IS_INSIDE_VEHICLE(Cam cam, BOOL toggle) // 0xA2767257A320FC82
--[[
When set to true shadows appear more smooth but less detailed.
Set to false by default.
--]]
function CAM.SET_CAM_IS_INSIDE_VEHICLE(cam, toggle)
  native.invoke(
    Type.Void, 388, false,
    arg(Type.Cam, cam),
    arg(Type.Bool, toggle)
  )
end

-- void ALLOW_MOTION_BLUR_DECAY(Any p0, BOOL p1) // 0x271017B9BA825366
function CAM.ALLOW_MOTION_BLUR_DECAY(p0, p1)
  native.invoke(
    Type.Void, 389, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1)
  )
end

-- void SET_CAM_DEBUG_NAME(Cam camera, const char* name) // 0x1B93E0107865DD40
--[[
NOTE: Debugging functions are not present in the retail version of the game.
--]]
function CAM.SET_CAM_DEBUG_NAME(camera, name)
  native.invoke(
    Type.Void, 390, false,
    arg(Type.Cam, camera),
    arg(Type.String, name)
  )
end

-- Cam GET_DEBUG_CAM() // 0x77C3CEC46BE286F6
function CAM.GET_DEBUG_CAM()
  return native.invoke(
    Type.Cam, 391, false
  )
end

-- void ADD_CAM_SPLINE_NODE(Cam camera, float x, float y, float z, float xRot, float yRot, float zRot, int length, int smoothingStyle, int rotationOrder) // 0x8609C75EC438FB3B
--[[
I filled p1-p6 (the floats) as they are as other natives with 6 floats in a row are similar and I see no other method. So if a test from anyone proves them wrong please correct.

p7 (length) determines the length of the spline, affects camera path and duration of transition between previous node and this one

p8 big values ~100 will slow down the camera movement before reaching this node

p9 != 0 seems to override the rotation/pitch (bool?)
--]]
function CAM.ADD_CAM_SPLINE_NODE(camera, x, y, z, xRot, yRot, zRot, length, smoothingStyle, rotationOrder)
  native.invoke(
    Type.Void, 392, false,
    arg(Type.Cam, camera),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, xRot),
    arg(Type.Float, yRot),
    arg(Type.Float, zRot),
    arg(Type.Int, length),
    arg(Type.Int, smoothingStyle),
    arg(Type.Int, rotationOrder)
  )
end

-- void ADD_CAM_SPLINE_NODE_USING_CAMERA_FRAME(Cam cam, Cam cam2, int length, int p3) // 0x0A9F2A468B328E74
--[[
p0 is the spline camera to which the node is being added.
p1 is the camera used to create the node.
p3 is always 3 in scripts. It might be smoothing style or rotation order.
--]]
function CAM.ADD_CAM_SPLINE_NODE_USING_CAMERA_FRAME(cam, cam2, length, p3)
  native.invoke(
    Type.Void, 393, false,
    arg(Type.Cam, cam),
    arg(Type.Cam, cam2),
    arg(Type.Int, length),
    arg(Type.Int, p3)
  )
end

-- void ADD_CAM_SPLINE_NODE_USING_CAMERA(Cam cam, Cam cam2, int length, int p3) // 0x0FB82563989CF4FB
--[[
p0 is the spline camera to which the node is being added.
p1 is the camera used to create the node.
p3 is always 3 in scripts. It might be smoothing style or rotation order.
--]]
function CAM.ADD_CAM_SPLINE_NODE_USING_CAMERA(cam, cam2, length, p3)
  native.invoke(
    Type.Void, 394, false,
    arg(Type.Cam, cam),
    arg(Type.Cam, cam2),
    arg(Type.Int, length),
    arg(Type.Int, p3)
  )
end

-- void ADD_CAM_SPLINE_NODE_USING_GAMEPLAY_FRAME(Cam cam, int length, int p2) // 0x609278246A29CA34
--[[
p2 is always 2 in scripts. It might be smoothing style or rotation order.
--]]
function CAM.ADD_CAM_SPLINE_NODE_USING_GAMEPLAY_FRAME(cam, length, p2)
  native.invoke(
    Type.Void, 395, false,
    arg(Type.Cam, cam),
    arg(Type.Int, length),
    arg(Type.Int, p2)
  )
end

-- void SET_CAM_SPLINE_PHASE(Cam cam, float p1) // 0x242B5874F0A4E052
function CAM.SET_CAM_SPLINE_PHASE(cam, p1)
  native.invoke(
    Type.Void, 396, false,
    arg(Type.Cam, cam),
    arg(Type.Float, p1)
  )
end

-- float GET_CAM_SPLINE_PHASE(Cam cam) // 0xB5349E36C546509A
--[[
Can use this with SET_CAM_SPLINE_PHASE to set the float it this native returns.

(returns 1.0f when no nodes has been added, reached end of non existing spline)
--]]
function CAM.GET_CAM_SPLINE_PHASE(cam)
  return native.invoke(
    Type.Float, 397, false,
    arg(Type.Cam, cam)
  )
end

-- float GET_CAM_SPLINE_NODE_PHASE(Cam cam) // 0xD9D0E694C8282C96
--[[
I'm pretty sure the parameter is the camera as usual, but I am not certain so I'm going to leave it as is.
--]]
function CAM.GET_CAM_SPLINE_NODE_PHASE(cam)
  return native.invoke(
    Type.Float, 398, false,
    arg(Type.Cam, cam)
  )
end

-- void SET_CAM_SPLINE_DURATION(Cam cam, int timeDuration) // 0x1381539FEE034CDA
--[[
I named p1 as timeDuration as it is obvious. I'm assuming tho it is ran in ms(Milliseconds) as usual.
--]]
function CAM.SET_CAM_SPLINE_DURATION(cam, timeDuration)
  native.invoke(
    Type.Void, 399, false,
    arg(Type.Cam, cam),
    arg(Type.Int, timeDuration)
  )
end

-- void SET_CAM_SPLINE_SMOOTHING_STYLE(Cam cam, int smoothingStyle) // 0xD1B0F412F109EA5D
function CAM.SET_CAM_SPLINE_SMOOTHING_STYLE(cam, smoothingStyle)
  native.invoke(
    Type.Void, 400, false,
    arg(Type.Cam, cam),
    arg(Type.Int, smoothingStyle)
  )
end

-- int GET_CAM_SPLINE_NODE_INDEX(Cam cam) // 0xB22B17DF858716A6
function CAM.GET_CAM_SPLINE_NODE_INDEX(cam)
  return native.invoke(
    Type.Int, 401, false,
    arg(Type.Cam, cam)
  )
end

-- void SET_CAM_SPLINE_NODE_EASE(Cam cam, int easingFunction, int p2, float p3) // 0x83B8201ED82A9A2D
function CAM.SET_CAM_SPLINE_NODE_EASE(cam, easingFunction, p2, p3)
  native.invoke(
    Type.Void, 402, false,
    arg(Type.Cam, cam),
    arg(Type.Int, easingFunction),
    arg(Type.Int, p2),
    arg(Type.Float, p3)
  )
end

-- void SET_CAM_SPLINE_NODE_VELOCITY_SCALE(Cam cam, int p1, float scale) // 0xA6385DEB180F319F
function CAM.SET_CAM_SPLINE_NODE_VELOCITY_SCALE(cam, p1, scale)
  native.invoke(
    Type.Void, 403, false,
    arg(Type.Cam, cam),
    arg(Type.Int, p1),
    arg(Type.Float, scale)
  )
end

-- void OVERRIDE_CAM_SPLINE_VELOCITY(Cam cam, int p1, float p2, float p3) // 0x40B62FA033EB0346
function CAM.OVERRIDE_CAM_SPLINE_VELOCITY(cam, p1, p2, p3)
  native.invoke(
    Type.Void, 404, false,
    arg(Type.Cam, cam),
    arg(Type.Int, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3)
  )
end

-- void OVERRIDE_CAM_SPLINE_MOTION_BLUR(Cam cam, int p1, float p2, float p3) // 0x7DCF7C708D292D55
--[[
Max value for p1 is 15.
--]]
function CAM.OVERRIDE_CAM_SPLINE_MOTION_BLUR(cam, p1, p2, p3)
  native.invoke(
    Type.Void, 405, false,
    arg(Type.Cam, cam),
    arg(Type.Int, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3)
  )
end

-- void SET_CAM_SPLINE_NODE_EXTRA_FLAGS(Cam cam, int p1, int flags) // 0x7BF1A54AE67AC070
function CAM.SET_CAM_SPLINE_NODE_EXTRA_FLAGS(cam, p1, flags)
  native.invoke(
    Type.Void, 406, false,
    arg(Type.Cam, cam),
    arg(Type.Int, p1),
    arg(Type.Int, flags)
  )
end

-- BOOL IS_CAM_SPLINE_PAUSED(Cam cam) // 0x0290F35C0AD97864
function CAM.IS_CAM_SPLINE_PAUSED(cam)
  return native.invoke(
    Type.Bool, 407, false,
    arg(Type.Cam, cam)
  )
end

-- void SET_CAM_ACTIVE_WITH_INTERP(Cam camTo, Cam camFrom, int duration, int easeLocation, int easeRotation) // 0x9FBDA379383A52A4
--[[
Previous declaration void SET_CAM_ACTIVE_WITH_INTERP(Cam camTo, Cam camFrom, int duration, BOOL easeLocation, BOOL easeRotation) is completely wrong. The last two params are integers not BOOLs...

--]]
function CAM.SET_CAM_ACTIVE_WITH_INTERP(camTo, camFrom, duration, easeLocation, easeRotation)
  native.invoke(
    Type.Void, 408, false,
    arg(Type.Cam, camTo),
    arg(Type.Cam, camFrom),
    arg(Type.Int, duration),
    arg(Type.Int, easeLocation),
    arg(Type.Int, easeRotation)
  )
end

-- BOOL IS_CAM_INTERPOLATING(Cam cam) // 0x036F97C908C2B52C
function CAM.IS_CAM_INTERPOLATING(cam)
  return native.invoke(
    Type.Bool, 409, false,
    arg(Type.Cam, cam)
  )
end

-- void SHAKE_CAM(Cam cam, const char* type, float amplitude) // 0x6A25241C340D3822
--[[
Possible shake types (updated b617d):

DEATH_FAIL_IN_EFFECT_SHAKE
DRUNK_SHAKE
FAMILY5_DRUG_TRIP_SHAKE
HAND_SHAKE
JOLT_SHAKE
LARGE_EXPLOSION_SHAKE
MEDIUM_EXPLOSION_SHAKE
SMALL_EXPLOSION_SHAKE
ROAD_VIBRATION_SHAKE
SKY_DIVING_SHAKE
VIBRATE_SHAKE

Full list of cam shake types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/camShakeTypesCompact.json
--]]
function CAM.SHAKE_CAM(cam, type, amplitude)
  native.invoke(
    Type.Void, 410, false,
    arg(Type.Cam, cam),
    arg(Type.String, type),
    arg(Type.Float, amplitude)
  )
end

-- void ANIMATED_SHAKE_CAM(Cam cam, const char* p1, const char* p2, const char* p3, float amplitude) // 0xA2746EEAE3E577CD
--[[
Example from michael2 script.

CAM::ANIMATED_SHAKE_CAM(l_5069, "shake_cam_all@", "light", "", 1f);
--]]
function CAM.ANIMATED_SHAKE_CAM(cam, p1, p2, p3, amplitude)
  native.invoke(
    Type.Void, 411, false,
    arg(Type.Cam, cam),
    arg(Type.String, p1),
    arg(Type.String, p2),
    arg(Type.String, p3),
    arg(Type.Float, amplitude)
  )
end

-- BOOL IS_CAM_SHAKING(Cam cam) // 0x6B24BFE83A2BE47B
function CAM.IS_CAM_SHAKING(cam)
  return native.invoke(
    Type.Bool, 412, false,
    arg(Type.Cam, cam)
  )
end

-- void SET_CAM_SHAKE_AMPLITUDE(Cam cam, float amplitude) // 0xD93DB43B82BC0D00
function CAM.SET_CAM_SHAKE_AMPLITUDE(cam, amplitude)
  native.invoke(
    Type.Void, 413, false,
    arg(Type.Cam, cam),
    arg(Type.Float, amplitude)
  )
end

-- void STOP_CAM_SHAKING(Cam cam, BOOL p1) // 0xBDECF64367884AC3
function CAM.STOP_CAM_SHAKING(cam, p1)
  native.invoke(
    Type.Void, 414, false,
    arg(Type.Cam, cam),
    arg(Type.Bool, p1)
  )
end

-- void SHAKE_SCRIPT_GLOBAL(const char* p0, float p1) // 0xF4C8CF9E353AFECA
--[[
CAM::SHAKE_SCRIPT_GLOBAL("HAND_SHAKE", 0.2);

Full list of cam shake types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/camShakeTypesCompact.json
--]]
function CAM.SHAKE_SCRIPT_GLOBAL(p0, p1)
  native.invoke(
    Type.Void, 415, false,
    arg(Type.String, p0),
    arg(Type.Float, p1)
  )
end

-- void ANIMATED_SHAKE_SCRIPT_GLOBAL(const char* p0, const char* p1, const char* p2, float p3) // 0xC2EAE3FB8CDBED31
--[[
CAM::ANIMATED_SHAKE_SCRIPT_GLOBAL("SHAKE_CAM_medium", "medium", "", 0.5f);

Full list of cam shake types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/camShakeTypesCompact.json
--]]
function CAM.ANIMATED_SHAKE_SCRIPT_GLOBAL(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 416, false,
    arg(Type.String, p0),
    arg(Type.String, p1),
    arg(Type.String, p2),
    arg(Type.Float, p3)
  )
end

-- BOOL IS_SCRIPT_GLOBAL_SHAKING() // 0xC912AF078AF19212
--[[
In drunk_controller.c4, sub_309
if (CAM::IS_SCRIPT_GLOBAL_SHAKING()) {
    CAM::STOP_SCRIPT_GLOBAL_SHAKING(0);
}
--]]
function CAM.IS_SCRIPT_GLOBAL_SHAKING()
  return native.invoke(
    Type.Bool, 417, false
  )
end

-- void STOP_SCRIPT_GLOBAL_SHAKING(BOOL p0) // 0x1C9D7949FA533490
--[[
In drunk_controller.c4, sub_309
if (CAM::IS_SCRIPT_GLOBAL_SHAKING()) {
    CAM::STOP_SCRIPT_GLOBAL_SHAKING(0);
}
--]]
function CAM.STOP_SCRIPT_GLOBAL_SHAKING(p0)
  native.invoke(
    Type.Void, 418, false,
    arg(Type.Bool, p0)
  )
end

-- void TRIGGER_VEHICLE_PART_BROKEN_CAMERA_SHAKE(Vehicle vehicle, int p1, float p2) // 0x5D96CFB59DA076A0
--[[
p1: 0..16
--]]
function CAM.TRIGGER_VEHICLE_PART_BROKEN_CAMERA_SHAKE(vehicle, p1, p2)
  native.invoke(
    Type.Void, 419, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, p1),
    arg(Type.Float, p2)
  )
end

-- BOOL PLAY_CAM_ANIM(Cam cam, const char* animName, const char* animDictionary, float x, float y, float z, float xRot, float yRot, float zRot, BOOL p9, int p10) // 0x9A2D0FB2E7852392
--[[
Atleast one time in a script for the zRot Rockstar uses GET_ENTITY_HEADING to help fill the parameter.

p9 is unknown at this time.
p10 throughout all the X360 Scripts is always 2.

Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
--]]
function CAM.PLAY_CAM_ANIM(cam, animName, animDictionary, x, y, z, xRot, yRot, zRot, p9, p10)
  return native.invoke(
    Type.Bool, 420, false,
    arg(Type.Cam, cam),
    arg(Type.String, animName),
    arg(Type.String, animDictionary),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, xRot),
    arg(Type.Float, yRot),
    arg(Type.Float, zRot),
    arg(Type.Bool, p9),
    arg(Type.Int, p10)
  )
end

-- BOOL IS_CAM_PLAYING_ANIM(Cam cam, const char* animName, const char* animDictionary) // 0xC90621D8A0CEECF2
function CAM.IS_CAM_PLAYING_ANIM(cam, animName, animDictionary)
  return native.invoke(
    Type.Bool, 421, false,
    arg(Type.Cam, cam),
    arg(Type.String, animName),
    arg(Type.String, animDictionary)
  )
end

-- void SET_CAM_ANIM_CURRENT_PHASE(Cam cam, float phase) // 0x4145A4C44FF3B5A6
function CAM.SET_CAM_ANIM_CURRENT_PHASE(cam, phase)
  native.invoke(
    Type.Void, 422, false,
    arg(Type.Cam, cam),
    arg(Type.Float, phase)
  )
end

-- float GET_CAM_ANIM_CURRENT_PHASE(Cam cam) // 0xA10B2DB49E92A6B0
function CAM.GET_CAM_ANIM_CURRENT_PHASE(cam)
  return native.invoke(
    Type.Float, 423, false,
    arg(Type.Cam, cam)
  )
end

-- BOOL PLAY_SYNCHRONIZED_CAM_ANIM(Any p0, Any p1, const char* animName, const char* animDictionary) // 0xE32EFE9AB4A9AA0C
--[[
Examples:

CAM::PLAY_SYNCHRONIZED_CAM_ANIM(l_2734, NETWORK::NETWORK_GET_LOCAL_SCENE_FROM_NETWORK_ID(l_2739), "PLAYER_EXIT_L_CAM", "mp_doorbell");

CAM::PLAY_SYNCHRONIZED_CAM_ANIM(l_F0D[7/*1*/], l_F4D[15/*1*/], "ah3b_attackheli_cam2", "missheistfbi3b_helicrash");
--]]
function CAM.PLAY_SYNCHRONIZED_CAM_ANIM(p0, p1, animName, animDictionary)
  return native.invoke(
    Type.Bool, 424, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.String, animName),
    arg(Type.String, animDictionary)
  )
end

-- void SET_FLY_CAM_HORIZONTAL_RESPONSE(Cam cam, float p1, float p2, float p3) // 0x503F5920162365B2
function CAM.SET_FLY_CAM_HORIZONTAL_RESPONSE(cam, p1, p2, p3)
  native.invoke(
    Type.Void, 425, false,
    arg(Type.Cam, cam),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3)
  )
end

-- void SET_FLY_CAM_VERTICAL_RESPONSE(Cam cam, float p1, float p2, float p3) // 0xE827B9382CFB41BA
function CAM.SET_FLY_CAM_VERTICAL_RESPONSE(cam, p1, p2, p3)
  native.invoke(
    Type.Void, 426, false,
    arg(Type.Cam, cam),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3)
  )
end

-- void SET_FLY_CAM_MAX_HEIGHT(Cam cam, float height) // 0xF9D02130ECDD1D77
function CAM.SET_FLY_CAM_MAX_HEIGHT(cam, height)
  native.invoke(
    Type.Void, 427, false,
    arg(Type.Cam, cam),
    arg(Type.Float, height)
  )
end

-- void SET_FLY_CAM_COORD_AND_CONSTRAIN(Cam cam, float x, float y, float z) // 0xC91C6C55199308CA
function CAM.SET_FLY_CAM_COORD_AND_CONSTRAIN(cam, x, y, z)
  native.invoke(
    Type.Void, 428, false,
    arg(Type.Cam, cam),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void SET_FLY_CAM_VERTICAL_CONTROLS_THIS_UPDATE(Cam cam) // 0xC8B5C4A79CC18B94
function CAM.SET_FLY_CAM_VERTICAL_CONTROLS_THIS_UPDATE(cam)
  native.invoke(
    Type.Void, 429, false,
    arg(Type.Cam, cam)
  )
end

-- BOOL WAS_FLY_CAM_CONSTRAINED_ON_PREVIOUS_UDPATE(Cam cam) // 0x5C48A1D6E3B33179
function CAM.WAS_FLY_CAM_CONSTRAINED_ON_PREVIOUS_UDPATE(cam)
  return native.invoke(
    Type.Bool, 430, false,
    arg(Type.Cam, cam)
  )
end

-- BOOL IS_SCREEN_FADED_OUT() // 0xB16FCE9DDC7BA182
function CAM.IS_SCREEN_FADED_OUT()
  return native.invoke(
    Type.Bool, 431, false
  )
end

-- BOOL IS_SCREEN_FADED_IN() // 0x5A859503B0C08678
function CAM.IS_SCREEN_FADED_IN()
  return native.invoke(
    Type.Bool, 432, false
  )
end

-- BOOL IS_SCREEN_FADING_OUT() // 0x797AC7CB535BA28F
function CAM.IS_SCREEN_FADING_OUT()
  return native.invoke(
    Type.Bool, 433, false
  )
end

-- BOOL IS_SCREEN_FADING_IN() // 0x5C544BC6C57AC575
function CAM.IS_SCREEN_FADING_IN()
  return native.invoke(
    Type.Bool, 434, false
  )
end

-- void DO_SCREEN_FADE_IN(int duration) // 0xD4E8E24955024033
--[[
Fades the screen in.

duration: The time the fade should take, in milliseconds.
--]]
function CAM.DO_SCREEN_FADE_IN(duration)
  native.invoke(
    Type.Void, 435, false,
    arg(Type.Int, duration)
  )
end

-- void DO_SCREEN_FADE_OUT(int duration) // 0x891B5B39AC6302AF
--[[
Fades the screen out.

duration: The time the fade should take, in milliseconds.
--]]
function CAM.DO_SCREEN_FADE_OUT(duration)
  native.invoke(
    Type.Void, 436, false,
    arg(Type.Int, duration)
  )
end

-- void SET_WIDESCREEN_BORDERS(BOOL p0, int p1) // 0xDCD4EA924F42D01A
function CAM.SET_WIDESCREEN_BORDERS(p0, p1)
  native.invoke(
    Type.Void, 437, false,
    arg(Type.Bool, p0),
    arg(Type.Int, p1)
  )
end

-- BOOL ARE_WIDESCREEN_BORDERS_ACTIVE() // 0x4879E4FE39074CDF
function CAM.ARE_WIDESCREEN_BORDERS_ACTIVE()
  return native.invoke(
    Type.Bool, 438, false
  )
end

-- Vector3 GET_GAMEPLAY_CAM_COORD() // 0x14D6F5678D8F1B37
function CAM.GET_GAMEPLAY_CAM_COORD()
  return native.invoke(
    Type.Vector3, 439, false
  )
end

-- Vector3 GET_GAMEPLAY_CAM_ROT(int rotationOrder) // 0x837765A25378F0BB
--[[
p0 dosen't seem to change much, I tried it with 0, 1, 2:
0-Pitch(X): -70.000092
0-Roll(Y): -0.000001
0-Yaw(Z): -43.886459
1-Pitch(X): -70.000092
1-Roll(Y): -0.000001
1-Yaw(Z): -43.886463
2-Pitch(X): -70.000092
2-Roll(Y): -0.000002
2-Yaw(Z): -43.886467
--]]
function CAM.GET_GAMEPLAY_CAM_ROT(rotationOrder)
  return native.invoke(
    Type.Vector3, 440, false,
    arg(Type.Int, rotationOrder)
  )
end

-- float GET_GAMEPLAY_CAM_FOV() // 0x65019750A0324133
function CAM.GET_GAMEPLAY_CAM_FOV()
  return native.invoke(
    Type.Float, 441, false
  )
end

-- void SET_GAMEPLAY_CAM_MOTION_BLUR_SCALING_THIS_UPDATE(float p0) // 0x487A82C650EB7799
--[[
some camera effect that is used in the drunk-cheat, and turned off (by setting it to 0.0) along with the shaking effects once the drunk cheat is disabled.
--]]
function CAM.SET_GAMEPLAY_CAM_MOTION_BLUR_SCALING_THIS_UPDATE(p0)
  native.invoke(
    Type.Void, 442, false,
    arg(Type.Float, p0)
  )
end

-- void SET_GAMEPLAY_CAM_MAX_MOTION_BLUR_STRENGTH_THIS_UPDATE(float p0) // 0x0225778816FDC28C
--[[
some camera effect that is (also) used in the drunk-cheat, and turned off (by setting it to 0.0) along with the shaking effects once the drunk cheat is disabled.
--]]
function CAM.SET_GAMEPLAY_CAM_MAX_MOTION_BLUR_STRENGTH_THIS_UPDATE(p0)
  native.invoke(
    Type.Void, 443, false,
    arg(Type.Float, p0)
  )
end

-- float GET_GAMEPLAY_CAM_RELATIVE_HEADING() // 0x743607648ADD4587
function CAM.GET_GAMEPLAY_CAM_RELATIVE_HEADING()
  return native.invoke(
    Type.Float, 444, false
  )
end

-- void SET_GAMEPLAY_CAM_RELATIVE_HEADING(float heading) // 0xB4EC2312F4E5B1F1
--[[
Sets the camera position relative to heading in float from -360 to +360.

Heading is alwyas 0 in aiming camera.
--]]
function CAM.SET_GAMEPLAY_CAM_RELATIVE_HEADING(heading)
  native.invoke(
    Type.Void, 445, false,
    arg(Type.Float, heading)
  )
end

-- float GET_GAMEPLAY_CAM_RELATIVE_PITCH() // 0x3A6867B4845BEDA2
function CAM.GET_GAMEPLAY_CAM_RELATIVE_PITCH()
  return native.invoke(
    Type.Float, 446, false
  )
end

-- void SET_GAMEPLAY_CAM_RELATIVE_PITCH(float angle, float scalingFactor) // 0x6D0858B8EDFD2B7D
--[[
This native sets the camera's pitch (rotation on the x-axis).
--]]
function CAM.SET_GAMEPLAY_CAM_RELATIVE_PITCH(angle, scalingFactor)
  native.invoke(
    Type.Void, 447, false,
    arg(Type.Float, angle),
    arg(Type.Float, scalingFactor)
  )
end

-- void RESET_GAMEPLAY_CAM_FULL_ATTACH_PARENT_TRANSFORM_TIMER() // 0x7295C203DD659DFE
function CAM.RESET_GAMEPLAY_CAM_FULL_ATTACH_PARENT_TRANSFORM_TIMER()
  native.invoke(
    Type.Void, 448, false
  )
end

-- void FORCE_CAMERA_RELATIVE_HEADING_AND_PITCH(float roll, float pitch, float yaw) // 0x48608C3464F58AB4
function CAM.FORCE_CAMERA_RELATIVE_HEADING_AND_PITCH(roll, pitch, yaw)
  native.invoke(
    Type.Void, 449, false,
    arg(Type.Float, roll),
    arg(Type.Float, pitch),
    arg(Type.Float, yaw)
  )
end

-- void FORCE_BONNET_CAMERA_RELATIVE_HEADING_AND_PITCH(float p0, float p1) // 0x28B022A17B068A3A
function CAM.FORCE_BONNET_CAMERA_RELATIVE_HEADING_AND_PITCH(p0, p1)
  native.invoke(
    Type.Void, 450, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1)
  )
end

-- void SET_FIRST_PERSON_SHOOTER_CAMERA_HEADING(float yaw) // 0x103991D4A307D472
--[[
Does nothing
--]]
function CAM.SET_FIRST_PERSON_SHOOTER_CAMERA_HEADING(yaw)
  native.invoke(
    Type.Void, 451, false,
    arg(Type.Float, yaw)
  )
end

-- void SET_FIRST_PERSON_SHOOTER_CAMERA_PITCH(float pitch) // 0x759E13EBC1C15C5A
function CAM.SET_FIRST_PERSON_SHOOTER_CAMERA_PITCH(pitch)
  native.invoke(
    Type.Void, 452, false,
    arg(Type.Float, pitch)
  )
end

-- void SET_SCRIPTED_CAMERA_IS_FIRST_PERSON_THIS_FRAME(BOOL p0) // 0x469F2ECDEC046337
function CAM.SET_SCRIPTED_CAMERA_IS_FIRST_PERSON_THIS_FRAME(p0)
  native.invoke(
    Type.Void, 453, false,
    arg(Type.Bool, p0)
  )
end

-- void SHAKE_GAMEPLAY_CAM(const char* shakeName, float intensity) // 0xFD55E49555E017CF
--[[
Possible shake types (updated b617d):

DEATH_FAIL_IN_EFFECT_SHAKE
DRUNK_SHAKE
FAMILY5_DRUG_TRIP_SHAKE
HAND_SHAKE
JOLT_SHAKE
LARGE_EXPLOSION_SHAKE
MEDIUM_EXPLOSION_SHAKE
SMALL_EXPLOSION_SHAKE
ROAD_VIBRATION_SHAKE
SKY_DIVING_SHAKE
VIBRATE_SHAKE

Full list of cam shake types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/camShakeTypesCompact.json
--]]
function CAM.SHAKE_GAMEPLAY_CAM(shakeName, intensity)
  native.invoke(
    Type.Void, 454, false,
    arg(Type.String, shakeName),
    arg(Type.Float, intensity)
  )
end

-- BOOL IS_GAMEPLAY_CAM_SHAKING() // 0x016C090630DF1F89
function CAM.IS_GAMEPLAY_CAM_SHAKING()
  return native.invoke(
    Type.Bool, 455, false
  )
end

-- void SET_GAMEPLAY_CAM_SHAKE_AMPLITUDE(float amplitude) // 0xA87E00932DB4D85D
--[[
Sets the amplitude for the gameplay (i.e. 3rd or 1st) camera to shake. Used in script "drunk_controller.ysc.c4" to simulate making the player drunk.
--]]
function CAM.SET_GAMEPLAY_CAM_SHAKE_AMPLITUDE(amplitude)
  native.invoke(
    Type.Void, 456, false,
    arg(Type.Float, amplitude)
  )
end

-- void STOP_GAMEPLAY_CAM_SHAKING(BOOL p0) // 0x0EF93E9F3D08C178
function CAM.STOP_GAMEPLAY_CAM_SHAKING(p0)
  native.invoke(
    Type.Void, 457, false,
    arg(Type.Bool, p0)
  )
end

-- void SET_GAMEPLAY_CAM_FOLLOW_PED_THIS_UPDATE(Ped ped) // 0x8BBACBF51DA047A8
--[[
Forces gameplay cam to specified ped as if you were the ped or spectating it
--]]
function CAM.SET_GAMEPLAY_CAM_FOLLOW_PED_THIS_UPDATE(ped)
  native.invoke(
    Type.Void, 458, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_GAMEPLAY_CAM_RENDERING() // 0x39B5D1B10383F0C8
--[[
Examples when this function will return 0 are:
- During busted screen.
- When player is coming out from a hospital.
- When player is coming out from a police station.
- When player is buying gun from AmmuNation.
--]]
function CAM.IS_GAMEPLAY_CAM_RENDERING()
  return native.invoke(
    Type.Bool, 459, false
  )
end

-- BOOL IS_INTERPOLATING_FROM_SCRIPT_CAMS() // 0x3044240D2E0FA842
function CAM.IS_INTERPOLATING_FROM_SCRIPT_CAMS()
  return native.invoke(
    Type.Bool, 460, false
  )
end

-- BOOL IS_INTERPOLATING_TO_SCRIPT_CAMS() // 0x705A276EBFF3133D
function CAM.IS_INTERPOLATING_TO_SCRIPT_CAMS()
  return native.invoke(
    Type.Bool, 461, false
  )
end

-- void SET_GAMEPLAY_CAM_ALTITUDE_FOV_SCALING_STATE(BOOL p0) // 0xDB90C6CCA48940F1
function CAM.SET_GAMEPLAY_CAM_ALTITUDE_FOV_SCALING_STATE(p0)
  native.invoke(
    Type.Void, 462, false,
    arg(Type.Bool, p0)
  )
end

-- void DISABLE_GAMEPLAY_CAM_ALTITUDE_FOV_SCALING_THIS_UPDATE() // 0xEA7F0AD7E9BA676F
--[[
Shows the crosshair even if it wouldn't show normally. Only works for one frame, so make sure to call it repeatedly.
--]]
function CAM.DISABLE_GAMEPLAY_CAM_ALTITUDE_FOV_SCALING_THIS_UPDATE()
  native.invoke(
    Type.Void, 463, false
  )
end

-- BOOL IS_GAMEPLAY_CAM_LOOKING_BEHIND() // 0x70FDA869F3317EA9
function CAM.IS_GAMEPLAY_CAM_LOOKING_BEHIND()
  return native.invoke(
    Type.Bool, 464, false
  )
end

-- void SET_GAMEPLAY_CAM_IGNORE_ENTITY_COLLISION_THIS_UPDATE(Entity entity) // 0x2AED6301F67007D5
function CAM.SET_GAMEPLAY_CAM_IGNORE_ENTITY_COLLISION_THIS_UPDATE(entity)
  native.invoke(
    Type.Void, 465, false,
    arg(Type.Entity, entity)
  )
end

-- void DISABLE_CAM_COLLISION_FOR_OBJECT(Entity entity) // 0x49482F9FCD825AAA
function CAM.DISABLE_CAM_COLLISION_FOR_OBJECT(entity)
  native.invoke(
    Type.Void, 466, false,
    arg(Type.Entity, entity)
  )
end

-- void BYPASS_CAMERA_COLLISION_BUOYANCY_TEST_THIS_UPDATE() // 0xA7092AFE81944852
function CAM.BYPASS_CAMERA_COLLISION_BUOYANCY_TEST_THIS_UPDATE()
  native.invoke(
    Type.Void, 467, false
  )
end

-- void SET_GAMEPLAY_CAM_ENTITY_TO_LIMIT_FOCUS_OVER_BOUNDING_SPHERE_THIS_UPDATE(Entity entity) // 0xFD3151CD37EA2245
function CAM.SET_GAMEPLAY_CAM_ENTITY_TO_LIMIT_FOCUS_OVER_BOUNDING_SPHERE_THIS_UPDATE(entity)
  native.invoke(
    Type.Void, 468, false,
    arg(Type.Entity, entity)
  )
end

-- void DISABLE_FIRST_PERSON_CAMERA_WATER_CLIPPING_TEST_THIS_UPDATE() // 0xB1381B97F70C7B30
--[[
Sets some flag on cinematic camera
--]]
function CAM.DISABLE_FIRST_PERSON_CAMERA_WATER_CLIPPING_TEST_THIS_UPDATE()
  native.invoke(
    Type.Void, 469, false
  )
end

-- void SET_FOLLOW_CAM_IGNORE_ATTACH_PARENT_MOVEMENT_THIS_UPDATE() // 0xDD79DF9F4D26E1C9
function CAM.SET_FOLLOW_CAM_IGNORE_ATTACH_PARENT_MOVEMENT_THIS_UPDATE()
  native.invoke(
    Type.Void, 470, false
  )
end

-- BOOL IS_SPHERE_VISIBLE(float x, float y, float z, float radius) // 0xE33D59DA70B58FDF
function CAM.IS_SPHERE_VISIBLE(x, y, z, radius)
  return native.invoke(
    Type.Bool, 471, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius)
  )
end

-- BOOL IS_FOLLOW_PED_CAM_ACTIVE() // 0xC6D3D26810C8E0F9
function CAM.IS_FOLLOW_PED_CAM_ACTIVE()
  return native.invoke(
    Type.Bool, 472, false
  )
end

-- BOOL SET_FOLLOW_PED_CAM_THIS_UPDATE(const char* camName, int p1) // 0x44A113DD6FFC48D1
--[[
From the scripts:

CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_ATTACHED_TO_ROPE_CAMERA", 0);
CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_ON_EXILE1_LADDER_CAMERA", 1500);
CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_SKY_DIVING_CAMERA", 0);
CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_SKY_DIVING_CAMERA", 3000);
CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_SKY_DIVING_FAMILY5_CAMERA", 0);
CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_SKY_DIVING_CAMERA", 0);
--]]
function CAM.SET_FOLLOW_PED_CAM_THIS_UPDATE(camName, p1)
  return native.invoke(
    Type.Bool, 473, false,
    arg(Type.String, camName),
    arg(Type.Int, p1)
  )
end

-- void USE_SCRIPT_CAM_FOR_AMBIENT_POPULATION_ORIGIN_THIS_FRAME(BOOL p0, BOOL p1) // 0x271401846BD26E92
function CAM.USE_SCRIPT_CAM_FOR_AMBIENT_POPULATION_ORIGIN_THIS_FRAME(p0, p1)
  native.invoke(
    Type.Void, 474, false,
    arg(Type.Bool, p0),
    arg(Type.Bool, p1)
  )
end

-- void SET_FOLLOW_PED_CAM_LADDER_ALIGN_THIS_UPDATE() // 0xC8391C309684595A
function CAM.SET_FOLLOW_PED_CAM_LADDER_ALIGN_THIS_UPDATE()
  native.invoke(
    Type.Void, 475, false
  )
end

-- void SET_THIRD_PERSON_CAM_RELATIVE_HEADING_LIMITS_THIS_UPDATE(float minimum, float maximum) // 0x8F993D26E0CA5E8E
--[[
minimum: Degrees between -180f and 180f.
maximum: Degrees between -180f and 180f.

Clamps the gameplay camera's current yaw.

Eg. SET_THIRD_PERSON_CAM_RELATIVE_HEADING_LIMITS_THIS_UPDATE(0.0f, 0.0f) will set the horizontal angle directly behind the player.
--]]
function CAM.SET_THIRD_PERSON_CAM_RELATIVE_HEADING_LIMITS_THIS_UPDATE(minimum, maximum)
  native.invoke(
    Type.Void, 476, false,
    arg(Type.Float, minimum),
    arg(Type.Float, maximum)
  )
end

-- void SET_THIRD_PERSON_CAM_RELATIVE_PITCH_LIMITS_THIS_UPDATE(float minimum, float maximum) // 0xA516C198B7DCA1E1
--[[
minimum: Degrees between -90f and 90f.
maximum: Degrees between -90f and 90f.

Clamps the gameplay camera's current pitch.

Eg. SET_THIRD_PERSON_CAM_RELATIVE_PITCH_LIMITS_THIS_UPDATE(0.0f, 0.0f) will set the vertical angle directly behind the player.
--]]
function CAM.SET_THIRD_PERSON_CAM_RELATIVE_PITCH_LIMITS_THIS_UPDATE(minimum, maximum)
  native.invoke(
    Type.Void, 477, false,
    arg(Type.Float, minimum),
    arg(Type.Float, maximum)
  )
end

-- void SET_THIRD_PERSON_CAM_ORBIT_DISTANCE_LIMITS_THIS_UPDATE(float p0, float distance) // 0xDF2E1F7742402E81
--[[
Seems to animate the gameplay camera zoom.

Eg. SET_THIRD_PERSON_CAM_ORBIT_DISTANCE_LIMITS_THIS_UPDATE(1f, 1000f);
will animate the camera zooming in from 1000 meters away.

Game scripts use it like this:

// Setting this to 1 prevents V key from changing zoom
PLAYER::SET_PLAYER_FORCED_ZOOM(PLAYER::PLAYER_ID(), 1);

// These restrict how far you can move cam up/down left/right
CAM::SET_THIRD_PERSON_CAM_RELATIVE_HEADING_LIMITS_THIS_UPDATE(-20f, 50f);
CAM::SET_THIRD_PERSON_CAM_RELATIVE_PITCH_LIMITS_THIS_UPDATE(-60f, 0f);

CAM::SET_THIRD_PERSON_CAM_ORBIT_DISTANCE_LIMITS_THIS_UPDATE(1f, 1f);
--]]
function CAM.SET_THIRD_PERSON_CAM_ORBIT_DISTANCE_LIMITS_THIS_UPDATE(p0, distance)
  native.invoke(
    Type.Void, 478, false,
    arg(Type.Float, p0),
    arg(Type.Float, distance)
  )
end

-- float _GET_THIRD_PERSON_CAM_MIN_ORBIT_DISTANCE_SPRING() // 0xBC456FB703431785
function CAM._GET_THIRD_PERSON_CAM_MIN_ORBIT_DISTANCE_SPRING()
  return native.invoke(
    Type.Float, 479, false
  )
end

-- float _GET_THIRD_PERSON_CAM_MAX_ORBIT_DISTANCE_SPRING() // 0xD4592A16D36673ED
function CAM._GET_THIRD_PERSON_CAM_MAX_ORBIT_DISTANCE_SPRING()
  return native.invoke(
    Type.Float, 480, false
  )
end

-- void SET_IN_VEHICLE_CAM_STATE_THIS_UPDATE(Vehicle p0, int p1) // 0xE9EA16D6E54CDCA4
--[[
Forces gameplay cam to specified vehicle as if you were in it
--]]
function CAM.SET_IN_VEHICLE_CAM_STATE_THIS_UPDATE(p0, p1)
  native.invoke(
    Type.Void, 481, false,
    arg(Type.Vehicle, p0),
    arg(Type.Int, p1)
  )
end

-- void DISABLE_ON_FOOT_FIRST_PERSON_VIEW_THIS_UPDATE() // 0xDE2EF5DA284CC8DF
--[[
Disables first person camera for the current frame.

Found in decompiled scripts:
GRAPHICS::DRAW_DEBUG_TEXT_2D("Disabling First Person Cam", 0.5, 0.8, 0.0, 0, 0, 255, 255);
CAM::DISABLE_ON_FOOT_FIRST_PERSON_VIEW_THIS_UPDATE();
--]]
function CAM.DISABLE_ON_FOOT_FIRST_PERSON_VIEW_THIS_UPDATE()
  native.invoke(
    Type.Void, 482, false
  )
end

-- void DISABLE_FIRST_PERSON_FLASH_EFFECT_THIS_UPDATE() // 0x59424BD75174C9B1
function CAM.DISABLE_FIRST_PERSON_FLASH_EFFECT_THIS_UPDATE()
  native.invoke(
    Type.Void, 483, false
  )
end

-- void BLOCK_FIRST_PERSON_ORIENTATION_RESET_THIS_UPDATE() // 0x9F97DA93681F87EA
function CAM.BLOCK_FIRST_PERSON_ORIENTATION_RESET_THIS_UPDATE()
  native.invoke(
    Type.Void, 484, false
  )
end

-- int GET_FOLLOW_PED_CAM_ZOOM_LEVEL() // 0x33E6C8EFD0CD93E9
function CAM.GET_FOLLOW_PED_CAM_ZOOM_LEVEL()
  return native.invoke(
    Type.Int, 485, false
  )
end

-- int GET_FOLLOW_PED_CAM_VIEW_MODE() // 0x8D4D46230B2C353A
--[[
See viewmode enum in CAM.GET_FOLLOW_VEHICLE_CAM_VIEW_MODE for return value
--]]
function CAM.GET_FOLLOW_PED_CAM_VIEW_MODE()
  return native.invoke(
    Type.Int, 486, false
  )
end

-- void SET_FOLLOW_PED_CAM_VIEW_MODE(int viewMode) // 0x5A4F9EDF1673F704
--[[
Sets the type of Player camera:

0 - Third Person Close
1 - Third Person Mid
2 - Third Person Far
4 - First Person
--]]
function CAM.SET_FOLLOW_PED_CAM_VIEW_MODE(viewMode)
  native.invoke(
    Type.Void, 487, false,
    arg(Type.Int, viewMode)
  )
end

-- BOOL IS_FOLLOW_VEHICLE_CAM_ACTIVE() // 0xCBBDE6D335D6D496
function CAM.IS_FOLLOW_VEHICLE_CAM_ACTIVE()
  return native.invoke(
    Type.Bool, 488, false
  )
end

-- void SET_FOLLOW_VEHICLE_CAM_HIGH_ANGLE_MODE_THIS_UPDATE(BOOL p0) // 0x91EF6EE6419E5B97
function CAM.SET_FOLLOW_VEHICLE_CAM_HIGH_ANGLE_MODE_THIS_UPDATE(p0)
  native.invoke(
    Type.Void, 489, false,
    arg(Type.Bool, p0)
  )
end

-- void SET_FOLLOW_VEHICLE_CAM_HIGH_ANGLE_MODE_EVERY_UPDATE(BOOL p0, BOOL p1) // 0x9DFE13ECDC1EC196
function CAM.SET_FOLLOW_VEHICLE_CAM_HIGH_ANGLE_MODE_EVERY_UPDATE(p0, p1)
  native.invoke(
    Type.Void, 490, false,
    arg(Type.Bool, p0),
    arg(Type.Bool, p1)
  )
end

-- BOOL SET_TABLE_GAMES_CAMERA_THIS_UPDATE(Hash hash) // 0x79C0E43EB9B944E2
function CAM.SET_TABLE_GAMES_CAMERA_THIS_UPDATE(hash)
  return native.invoke(
    Type.Bool, 491, false,
    arg(Type.Hash, hash)
  )
end

-- int GET_FOLLOW_VEHICLE_CAM_ZOOM_LEVEL() // 0xEE82280AB767B690
function CAM.GET_FOLLOW_VEHICLE_CAM_ZOOM_LEVEL()
  return native.invoke(
    Type.Int, 492, false
  )
end

-- void SET_FOLLOW_VEHICLE_CAM_ZOOM_LEVEL(int zoomLevel) // 0x19464CB6E4078C8A
function CAM.SET_FOLLOW_VEHICLE_CAM_ZOOM_LEVEL(zoomLevel)
  native.invoke(
    Type.Void, 493, false,
    arg(Type.Int, zoomLevel)
  )
end

-- int GET_FOLLOW_VEHICLE_CAM_VIEW_MODE() // 0xA4FF579AC0E3AAAE
--[[
Returns the type of camera:

enum _viewmode //0xA11D7CA8
{
	THIRD_PERSON_NEAR = 0,
	THIRD_PERSON_MEDIUM = 1,
	THIRD_PERSON_FAR = 2,
	CINEMATIC = 3,
	FIRST_PERSON = 4
};
--]]
function CAM.GET_FOLLOW_VEHICLE_CAM_VIEW_MODE()
  return native.invoke(
    Type.Int, 494, false
  )
end

-- void SET_FOLLOW_VEHICLE_CAM_VIEW_MODE(int viewMode) // 0xAC253D7842768F48
--[[
Sets the type of Player camera in vehicles:
viewmode: see CAM.GET_FOLLOW_VEHICLE_CAM_VIEW_MODE
--]]
function CAM.SET_FOLLOW_VEHICLE_CAM_VIEW_MODE(viewMode)
  native.invoke(
    Type.Void, 495, false,
    arg(Type.Int, viewMode)
  )
end

-- int GET_CAM_VIEW_MODE_FOR_CONTEXT(int context) // 0xEE778F8C7E1142E2
--[[
context: see _GET_CAM_ACTIVE_VIEW_MODE_CONTEXT
--]]
function CAM.GET_CAM_VIEW_MODE_FOR_CONTEXT(context)
  return native.invoke(
    Type.Int, 496, false,
    arg(Type.Int, context)
  )
end

-- void SET_CAM_VIEW_MODE_FOR_CONTEXT(int context, int viewMode) // 0x2A2173E46DAECD12
--[[
context: see _GET_CAM_ACTIVE_VIEW_MODE_CONTEXT, viewmode: see CAM.GET_FOLLOW_VEHICLE_CAM_VIEW_MODE
--]]
function CAM.SET_CAM_VIEW_MODE_FOR_CONTEXT(context, viewMode)
  native.invoke(
    Type.Void, 497, false,
    arg(Type.Int, context),
    arg(Type.Int, viewMode)
  )
end

-- int GET_CAM_ACTIVE_VIEW_MODE_CONTEXT() // 0x19CAFA3C87F7C2FF
--[[
enum Context
{
	ON_FOOT,
	IN_VEHICLE,
	ON_BIKE,
	IN_BOAT,
	IN_AIRCRAFT,
	IN_SUBMARINE,
	IN_HELI,
	IN_TURRET
};
--]]
function CAM.GET_CAM_ACTIVE_VIEW_MODE_CONTEXT()
  return native.invoke(
    Type.Int, 498, false
  )
end

-- void USE_VEHICLE_CAM_STUNT_SETTINGS_THIS_UPDATE() // 0x6493CF69859B116A
function CAM.USE_VEHICLE_CAM_STUNT_SETTINGS_THIS_UPDATE()
  native.invoke(
    Type.Void, 499, false
  )
end

-- void USE_DEDICATED_STUNT_CAMERA_THIS_UPDATE(const char* camName) // 0x425A920FDB9A0DDA
--[[
Sets gameplay camera to hash
--]]
function CAM.USE_DEDICATED_STUNT_CAMERA_THIS_UPDATE(camName)
  native.invoke(
    Type.Void, 500, false,
    arg(Type.String, camName)
  )
end

-- void FORCE_VEHICLE_CAM_STUNT_SETTINGS_THIS_UPDATE() // 0x0AA27680A0BD43FA
function CAM.FORCE_VEHICLE_CAM_STUNT_SETTINGS_THIS_UPDATE()
  native.invoke(
    Type.Void, 501, false
  )
end

-- void SET_FOLLOW_VEHICLE_CAM_SEAT_THIS_UPDATE(int seatIndex) // 0x5C90CAB09951A12F
function CAM.SET_FOLLOW_VEHICLE_CAM_SEAT_THIS_UPDATE(seatIndex)
  native.invoke(
    Type.Void, 502, false,
    arg(Type.Int, seatIndex)
  )
end

-- BOOL IS_AIM_CAM_ACTIVE() // 0x68EDDA28A5976D07
function CAM.IS_AIM_CAM_ACTIVE()
  return native.invoke(
    Type.Bool, 503, false
  )
end

-- BOOL IS_AIM_CAM_ACTIVE_IN_ACCURATE_MODE() // 0x74BD83EA840F6BC9
function CAM.IS_AIM_CAM_ACTIVE_IN_ACCURATE_MODE()
  return native.invoke(
    Type.Bool, 504, false
  )
end

-- BOOL IS_FIRST_PERSON_AIM_CAM_ACTIVE() // 0x5E346D934122613F
function CAM.IS_FIRST_PERSON_AIM_CAM_ACTIVE()
  return native.invoke(
    Type.Bool, 505, false
  )
end

-- void DISABLE_AIM_CAM_THIS_UPDATE() // 0x1A31FE0049E542F6
function CAM.DISABLE_AIM_CAM_THIS_UPDATE()
  native.invoke(
    Type.Void, 506, false
  )
end

-- float GET_FIRST_PERSON_AIM_CAM_ZOOM_FACTOR() // 0x7EC52CC40597D170
function CAM.GET_FIRST_PERSON_AIM_CAM_ZOOM_FACTOR()
  return native.invoke(
    Type.Float, 507, false
  )
end

-- void SET_FIRST_PERSON_AIM_CAM_ZOOM_FACTOR(float zoomFactor) // 0x70894BD0915C5BCA
function CAM.SET_FIRST_PERSON_AIM_CAM_ZOOM_FACTOR(zoomFactor)
  native.invoke(
    Type.Void, 508, false,
    arg(Type.Float, zoomFactor)
  )
end

-- void SET_FIRST_PERSON_AIM_CAM_ZOOM_FACTOR_LIMITS_THIS_UPDATE(float p0, float p1) // 0xCED08CBE8EBB97C7
function CAM.SET_FIRST_PERSON_AIM_CAM_ZOOM_FACTOR_LIMITS_THIS_UPDATE(p0, p1)
  native.invoke(
    Type.Void, 509, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1)
  )
end

-- void SET_FIRST_PERSON_AIM_CAM_RELATIVE_HEADING_LIMITS_THIS_UPDATE(float p0, float p1) // 0x2F7F2B26DD3F18EE
function CAM.SET_FIRST_PERSON_AIM_CAM_RELATIVE_HEADING_LIMITS_THIS_UPDATE(p0, p1)
  native.invoke(
    Type.Void, 510, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1)
  )
end

-- void SET_FIRST_PERSON_AIM_CAM_RELATIVE_PITCH_LIMITS_THIS_UPDATE(float p0, float p1) // 0xBCFC632DB7673BF0
function CAM.SET_FIRST_PERSON_AIM_CAM_RELATIVE_PITCH_LIMITS_THIS_UPDATE(p0, p1)
  native.invoke(
    Type.Void, 511, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1)
  )
end

-- void SET_FIRST_PERSON_AIM_CAM_NEAR_CLIP_THIS_UPDATE(float p0) // 0x0AF7B437918103B3
function CAM.SET_FIRST_PERSON_AIM_CAM_NEAR_CLIP_THIS_UPDATE(p0)
  native.invoke(
    Type.Void, 512, false,
    arg(Type.Float, p0)
  )
end

-- void SET_THIRD_PERSON_AIM_CAM_NEAR_CLIP_THIS_UPDATE(float p0) // 0x42156508606DE65E
function CAM.SET_THIRD_PERSON_AIM_CAM_NEAR_CLIP_THIS_UPDATE(p0)
  native.invoke(
    Type.Void, 513, false,
    arg(Type.Float, p0)
  )
end

-- void SET_ALLOW_CUSTOM_VEHICLE_DRIVE_BY_CAM_THIS_UPDATE(BOOL p0) // 0x4008EDF7D6E48175
function CAM.SET_ALLOW_CUSTOM_VEHICLE_DRIVE_BY_CAM_THIS_UPDATE(p0)
  native.invoke(
    Type.Void, 514, false,
    arg(Type.Bool, p0)
  )
end

-- void FORCE_TIGHTSPACE_CUSTOM_FRAMING_THIS_UPDATE() // 0x380B4968D1E09E55
function CAM.FORCE_TIGHTSPACE_CUSTOM_FRAMING_THIS_UPDATE()
  native.invoke(
    Type.Void, 515, false
  )
end

-- Vector3 GET_FINAL_RENDERED_CAM_COORD() // 0xA200EB1EE790F448
function CAM.GET_FINAL_RENDERED_CAM_COORD()
  return native.invoke(
    Type.Vector3, 516, false
  )
end

-- Vector3 GET_FINAL_RENDERED_CAM_ROT(int rotationOrder) // 0x5B4E4C817FCC2DFB
--[[
p0 seems to consistently be 2 across scripts

Function is called faily often by CAM::CREATE_CAM_WITH_PARAMS
--]]
function CAM.GET_FINAL_RENDERED_CAM_ROT(rotationOrder)
  return native.invoke(
    Type.Vector3, 517, false,
    arg(Type.Int, rotationOrder)
  )
end

-- Vector3 GET_FINAL_RENDERED_REMOTE_PLAYER_CAM_ROT(Player player, int rotationOrder) // 0x26903D9CD1175F2C
function CAM.GET_FINAL_RENDERED_REMOTE_PLAYER_CAM_ROT(player, rotationOrder)
  return native.invoke(
    Type.Vector3, 518, false,
    arg(Type.Player, player),
    arg(Type.Int, rotationOrder)
  )
end

-- float GET_FINAL_RENDERED_CAM_FOV() // 0x80EC114669DAEFF4
--[[
Gets some camera fov
--]]
function CAM.GET_FINAL_RENDERED_CAM_FOV()
  return native.invoke(
    Type.Float, 519, false
  )
end

-- float GET_FINAL_RENDERED_REMOTE_PLAYER_CAM_FOV(Player player) // 0x5F35F6732C3FBBA0
function CAM.GET_FINAL_RENDERED_REMOTE_PLAYER_CAM_FOV(player)
  return native.invoke(
    Type.Float, 520, false,
    arg(Type.Player, player)
  )
end

-- float GET_FINAL_RENDERED_CAM_NEAR_CLIP() // 0xD0082607100D7193
function CAM.GET_FINAL_RENDERED_CAM_NEAR_CLIP()
  return native.invoke(
    Type.Float, 521, false
  )
end

-- float GET_FINAL_RENDERED_CAM_FAR_CLIP() // 0xDFC8CBC606FDB0FC
function CAM.GET_FINAL_RENDERED_CAM_FAR_CLIP()
  return native.invoke(
    Type.Float, 522, false
  )
end

-- float GET_FINAL_RENDERED_CAM_NEAR_DOF() // 0xA03502FC581F7D9B
function CAM.GET_FINAL_RENDERED_CAM_NEAR_DOF()
  return native.invoke(
    Type.Float, 523, false
  )
end

-- float GET_FINAL_RENDERED_CAM_FAR_DOF() // 0x9780F32BCAF72431
function CAM.GET_FINAL_RENDERED_CAM_FAR_DOF()
  return native.invoke(
    Type.Float, 524, false
  )
end

-- float GET_FINAL_RENDERED_CAM_MOTION_BLUR_STRENGTH() // 0x162F9D995753DC19
function CAM.GET_FINAL_RENDERED_CAM_MOTION_BLUR_STRENGTH()
  return native.invoke(
    Type.Float, 525, false
  )
end

-- void SET_GAMEPLAY_COORD_HINT(float x, float y, float z, int duration, int blendOutDuration, int blendInDuration, int p6) // 0xD51ADCD2D8BC0FB3
function CAM.SET_GAMEPLAY_COORD_HINT(x, y, z, duration, blendOutDuration, blendInDuration, p6)
  native.invoke(
    Type.Void, 526, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, duration),
    arg(Type.Int, blendOutDuration),
    arg(Type.Int, blendInDuration),
    arg(Type.Int, p6)
  )
end

-- void SET_GAMEPLAY_PED_HINT(Ped ped, float x1, float y1, float z1, BOOL p4, int duration, int blendOutDuration, int blendInDuration) // 0x2B486269ACD548D3
function CAM.SET_GAMEPLAY_PED_HINT(ped, x1, y1, z1, p4, duration, blendOutDuration, blendInDuration)
  native.invoke(
    Type.Void, 527, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Bool, p4),
    arg(Type.Int, duration),
    arg(Type.Int, blendOutDuration),
    arg(Type.Int, blendInDuration)
  )
end

-- void SET_GAMEPLAY_VEHICLE_HINT(Vehicle vehicle, float offsetX, float offsetY, float offsetZ, BOOL p4, int time, int easeInTime, int easeOutTime) // 0xA2297E18F3E71C2E
--[[
Focuses the camera on the specified vehicle.
--]]
function CAM.SET_GAMEPLAY_VEHICLE_HINT(vehicle, offsetX, offsetY, offsetZ, p4, time, easeInTime, easeOutTime)
  native.invoke(
    Type.Void, 528, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, offsetX),
    arg(Type.Float, offsetY),
    arg(Type.Float, offsetZ),
    arg(Type.Bool, p4),
    arg(Type.Int, time),
    arg(Type.Int, easeInTime),
    arg(Type.Int, easeOutTime)
  )
end

-- void SET_GAMEPLAY_OBJECT_HINT(Object object, float xOffset, float yOffset, float zOffset, BOOL p4, int time, int easeInTime, int easeOutTime) // 0x83E87508A2CA2AC6
function CAM.SET_GAMEPLAY_OBJECT_HINT(object, xOffset, yOffset, zOffset, p4, time, easeInTime, easeOutTime)
  native.invoke(
    Type.Void, 529, false,
    arg(Type.Object, object),
    arg(Type.Float, xOffset),
    arg(Type.Float, yOffset),
    arg(Type.Float, zOffset),
    arg(Type.Bool, p4),
    arg(Type.Int, time),
    arg(Type.Int, easeInTime),
    arg(Type.Int, easeOutTime)
  )
end

-- void SET_GAMEPLAY_ENTITY_HINT(Entity entity, float xOffset, float yOffset, float zOffset, BOOL p4, int time, int easeInTime, int easeOutTime, int p8) // 0x189E955A8313E298
--[[
p8 could be some sort of flag. Scripts use:
-244429742
0
1726668277
1844968929
--]]
function CAM.SET_GAMEPLAY_ENTITY_HINT(entity, xOffset, yOffset, zOffset, p4, time, easeInTime, easeOutTime, p8)
  native.invoke(
    Type.Void, 530, false,
    arg(Type.Entity, entity),
    arg(Type.Float, xOffset),
    arg(Type.Float, yOffset),
    arg(Type.Float, zOffset),
    arg(Type.Bool, p4),
    arg(Type.Int, time),
    arg(Type.Int, easeInTime),
    arg(Type.Int, easeOutTime),
    arg(Type.Int, p8)
  )
end

-- BOOL IS_GAMEPLAY_HINT_ACTIVE() // 0xE520FF1AD2785B40
function CAM.IS_GAMEPLAY_HINT_ACTIVE()
  return native.invoke(
    Type.Bool, 531, false
  )
end

-- void STOP_GAMEPLAY_HINT(BOOL p0) // 0xF46C581C61718916
function CAM.STOP_GAMEPLAY_HINT(p0)
  native.invoke(
    Type.Void, 532, false,
    arg(Type.Bool, p0)
  )
end

-- void STOP_GAMEPLAY_HINT_BEING_CANCELLED_THIS_UPDATE(BOOL p0) // 0xCCD078C2665D2973
--[[
This native does absolutely nothing, just a nullsub
--]]
function CAM.STOP_GAMEPLAY_HINT_BEING_CANCELLED_THIS_UPDATE(p0)
  native.invoke(
    Type.Void, 533, false,
    arg(Type.Bool, p0)
  )
end

-- void STOP_CODE_GAMEPLAY_HINT(BOOL p0) // 0x247ACBC4ABBC9D1C
function CAM.STOP_CODE_GAMEPLAY_HINT(p0)
  native.invoke(
    Type.Void, 534, false,
    arg(Type.Bool, p0)
  )
end

-- BOOL IS_CODE_GAMEPLAY_HINT_ACTIVE() // 0xBF72910D0F26F025
function CAM.IS_CODE_GAMEPLAY_HINT_ACTIVE()
  return native.invoke(
    Type.Bool, 535, false
  )
end

-- void SET_GAMEPLAY_HINT_FOV(float FOV) // 0x513403FB9C56211F
function CAM.SET_GAMEPLAY_HINT_FOV(FOV)
  native.invoke(
    Type.Void, 536, false,
    arg(Type.Float, FOV)
  )
end

-- void SET_GAMEPLAY_HINT_FOLLOW_DISTANCE_SCALAR(float value) // 0xF8BDBF3D573049A1
function CAM.SET_GAMEPLAY_HINT_FOLLOW_DISTANCE_SCALAR(value)
  native.invoke(
    Type.Void, 537, false,
    arg(Type.Float, value)
  )
end

-- void SET_GAMEPLAY_HINT_BASE_ORBIT_PITCH_OFFSET(float value) // 0xD1F8363DFAD03848
function CAM.SET_GAMEPLAY_HINT_BASE_ORBIT_PITCH_OFFSET(value)
  native.invoke(
    Type.Void, 538, false,
    arg(Type.Float, value)
  )
end

-- void SET_GAMEPLAY_HINT_CAMERA_RELATIVE_SIDE_OFFSET(float xOffset) // 0x5D7B620DAE436138
function CAM.SET_GAMEPLAY_HINT_CAMERA_RELATIVE_SIDE_OFFSET(xOffset)
  native.invoke(
    Type.Void, 539, false,
    arg(Type.Float, xOffset)
  )
end

-- void SET_GAMEPLAY_HINT_CAMERA_RELATIVE_VERTICAL_OFFSET(float yOffset) // 0xC92717EF615B6704
function CAM.SET_GAMEPLAY_HINT_CAMERA_RELATIVE_VERTICAL_OFFSET(yOffset)
  native.invoke(
    Type.Void, 540, false,
    arg(Type.Float, yOffset)
  )
end

-- void SET_GAMEPLAY_HINT_CAMERA_BLEND_TO_FOLLOW_PED_MEDIUM_VIEW_MODE(BOOL toggle) // 0xE3433EADAAF7EE40
function CAM.SET_GAMEPLAY_HINT_CAMERA_BLEND_TO_FOLLOW_PED_MEDIUM_VIEW_MODE(toggle)
  native.invoke(
    Type.Void, 541, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_CINEMATIC_BUTTON_ACTIVE(BOOL p0) // 0x51669F7D1FB53D9F
function CAM.SET_CINEMATIC_BUTTON_ACTIVE(p0)
  native.invoke(
    Type.Void, 542, false,
    arg(Type.Bool, p0)
  )
end

-- BOOL IS_CINEMATIC_CAM_RENDERING() // 0xB15162CB5826E9E8
function CAM.IS_CINEMATIC_CAM_RENDERING()
  return native.invoke(
    Type.Bool, 543, false
  )
end

-- void SHAKE_CINEMATIC_CAM(const char* shakeType, float amount) // 0xDCE214D9ED58F3CF
--[[
p0 argument found in the b617d scripts: "DRUNK_SHAKE"

Full list of cam shake types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/camShakeTypesCompact.json
--]]
function CAM.SHAKE_CINEMATIC_CAM(shakeType, amount)
  native.invoke(
    Type.Void, 544, false,
    arg(Type.String, shakeType),
    arg(Type.Float, amount)
  )
end

-- BOOL IS_CINEMATIC_CAM_SHAKING() // 0xBBC08F6B4CB8FF0A
function CAM.IS_CINEMATIC_CAM_SHAKING()
  return native.invoke(
    Type.Bool, 545, false
  )
end

-- void SET_CINEMATIC_CAM_SHAKE_AMPLITUDE(float p0) // 0xC724C701C30B2FE7
function CAM.SET_CINEMATIC_CAM_SHAKE_AMPLITUDE(p0)
  native.invoke(
    Type.Void, 546, false,
    arg(Type.Float, p0)
  )
end

-- void STOP_CINEMATIC_CAM_SHAKING(BOOL p0) // 0x2238E588E588A6D7
function CAM.STOP_CINEMATIC_CAM_SHAKING(p0)
  native.invoke(
    Type.Void, 547, false,
    arg(Type.Bool, p0)
  )
end

-- void DISABLE_CINEMATIC_BONNET_CAMERA_THIS_UPDATE() // 0xADFF1B2A555F5FBA
function CAM.DISABLE_CINEMATIC_BONNET_CAMERA_THIS_UPDATE()
  native.invoke(
    Type.Void, 548, false
  )
end

-- void DISABLE_CINEMATIC_VEHICLE_IDLE_MODE_THIS_UPDATE() // 0x62ECFCFDEE7885D6
function CAM.DISABLE_CINEMATIC_VEHICLE_IDLE_MODE_THIS_UPDATE()
  native.invoke(
    Type.Void, 549, false
  )
end

-- void INVALIDATE_CINEMATIC_VEHICLE_IDLE_MODE() // 0x9E4CFFF989258472
--[[
Resets the vehicle idle camera timer. Calling this in a loop will disable the idle camera.
--]]
function CAM.INVALIDATE_CINEMATIC_VEHICLE_IDLE_MODE()
  native.invoke(
    Type.Void, 550, false
  )
end

-- void INVALIDATE_IDLE_CAM() // 0xF4F2C0D4EE209E20
--[[
Resets the idle camera timer. Calling that in a loop once every few seconds is enough to disable the idle cinematic camera.
--]]
function CAM.INVALIDATE_IDLE_CAM()
  native.invoke(
    Type.Void, 551, false
  )
end

-- BOOL IS_CINEMATIC_IDLE_CAM_RENDERING() // 0xCA9D2AA3E326D720
function CAM.IS_CINEMATIC_IDLE_CAM_RENDERING()
  return native.invoke(
    Type.Bool, 552, false
  )
end

-- BOOL IS_CINEMATIC_FIRST_PERSON_VEHICLE_INTERIOR_CAM_RENDERING() // 0x4F32C0D5A90A9B40
function CAM.IS_CINEMATIC_FIRST_PERSON_VEHICLE_INTERIOR_CAM_RENDERING()
  return native.invoke(
    Type.Bool, 553, false
  )
end

-- void CREATE_CINEMATIC_SHOT(Hash p0, int time, BOOL p2, Entity entity) // 0x741B0129D4560F31
--[[
hash is always JOAAT("CAMERA_MAN_SHOT") in decompiled scripts
--]]
function CAM.CREATE_CINEMATIC_SHOT(p0, time, p2, entity)
  native.invoke(
    Type.Void, 554, false,
    arg(Type.Hash, p0),
    arg(Type.Int, time),
    arg(Type.Bool, p2),
    arg(Type.Entity, entity)
  )
end

-- BOOL IS_CINEMATIC_SHOT_ACTIVE(Hash p0) // 0xCC9F3371A7C28BC9
--[[
Hash is always JOAAT("CAMERA_MAN_SHOT") in decompiled scripts
--]]
function CAM.IS_CINEMATIC_SHOT_ACTIVE(p0)
  return native.invoke(
    Type.Bool, 555, false,
    arg(Type.Hash, p0)
  )
end

-- void STOP_CINEMATIC_SHOT(Hash p0) // 0x7660C6E75D3A078E
--[[
Only used once in carsteal3 with p0 set to -1096069633 (CAMERA_MAN_SHOT)
--]]
function CAM.STOP_CINEMATIC_SHOT(p0)
  native.invoke(
    Type.Void, 556, false,
    arg(Type.Hash, p0)
  )
end

-- void FORCE_CINEMATIC_RENDERING_THIS_UPDATE(BOOL toggle) // 0xA41BCD7213805AAC
function CAM.FORCE_CINEMATIC_RENDERING_THIS_UPDATE(toggle)
  native.invoke(
    Type.Void, 557, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_CINEMATIC_NEWS_CHANNEL_ACTIVE_THIS_UPDATE() // 0xDC9DA9E8789F5246
function CAM.SET_CINEMATIC_NEWS_CHANNEL_ACTIVE_THIS_UPDATE()
  native.invoke(
    Type.Void, 558, false
  )
end

-- void SET_CINEMATIC_MODE_ACTIVE(BOOL toggle) // 0xDCF0754AC3D6FD4E
--[[
Toggles the vehicle cinematic cam; requires the player ped to be in a vehicle to work.
--]]
function CAM.SET_CINEMATIC_MODE_ACTIVE(toggle)
  native.invoke(
    Type.Void, 559, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_IN_VEHICLE_MOBILE_PHONE_CAMERA_RENDERING() // 0x1F2300CB7FA7B7F6
function CAM.IS_IN_VEHICLE_MOBILE_PHONE_CAMERA_RENDERING()
  return native.invoke(
    Type.Bool, 560, false
  )
end

-- BOOL DISABLE_CINEMATIC_SLOW_MO_THIS_UPDATE() // 0x17FCA7199A530203
function CAM.DISABLE_CINEMATIC_SLOW_MO_THIS_UPDATE()
  return native.invoke(
    Type.Bool, 561, false
  )
end

-- BOOL IS_BONNET_CINEMATIC_CAM_RENDERING() // 0xD7360051C885628B
function CAM.IS_BONNET_CINEMATIC_CAM_RENDERING()
  return native.invoke(
    Type.Bool, 562, false
  )
end

-- BOOL IS_CINEMATIC_CAM_INPUT_ACTIVE() // 0xF5F1E89A970B7796
--[[
Tests some cinematic camera flags
--]]
function CAM.IS_CINEMATIC_CAM_INPUT_ACTIVE()
  return native.invoke(
    Type.Bool, 563, false
  )
end

-- void IGNORE_MENU_PREFERENCE_FOR_BONNET_CAMERA_THIS_UPDATE() // 0x7B8A361C1813FBEF
function CAM.IGNORE_MENU_PREFERENCE_FOR_BONNET_CAMERA_THIS_UPDATE()
  native.invoke(
    Type.Void, 564, false
  )
end

-- void BYPASS_CUTSCENE_CAM_RENDERING_THIS_UPDATE() // 0xDB629FFD9285FA06
function CAM.BYPASS_CUTSCENE_CAM_RENDERING_THIS_UPDATE()
  native.invoke(
    Type.Void, 565, false
  )
end

-- void STOP_CUTSCENE_CAM_SHAKING(Any p0) // 0x324C5AA411DA7737
function CAM.STOP_CUTSCENE_CAM_SHAKING(p0)
  native.invoke(
    Type.Void, 566, false,
    arg(Type.Any, p0)
  )
end

-- void SET_CUTSCENE_CAM_FAR_CLIP_THIS_UPDATE(float p0) // 0x12DED8CA53D47EA5
--[[
Hardcoded to only work in multiplayer.
--]]
function CAM.SET_CUTSCENE_CAM_FAR_CLIP_THIS_UPDATE(p0)
  native.invoke(
    Type.Void, 567, false,
    arg(Type.Float, p0)
  )
end

-- Ped GET_FOCUS_PED_ON_SCREEN(float p0, int p1, float p2, float p3, float p4, float p5, float p6, int p7, int p8) // 0x89215EC747DF244A
function CAM.GET_FOCUS_PED_ON_SCREEN(p0, p1, p2, p3, p4, p5, p6, p7, p8)
  return native.invoke(
    Type.Ped, 568, false,
    arg(Type.Float, p0),
    arg(Type.Int, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Float, p6),
    arg(Type.Int, p7),
    arg(Type.Int, p8)
  )
end

-- void DISABLE_NEAR_CLIP_SCAN_THIS_UPDATE() // 0x5A43C76F7FC7BA5F
function CAM.DISABLE_NEAR_CLIP_SCAN_THIS_UPDATE()
  native.invoke(
    Type.Void, 569, false
  )
end

-- void SET_CAM_DEATH_FAIL_EFFECT_STATE(int p0) // 0x80C8B1846639BB19
--[[
if p0 is 0, effect is cancelled

if p0 is 1, effect zooms in, gradually tilts cam clockwise apx 30 degrees, wobbles slowly. Motion blur is active until cancelled.

if p0 is 2, effect immediately tilts cam clockwise apx 30 degrees, begins to wobble slowly, then gradually tilts cam back to normal. The wobbling will continue until the effect is cancelled.
--]]
function CAM.SET_CAM_DEATH_FAIL_EFFECT_STATE(p0)
  native.invoke(
    Type.Void, 570, false,
    arg(Type.Int, p0)
  )
end

-- void SET_FIRST_PERSON_FLASH_EFFECT_TYPE(Any p0) // 0x5C41E6BABC9E2112
function CAM.SET_FIRST_PERSON_FLASH_EFFECT_TYPE(p0)
  native.invoke(
    Type.Void, 571, false,
    arg(Type.Any, p0)
  )
end

-- void SET_FIRST_PERSON_FLASH_EFFECT_VEHICLE_MODEL_NAME(const char* vehicleName) // 0x21E253A7F8DA5DFB
--[[
From b617 scripts:

CAM::SET_FIRST_PERSON_FLASH_EFFECT_VEHICLE_MODEL_NAME("DINGHY");
CAM::SET_FIRST_PERSON_FLASH_EFFECT_VEHICLE_MODEL_NAME("ISSI2");
CAM::SET_FIRST_PERSON_FLASH_EFFECT_VEHICLE_MODEL_NAME("SPEEDO");
--]]
function CAM.SET_FIRST_PERSON_FLASH_EFFECT_VEHICLE_MODEL_NAME(vehicleName)
  native.invoke(
    Type.Void, 572, false,
    arg(Type.String, vehicleName)
  )
end

-- void SET_FIRST_PERSON_FLASH_EFFECT_VEHICLE_MODEL_HASH(Hash vehicleModel) // 0x11FA5D3479C7DD47
function CAM.SET_FIRST_PERSON_FLASH_EFFECT_VEHICLE_MODEL_HASH(vehicleModel)
  native.invoke(
    Type.Void, 573, false,
    arg(Type.Hash, vehicleModel)
  )
end

-- BOOL IS_ALLOWED_INDEPENDENT_CAMERA_MODES() // 0xEAF0FA793D05C592
function CAM.IS_ALLOWED_INDEPENDENT_CAMERA_MODES()
  return native.invoke(
    Type.Bool, 574, false
  )
end

-- void CAMERA_PREVENT_COLLISION_SETTINGS_FOR_TRIPLEHEAD_IN_INTERIORS_THIS_UPDATE() // 0x62374889A4D59F72
function CAM.CAMERA_PREVENT_COLLISION_SETTINGS_FOR_TRIPLEHEAD_IN_INTERIORS_THIS_UPDATE()
  native.invoke(
    Type.Void, 575, false
  )
end

-- float REPLAY_GET_MAX_DISTANCE_ALLOWED_FROM_PLAYER() // 0x8BFCEB5EA1B161B6
function CAM.REPLAY_GET_MAX_DISTANCE_ALLOWED_FROM_PLAYER()
  return native.invoke(
    Type.Float, 576, false
  )
end


CLOCK = {}

-- void SET_CLOCK_TIME(int hour, int minute, int second) // 0x47C3B5848C3E45D8
--[[
SET_CLOCK_TIME(12, 34, 56);
--]]
function CLOCK.SET_CLOCK_TIME(hour, minute, second)
  native.invoke(
    Type.Void, 577, false,
    arg(Type.Int, hour),
    arg(Type.Int, minute),
    arg(Type.Int, second)
  )
end

-- void PAUSE_CLOCK(BOOL toggle) // 0x4055E40BD2DBEC1D
function CLOCK.PAUSE_CLOCK(toggle)
  native.invoke(
    Type.Void, 578, false,
    arg(Type.Bool, toggle)
  )
end

-- void ADVANCE_CLOCK_TIME_TO(int hour, int minute, int second) // 0xC8CA9670B9D83B3B
function CLOCK.ADVANCE_CLOCK_TIME_TO(hour, minute, second)
  native.invoke(
    Type.Void, 579, false,
    arg(Type.Int, hour),
    arg(Type.Int, minute),
    arg(Type.Int, second)
  )
end

-- void ADD_TO_CLOCK_TIME(int hours, int minutes, int seconds) // 0xD716F30D8C8980E2
function CLOCK.ADD_TO_CLOCK_TIME(hours, minutes, seconds)
  native.invoke(
    Type.Void, 580, false,
    arg(Type.Int, hours),
    arg(Type.Int, minutes),
    arg(Type.Int, seconds)
  )
end

-- int GET_CLOCK_HOURS() // 0x25223CA6B4D20B7F
--[[
Gets the current ingame hour, expressed without zeros. (09:34 will be represented as 9)
--]]
function CLOCK.GET_CLOCK_HOURS()
  return native.invoke(
    Type.Int, 581, false
  )
end

-- int GET_CLOCK_MINUTES() // 0x13D2B8ADD79640F2
--[[
Gets the current ingame clock minute.
--]]
function CLOCK.GET_CLOCK_MINUTES()
  return native.invoke(
    Type.Int, 582, false
  )
end

-- int GET_CLOCK_SECONDS() // 0x494E97C2EF27C470
--[[
Gets the current ingame clock second. Note that ingame clock seconds change really fast since a day in GTA is only 48 minutes in real life.
--]]
function CLOCK.GET_CLOCK_SECONDS()
  return native.invoke(
    Type.Int, 583, false
  )
end

-- void SET_CLOCK_DATE(int day, int month, int year) // 0xB096419DF0D06CE7
function CLOCK.SET_CLOCK_DATE(day, month, year)
  native.invoke(
    Type.Void, 584, false,
    arg(Type.Int, day),
    arg(Type.Int, month),
    arg(Type.Int, year)
  )
end

-- int GET_CLOCK_DAY_OF_WEEK() // 0xD972E4BD7AEB235F
--[[
Gets the current day of the week.

0: Sunday
1: Monday
2: Tuesday
3: Wednesday
4: Thursday
5: Friday
6: Saturday
--]]
function CLOCK.GET_CLOCK_DAY_OF_WEEK()
  return native.invoke(
    Type.Int, 585, false
  )
end

-- int GET_CLOCK_DAY_OF_MONTH() // 0x3D10BC92A4DB1D35
function CLOCK.GET_CLOCK_DAY_OF_MONTH()
  return native.invoke(
    Type.Int, 586, false
  )
end

-- int GET_CLOCK_MONTH() // 0xBBC72712E80257A1
function CLOCK.GET_CLOCK_MONTH()
  return native.invoke(
    Type.Int, 587, false
  )
end

-- int GET_CLOCK_YEAR() // 0x961777E64BDAF717
function CLOCK.GET_CLOCK_YEAR()
  return native.invoke(
    Type.Int, 588, false
  )
end

-- int GET_MILLISECONDS_PER_GAME_MINUTE() // 0x2F8B4D1C595B11DB
function CLOCK.GET_MILLISECONDS_PER_GAME_MINUTE()
  return native.invoke(
    Type.Int, 589, false
  )
end

-- void GET_POSIX_TIME(int* year, int* month, int* day, int* hour, int* minute, int* second) // 0xDA488F299A5B164E
--[[
Gets system time as year, month, day, hour, minute and second.

Example usage:

    int year;
 int month;
    int day;
  int hour;
 int minute;
   int second;

 TIME::GET_POSIX_TIME(&year, &month, &day, &hour, &minute, &second);

--]]
function CLOCK.GET_POSIX_TIME(year, month, day, hour, minute, second)
  native.invoke(
    Type.Void, 590, false,
    arg(Type.Int, year),
    arg(Type.Int, month),
    arg(Type.Int, day),
    arg(Type.Int, hour),
    arg(Type.Int, minute),
    arg(Type.Int, second)
  )
end

-- void GET_UTC_TIME(int* year, int* month, int* day, int* hour, int* minute, int* second) // 0x8117E09A19EEF4D3
--[[
Gets current UTC time
--]]
function CLOCK.GET_UTC_TIME(year, month, day, hour, minute, second)
  native.invoke(
    Type.Void, 591, false,
    arg(Type.Int, year),
    arg(Type.Int, month),
    arg(Type.Int, day),
    arg(Type.Int, hour),
    arg(Type.Int, minute),
    arg(Type.Int, second)
  )
end

-- void GET_LOCAL_TIME(int* year, int* month, int* day, int* hour, int* minute, int* second) // 0x50C7A99057A69748
--[[
Gets local system time as year, month, day, hour, minute and second.

Example usage:

int year;
int month;
int day;
int hour;
int minute;
int second;
or use std::tm struct

TIME::GET_LOCAL_TIME(&year, &month, &day, &hour, &minute, &second);

--]]
function CLOCK.GET_LOCAL_TIME(year, month, day, hour, minute, second)
  native.invoke(
    Type.Void, 592, false,
    arg(Type.Int, year),
    arg(Type.Int, month),
    arg(Type.Int, day),
    arg(Type.Int, hour),
    arg(Type.Int, minute),
    arg(Type.Int, second)
  )
end


CUTSCENE = {}

-- void REQUEST_CUTSCENE(const char* cutsceneName, int flags) // 0x7A86743F475D9E09
--[[
flags: Usually 8
Full list of cutscene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/cutsceneNames.json
--]]
function CUTSCENE.REQUEST_CUTSCENE(cutsceneName, flags)
  native.invoke(
    Type.Void, 593, false,
    arg(Type.String, cutsceneName),
    arg(Type.Int, flags)
  )
end

-- void REQUEST_CUTSCENE_WITH_PLAYBACK_LIST(const char* cutsceneName, int playbackFlags, int flags) // 0xC23DE0E91C30B58C
--[[
flags: Usually 8

playbackFlags: Which scenes should be played.
Example: 0x105 (bit 0, 2 and 8 set) will enable scene 1, 3 and 9.
Full list of cutscene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/cutsceneNames.json
--]]
function CUTSCENE.REQUEST_CUTSCENE_WITH_PLAYBACK_LIST(cutsceneName, playbackFlags, flags)
  native.invoke(
    Type.Void, 594, false,
    arg(Type.String, cutsceneName),
    arg(Type.Int, playbackFlags),
    arg(Type.Int, flags)
  )
end

-- void REMOVE_CUTSCENE() // 0x440AF51A3462B86F
function CUTSCENE.REMOVE_CUTSCENE()
  native.invoke(
    Type.Void, 595, false
  )
end

-- BOOL HAS_CUTSCENE_LOADED() // 0xC59F528E9AB9F339
function CUTSCENE.HAS_CUTSCENE_LOADED()
  return native.invoke(
    Type.Bool, 596, false
  )
end

-- BOOL HAS_THIS_CUTSCENE_LOADED(const char* cutsceneName) // 0x228D3D94F8A11C3C
--[[
Full list of cutscene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/cutsceneNames.json
--]]
function CUTSCENE.HAS_THIS_CUTSCENE_LOADED(cutsceneName)
  return native.invoke(
    Type.Bool, 597, false,
    arg(Type.String, cutsceneName)
  )
end

-- void SET_SCRIPT_CAN_START_CUTSCENE(int threadId) // 0x8D9DF6ECA8768583
--[[
Sets the cutscene's owning thread ID.
--]]
function CUTSCENE.SET_SCRIPT_CAN_START_CUTSCENE(threadId)
  native.invoke(
    Type.Void, 598, false,
    arg(Type.Int, threadId)
  )
end

-- BOOL CAN_REQUEST_ASSETS_FOR_CUTSCENE_ENTITY() // 0xB56BBBCC2955D9CB
function CUTSCENE.CAN_REQUEST_ASSETS_FOR_CUTSCENE_ENTITY()
  return native.invoke(
    Type.Bool, 599, false
  )
end

-- BOOL IS_CUTSCENE_PLAYBACK_FLAG_SET(int flag) // 0x71B74D2AE19338D0
function CUTSCENE.IS_CUTSCENE_PLAYBACK_FLAG_SET(flag)
  return native.invoke(
    Type.Bool, 600, false,
    arg(Type.Int, flag)
  )
end

-- void SET_CUTSCENE_ENTITY_STREAMING_FLAGS(const char* cutsceneEntName, int p1, int p2) // 0x4C61C75BEE8184C2
function CUTSCENE.SET_CUTSCENE_ENTITY_STREAMING_FLAGS(cutsceneEntName, p1, p2)
  native.invoke(
    Type.Void, 601, false,
    arg(Type.String, cutsceneEntName),
    arg(Type.Int, p1),
    arg(Type.Int, p2)
  )
end

-- void REQUEST_CUT_FILE(const char* cutsceneName) // 0x06A3524161C502BA
--[[
Simply loads the cutscene and doesn't do extra stuff that REQUEST_CUTSCENE does.
Full list of cutscene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/cutsceneNames.json
--]]
function CUTSCENE.REQUEST_CUT_FILE(cutsceneName)
  native.invoke(
    Type.Void, 602, false,
    arg(Type.String, cutsceneName)
  )
end

-- BOOL HAS_CUT_FILE_LOADED(const char* cutsceneName) // 0xA1C996C2A744262E
--[[
Simply checks if the cutscene has loaded and doesn't check via CutSceneManager as opposed to HAS_[THIS]_CUTSCENE_LOADED.
Full list of cutscene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/cutsceneNames.json
--]]
function CUTSCENE.HAS_CUT_FILE_LOADED(cutsceneName)
  return native.invoke(
    Type.Bool, 603, false,
    arg(Type.String, cutsceneName)
  )
end

-- void REMOVE_CUT_FILE(const char* cutsceneName) // 0xD00D76A7DFC9D852
--[[
Simply unloads the cutscene and doesn't do extra stuff that REMOVE_CUTSCENE does.
Full list of cutscene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/cutsceneNames.json
--]]
function CUTSCENE.REMOVE_CUT_FILE(cutsceneName)
  native.invoke(
    Type.Void, 604, false,
    arg(Type.String, cutsceneName)
  )
end

-- int GET_CUT_FILE_CONCAT_COUNT(const char* cutsceneName) // 0x0ABC54DE641DC0FC
--[[
Full list of cutscene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/cutsceneNames.json
--]]
function CUTSCENE.GET_CUT_FILE_CONCAT_COUNT(cutsceneName)
  return native.invoke(
    Type.Int, 605, false,
    arg(Type.String, cutsceneName)
  )
end

-- void START_CUTSCENE(int flags) // 0x186D5CB5E7B0FF7B
--[[
flags: Usually 0.
--]]
function CUTSCENE.START_CUTSCENE(flags)
  native.invoke(
    Type.Void, 606, false,
    arg(Type.Int, flags)
  )
end

-- void START_CUTSCENE_AT_COORDS(float x, float y, float z, int flags) // 0x1C9ADDA3244A1FBF
--[[
flags: Usually 0.
--]]
function CUTSCENE.START_CUTSCENE_AT_COORDS(x, y, z, flags)
  native.invoke(
    Type.Void, 607, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, flags)
  )
end

-- void STOP_CUTSCENE(BOOL p0) // 0xC7272775B4DC786E
function CUTSCENE.STOP_CUTSCENE(p0)
  native.invoke(
    Type.Void, 608, false,
    arg(Type.Bool, p0)
  )
end

-- void STOP_CUTSCENE_IMMEDIATELY() // 0xD220BDD222AC4A1E
function CUTSCENE.STOP_CUTSCENE_IMMEDIATELY()
  native.invoke(
    Type.Void, 609, false
  )
end

-- void SET_CUTSCENE_ORIGIN(float x, float y, float z, float p3, int p4) // 0xB812B3FD1C01CF27
--[[
p3 could be heading. Needs more research.
--]]
function CUTSCENE.SET_CUTSCENE_ORIGIN(x, y, z, p3, p4)
  native.invoke(
    Type.Void, 610, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, p3),
    arg(Type.Int, p4)
  )
end

-- void SET_CUTSCENE_ORIGIN_AND_ORIENTATION(float x1, float y1, float z1, float x2, float y2, float z2, int p6) // 0x011883F41211432A
function CUTSCENE.SET_CUTSCENE_ORIGIN_AND_ORIENTATION(x1, y1, z1, x2, y2, z2, p6)
  native.invoke(
    Type.Void, 611, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Int, p6)
  )
end

-- int GET_CUTSCENE_TIME() // 0xE625BEABBAFFDAB9
function CUTSCENE.GET_CUTSCENE_TIME()
  return native.invoke(
    Type.Int, 612, false
  )
end

-- int GET_CUTSCENE_TOTAL_DURATION() // 0xEE53B14A19E480D4
function CUTSCENE.GET_CUTSCENE_TOTAL_DURATION()
  return native.invoke(
    Type.Int, 613, false
  )
end

-- int GET_CUTSCENE_END_TIME() // 0x971D7B15BCDBEF99
function CUTSCENE.GET_CUTSCENE_END_TIME()
  return native.invoke(
    Type.Int, 614, false
  )
end

-- int GET_CUTSCENE_PLAY_DURATION() // 0x5D583F71C901F2A3
function CUTSCENE.GET_CUTSCENE_PLAY_DURATION()
  return native.invoke(
    Type.Int, 615, false
  )
end

-- BOOL WAS_CUTSCENE_SKIPPED() // 0x40C8656EDAEDD569
function CUTSCENE.WAS_CUTSCENE_SKIPPED()
  return native.invoke(
    Type.Bool, 616, false
  )
end

-- BOOL HAS_CUTSCENE_FINISHED() // 0x7C0A893088881D57
function CUTSCENE.HAS_CUTSCENE_FINISHED()
  return native.invoke(
    Type.Bool, 617, false
  )
end

-- BOOL IS_CUTSCENE_ACTIVE() // 0x991251AFC3981F84
function CUTSCENE.IS_CUTSCENE_ACTIVE()
  return native.invoke(
    Type.Bool, 618, false
  )
end

-- BOOL IS_CUTSCENE_PLAYING() // 0xD3C2E180A40F031E
function CUTSCENE.IS_CUTSCENE_PLAYING()
  return native.invoke(
    Type.Bool, 619, false
  )
end

-- int GET_CUTSCENE_SECTION_PLAYING() // 0x49010A6A396553D8
function CUTSCENE.GET_CUTSCENE_SECTION_PLAYING()
  return native.invoke(
    Type.Int, 620, false
  )
end

-- Entity GET_ENTITY_INDEX_OF_CUTSCENE_ENTITY(const char* cutsceneEntName, Hash modelHash) // 0x0A2E9FDB9A8C62F6
function CUTSCENE.GET_ENTITY_INDEX_OF_CUTSCENE_ENTITY(cutsceneEntName, modelHash)
  return native.invoke(
    Type.Entity, 621, false,
    arg(Type.String, cutsceneEntName),
    arg(Type.Hash, modelHash)
  )
end

-- int GET_CUTSCENE_CONCAT_SECTION_PLAYING() // 0x583DF8E3D4AFBD98
function CUTSCENE.GET_CUTSCENE_CONCAT_SECTION_PLAYING()
  return native.invoke(
    Type.Int, 622, false
  )
end

-- BOOL IS_CUTSCENE_AUTHORIZED(const char* cutsceneName) // 0x4CEBC1ED31E8925E
--[[
This function is hard-coded to always return 1.
--]]
function CUTSCENE.IS_CUTSCENE_AUTHORIZED(cutsceneName)
  return native.invoke(
    Type.Bool, 623, false,
    arg(Type.String, cutsceneName)
  )
end

-- int DOES_CUTSCENE_HANDLE_EXIST(int cutsceneHandle) // 0x4FCD976DA686580C
function CUTSCENE.DOES_CUTSCENE_HANDLE_EXIST(cutsceneHandle)
  return native.invoke(
    Type.Int, 624, false,
    arg(Type.Int, cutsceneHandle)
  )
end

-- void REGISTER_ENTITY_FOR_CUTSCENE(Ped cutscenePed, const char* cutsceneEntName, int p2, Hash modelHash, int p4) // 0xE40C1C56DF95C2E8
function CUTSCENE.REGISTER_ENTITY_FOR_CUTSCENE(cutscenePed, cutsceneEntName, p2, modelHash, p4)
  native.invoke(
    Type.Void, 625, false,
    arg(Type.Ped, cutscenePed),
    arg(Type.String, cutsceneEntName),
    arg(Type.Int, p2),
    arg(Type.Hash, modelHash),
    arg(Type.Int, p4)
  )
end

-- Entity GET_ENTITY_INDEX_OF_REGISTERED_ENTITY(const char* cutsceneEntName, Hash modelHash) // 0xC0741A26499654CD
function CUTSCENE.GET_ENTITY_INDEX_OF_REGISTERED_ENTITY(cutsceneEntName, modelHash)
  return native.invoke(
    Type.Entity, 626, false,
    arg(Type.String, cutsceneEntName),
    arg(Type.Hash, modelHash)
  )
end

-- void SET_VEHICLE_MODEL_PLAYER_WILL_EXIT_SCENE(Hash modelHash) // 0x7F96F23FA9B73327
--[[
Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
--]]
function CUTSCENE.SET_VEHICLE_MODEL_PLAYER_WILL_EXIT_SCENE(modelHash)
  native.invoke(
    Type.Void, 627, false,
    arg(Type.Hash, modelHash)
  )
end

-- void SET_CUTSCENE_TRIGGER_AREA(float x1, float y1, float z1, float x2, float y2, float z2) // 0x9896CE4721BE84BA
--[[
Only used twice in R* scripts
--]]
function CUTSCENE.SET_CUTSCENE_TRIGGER_AREA(x1, y1, z1, x2, y2, z2)
  native.invoke(
    Type.Void, 628, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2)
  )
end

-- BOOL CAN_SET_ENTER_STATE_FOR_REGISTERED_ENTITY(const char* cutsceneEntName, Hash modelHash) // 0x645D0B458D8E17B5
--[[
modelHash (p1) was always 0 in R* scripts
--]]
function CUTSCENE.CAN_SET_ENTER_STATE_FOR_REGISTERED_ENTITY(cutsceneEntName, modelHash)
  return native.invoke(
    Type.Bool, 629, false,
    arg(Type.String, cutsceneEntName),
    arg(Type.Hash, modelHash)
  )
end

-- BOOL CAN_SET_EXIT_STATE_FOR_REGISTERED_ENTITY(const char* cutsceneEntName, Hash modelHash) // 0x4C6A6451C79E4662
function CUTSCENE.CAN_SET_EXIT_STATE_FOR_REGISTERED_ENTITY(cutsceneEntName, modelHash)
  return native.invoke(
    Type.Bool, 630, false,
    arg(Type.String, cutsceneEntName),
    arg(Type.Hash, modelHash)
  )
end

-- BOOL CAN_SET_EXIT_STATE_FOR_CAMERA(BOOL p0) // 0xB2CBCD0930DFB420
function CUTSCENE.CAN_SET_EXIT_STATE_FOR_CAMERA(p0)
  return native.invoke(
    Type.Bool, 631, false,
    arg(Type.Bool, p0)
  )
end

-- void SET_PAD_CAN_SHAKE_DURING_CUTSCENE(BOOL toggle) // 0xC61B86C9F61EB404
--[[
Toggles a value (bool) for cutscenes.
--]]
function CUTSCENE.SET_PAD_CAN_SHAKE_DURING_CUTSCENE(toggle)
  native.invoke(
    Type.Void, 632, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_CUTSCENE_FADE_VALUES(BOOL p0, BOOL p1, BOOL p2, BOOL p3) // 0x8093F23ABACCC7D4
function CUTSCENE.SET_CUTSCENE_FADE_VALUES(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 633, false,
    arg(Type.Bool, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3)
  )
end

-- void SET_CUTSCENE_MULTIHEAD_FADE(BOOL p0, BOOL p1, BOOL p2, BOOL p3) // 0x20746F7B1032A3C7
function CUTSCENE.SET_CUTSCENE_MULTIHEAD_FADE(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 634, false,
    arg(Type.Bool, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3)
  )
end

-- void SET_CUTSCENE_MULTIHEAD_FADE_MANUAL(BOOL p0) // 0x06EE9048FD080382
function CUTSCENE.SET_CUTSCENE_MULTIHEAD_FADE_MANUAL(p0)
  native.invoke(
    Type.Void, 635, false,
    arg(Type.Bool, p0)
  )
end

-- BOOL IS_MULTIHEAD_FADE_UP() // 0xA0FE76168A189DDB
function CUTSCENE.IS_MULTIHEAD_FADE_UP()
  return native.invoke(
    Type.Bool, 636, false
  )
end

-- void NETWORK_SET_MOCAP_CUTSCENE_CAN_BE_SKIPPED(BOOL p0) // 0x2F137B508DE238F2
--[[
Stops current cutscene with a fade transition
p0: always true in R* Scripts
You will need to manually fade the screen back in
SET_CUTSCENE_INPUTS_PARTIALLY_FADE?
--]]
function CUTSCENE.NETWORK_SET_MOCAP_CUTSCENE_CAN_BE_SKIPPED(p0)
  native.invoke(
    Type.Void, 637, false,
    arg(Type.Bool, p0)
  )
end

-- void SET_CAR_GENERATORS_CAN_UPDATE_DURING_CUTSCENE(BOOL p0) // 0xE36A98D8AB3D3C66
function CUTSCENE.SET_CAR_GENERATORS_CAN_UPDATE_DURING_CUTSCENE(p0)
  native.invoke(
    Type.Void, 638, false,
    arg(Type.Bool, p0)
  )
end

-- BOOL CAN_USE_MOBILE_PHONE_DURING_CUTSCENE() // 0x5EDEF0CF8C1DAB3C
function CUTSCENE.CAN_USE_MOBILE_PHONE_DURING_CUTSCENE()
  return native.invoke(
    Type.Bool, 639, false
  )
end

-- void SET_CUTSCENE_CAN_BE_SKIPPED(BOOL p0) // 0x41FAA8FB2ECE8720
function CUTSCENE.SET_CUTSCENE_CAN_BE_SKIPPED(p0)
  native.invoke(
    Type.Void, 640, false,
    arg(Type.Bool, p0)
  )
end

-- void SET_CAN_DISPLAY_MINIMAP_DURING_CUTSCENE_THIS_UPDATE() // 0x2131046957F31B04
function CUTSCENE.SET_CAN_DISPLAY_MINIMAP_DURING_CUTSCENE_THIS_UPDATE()
  native.invoke(
    Type.Void, 641, false
  )
end

-- void SET_CUTSCENE_PED_COMPONENT_VARIATION(const char* cutsceneEntName, int componentId, int drawableId, int textureId, Hash modelHash) // 0xBA01E7B6DEEFBBC9
--[[
Full list of ped components by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pedComponentVariations.json
--]]
function CUTSCENE.SET_CUTSCENE_PED_COMPONENT_VARIATION(cutsceneEntName, componentId, drawableId, textureId, modelHash)
  native.invoke(
    Type.Void, 642, false,
    arg(Type.String, cutsceneEntName),
    arg(Type.Int, componentId),
    arg(Type.Int, drawableId),
    arg(Type.Int, textureId),
    arg(Type.Hash, modelHash)
  )
end

-- void SET_CUTSCENE_PED_COMPONENT_VARIATION_FROM_PED(const char* cutsceneEntName, Ped ped, Hash modelHash) // 0x2A56C06EBEF2B0D9
function CUTSCENE.SET_CUTSCENE_PED_COMPONENT_VARIATION_FROM_PED(cutsceneEntName, ped, modelHash)
  native.invoke(
    Type.Void, 643, false,
    arg(Type.String, cutsceneEntName),
    arg(Type.Ped, ped),
    arg(Type.Hash, modelHash)
  )
end

-- BOOL DOES_CUTSCENE_ENTITY_EXIST(const char* cutsceneEntName, Hash modelHash) // 0x499EF20C5DB25C59
function CUTSCENE.DOES_CUTSCENE_ENTITY_EXIST(cutsceneEntName, modelHash)
  return native.invoke(
    Type.Bool, 644, false,
    arg(Type.String, cutsceneEntName),
    arg(Type.Hash, modelHash)
  )
end

-- void SET_CUTSCENE_PED_PROP_VARIATION(const char* cutsceneEntName, int componentId, int drawableId, int textureId, Hash modelHash) // 0x0546524ADE2E9723
--[[
Thanks R*! ;)

if ((l_161 == 0) || (l_161 == 2)) {
    sub_2ea27("Trying to set Jimmy prop variation");
    CUTSCENE::SET_CUTSCENE_PED_PROP_VARIATION("Jimmy_Boston", 1, 0, 0, 0);
}

Full list of ped components by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pedComponentVariations.json
--]]
function CUTSCENE.SET_CUTSCENE_PED_PROP_VARIATION(cutsceneEntName, componentId, drawableId, textureId, modelHash)
  native.invoke(
    Type.Void, 645, false,
    arg(Type.String, cutsceneEntName),
    arg(Type.Int, componentId),
    arg(Type.Int, drawableId),
    arg(Type.Int, textureId),
    arg(Type.Hash, modelHash)
  )
end

-- BOOL HAS_CUTSCENE_CUT_THIS_FRAME() // 0x708BDD8CD795B043
--[[
Possibly HAS_CUTSCENE_CUT_THIS_FRAME, needs more research.
--]]
function CUTSCENE.HAS_CUTSCENE_CUT_THIS_FRAME()
  return native.invoke(
    Type.Bool, 646, false
  )
end


DATAFILE = {}

-- void DATAFILE_WATCH_REQUEST_ID(int requestId) // 0xAD6875BBC0FC899C
--[[
Adds the given requestID to the watch list.
--]]
function DATAFILE.DATAFILE_WATCH_REQUEST_ID(requestId)
  native.invoke(
    Type.Void, 647, false,
    arg(Type.Int, requestId)
  )
end

-- void DATAFILE_CLEAR_WATCH_LIST() // 0x6CC86E78358D5119
function DATAFILE.DATAFILE_CLEAR_WATCH_LIST()
  native.invoke(
    Type.Void, 648, false
  )
end

-- BOOL DATAFILE_IS_VALID_REQUEST_ID(int index) // 0xFCCAE5B92A830878
function DATAFILE.DATAFILE_IS_VALID_REQUEST_ID(index)
  return native.invoke(
    Type.Bool, 649, false,
    arg(Type.Int, index)
  )
end

-- BOOL DATAFILE_HAS_LOADED_FILE_DATA(int requestId) // 0x15FF52B809DB2353
function DATAFILE.DATAFILE_HAS_LOADED_FILE_DATA(requestId)
  return native.invoke(
    Type.Bool, 650, false,
    arg(Type.Int, requestId)
  )
end

-- BOOL DATAFILE_HAS_VALID_FILE_DATA(int requestId) // 0xF8CC1EBE0B62E29F
function DATAFILE.DATAFILE_HAS_VALID_FILE_DATA(requestId)
  return native.invoke(
    Type.Bool, 651, false,
    arg(Type.Int, requestId)
  )
end

-- BOOL DATAFILE_SELECT_ACTIVE_FILE(int requestId, Any p1) // 0x22DA66936E0FFF37
function DATAFILE.DATAFILE_SELECT_ACTIVE_FILE(requestId, p1)
  return native.invoke(
    Type.Bool, 652, false,
    arg(Type.Int, requestId),
    arg(Type.Any, p1)
  )
end

-- BOOL DATAFILE_DELETE_REQUESTED_FILE(int requestId) // 0x8F5EA1C01D65A100
function DATAFILE.DATAFILE_DELETE_REQUESTED_FILE(requestId)
  return native.invoke(
    Type.Bool, 653, false,
    arg(Type.Int, requestId)
  )
end

-- BOOL UGC_CREATE_CONTENT(Any* data, int dataCount, const char* contentName, const char* description, const char* tagsCsv, const char* contentTypeName, BOOL publish, Any p7) // 0xC84527E235FCA219
function DATAFILE.UGC_CREATE_CONTENT(data, dataCount, contentName, description, tagsCsv, contentTypeName, publish, p7)
  return native.invoke(
    Type.Bool, 654, false,
    arg(Type.Any, data),
    arg(Type.Int, dataCount),
    arg(Type.String, contentName),
    arg(Type.String, description),
    arg(Type.String, tagsCsv),
    arg(Type.String, contentTypeName),
    arg(Type.Bool, publish),
    arg(Type.Any, p7)
  )
end

-- BOOL UGC_CREATE_MISSION(const char* contentName, const char* description, const char* tagsCsv, const char* contentTypeName, BOOL publish, Any p5) // 0xA5EFC3E847D60507
function DATAFILE.UGC_CREATE_MISSION(contentName, description, tagsCsv, contentTypeName, publish, p5)
  return native.invoke(
    Type.Bool, 655, false,
    arg(Type.String, contentName),
    arg(Type.String, description),
    arg(Type.String, tagsCsv),
    arg(Type.String, contentTypeName),
    arg(Type.Bool, publish),
    arg(Type.Any, p5)
  )
end

-- BOOL UGC_UPDATE_CONTENT(const char* contentId, Any* data, int dataCount, const char* contentName, const char* description, const char* tagsCsv, const char* contentTypeName, Any p7) // 0x648E7A5434AF7969
function DATAFILE.UGC_UPDATE_CONTENT(contentId, data, dataCount, contentName, description, tagsCsv, contentTypeName, p7)
  return native.invoke(
    Type.Bool, 656, false,
    arg(Type.String, contentId),
    arg(Type.Any, data),
    arg(Type.Int, dataCount),
    arg(Type.String, contentName),
    arg(Type.String, description),
    arg(Type.String, tagsCsv),
    arg(Type.String, contentTypeName),
    arg(Type.Any, p7)
  )
end

-- BOOL UGC_UPDATE_MISSION(const char* contentId, const char* contentName, const char* description, const char* tagsCsv, const char* contentTypeName, Any p5) // 0x4645DE9980999E93
function DATAFILE.UGC_UPDATE_MISSION(contentId, contentName, description, tagsCsv, contentTypeName, p5)
  return native.invoke(
    Type.Bool, 657, false,
    arg(Type.String, contentId),
    arg(Type.String, contentName),
    arg(Type.String, description),
    arg(Type.String, tagsCsv),
    arg(Type.String, contentTypeName),
    arg(Type.Any, p5)
  )
end

-- BOOL UGC_SET_PLAYER_DATA(const char* contentId, float rating, const char* contentTypeName, Any p3) // 0x692D808C34A82143
function DATAFILE.UGC_SET_PLAYER_DATA(contentId, rating, contentTypeName, p3)
  return native.invoke(
    Type.Bool, 658, false,
    arg(Type.String, contentId),
    arg(Type.Float, rating),
    arg(Type.String, contentTypeName),
    arg(Type.Any, p3)
  )
end

-- BOOL DATAFILE_SELECT_UGC_DATA(int p0, Any p1) // 0xA69AC4ADE82B57A4
function DATAFILE.DATAFILE_SELECT_UGC_DATA(p0, p1)
  return native.invoke(
    Type.Bool, 659, false,
    arg(Type.Int, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL DATAFILE_SELECT_UGC_STATS(int p0, BOOL p1, Any p2) // 0x9CB0BFA7A9342C3D
function DATAFILE.DATAFILE_SELECT_UGC_STATS(p0, p1, p2)
  return native.invoke(
    Type.Bool, 660, false,
    arg(Type.Int, p0),
    arg(Type.Bool, p1),
    arg(Type.Any, p2)
  )
end

-- BOOL DATAFILE_SELECT_UGC_PLAYER_DATA(int p0, Any p1) // 0x52818819057F2B40
function DATAFILE.DATAFILE_SELECT_UGC_PLAYER_DATA(p0, p1)
  return native.invoke(
    Type.Bool, 661, false,
    arg(Type.Int, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL DATAFILE_SELECT_CREATOR_STATS(int p0, Any p1) // 0x01095C95CD46B624
function DATAFILE.DATAFILE_SELECT_CREATOR_STATS(p0, p1)
  return native.invoke(
    Type.Bool, 662, false,
    arg(Type.Int, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL DATAFILE_LOAD_OFFLINE_UGC(const char* filename, Any p1) // 0xC5238C011AF405E4
--[[
Loads a User-Generated Content (UGC) file. These files can be found in "[GTA5]\data\ugc" and "[GTA5]\common\patch\ugc". They seem to follow a naming convention, most likely of "[name]_[part].ugc". See example below for usage.

Returns whether or not the file was successfully loaded.

Example:
DATAFILE::DATAFILE_LOAD_OFFLINE_UGC("RockstarPlaylists") // loads "rockstarplaylists_00.ugc"
--]]
function DATAFILE.DATAFILE_LOAD_OFFLINE_UGC(filename, p1)
  return native.invoke(
    Type.Bool, 663, false,
    arg(Type.String, filename),
    arg(Type.Any, p1)
  )
end

-- void DATAFILE_CREATE(int p0) // 0xD27058A1CA2B13EE
function DATAFILE.DATAFILE_CREATE(p0)
  native.invoke(
    Type.Void, 664, false,
    arg(Type.Int, p0)
  )
end

-- void DATAFILE_DELETE(int p0) // 0x9AB9C1CFC8862DFB
function DATAFILE.DATAFILE_DELETE(p0)
  native.invoke(
    Type.Void, 665, false,
    arg(Type.Int, p0)
  )
end

-- void DATAFILE_STORE_MISSION_HEADER(int p0) // 0x2ED61456317B8178
function DATAFILE.DATAFILE_STORE_MISSION_HEADER(p0)
  native.invoke(
    Type.Void, 666, false,
    arg(Type.Int, p0)
  )
end

-- void DATAFILE_FLUSH_MISSION_HEADER() // 0xC55854C7D7274882
function DATAFILE.DATAFILE_FLUSH_MISSION_HEADER()
  native.invoke(
    Type.Void, 667, false
  )
end

-- Any* DATAFILE_GET_FILE_DICT(int p0) // 0x906B778CA1DC72B6
function DATAFILE.DATAFILE_GET_FILE_DICT(p0)
  return native.invoke(
    Type.Any, 668, false,
    arg(Type.Int, p0)
  )
end

-- BOOL DATAFILE_START_SAVE_TO_CLOUD(const char* filename, Any p1) // 0x83BCCE3224735F05
function DATAFILE.DATAFILE_START_SAVE_TO_CLOUD(filename, p1)
  return native.invoke(
    Type.Bool, 669, false,
    arg(Type.String, filename),
    arg(Type.Any, p1)
  )
end

-- BOOL DATAFILE_UPDATE_SAVE_TO_CLOUD(BOOL* p0) // 0x4DFDD9EB705F8140
function DATAFILE.DATAFILE_UPDATE_SAVE_TO_CLOUD(p0)
  return native.invoke(
    Type.Bool, 670, false,
    arg(Type.Bool, p0)
  )
end

-- BOOL DATAFILE_IS_SAVE_PENDING() // 0xBEDB96A7584AA8CF
function DATAFILE.DATAFILE_IS_SAVE_PENDING()
  return native.invoke(
    Type.Bool, 671, false
  )
end

-- BOOL DATAFILE_LOAD_OFFLINE_UGC_FOR_ADDITIONAL_DATA_FILE(Any p0, Any p1) // 0xA6EEF01087181EDD
function DATAFILE.DATAFILE_LOAD_OFFLINE_UGC_FOR_ADDITIONAL_DATA_FILE(p0, p1)
  return native.invoke(
    Type.Bool, 672, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void DATAFILE_DELETE_FOR_ADDITIONAL_DATA_FILE(Any p0) // 0x6AD0BD5E087866CB
function DATAFILE.DATAFILE_DELETE_FOR_ADDITIONAL_DATA_FILE(p0)
  native.invoke(
    Type.Void, 673, false,
    arg(Type.Any, p0)
  )
end

-- Any* DATAFILE_GET_FILE_DICT_FOR_ADDITIONAL_DATA_FILE(Any p0) // 0xDBF860CF1DB8E599
function DATAFILE.DATAFILE_GET_FILE_DICT_FOR_ADDITIONAL_DATA_FILE(p0)
  return native.invoke(
    Type.Any, 674, false,
    arg(Type.Any, p0)
  )
end

-- void DATADICT_SET_BOOL(Any* objectData, const char* key, BOOL value) // 0x35124302A556A325
function DATAFILE.DATADICT_SET_BOOL(objectData, key, value)
  native.invoke(
    Type.Void, 675, false,
    arg(Type.Any, objectData),
    arg(Type.String, key),
    arg(Type.Bool, value)
  )
end

-- void DATADICT_SET_INT(Any* objectData, const char* key, int value) // 0xE7E035450A7948D5
function DATAFILE.DATADICT_SET_INT(objectData, key, value)
  native.invoke(
    Type.Void, 676, false,
    arg(Type.Any, objectData),
    arg(Type.String, key),
    arg(Type.Int, value)
  )
end

-- void DATADICT_SET_FLOAT(Any* objectData, const char* key, float value) // 0xC27E1CC2D795105E
function DATAFILE.DATADICT_SET_FLOAT(objectData, key, value)
  native.invoke(
    Type.Void, 677, false,
    arg(Type.Any, objectData),
    arg(Type.String, key),
    arg(Type.Float, value)
  )
end

-- void DATADICT_SET_STRING(Any* objectData, const char* key, const char* value) // 0x8FF3847DADD8E30C
function DATAFILE.DATADICT_SET_STRING(objectData, key, value)
  native.invoke(
    Type.Void, 678, false,
    arg(Type.Any, objectData),
    arg(Type.String, key),
    arg(Type.String, value)
  )
end

-- void DATADICT_SET_VECTOR(Any* objectData, const char* key, float valueX, float valueY, float valueZ) // 0x4CD49B76338C7DEE
function DATAFILE.DATADICT_SET_VECTOR(objectData, key, valueX, valueY, valueZ)
  native.invoke(
    Type.Void, 679, false,
    arg(Type.Any, objectData),
    arg(Type.String, key),
    arg(Type.Float, valueX),
    arg(Type.Float, valueY),
    arg(Type.Float, valueZ)
  )
end

-- Any* DATADICT_CREATE_DICT(Any* objectData, const char* key) // 0xA358F56F10732EE1
function DATAFILE.DATADICT_CREATE_DICT(objectData, key)
  return native.invoke(
    Type.Any, 680, false,
    arg(Type.Any, objectData),
    arg(Type.String, key)
  )
end

-- Any* DATADICT_CREATE_ARRAY(Any* objectData, const char* key) // 0x5B11728527CA6E5F
function DATAFILE.DATADICT_CREATE_ARRAY(objectData, key)
  return native.invoke(
    Type.Any, 681, false,
    arg(Type.Any, objectData),
    arg(Type.String, key)
  )
end

-- BOOL DATADICT_GET_BOOL(Any* objectData, const char* key) // 0x1186940ED72FFEEC
function DATAFILE.DATADICT_GET_BOOL(objectData, key)
  return native.invoke(
    Type.Bool, 682, false,
    arg(Type.Any, objectData),
    arg(Type.String, key)
  )
end

-- int DATADICT_GET_INT(Any* objectData, const char* key) // 0x78F06F6B1FB5A80C
function DATAFILE.DATADICT_GET_INT(objectData, key)
  return native.invoke(
    Type.Int, 683, false,
    arg(Type.Any, objectData),
    arg(Type.String, key)
  )
end

-- float DATADICT_GET_FLOAT(Any* objectData, const char* key) // 0x06610343E73B9727
function DATAFILE.DATADICT_GET_FLOAT(objectData, key)
  return native.invoke(
    Type.Float, 684, false,
    arg(Type.Any, objectData),
    arg(Type.String, key)
  )
end

-- const char* DATADICT_GET_STRING(Any* objectData, const char* key) // 0x3D2FD9E763B24472
function DATAFILE.DATADICT_GET_STRING(objectData, key)
  return native.invoke(
    Type.Const char, 685, false,
    arg(Type.Any, objectData),
    arg(Type.String, key)
  )
end

-- Vector3 DATADICT_GET_VECTOR(Any* objectData, const char* key) // 0x46CD3CB66E0825CC
function DATAFILE.DATADICT_GET_VECTOR(objectData, key)
  return native.invoke(
    Type.Vector3, 686, false,
    arg(Type.Any, objectData),
    arg(Type.String, key)
  )
end

-- Any* DATADICT_GET_DICT(Any* objectData, const char* key) // 0xB6B9DDC412FCEEE2
function DATAFILE.DATADICT_GET_DICT(objectData, key)
  return native.invoke(
    Type.Any, 687, false,
    arg(Type.Any, objectData),
    arg(Type.String, key)
  )
end

-- Any* DATADICT_GET_ARRAY(Any* objectData, const char* key) // 0x7A983AA9DA2659ED
function DATAFILE.DATADICT_GET_ARRAY(objectData, key)
  return native.invoke(
    Type.Any, 688, false,
    arg(Type.Any, objectData),
    arg(Type.String, key)
  )
end

-- int DATADICT_GET_TYPE(Any* objectData, const char* key) // 0x031C55ED33227371
--[[
Types:
1 = Boolean
2 = Integer
3 = Float
4 = String
5 = Vector3
6 = Object
7 = Array
--]]
function DATAFILE.DATADICT_GET_TYPE(objectData, key)
  return native.invoke(
    Type.Int, 689, false,
    arg(Type.Any, objectData),
    arg(Type.String, key)
  )
end

-- void DATAARRAY_ADD_BOOL(Any* arrayData, BOOL value) // 0xF8B0F5A43E928C76
function DATAFILE.DATAARRAY_ADD_BOOL(arrayData, value)
  native.invoke(
    Type.Void, 690, false,
    arg(Type.Any, arrayData),
    arg(Type.Bool, value)
  )
end

-- void DATAARRAY_ADD_INT(Any* arrayData, int value) // 0xCABDB751D86FE93B
function DATAFILE.DATAARRAY_ADD_INT(arrayData, value)
  native.invoke(
    Type.Void, 691, false,
    arg(Type.Any, arrayData),
    arg(Type.Int, value)
  )
end

-- void DATAARRAY_ADD_FLOAT(Any* arrayData, float value) // 0x57A995FD75D37F56
function DATAFILE.DATAARRAY_ADD_FLOAT(arrayData, value)
  native.invoke(
    Type.Void, 692, false,
    arg(Type.Any, arrayData),
    arg(Type.Float, value)
  )
end

-- void DATAARRAY_ADD_STRING(Any* arrayData, const char* value) // 0x2F0661C155AEEEAA
function DATAFILE.DATAARRAY_ADD_STRING(arrayData, value)
  native.invoke(
    Type.Void, 693, false,
    arg(Type.Any, arrayData),
    arg(Type.String, value)
  )
end

-- void DATAARRAY_ADD_VECTOR(Any* arrayData, float valueX, float valueY, float valueZ) // 0x407F8D034F70F0C2
function DATAFILE.DATAARRAY_ADD_VECTOR(arrayData, valueX, valueY, valueZ)
  native.invoke(
    Type.Void, 694, false,
    arg(Type.Any, arrayData),
    arg(Type.Float, valueX),
    arg(Type.Float, valueY),
    arg(Type.Float, valueZ)
  )
end

-- Any* DATAARRAY_ADD_DICT(Any* arrayData) // 0x6889498B3E19C797
function DATAFILE.DATAARRAY_ADD_DICT(arrayData)
  return native.invoke(
    Type.Any, 695, false,
    arg(Type.Any, arrayData)
  )
end

-- BOOL DATAARRAY_GET_BOOL(Any* arrayData, int arrayIndex) // 0x50C1B2874E50C114
function DATAFILE.DATAARRAY_GET_BOOL(arrayData, arrayIndex)
  return native.invoke(
    Type.Bool, 696, false,
    arg(Type.Any, arrayData),
    arg(Type.Int, arrayIndex)
  )
end

-- int DATAARRAY_GET_INT(Any* arrayData, int arrayIndex) // 0x3E5AE19425CD74BE
function DATAFILE.DATAARRAY_GET_INT(arrayData, arrayIndex)
  return native.invoke(
    Type.Int, 697, false,
    arg(Type.Any, arrayData),
    arg(Type.Int, arrayIndex)
  )
end

-- float DATAARRAY_GET_FLOAT(Any* arrayData, int arrayIndex) // 0xC0C527B525D7CFB5
function DATAFILE.DATAARRAY_GET_FLOAT(arrayData, arrayIndex)
  return native.invoke(
    Type.Float, 698, false,
    arg(Type.Any, arrayData),
    arg(Type.Int, arrayIndex)
  )
end

-- const char* DATAARRAY_GET_STRING(Any* arrayData, int arrayIndex) // 0xD3F2FFEB8D836F52
function DATAFILE.DATAARRAY_GET_STRING(arrayData, arrayIndex)
  return native.invoke(
    Type.Const char, 699, false,
    arg(Type.Any, arrayData),
    arg(Type.Int, arrayIndex)
  )
end

-- Vector3 DATAARRAY_GET_VECTOR(Any* arrayData, int arrayIndex) // 0x8D2064E5B64A628A
function DATAFILE.DATAARRAY_GET_VECTOR(arrayData, arrayIndex)
  return native.invoke(
    Type.Vector3, 700, false,
    arg(Type.Any, arrayData),
    arg(Type.Int, arrayIndex)
  )
end

-- Any* DATAARRAY_GET_DICT(Any* arrayData, int arrayIndex) // 0x8B5FADCC4E3A145F
function DATAFILE.DATAARRAY_GET_DICT(arrayData, arrayIndex)
  return native.invoke(
    Type.Any, 701, false,
    arg(Type.Any, arrayData),
    arg(Type.Int, arrayIndex)
  )
end

-- int DATAARRAY_GET_COUNT(Any* arrayData) // 0x065DB281590CEA2D
function DATAFILE.DATAARRAY_GET_COUNT(arrayData)
  return native.invoke(
    Type.Int, 702, false,
    arg(Type.Any, arrayData)
  )
end

-- int DATAARRAY_GET_TYPE(Any* arrayData, int arrayIndex) // 0x3A0014ADB172A3C5
--[[
Types:
1 = Boolean
2 = Integer
3 = Float
4 = String
5 = Vector3
6 = Object
7 = Array
--]]
function DATAFILE.DATAARRAY_GET_TYPE(arrayData, arrayIndex)
  return native.invoke(
    Type.Int, 703, false,
    arg(Type.Any, arrayData),
    arg(Type.Int, arrayIndex)
  )
end


DECORATOR = {}

-- BOOL DECOR_SET_TIME(Entity entity, const char* propertyName, int timestamp) // 0x95AED7B8E39ECAA4
function DECORATOR.DECOR_SET_TIME(entity, propertyName, timestamp)
  return native.invoke(
    Type.Bool, 704, false,
    arg(Type.Entity, entity),
    arg(Type.String, propertyName),
    arg(Type.Int, timestamp)
  )
end

-- BOOL DECOR_SET_BOOL(Entity entity, const char* propertyName, BOOL value) // 0x6B1E8E2ED1335B71
--[[
This function sets metadata of type bool to specified entity.

--]]
function DECORATOR.DECOR_SET_BOOL(entity, propertyName, value)
  return native.invoke(
    Type.Bool, 705, false,
    arg(Type.Entity, entity),
    arg(Type.String, propertyName),
    arg(Type.Bool, value)
  )
end

-- BOOL DECOR_SET_FLOAT(Entity entity, const char* propertyName, float value) // 0x211AB1DD8D0F363A
function DECORATOR.DECOR_SET_FLOAT(entity, propertyName, value)
  return native.invoke(
    Type.Bool, 706, false,
    arg(Type.Entity, entity),
    arg(Type.String, propertyName),
    arg(Type.Float, value)
  )
end

-- BOOL DECOR_SET_INT(Entity entity, const char* propertyName, int value) // 0x0CE3AA5E1CA19E10
--[[
Sets property to int.
--]]
function DECORATOR.DECOR_SET_INT(entity, propertyName, value)
  return native.invoke(
    Type.Bool, 707, false,
    arg(Type.Entity, entity),
    arg(Type.String, propertyName),
    arg(Type.Int, value)
  )
end

-- BOOL DECOR_GET_BOOL(Entity entity, const char* propertyName) // 0xDACE671663F2F5DB
function DECORATOR.DECOR_GET_BOOL(entity, propertyName)
  return native.invoke(
    Type.Bool, 708, false,
    arg(Type.Entity, entity),
    arg(Type.String, propertyName)
  )
end

-- float DECOR_GET_FLOAT(Entity entity, const char* propertyName) // 0x6524A2F114706F43
function DECORATOR.DECOR_GET_FLOAT(entity, propertyName)
  return native.invoke(
    Type.Float, 709, false,
    arg(Type.Entity, entity),
    arg(Type.String, propertyName)
  )
end

-- int DECOR_GET_INT(Entity entity, const char* propertyName) // 0xA06C969B02A97298
function DECORATOR.DECOR_GET_INT(entity, propertyName)
  return native.invoke(
    Type.Int, 710, false,
    arg(Type.Entity, entity),
    arg(Type.String, propertyName)
  )
end

-- BOOL DECOR_EXIST_ON(Entity entity, const char* propertyName) // 0x05661B80A8C9165F
--[[
Returns whether or not the specified property is set for the entity.
--]]
function DECORATOR.DECOR_EXIST_ON(entity, propertyName)
  return native.invoke(
    Type.Bool, 711, false,
    arg(Type.Entity, entity),
    arg(Type.String, propertyName)
  )
end

-- BOOL DECOR_REMOVE(Entity entity, const char* propertyName) // 0x00EE9F297C738720
function DECORATOR.DECOR_REMOVE(entity, propertyName)
  return native.invoke(
    Type.Bool, 712, false,
    arg(Type.Entity, entity),
    arg(Type.String, propertyName)
  )
end

-- void DECOR_REGISTER(const char* propertyName, int type) // 0x9FD90732F56403CE
--[[
https://alloc8or.re/gta5/doc/enums/eDecorType.txt
--]]
function DECORATOR.DECOR_REGISTER(propertyName, type)
  native.invoke(
    Type.Void, 713, false,
    arg(Type.String, propertyName),
    arg(Type.Int, type)
  )
end

-- BOOL DECOR_IS_REGISTERED_AS_TYPE(const char* propertyName, int type) // 0x4F14F9F870D6FBC8
--[[
type: see DECOR_REGISTER
--]]
function DECORATOR.DECOR_IS_REGISTERED_AS_TYPE(propertyName, type)
  return native.invoke(
    Type.Bool, 714, false,
    arg(Type.String, propertyName),
    arg(Type.Int, type)
  )
end

-- void DECOR_REGISTER_LOCK() // 0xA9D14EEA259F9248
--[[
Called after all decorator type initializations.
--]]
function DECORATOR.DECOR_REGISTER_LOCK()
  native.invoke(
    Type.Void, 715, false
  )
end


DLC = {}

-- BOOL ARE_ANY_CCS_PENDING() // 0x241FCA5B1AA14F75
function DLC.ARE_ANY_CCS_PENDING()
  return native.invoke(
    Type.Bool, 716, false
  )
end

-- BOOL IS_DLC_PRESENT(Hash dlcHash) // 0x812595A0644CE1DE
--[[
Returns true if the given DLC pack is present.
--]]
function DLC.IS_DLC_PRESENT(dlcHash)
  return native.invoke(
    Type.Bool, 717, false,
    arg(Type.Hash, dlcHash)
  )
end

-- BOOL DLC_CHECK_CLOUD_DATA_CORRECT() // 0xF2E07819EF1A5289
--[[
This function is hard-coded to always return 1.
--]]
function DLC.DLC_CHECK_CLOUD_DATA_CORRECT()
  return native.invoke(
    Type.Bool, 718, false
  )
end

-- int GET_EXTRACONTENT_CLOUD_RESULT() // 0x9489659372A81585
--[[
This function is hard-coded to always return 0.
--]]
function DLC.GET_EXTRACONTENT_CLOUD_RESULT()
  return native.invoke(
    Type.Int, 719, false
  )
end

-- BOOL DLC_CHECK_COMPAT_PACK_CONFIGURATION() // 0xA213B11DFF526300
--[[
This function is hard-coded to always return 1.
--]]
function DLC.DLC_CHECK_COMPAT_PACK_CONFIGURATION()
  return native.invoke(
    Type.Bool, 720, false
  )
end

-- BOOL GET_EVER_HAD_BAD_PACK_ORDER() // 0x8D30F648014A92B5
function DLC.GET_EVER_HAD_BAD_PACK_ORDER()
  return native.invoke(
    Type.Bool, 721, false
  )
end

-- BOOL GET_IS_LOADING_SCREEN_ACTIVE() // 0x10D0A8F259E93EC9
function DLC.GET_IS_LOADING_SCREEN_ACTIVE()
  return native.invoke(
    Type.Bool, 722, false
  )
end

-- BOOL GET_IS_INITIAL_LOADING_SCREEN_ACTIVE() // 0xC4637A6D03C24CC3
function DLC.GET_IS_INITIAL_LOADING_SCREEN_ACTIVE()
  return native.invoke(
    Type.Bool, 723, false
  )
end

-- BOOL HAS_CLOUD_REQUESTS_FINISHED(BOOL* p0, int unused) // 0x46E2B844905BC5F0
--[[
Sets the value of the specified variable to 0.
Always returns true.
--]]
function DLC.HAS_CLOUD_REQUESTS_FINISHED(p0, unused)
  return native.invoke(
    Type.Bool, 724, false,
    arg(Type.Bool, p0),
    arg(Type.Int, unused)
  )
end

-- void ON_ENTER_SP() // 0xD7C10C4A637992C9
--[[
Unloads GROUP_MAP (GTAO/MP) DLC data and loads GROUP_MAP_SP DLC. Neither are loaded by default, ON_ENTER_MP is a cognate to this function and loads MP DLC (and unloads SP DLC by extension).
Works in singleplayer.
--]]
function DLC.ON_ENTER_SP()
  native.invoke(
    Type.Void, 725, false
  )
end

-- void ON_ENTER_MP() // 0x0888C3502DBBEEF5
--[[
This loads the GTA:O dlc map parts (high end garages, apartments).
Works in singleplayer.
In order to use GTA:O heist IPL's you have to call this native with the following params: SET_INSTANCE_PRIORITY_MODE(1);
--]]
function DLC.ON_ENTER_MP()
  native.invoke(
    Type.Void, 726, false
  )
end


ENTITY = {}

-- BOOL DOES_ENTITY_EXIST(Entity entity) // 0x7239B21A38F536BA
--[[
Checks whether an entity exists in the game world.
--]]
function ENTITY.DOES_ENTITY_EXIST(entity)
  return native.invoke(
    Type.Bool, 727, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL DOES_ENTITY_BELONG_TO_THIS_SCRIPT(Entity entity, BOOL p1) // 0xDDE6DF5AE89981D2
function ENTITY.DOES_ENTITY_BELONG_TO_THIS_SCRIPT(entity, p1)
  return native.invoke(
    Type.Bool, 728, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, p1)
  )
end

-- BOOL DOES_ENTITY_HAVE_DRAWABLE(Entity entity) // 0x060D6E96F8B8E48D
function ENTITY.DOES_ENTITY_HAVE_DRAWABLE(entity)
  return native.invoke(
    Type.Bool, 729, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL DOES_ENTITY_HAVE_PHYSICS(Entity entity) // 0xDA95EA3317CC5064
function ENTITY.DOES_ENTITY_HAVE_PHYSICS(entity)
  return native.invoke(
    Type.Bool, 730, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL DOES_ENTITY_HAVE_SKELETON(Entity entity) // 0x764EB96874EFFDC1
function ENTITY.DOES_ENTITY_HAVE_SKELETON(entity)
  return native.invoke(
    Type.Bool, 731, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL DOES_ENTITY_HAVE_ANIM_DIRECTOR(Entity entity) // 0x2158E81A6AF65EA9
function ENTITY.DOES_ENTITY_HAVE_ANIM_DIRECTOR(entity)
  return native.invoke(
    Type.Bool, 732, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL HAS_ENTITY_ANIM_FINISHED(Entity entity, const char* animDict, const char* animName, int p3) // 0x20B711662962B472
--[[
P3 is always 3 as far as i cant tell

Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
--]]
function ENTITY.HAS_ENTITY_ANIM_FINISHED(entity, animDict, animName, p3)
  return native.invoke(
    Type.Bool, 733, false,
    arg(Type.Entity, entity),
    arg(Type.String, animDict),
    arg(Type.String, animName),
    arg(Type.Int, p3)
  )
end

-- BOOL HAS_ENTITY_BEEN_DAMAGED_BY_ANY_OBJECT(Entity entity) // 0x95EB9964FF5C5C65
function ENTITY.HAS_ENTITY_BEEN_DAMAGED_BY_ANY_OBJECT(entity)
  return native.invoke(
    Type.Bool, 734, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL HAS_ENTITY_BEEN_DAMAGED_BY_ANY_PED(Entity entity) // 0x605F5A140F202491
function ENTITY.HAS_ENTITY_BEEN_DAMAGED_BY_ANY_PED(entity)
  return native.invoke(
    Type.Bool, 735, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL HAS_ENTITY_BEEN_DAMAGED_BY_ANY_VEHICLE(Entity entity) // 0xDFD5033FDBA0A9C8
function ENTITY.HAS_ENTITY_BEEN_DAMAGED_BY_ANY_VEHICLE(entity)
  return native.invoke(
    Type.Bool, 736, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(Entity entity1, Entity entity2, BOOL p2) // 0xC86D67D52A707CF8
--[[
Entity 1 = Victim
Entity 2 = Attacker

p2 seems to always be 1
--]]
function ENTITY.HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(entity1, entity2, p2)
  return native.invoke(
    Type.Bool, 737, false,
    arg(Type.Entity, entity1),
    arg(Type.Entity, entity2),
    arg(Type.Bool, p2)
  )
end

-- BOOL HAS_ENTITY_CLEAR_LOS_TO_ENTITY(Entity entity1, Entity entity2, int traceType) // 0xFCDFF7B72D23A1AC
--[[
traceType is always 17 in the scripts.

There is other codes used for traceType:
19 - in jewelry_prep1a
126 - in am_hunt_the_beast
256 & 287 - in fm_mission_controller
--]]
function ENTITY.HAS_ENTITY_CLEAR_LOS_TO_ENTITY(entity1, entity2, traceType)
  return native.invoke(
    Type.Bool, 738, false,
    arg(Type.Entity, entity1),
    arg(Type.Entity, entity2),
    arg(Type.Int, traceType)
  )
end

-- BOOL HAS_ENTITY_CLEAR_LOS_TO_ENTITY_ADJUST_FOR_COVER(Entity entity1, Entity entity2, int traceType) // 0x394BDE2A7BBA031E
function ENTITY.HAS_ENTITY_CLEAR_LOS_TO_ENTITY_ADJUST_FOR_COVER(entity1, entity2, traceType)
  return native.invoke(
    Type.Bool, 739, false,
    arg(Type.Entity, entity1),
    arg(Type.Entity, entity2),
    arg(Type.Int, traceType)
  )
end

-- BOOL HAS_ENTITY_CLEAR_LOS_TO_ENTITY_IN_FRONT(Entity entity1, Entity entity2) // 0x0267D00AF114F17A
--[[
Has the entity1 got a clear line of sight to the other entity2 from the direction entity1 is facing.
This is one of the most CPU demanding BOOL natives in the game; avoid calling this in things like nested for-loops
--]]
function ENTITY.HAS_ENTITY_CLEAR_LOS_TO_ENTITY_IN_FRONT(entity1, entity2)
  return native.invoke(
    Type.Bool, 740, false,
    arg(Type.Entity, entity1),
    arg(Type.Entity, entity2)
  )
end

-- BOOL HAS_ENTITY_COLLIDED_WITH_ANYTHING(Entity entity) // 0x8BAD02F0368D9E14
--[[
Called on tick.
Tested with vehicles, returns true whenever the vehicle is touching any entity.

Note: for vehicles, the wheels can touch the ground and it will still return false, but if the body of the vehicle touches the ground, it will return true.
--]]
function ENTITY.HAS_ENTITY_COLLIDED_WITH_ANYTHING(entity)
  return native.invoke(
    Type.Bool, 741, false,
    arg(Type.Entity, entity)
  )
end

-- Entity _GET_LAST_ENTITY_HIT_BY_ENTITY(Entity entity) // 0xA75EE4F689B85391
function ENTITY._GET_LAST_ENTITY_HIT_BY_ENTITY(entity)
  return native.invoke(
    Type.Entity, 742, false,
    arg(Type.Entity, entity)
  )
end

-- Hash GET_LAST_MATERIAL_HIT_BY_ENTITY(Entity entity) // 0x5C3D0A935F535C4C
function ENTITY.GET_LAST_MATERIAL_HIT_BY_ENTITY(entity)
  return native.invoke(
    Type.Hash, 743, false,
    arg(Type.Entity, entity)
  )
end

-- Vector3 GET_COLLISION_NORMAL_OF_LAST_HIT_FOR_ENTITY(Entity entity) // 0xE465D4AB7CA6AE72
function ENTITY.GET_COLLISION_NORMAL_OF_LAST_HIT_FOR_ENTITY(entity)
  return native.invoke(
    Type.Vector3, 744, false,
    arg(Type.Entity, entity)
  )
end

-- void FORCE_ENTITY_AI_AND_ANIMATION_UPDATE(Entity entity) // 0x40FDEDB72F8293B2
--[[
Based on carmod_shop script decompile this takes a vehicle parameter. It is called when repair is done on initial enter.
--]]
function ENTITY.FORCE_ENTITY_AI_AND_ANIMATION_UPDATE(entity)
  native.invoke(
    Type.Void, 745, false,
    arg(Type.Entity, entity)
  )
end

-- float GET_ENTITY_ANIM_CURRENT_TIME(Entity entity, const char* animDict, const char* animName) // 0x346D81500D088F42
--[[
Returns a float value representing animation's current playtime with respect to its total playtime. This value increasing in a range from [0 to 1] and wrap back to 0 when it reach 1.

Example:
0.000000 - mark the starting of animation.
0.500000 - mark the midpoint of the animation.
1.000000 - mark the end of animation.

Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
--]]
function ENTITY.GET_ENTITY_ANIM_CURRENT_TIME(entity, animDict, animName)
  return native.invoke(
    Type.Float, 746, false,
    arg(Type.Entity, entity),
    arg(Type.String, animDict),
    arg(Type.String, animName)
  )
end

-- float GET_ENTITY_ANIM_TOTAL_TIME(Entity entity, const char* animDict, const char* animName) // 0x50BD2730B191E360
--[[
Returns a float value representing animation's total playtime in milliseconds.

Example:
GET_ENTITY_ANIM_TOTAL_TIME(PLAYER_ID(),"amb@world_human_yoga@female@base","base_b") 
return 20800.000000

Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
--]]
function ENTITY.GET_ENTITY_ANIM_TOTAL_TIME(entity, animDict, animName)
  return native.invoke(
    Type.Float, 747, false,
    arg(Type.Entity, entity),
    arg(Type.String, animDict),
    arg(Type.String, animName)
  )
end

-- float GET_ANIM_DURATION(const char* animDict, const char* animName) // 0xFEDDF04D62B8D790
--[[
Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
--]]
function ENTITY.GET_ANIM_DURATION(animDict, animName)
  return native.invoke(
    Type.Float, 748, false,
    arg(Type.String, animDict),
    arg(Type.String, animName)
  )
end

-- Entity GET_ENTITY_ATTACHED_TO(Entity entity) // 0x48C2BED9180FE123
function ENTITY.GET_ENTITY_ATTACHED_TO(entity)
  return native.invoke(
    Type.Entity, 749, false,
    arg(Type.Entity, entity)
  )
end

-- Vector3 GET_ENTITY_COORDS(Entity entity, BOOL alive) // 0x3FEF770D40960D5A
--[[
Gets the current coordinates for a specified entity.
`entity` = The entity to get the coordinates from.
`alive` = Unused by the game, potentially used by debug builds of GTA in order to assert whether or not an entity was alive.
--]]
function ENTITY.GET_ENTITY_COORDS(entity, alive)
  return native.invoke(
    Type.Vector3, 750, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, alive)
  )
end

-- Vector3 GET_ENTITY_FORWARD_VECTOR(Entity entity) // 0x0A794A5A57F8DF91
--[[
Gets the entity's forward vector.
--]]
function ENTITY.GET_ENTITY_FORWARD_VECTOR(entity)
  return native.invoke(
    Type.Vector3, 751, false,
    arg(Type.Entity, entity)
  )
end

-- float GET_ENTITY_FORWARD_X(Entity entity) // 0x8BB4EF4214E0E6D5
--[[
Gets the X-component of the entity's forward vector.
--]]
function ENTITY.GET_ENTITY_FORWARD_X(entity)
  return native.invoke(
    Type.Float, 752, false,
    arg(Type.Entity, entity)
  )
end

-- float GET_ENTITY_FORWARD_Y(Entity entity) // 0x866A4A5FAE349510
--[[
Gets the Y-component of the entity's forward vector.
--]]
function ENTITY.GET_ENTITY_FORWARD_Y(entity)
  return native.invoke(
    Type.Float, 753, false,
    arg(Type.Entity, entity)
  )
end

-- float GET_ENTITY_HEADING(Entity entity) // 0xE83D4F9BA2A38914
--[[
Returns the heading of the entity in degrees. Also know as the "Yaw" of an entity.
--]]
function ENTITY.GET_ENTITY_HEADING(entity)
  return native.invoke(
    Type.Float, 754, false,
    arg(Type.Entity, entity)
  )
end

-- float GET_ENTITY_HEADING_FROM_EULERS(Entity entity) // 0x846BF6291198A71E
--[[
Gets the heading of the entity physics in degrees, which tends to be more accurate than just "GET_ENTITY_HEADING". This can be clearly seen while, for example, ragdolling a ped/player.

NOTE: The name and description of this native are based on independent research. If you find this native to be more suitable under a different name and/or described differently, please feel free to do so.
--]]
function ENTITY.GET_ENTITY_HEADING_FROM_EULERS(entity)
  return native.invoke(
    Type.Float, 755, false,
    arg(Type.Entity, entity)
  )
end

-- int GET_ENTITY_HEALTH(Entity entity) // 0xEEF059FAD016D209
--[[
Returns an integer value of entity's current health.

Example of range for ped:
- Player [0 to 200]
- Ped [100 to 200]
- Vehicle [0 to 1000]
- Object [0 to 1000]

Health is actually a float value but this native casts it to int.
In order to get the actual value, do:
float health = *(float *)(entityAddress + 0x280);
--]]
function ENTITY.GET_ENTITY_HEALTH(entity)
  return native.invoke(
    Type.Int, 756, false,
    arg(Type.Entity, entity)
  )
end

-- int GET_ENTITY_MAX_HEALTH(Entity entity) // 0x15D757606D170C3C
--[[
Return an integer value of entity's maximum health.

Example:
- Player = 200
- Ped = 150
--]]
function ENTITY.GET_ENTITY_MAX_HEALTH(entity)
  return native.invoke(
    Type.Int, 757, false,
    arg(Type.Entity, entity)
  )
end

-- void SET_ENTITY_MAX_HEALTH(Entity entity, int value) // 0x166E7CF68597D8B5
--[[
For instance: ENTITY::SET_ENTITY_MAX_HEALTH(PLAYER::PLAYER_PED_ID(), 200); // director_mode.c4: 67849
--]]
function ENTITY.SET_ENTITY_MAX_HEALTH(entity, value)
  native.invoke(
    Type.Void, 758, false,
    arg(Type.Entity, entity),
    arg(Type.Int, value)
  )
end

-- float GET_ENTITY_HEIGHT(Entity entity, float X, float Y, float Z, BOOL atTop, BOOL inWorldCoords) // 0x5A504562485944DD
function ENTITY.GET_ENTITY_HEIGHT(entity, X, Y, Z, atTop, inWorldCoords)
  return native.invoke(
    Type.Float, 759, false,
    arg(Type.Entity, entity),
    arg(Type.Float, X),
    arg(Type.Float, Y),
    arg(Type.Float, Z),
    arg(Type.Bool, atTop),
    arg(Type.Bool, inWorldCoords)
  )
end

-- float GET_ENTITY_HEIGHT_ABOVE_GROUND(Entity entity) // 0x1DD55701034110E5
--[[
Return height (z-dimension) above ground. 
Example: The pilot in a titan plane is 1.844176 above ground.

How can i convert it to meters?
Everything seems to be in meters, probably this too.
--]]
function ENTITY.GET_ENTITY_HEIGHT_ABOVE_GROUND(entity)
  return native.invoke(
    Type.Float, 760, false,
    arg(Type.Entity, entity)
  )
end

-- void GET_ENTITY_MATRIX(Entity entity, Vector3* forwardVector, Vector3* rightVector, Vector3* upVector, Vector3* position) // 0xECB2FC7235A7D137
function ENTITY.GET_ENTITY_MATRIX(entity, forwardVector, rightVector, upVector, position)
  native.invoke(
    Type.Void, 761, true,
    arg(Type.Entity, entity),
    arg(Type.Vector3, forwardVector),
    arg(Type.Vector3, rightVector),
    arg(Type.Vector3, upVector),
    arg(Type.Vector3, position)
  )
end

-- Hash GET_ENTITY_MODEL(Entity entity) // 0x9F47B058362C84B5
--[[
Returns the model hash from the entity
--]]
function ENTITY.GET_ENTITY_MODEL(entity)
  return native.invoke(
    Type.Hash, 762, false,
    arg(Type.Entity, entity)
  )
end

-- Vector3 GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(Entity entity, float posX, float posY, float posZ) // 0x2274BC1C4885E333
--[[
Converts world coords (posX - Z) to coords relative to the entity

Example:
posX is given as 50
entity's x coord is 40
the returned x coord will then be 10 or -10, not sure haven't used this in a while (think it is 10 though).
--]]
function ENTITY.GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(entity, posX, posY, posZ)
  return native.invoke(
    Type.Vector3, 763, false,
    arg(Type.Entity, entity),
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ)
  )
end

-- Vector3 GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(Entity entity, float offsetX, float offsetY, float offsetZ) // 0x1899F328B0E12848
--[[
Offset values are relative to the entity.

x = left/right
y = forward/backward
z = up/down
--]]
function ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(entity, offsetX, offsetY, offsetZ)
  return native.invoke(
    Type.Vector3, 764, false,
    arg(Type.Entity, entity),
    arg(Type.Float, offsetX),
    arg(Type.Float, offsetY),
    arg(Type.Float, offsetZ)
  )
end

-- float GET_ENTITY_PITCH(Entity entity) // 0xD45DC2893621E1FE
function ENTITY.GET_ENTITY_PITCH(entity)
  return native.invoke(
    Type.Float, 765, false,
    arg(Type.Entity, entity)
  )
end

-- void GET_ENTITY_QUATERNION(Entity entity, float* x, float* y, float* z, float* w) // 0x7B3703D2D32DFA18
--[[
w is the correct parameter name!
--]]
function ENTITY.GET_ENTITY_QUATERNION(entity, x, y, z, w)
  native.invoke(
    Type.Void, 766, false,
    arg(Type.Entity, entity),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, w)
  )
end

-- float GET_ENTITY_ROLL(Entity entity) // 0x831E0242595560DF
--[[
Displays the current ROLL axis of the entity [-180.0000/180.0000+]
(Sideways Roll) such as a vehicle tipped on its side
--]]
function ENTITY.GET_ENTITY_ROLL(entity)
  return native.invoke(
    Type.Float, 767, false,
    arg(Type.Entity, entity)
  )
end

-- Vector3 GET_ENTITY_ROTATION(Entity entity, int rotationOrder) // 0xAFBD61CC738D9EB9
--[[
rotationOrder is the order yaw, pitch and roll is applied. Usually 2. Returns a vector where the Z coordinate is the yaw.

rotationOrder refers to the order yaw pitch roll is applied; value ranges from 0 to 5 and is usually *2* in scripts.
What you use for rotationOrder when getting must be the same as rotationOrder when setting the rotation.

What it returns is the yaw on the z part of the vector, which makes sense considering R* considers z as vertical. Here's a picture for those of you who don't understand pitch, yaw, and roll: www.allstar.fiu.edu/aero/images/pic5-1.gif

Rotation Orders:
0: ZYX - Rotate around the z-axis, then the y-axis and finally the x-axis.
1: YZX - Rotate around the y-axis, then the z-axis and finally the x-axis.
2: ZXY - Rotate around the z-axis, then the x-axis and finally the y-axis.
3: XZY - Rotate around the x-axis, then the z-axis and finally the y-axis.
4: YXZ - Rotate around the y-axis, then the x-axis and finally the z-axis.
5: XYZ - Rotate around the x-axis, then the y-axis and finally the z-axis.
--]]
function ENTITY.GET_ENTITY_ROTATION(entity, rotationOrder)
  return native.invoke(
    Type.Vector3, 768, false,
    arg(Type.Entity, entity),
    arg(Type.Int, rotationOrder)
  )
end

-- Vector3 GET_ENTITY_ROTATION_VELOCITY(Entity entity) // 0x213B91045D09B983
function ENTITY.GET_ENTITY_ROTATION_VELOCITY(entity)
  return native.invoke(
    Type.Vector3, 769, false,
    arg(Type.Entity, entity)
  )
end

-- const char* GET_ENTITY_SCRIPT(Entity entity, ScrHandle* script) // 0xA6E9C38DB51D7748
--[[
Returns the name of the script that owns/created the entity or nullptr. Second parameter is unused, can just be a nullptr.
--]]
function ENTITY.GET_ENTITY_SCRIPT(entity, script)
  return native.invoke(
    Type.Const char, 770, false,
    arg(Type.Entity, entity),
    arg(Type.Scrhandle, script)
  )
end

-- float GET_ENTITY_SPEED(Entity entity) // 0xD5037BA82E12416F
--[[
result is in meters per second

------------------------------------------------------------
So would the conversion to mph and km/h, be along the lines of this.

float speed = GET_ENTITY_SPEED(veh);
float kmh = (speed * 3.6);
float mph = (speed * 2.236936);
------------------------------------------------------------
--]]
function ENTITY.GET_ENTITY_SPEED(entity)
  return native.invoke(
    Type.Float, 771, false,
    arg(Type.Entity, entity)
  )
end

-- Vector3 GET_ENTITY_SPEED_VECTOR(Entity entity, BOOL relative) // 0x9A8D700A51CB7B0D
--[[
Relative can be used for getting speed relative to the frame of the vehicle, to determine for example, if you are going in reverse (-y speed) or not (+y speed). 
--]]
function ENTITY.GET_ENTITY_SPEED_VECTOR(entity, relative)
  return native.invoke(
    Type.Vector3, 772, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, relative)
  )
end

-- float GET_ENTITY_UPRIGHT_VALUE(Entity entity) // 0x95EED5A694951F9F
function ENTITY.GET_ENTITY_UPRIGHT_VALUE(entity)
  return native.invoke(
    Type.Float, 773, false,
    arg(Type.Entity, entity)
  )
end

-- Vector3 GET_ENTITY_VELOCITY(Entity entity) // 0x4805D2B1D8CF94A9
function ENTITY.GET_ENTITY_VELOCITY(entity)
  return native.invoke(
    Type.Vector3, 774, false,
    arg(Type.Entity, entity)
  )
end

-- Object GET_OBJECT_INDEX_FROM_ENTITY_INDEX(Entity entity) // 0xD7E3B9735C0F89D6
--[[
Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
--]]
function ENTITY.GET_OBJECT_INDEX_FROM_ENTITY_INDEX(entity)
  return native.invoke(
    Type.Object, 775, false,
    arg(Type.Entity, entity)
  )
end

-- Ped GET_PED_INDEX_FROM_ENTITY_INDEX(Entity entity) // 0x04A2A40C73395041
--[[
Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
--]]
function ENTITY.GET_PED_INDEX_FROM_ENTITY_INDEX(entity)
  return native.invoke(
    Type.Ped, 776, false,
    arg(Type.Entity, entity)
  )
end

-- Vehicle GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(Entity entity) // 0x4B53F92932ADFAC0
--[[
Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
--]]
function ENTITY.GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(entity)
  return native.invoke(
    Type.Vehicle, 777, false,
    arg(Type.Entity, entity)
  )
end

-- Vector3 GET_WORLD_POSITION_OF_ENTITY_BONE(Entity entity, int boneIndex) // 0x44A8FCB8ED227738
--[[
Returns the coordinates of an entity-bone.
--]]
function ENTITY.GET_WORLD_POSITION_OF_ENTITY_BONE(entity, boneIndex)
  return native.invoke(
    Type.Vector3, 778, false,
    arg(Type.Entity, entity),
    arg(Type.Int, boneIndex)
  )
end

-- Player GET_NEAREST_PLAYER_TO_ENTITY(Entity entity) // 0x7196842CB375CDB3
function ENTITY.GET_NEAREST_PLAYER_TO_ENTITY(entity)
  return native.invoke(
    Type.Player, 779, false,
    arg(Type.Entity, entity)
  )
end

-- Player GET_NEAREST_PLAYER_TO_ENTITY_ON_TEAM(Entity entity, int team) // 0x4DC9A62F844D9337
function ENTITY.GET_NEAREST_PLAYER_TO_ENTITY_ON_TEAM(entity, team)
  return native.invoke(
    Type.Player, 780, false,
    arg(Type.Entity, entity),
    arg(Type.Int, team)
  )
end

-- int GET_NEAREST_PARTICIPANT_TO_ENTITY(Entity entity) // 0xFFBD7052D65BE0FF
function ENTITY.GET_NEAREST_PARTICIPANT_TO_ENTITY(entity)
  return native.invoke(
    Type.Int, 781, false,
    arg(Type.Entity, entity)
  )
end

-- int GET_ENTITY_TYPE(Entity entity) // 0x8ACD366038D14505
--[[
Returns:
0 = no entity
1 = ped
2 = vehicle
3 = object
--]]
function ENTITY.GET_ENTITY_TYPE(entity)
  return native.invoke(
    Type.Int, 782, false,
    arg(Type.Entity, entity)
  )
end

-- int GET_ENTITY_POPULATION_TYPE(Entity entity) // 0xF6F5161F4534EDFF
--[[
A population type, from the following enum: https://alloc8or.re/gta5/doc/enums/ePopulationType.txt
--]]
function ENTITY.GET_ENTITY_POPULATION_TYPE(entity)
  return native.invoke(
    Type.Int, 783, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL IS_AN_ENTITY(ScrHandle handle) // 0x731EC8A916BD11A1
function ENTITY.IS_AN_ENTITY(handle)
  return native.invoke(
    Type.Bool, 784, false,
    arg(Type.Scrhandle, handle)
  )
end

-- BOOL IS_ENTITY_A_PED(Entity entity) // 0x524AC5ECEA15343E
function ENTITY.IS_ENTITY_A_PED(entity)
  return native.invoke(
    Type.Bool, 785, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL IS_ENTITY_A_MISSION_ENTITY(Entity entity) // 0x0A7B270912999B3C
function ENTITY.IS_ENTITY_A_MISSION_ENTITY(entity)
  return native.invoke(
    Type.Bool, 786, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL IS_ENTITY_A_VEHICLE(Entity entity) // 0x6AC7003FA6E5575E
function ENTITY.IS_ENTITY_A_VEHICLE(entity)
  return native.invoke(
    Type.Bool, 787, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL IS_ENTITY_AN_OBJECT(Entity entity) // 0x8D68C8FD0FACA94E
function ENTITY.IS_ENTITY_AN_OBJECT(entity)
  return native.invoke(
    Type.Bool, 788, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL IS_ENTITY_AT_COORD(Entity entity, float xPos, float yPos, float zPos, float xSize, float ySize, float zSize, BOOL p7, BOOL p8, int p9) // 0x20B60995556D004F
--[[
Checks if entity is within x/y/zSize distance of x/y/z. 

Last three are unknown ints, almost always p7 = 0, p8 = 1, p9 = 0
--]]
function ENTITY.IS_ENTITY_AT_COORD(entity, xPos, yPos, zPos, xSize, ySize, zSize, p7, p8, p9)
  return native.invoke(
    Type.Bool, 789, false,
    arg(Type.Entity, entity),
    arg(Type.Float, xPos),
    arg(Type.Float, yPos),
    arg(Type.Float, zPos),
    arg(Type.Float, xSize),
    arg(Type.Float, ySize),
    arg(Type.Float, zSize),
    arg(Type.Bool, p7),
    arg(Type.Bool, p8),
    arg(Type.Int, p9)
  )
end

-- BOOL IS_ENTITY_AT_ENTITY(Entity entity1, Entity entity2, float xSize, float ySize, float zSize, BOOL p5, BOOL p6, int p7) // 0x751B70C3D034E187
--[[
Checks if entity1 is within the box defined by x/y/zSize of entity2.

Last three parameters are almost alwasy p5 = 0, p6 = 1, p7 = 0
--]]
function ENTITY.IS_ENTITY_AT_ENTITY(entity1, entity2, xSize, ySize, zSize, p5, p6, p7)
  return native.invoke(
    Type.Bool, 790, false,
    arg(Type.Entity, entity1),
    arg(Type.Entity, entity2),
    arg(Type.Float, xSize),
    arg(Type.Float, ySize),
    arg(Type.Float, zSize),
    arg(Type.Bool, p5),
    arg(Type.Bool, p6),
    arg(Type.Int, p7)
  )
end

-- BOOL IS_ENTITY_ATTACHED(Entity entity) // 0xB346476EF1A64897
--[[
Whether the entity is attached to any other entity.
--]]
function ENTITY.IS_ENTITY_ATTACHED(entity)
  return native.invoke(
    Type.Bool, 791, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL IS_ENTITY_ATTACHED_TO_ANY_OBJECT(Entity entity) // 0xCF511840CEEDE0CC
function ENTITY.IS_ENTITY_ATTACHED_TO_ANY_OBJECT(entity)
  return native.invoke(
    Type.Bool, 792, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL IS_ENTITY_ATTACHED_TO_ANY_PED(Entity entity) // 0xB1632E9A5F988D11
function ENTITY.IS_ENTITY_ATTACHED_TO_ANY_PED(entity)
  return native.invoke(
    Type.Bool, 793, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL IS_ENTITY_ATTACHED_TO_ANY_VEHICLE(Entity entity) // 0x26AA915AD89BFB4B
function ENTITY.IS_ENTITY_ATTACHED_TO_ANY_VEHICLE(entity)
  return native.invoke(
    Type.Bool, 794, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL IS_ENTITY_ATTACHED_TO_ENTITY(Entity from, Entity to) // 0xEFBE71898A993728
function ENTITY.IS_ENTITY_ATTACHED_TO_ENTITY(from, to)
  return native.invoke(
    Type.Bool, 795, false,
    arg(Type.Entity, from),
    arg(Type.Entity, to)
  )
end

-- BOOL IS_ENTITY_DEAD(Entity entity, BOOL p1) // 0x5F9532F3B5CC2551
function ENTITY.IS_ENTITY_DEAD(entity, p1)
  return native.invoke(
    Type.Bool, 796, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, p1)
  )
end

-- BOOL IS_ENTITY_IN_AIR(Entity entity) // 0x886E37EC497200B6
function ENTITY.IS_ENTITY_IN_AIR(entity)
  return native.invoke(
    Type.Bool, 797, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL IS_ENTITY_IN_ANGLED_AREA(Entity entity, float x1, float y1, float z1, float x2, float y2, float z2, float width, BOOL debug, BOOL includeZ, Any p10) // 0x51210CED3DA1C78A
--[[
`p8` is a debug flag invoking functions in the same path as ``DRAW_MARKER``
`p10` is some entity flag check, also used in `IS_ENTITY_AT_ENTITY`, `IS_ENTITY_IN_AREA`, and `IS_ENTITY_AT_COORD`.
See IS_POINT_IN_ANGLED_AREA for the definition of an angled area.
--]]
function ENTITY.IS_ENTITY_IN_ANGLED_AREA(entity, x1, y1, z1, x2, y2, z2, width, debug, includeZ, p10)
  return native.invoke(
    Type.Bool, 798, false,
    arg(Type.Entity, entity),
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Float, width),
    arg(Type.Bool, debug),
    arg(Type.Bool, includeZ),
    arg(Type.Any, p10)
  )
end

-- BOOL IS_ENTITY_IN_AREA(Entity entity, float x1, float y1, float z1, float x2, float y2, float z2, BOOL p7, BOOL p8, Any p9) // 0x54736AA40E271165
function ENTITY.IS_ENTITY_IN_AREA(entity, x1, y1, z1, x2, y2, z2, p7, p8, p9)
  return native.invoke(
    Type.Bool, 799, false,
    arg(Type.Entity, entity),
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Bool, p7),
    arg(Type.Bool, p8),
    arg(Type.Any, p9)
  )
end

-- BOOL IS_ENTITY_IN_ZONE(Entity entity, const char* zone) // 0xB6463CF6AF527071
--[[
Full list of zones by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/zones.json
--]]
function ENTITY.IS_ENTITY_IN_ZONE(entity, zone)
  return native.invoke(
    Type.Bool, 800, false,
    arg(Type.Entity, entity),
    arg(Type.String, zone)
  )
end

-- BOOL IS_ENTITY_IN_WATER(Entity entity) // 0xCFB0A0D8EDD145A3
function ENTITY.IS_ENTITY_IN_WATER(entity)
  return native.invoke(
    Type.Bool, 801, false,
    arg(Type.Entity, entity)
  )
end

-- float GET_ENTITY_SUBMERGED_LEVEL(Entity entity) // 0xE81AFC1BC4CC41CE
--[[
Get how much of the entity is submerged.  1.0f is whole entity.
--]]
function ENTITY.GET_ENTITY_SUBMERGED_LEVEL(entity)
  return native.invoke(
    Type.Float, 802, false,
    arg(Type.Entity, entity)
  )
end

-- void SET_ENTITY_REQUIRES_MORE_EXPENSIVE_RIVER_CHECK(Entity entity, BOOL toggle) // 0x694E00132F2823ED
function ENTITY.SET_ENTITY_REQUIRES_MORE_EXPENSIVE_RIVER_CHECK(entity, toggle)
  native.invoke(
    Type.Void, 803, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_ENTITY_ON_SCREEN(Entity entity) // 0xE659E47AF827484B
--[[
Returns true if the entity is in between the minimum and maximum values for the 2d screen coords. 
This means that it will return true even if the entity is behind a wall for example, as long as you're looking at their location. 
Chipping
--]]
function ENTITY.IS_ENTITY_ON_SCREEN(entity)
  return native.invoke(
    Type.Bool, 804, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL IS_ENTITY_PLAYING_ANIM(Entity entity, const char* animDict, const char* animName, int taskFlag) // 0x1F0B79228E461EC9
--[[
See also PED::IS_SCRIPTED_SCENARIO_PED_USING_CONDITIONAL_ANIM 0x6EC47A344923E1ED 0x3C30B447

Taken from ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), "creatures@shark@move", "attack_player", 3)

p4 is always 3 in the scripts.

Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
--]]
function ENTITY.IS_ENTITY_PLAYING_ANIM(entity, animDict, animName, taskFlag)
  return native.invoke(
    Type.Bool, 805, false,
    arg(Type.Entity, entity),
    arg(Type.String, animDict),
    arg(Type.String, animName),
    arg(Type.Int, taskFlag)
  )
end

-- BOOL IS_ENTITY_STATIC(Entity entity) // 0x1218E6886D3D8327
--[[
a static ped will not react to natives like "APPLY_FORCE_TO_ENTITY" or "SET_ENTITY_VELOCITY" and oftentimes will not react to task-natives like "TASK::TASK_COMBAT_PED". The only way I know of to make one of these peds react is to ragdoll them (or sometimes to use CLEAR_PED_TASKS_IMMEDIATELY(). Static peds include almost all far-away peds, beach-combers, peds in certain scenarios, peds crossing a crosswalk, peds walking to get back into their cars, and others. If anyone knows how to make a ped non-static without ragdolling them, please edit this with the solution.

how can I make an entity static???
--]]
function ENTITY.IS_ENTITY_STATIC(entity)
  return native.invoke(
    Type.Bool, 806, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL IS_ENTITY_TOUCHING_ENTITY(Entity entity, Entity targetEntity) // 0x17FFC1B2BA35A494
function ENTITY.IS_ENTITY_TOUCHING_ENTITY(entity, targetEntity)
  return native.invoke(
    Type.Bool, 807, false,
    arg(Type.Entity, entity),
    arg(Type.Entity, targetEntity)
  )
end

-- BOOL IS_ENTITY_TOUCHING_MODEL(Entity entity, Hash modelHash) // 0x0F42323798A58C8C
function ENTITY.IS_ENTITY_TOUCHING_MODEL(entity, modelHash)
  return native.invoke(
    Type.Bool, 808, false,
    arg(Type.Entity, entity),
    arg(Type.Hash, modelHash)
  )
end

-- BOOL IS_ENTITY_UPRIGHT(Entity entity, float angle) // 0x5333F526F6AB19AA
function ENTITY.IS_ENTITY_UPRIGHT(entity, angle)
  return native.invoke(
    Type.Bool, 809, false,
    arg(Type.Entity, entity),
    arg(Type.Float, angle)
  )
end

-- BOOL IS_ENTITY_UPSIDEDOWN(Entity entity) // 0x1DBD58820FA61D71
function ENTITY.IS_ENTITY_UPSIDEDOWN(entity)
  return native.invoke(
    Type.Bool, 810, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL IS_ENTITY_VISIBLE(Entity entity) // 0x47D6F43D77935C75
function ENTITY.IS_ENTITY_VISIBLE(entity)
  return native.invoke(
    Type.Bool, 811, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL IS_ENTITY_VISIBLE_TO_SCRIPT(Entity entity) // 0xD796CB5BA8F20E32
function ENTITY.IS_ENTITY_VISIBLE_TO_SCRIPT(entity)
  return native.invoke(
    Type.Bool, 812, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL IS_ENTITY_OCCLUDED(Entity entity) // 0xE31C2C72B8692B64
function ENTITY.IS_ENTITY_OCCLUDED(entity)
  return native.invoke(
    Type.Bool, 813, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL WOULD_ENTITY_BE_OCCLUDED(Hash entityModelHash, float x, float y, float z, BOOL p4) // 0xEE5D2A122E09EC42
function ENTITY.WOULD_ENTITY_BE_OCCLUDED(entityModelHash, x, y, z, p4)
  return native.invoke(
    Type.Bool, 814, false,
    arg(Type.Hash, entityModelHash),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Bool, p4)
  )
end

-- BOOL IS_ENTITY_WAITING_FOR_WORLD_COLLISION(Entity entity) // 0xD05BFF0C0A12C68F
function ENTITY.IS_ENTITY_WAITING_FOR_WORLD_COLLISION(entity)
  return native.invoke(
    Type.Bool, 815, false,
    arg(Type.Entity, entity)
  )
end

-- void APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(Entity entity, int forceType, float x, float y, float z, BOOL p5, BOOL isDirectionRel, BOOL isForceRel, BOOL p8) // 0x18FF00FC7EFF559E
--[[
Applies a force to the specified entity.

**List of force types (p1)**:
public enum ForceType
{
    MinForce = 0,
    MaxForceRot = 1,
    MinForce2 = 2,
    MaxForceRot2 = 3,
    ForceNoRot = 4,
    ForceRotPlusForce = 5
}
Research/documentation on the gtaforums can be found here https://gtaforums.com/topic/885669-precisely-define-object-physics/) and here https://gtaforums.com/topic/887362-apply-forces-and-momentums-to-entityobject/.

p6/relative - makes the xyz force not relative to world coords, but to something else
p7/highForce - setting false will make the force really low
--]]
function ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(entity, forceType, x, y, z, p5, isDirectionRel, isForceRel, p8)
  native.invoke(
    Type.Void, 816, false,
    arg(Type.Entity, entity),
    arg(Type.Int, forceType),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Bool, p5),
    arg(Type.Bool, isDirectionRel),
    arg(Type.Bool, isForceRel),
    arg(Type.Bool, p8)
  )
end

-- void APPLY_FORCE_TO_ENTITY(Entity entity, int forceFlags, float x, float y, float z, float offX, float offY, float offZ, int boneIndex, BOOL isDirectionRel, BOOL ignoreUpVec, BOOL isForceRel, BOOL p12, BOOL p13) // 0xC5F68BE9613E2D18
--[[
Documented here:
gtaforums.com/topic/885669-precisely-define-object-physics/
gtaforums.com/topic/887362-apply-forces-and-momentums-to-entityobject/

forceFlags:
First bit (lowest): Strong force flag, factor 100
Second bit: Unkown flag
Third bit: Momentum flag=1 (vector (x,y,z) is a momentum, more research needed)
If higher bits are unequal 0 the function doesn't applay any forces at all.
(As integer possible values are 0-7)

0: weak force
1: strong force
2: same as 0 (2nd bit?)
3: same as 1
4: weak momentum
5: strong momentum
6: same as 4
7: same as 5

isLocal: vector defined in local (body-fixed) coordinate frame
isMassRel: if true the force gets multiplied with the objects mass (this is why it was known as highForce) and different objects will have the same acceleration.

p8 !!! Whenever I set this !=0, my script stopped.
--]]
function ENTITY.APPLY_FORCE_TO_ENTITY(entity, forceFlags, x, y, z, offX, offY, offZ, boneIndex, isDirectionRel, ignoreUpVec, isForceRel, p12, p13)
  native.invoke(
    Type.Void, 817, false,
    arg(Type.Entity, entity),
    arg(Type.Int, forceFlags),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, offX),
    arg(Type.Float, offY),
    arg(Type.Float, offZ),
    arg(Type.Int, boneIndex),
    arg(Type.Bool, isDirectionRel),
    arg(Type.Bool, ignoreUpVec),
    arg(Type.Bool, isForceRel),
    arg(Type.Bool, p12),
    arg(Type.Bool, p13)
  )
end

-- void ATTACH_ENTITY_TO_ENTITY(Entity entity1, Entity entity2, int boneIndex, float xPos, float yPos, float zPos, float xRot, float yRot, float zRot, BOOL p9, BOOL useSoftPinning, BOOL collision, BOOL isPed, int vertexIndex, BOOL fixedRot, Any p15) // 0x6B9BBD38AB0796DF
--[[
Attaches entity1 to bone (boneIndex) of entity2.

boneIndex - this is different to boneID, use GET_PED_BONE_INDEX to get the index from the ID. use the index for attaching to specific bones. entity1 will be attached to entity2's centre if bone index given doesn't correspond to bone indexes for that entity type.

useSoftPinning - if set to false attached entity will not detach when fixed
collision - controls collision between the two entities (FALSE disables collision).
isPed - pitch doesnt work when false and roll will only work on negative numbers (only peds)
vertexIndex - position of vertex
fixedRot - if false it ignores entity vector 

--]]
function ENTITY.ATTACH_ENTITY_TO_ENTITY(entity1, entity2, boneIndex, xPos, yPos, zPos, xRot, yRot, zRot, p9, useSoftPinning, collision, isPed, vertexIndex, fixedRot, p15)
  native.invoke(
    Type.Void, 818, false,
    arg(Type.Entity, entity1),
    arg(Type.Entity, entity2),
    arg(Type.Int, boneIndex),
    arg(Type.Float, xPos),
    arg(Type.Float, yPos),
    arg(Type.Float, zPos),
    arg(Type.Float, xRot),
    arg(Type.Float, yRot),
    arg(Type.Float, zRot),
    arg(Type.Bool, p9),
    arg(Type.Bool, useSoftPinning),
    arg(Type.Bool, collision),
    arg(Type.Bool, isPed),
    arg(Type.Int, vertexIndex),
    arg(Type.Bool, fixedRot),
    arg(Type.Any, p15)
  )
end

-- void ATTACH_ENTITY_BONE_TO_ENTITY_BONE(Entity entity1, Entity entity2, int boneIndex1, int boneIndex2, BOOL p4, BOOL p5) // 0x5C48B75732C8456C
function ENTITY.ATTACH_ENTITY_BONE_TO_ENTITY_BONE(entity1, entity2, boneIndex1, boneIndex2, p4, p5)
  native.invoke(
    Type.Void, 819, false,
    arg(Type.Entity, entity1),
    arg(Type.Entity, entity2),
    arg(Type.Int, boneIndex1),
    arg(Type.Int, boneIndex2),
    arg(Type.Bool, p4),
    arg(Type.Bool, p5)
  )
end

-- void ATTACH_ENTITY_BONE_TO_ENTITY_BONE_Y_FORWARD(Entity entity1, Entity entity2, int boneIndex1, int boneIndex2, BOOL p4, BOOL p5) // 0xFD1695C5D3B05439
function ENTITY.ATTACH_ENTITY_BONE_TO_ENTITY_BONE_Y_FORWARD(entity1, entity2, boneIndex1, boneIndex2, p4, p5)
  native.invoke(
    Type.Void, 820, false,
    arg(Type.Entity, entity1),
    arg(Type.Entity, entity2),
    arg(Type.Int, boneIndex1),
    arg(Type.Int, boneIndex2),
    arg(Type.Bool, p4),
    arg(Type.Bool, p5)
  )
end

-- void ATTACH_ENTITY_TO_ENTITY_PHYSICALLY(Entity entity1, Entity entity2, int boneIndex1, int boneIndex2, float xPos1, float yPos1, float zPos1, float xPos2, float yPos2, float zPos2, float xRot, float yRot, float zRot, float breakForce, BOOL fixedRot, BOOL p15, BOOL collision, BOOL p17, int p18) // 0xC3675780C92F90F9
--[[
breakForce is the amount of force required to break the bond.
p14 - is always 1 in scripts
p15 - is 1 or 0 in scripts - unknoun what it does
p16 - controls collision between the two entities (FALSE disables collision).
p17 - do not teleport entity to be attached to the position of the bone Index of the target entity (if 1, entity will not be teleported to target bone)
p18 - is always 2 in scripts.


--]]
function ENTITY.ATTACH_ENTITY_TO_ENTITY_PHYSICALLY(entity1, entity2, boneIndex1, boneIndex2, xPos1, yPos1, zPos1, xPos2, yPos2, zPos2, xRot, yRot, zRot, breakForce, fixedRot, p15, collision, p17, p18)
  native.invoke(
    Type.Void, 821, false,
    arg(Type.Entity, entity1),
    arg(Type.Entity, entity2),
    arg(Type.Int, boneIndex1),
    arg(Type.Int, boneIndex2),
    arg(Type.Float, xPos1),
    arg(Type.Float, yPos1),
    arg(Type.Float, zPos1),
    arg(Type.Float, xPos2),
    arg(Type.Float, yPos2),
    arg(Type.Float, zPos2),
    arg(Type.Float, xRot),
    arg(Type.Float, yRot),
    arg(Type.Float, zRot),
    arg(Type.Float, breakForce),
    arg(Type.Bool, fixedRot),
    arg(Type.Bool, p15),
    arg(Type.Bool, collision),
    arg(Type.Bool, p17),
    arg(Type.Int, p18)
  )
end

-- void ATTACH_ENTITY_TO_ENTITY_PHYSICALLY_OVERRIDE_INVERSE_MASS(Entity firstEntityIndex, Entity secondEntityIndex, int firstEntityBoneIndex, int secondEntityBoneIndex, float secondEntityOffsetX, float secondEntityOffsetY, float secondEntityOffsetZ, float firstEntityOffsetX, float firstEntityOffsetY, float firstEntityOffsetZ, float vecRotationX, float vecRotationY, float vecRotationZ, float physicalStrength, BOOL constrainRotation, BOOL doInitialWarp, BOOL collideWithEntity, BOOL addInitialSeperation, int rotOrder, float invMassScaleA, float invMassScaleB) // 0x168A09D1B25B0BA4
function ENTITY.ATTACH_ENTITY_TO_ENTITY_PHYSICALLY_OVERRIDE_INVERSE_MASS(firstEntityIndex, secondEntityIndex, firstEntityBoneIndex, secondEntityBoneIndex, secondEntityOffsetX, secondEntityOffsetY, secondEntityOffsetZ, firstEntityOffsetX, firstEntityOffsetY, firstEntityOffsetZ, vecRotationX, vecRotationY, vecRotationZ, physicalStrength, constrainRotation, doInitialWarp, collideWithEntity, addInitialSeperation, rotOrder, invMassScaleA, invMassScaleB)
  native.invoke(
    Type.Void, 822, false,
    arg(Type.Entity, firstEntityIndex),
    arg(Type.Entity, secondEntityIndex),
    arg(Type.Int, firstEntityBoneIndex),
    arg(Type.Int, secondEntityBoneIndex),
    arg(Type.Float, secondEntityOffsetX),
    arg(Type.Float, secondEntityOffsetY),
    arg(Type.Float, secondEntityOffsetZ),
    arg(Type.Float, firstEntityOffsetX),
    arg(Type.Float, firstEntityOffsetY),
    arg(Type.Float, firstEntityOffsetZ),
    arg(Type.Float, vecRotationX),
    arg(Type.Float, vecRotationY),
    arg(Type.Float, vecRotationZ),
    arg(Type.Float, physicalStrength),
    arg(Type.Bool, constrainRotation),
    arg(Type.Bool, doInitialWarp),
    arg(Type.Bool, collideWithEntity),
    arg(Type.Bool, addInitialSeperation),
    arg(Type.Int, rotOrder),
    arg(Type.Float, invMassScaleA),
    arg(Type.Float, invMassScaleB)
  )
end

-- void PROCESS_ENTITY_ATTACHMENTS(Entity entity) // 0xF4080490ADC51C6F
--[[
Called to update entity attachments.
--]]
function ENTITY.PROCESS_ENTITY_ATTACHMENTS(entity)
  native.invoke(
    Type.Void, 823, false,
    arg(Type.Entity, entity)
  )
end

-- int GET_ENTITY_BONE_INDEX_BY_NAME(Entity entity, const char* boneName) // 0xFB71170B7E76ACBA
--[[
Returns the index of the bone. If the bone was not found, -1 will be returned. 

list:
https://pastebin.com/D7JMnX1g

BoneNames:
  chassis,
  windscreen,
   seat_pside_r,
 seat_dside_r,
 bodyshell,
    suspension_lm,
    suspension_lr,
    platelight,
   attach_female,
    attach_male,
  bonnet,
   boot,
 chassis_dummy,  //Center of the dummy
 chassis_Control,    //Not found yet
   door_dside_f,   //Door left, front
    door_dside_r,   //Door left, back
 door_pside_f,   //Door right, front
   door_pside_r,   //Door right, back
    Gun_GripR,
    windscreen_f,
 platelight, //Position where the light above the numberplate is located
   VFX_Emitter,
  window_lf,  //Window left, front
  window_lr,  //Window left, back
   window_rf,  //Window right, front
 window_rr,  //Window right, back
  engine, //Position of the engine
  gun_ammo,
 ROPE_ATTATCH,   //Not misspelled. In script "finale_heist2b.c4".
    wheel_lf,   //Wheel left, front
   wheel_lr,   //Wheel left, back
    wheel_rf,   //Wheel right, front
  wheel_rr,   //Wheel right, back
   exhaust,    //Exhaust. shows only the position of the stock-exhaust
   overheat,   //A position on the engine(not exactly sure, how to name it)
  misc_e, //Not a car-bone.
 seat_dside_f,   //Driver-seat
 seat_pside_f,   //Seat next to driver
 Gun_Nuzzle,
   seat_r

I doubt that the function is case-sensitive, since I found a "Chassis" and a "chassis". - Just tested: Definitely not case-sensitive.


--]]
function ENTITY.GET_ENTITY_BONE_INDEX_BY_NAME(entity, boneName)
  return native.invoke(
    Type.Int, 824, false,
    arg(Type.Entity, entity),
    arg(Type.String, boneName)
  )
end

-- void CLEAR_ENTITY_LAST_DAMAGE_ENTITY(Entity entity) // 0xA72CD9CA74A5ECBA
function ENTITY.CLEAR_ENTITY_LAST_DAMAGE_ENTITY(entity)
  native.invoke(
    Type.Void, 825, false,
    arg(Type.Entity, entity)
  )
end

-- void DELETE_ENTITY(Entity* entity) // 0xAE3CBE5BF394C9C9
--[[
Deletes the specified entity, then sets the handle pointed to by the pointer to NULL.
--]]
function ENTITY.DELETE_ENTITY(entity)
  native.invoke(
    Type.Void, 826, false,
    arg(Type.Entity, entity)
  )
end

-- void DETACH_ENTITY(Entity entity, BOOL dynamic, BOOL collision) // 0x961AC54BF0613F5D
--[[
If `collision` is set to true, both entities won't collide with the other until the distance between them is above 4 meters.
Set `dynamic` to true to keep velocity after dettaching
--]]
function ENTITY.DETACH_ENTITY(entity, dynamic, collision)
  native.invoke(
    Type.Void, 827, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, dynamic),
    arg(Type.Bool, collision)
  )
end

-- void FREEZE_ENTITY_POSITION(Entity entity, BOOL toggle) // 0x428CA6DBD1094446
--[[
Freezes or unfreezes an entity preventing its coordinates to change by the player if set to `true`. You can still change the entity position using SET_ENTITY_COORDS.
--]]
function ENTITY.FREEZE_ENTITY_POSITION(entity, toggle)
  native.invoke(
    Type.Void, 828, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- void SET_ENTITY_SHOULD_FREEZE_WAITING_ON_COLLISION(Entity entity, BOOL toggle) // 0x3910051CCECDB00C
--[[
True means it can be deleted by the engine when switching lobbies/missions/etc, false means the script is expected to clean it up.

"Allow Freeze If No Collision"
--]]
function ENTITY.SET_ENTITY_SHOULD_FREEZE_WAITING_ON_COLLISION(entity, toggle)
  native.invoke(
    Type.Void, 829, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- BOOL PLAY_ENTITY_ANIM(Entity entity, const char* animName, const char* animDict, float p3, BOOL loop, BOOL stayInAnim, BOOL p6, float delta, Any bitset) // 0x7FB218262B810701
--[[
delta and bitset are guessed fields. They are based on the fact that most of the calls have 0 or nil field types passed in.

The only time bitset has a value is 0x4000 and the only time delta has a value is during stealth with usually <1.0f values.

Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
--]]
function ENTITY.PLAY_ENTITY_ANIM(entity, animName, animDict, p3, loop, stayInAnim, p6, delta, bitset)
  return native.invoke(
    Type.Bool, 830, false,
    arg(Type.Entity, entity),
    arg(Type.String, animName),
    arg(Type.String, animDict),
    arg(Type.Float, p3),
    arg(Type.Bool, loop),
    arg(Type.Bool, stayInAnim),
    arg(Type.Bool, p6),
    arg(Type.Float, delta),
    arg(Type.Any, bitset)
  )
end

-- BOOL PLAY_SYNCHRONIZED_ENTITY_ANIM(Entity entity, int syncedScene, const char* animation, const char* propName, float p4, float p5, Any p6, float p7) // 0xC77720A12FE14A86
--[[
p4 and p7 are usually 1000.0f.

Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
--]]
function ENTITY.PLAY_SYNCHRONIZED_ENTITY_ANIM(entity, syncedScene, animation, propName, p4, p5, p6, p7)
  return native.invoke(
    Type.Bool, 831, false,
    arg(Type.Entity, entity),
    arg(Type.Int, syncedScene),
    arg(Type.String, animation),
    arg(Type.String, propName),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Any, p6),
    arg(Type.Float, p7)
  )
end

-- BOOL PLAY_SYNCHRONIZED_MAP_ENTITY_ANIM(float x1, float y1, float z1, float x2, Any y2, float z2, const char* p6, const char* p7, float p8, float p9, Any p10, float p11) // 0xB9C54555ED30FBC4
--[[
p6,p7 probably animname and animdict

Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
--]]
function ENTITY.PLAY_SYNCHRONIZED_MAP_ENTITY_ANIM(x1, y1, z1, x2, y2, z2, p6, p7, p8, p9, p10, p11)
  return native.invoke(
    Type.Bool, 832, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Any, y2),
    arg(Type.Float, z2),
    arg(Type.String, p6),
    arg(Type.String, p7),
    arg(Type.Float, p8),
    arg(Type.Float, p9),
    arg(Type.Any, p10),
    arg(Type.Float, p11)
  )
end

-- BOOL STOP_SYNCHRONIZED_MAP_ENTITY_ANIM(float x1, float y1, float z1, float x2, Any y2, float z2) // 0x11E79CAB7183B6F5
function ENTITY.STOP_SYNCHRONIZED_MAP_ENTITY_ANIM(x1, y1, z1, x2, y2, z2)
  return native.invoke(
    Type.Bool, 833, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Any, y2),
    arg(Type.Float, z2)
  )
end

-- BOOL STOP_ENTITY_ANIM(Entity entity, const char* animation, const char* animGroup, float p3) // 0x28004F88151E03E0
--[[
Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json

RAGEPluginHook list: docs.ragepluginhook.net/html/62951c37-a440-478c-b389-c471230ddfc5.htm
--]]
function ENTITY.STOP_ENTITY_ANIM(entity, animation, animGroup, p3)
  return native.invoke(
    Type.Bool, 834, false,
    arg(Type.Entity, entity),
    arg(Type.String, animation),
    arg(Type.String, animGroup),
    arg(Type.Float, p3)
  )
end

-- BOOL STOP_SYNCHRONIZED_ENTITY_ANIM(Entity entity, float p1, BOOL p2) // 0x43D3807C077261E3
--[[
p1 sync task id?
--]]
function ENTITY.STOP_SYNCHRONIZED_ENTITY_ANIM(entity, p1, p2)
  return native.invoke(
    Type.Bool, 835, false,
    arg(Type.Entity, entity),
    arg(Type.Float, p1),
    arg(Type.Bool, p2)
  )
end

-- BOOL HAS_ANIM_EVENT_FIRED(Entity entity, Hash actionHash) // 0xEAF4CD9EA3E7E922
--[[
if (ENTITY::HAS_ANIM_EVENT_FIRED(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("CreateObject")))
--]]
function ENTITY.HAS_ANIM_EVENT_FIRED(entity, actionHash)
  return native.invoke(
    Type.Bool, 836, false,
    arg(Type.Entity, entity),
    arg(Type.Hash, actionHash)
  )
end

-- BOOL FIND_ANIM_EVENT_PHASE(const char* animDictionary, const char* animName, const char* p2, Any* p3, Any* p4) // 0x07F1BE2BCCAA27A7
--[[
In the script "player_scene_t_bbfight.c4":
"if (ENTITY::FIND_ANIM_EVENT_PHASE(&l_16E, &l_19F[v_4/*16*/], v_9, &v_A, &v_B))"
-- &l_16E (p0) is requested as an anim dictionary earlier in the script.
-- &l_19F[v_4/*16*/] (p1) is used in other natives in the script as the "animation" param.
-- v_9 (p2) is instantiated as "victim_fall"; I'm guessing that's another anim
--v_A and v_B (p3 & p4) are both set as -1.0, but v_A is used immediately after this native for: 
"if (v_A < ENTITY::GET_ENTITY_ANIM_CURRENT_TIME(...))"
Both v_A and v_B are seemingly used to contain both Vector3's and floats, so I can't say what either really is other than that they are both output parameters. p4 looks more like a *Vector3 though

Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
--]]
function ENTITY.FIND_ANIM_EVENT_PHASE(animDictionary, animName, p2, p3, p4)
  return native.invoke(
    Type.Bool, 837, false,
    arg(Type.String, animDictionary),
    arg(Type.String, animName),
    arg(Type.String, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4)
  )
end

-- void SET_ENTITY_ANIM_CURRENT_TIME(Entity entity, const char* animDictionary, const char* animName, float time) // 0x4487C259F0F70977
--[[
Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
--]]
function ENTITY.SET_ENTITY_ANIM_CURRENT_TIME(entity, animDictionary, animName, time)
  native.invoke(
    Type.Void, 838, false,
    arg(Type.Entity, entity),
    arg(Type.String, animDictionary),
    arg(Type.String, animName),
    arg(Type.Float, time)
  )
end

-- void SET_ENTITY_ANIM_SPEED(Entity entity, const char* animDictionary, const char* animName, float speedMultiplier) // 0x28D1A16553C51776
--[[
Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
--]]
function ENTITY.SET_ENTITY_ANIM_SPEED(entity, animDictionary, animName, speedMultiplier)
  native.invoke(
    Type.Void, 839, false,
    arg(Type.Entity, entity),
    arg(Type.String, animDictionary),
    arg(Type.String, animName),
    arg(Type.Float, speedMultiplier)
  )
end

-- void SET_ENTITY_AS_MISSION_ENTITY(Entity entity, BOOL p1, BOOL p2) // 0xAD738C3085FE7E11
--[[
Makes the specified entity (ped, vehicle or object) persistent. Persistent entities will not automatically be removed by the engine.

p1 has no effect when either its on or off 
maybe a quick disassembly will tell us what it does

p2 has no effect when either its on or off 
maybe a quick disassembly will tell us what it does
--]]
function ENTITY.SET_ENTITY_AS_MISSION_ENTITY(entity, p1, p2)
  native.invoke(
    Type.Void, 840, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void SET_ENTITY_AS_NO_LONGER_NEEDED(Entity* entity) // 0xB736A491E64A32CF
--[[
Marks the specified entity (ped, vehicle or object) as no longer needed if its population type is set to the mission type.
If the entity is ped, it will also clear their tasks immediately just like when CLEAR_PED_TASKS_IMMEDIATELY is called.
Entities marked as no longer needed, will be deleted as the engine sees fit.
Use this if you just want to just let the game delete the ped:
void MarkPedAsAmbientPed(Ped ped) {
  auto addr = getScriptHandleBaseAddress(ped);

  if (!addr) {
    return;
  }

  //the game uses only lower 4 bits as entity population type 
  BYTE origValue = *(BYTE *)(addr + 0xDA);
  *(BYTE *)(addr + 0xDA) = ((origValue & 0xF0) | ePopulationType::POPTYPE_RANDOM_AMBIENT);
}
--]]
function ENTITY.SET_ENTITY_AS_NO_LONGER_NEEDED(entity)
  native.invoke(
    Type.Void, 841, false,
    arg(Type.Entity, entity)
  )
end

-- void SET_PED_AS_NO_LONGER_NEEDED(Ped* ped) // 0x2595DD4236549CE3
--[[
This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
--]]
function ENTITY.SET_PED_AS_NO_LONGER_NEEDED(ped)
  native.invoke(
    Type.Void, 842, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_VEHICLE_AS_NO_LONGER_NEEDED(Vehicle* vehicle) // 0x629BFA74418D6239
--[[
This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
--]]
function ENTITY.SET_VEHICLE_AS_NO_LONGER_NEEDED(vehicle)
  native.invoke(
    Type.Void, 843, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_OBJECT_AS_NO_LONGER_NEEDED(Object* object) // 0x3AE22DEB5BA5A3E6
--[[
This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
--]]
function ENTITY.SET_OBJECT_AS_NO_LONGER_NEEDED(object)
  native.invoke(
    Type.Void, 844, false,
    arg(Type.Object, object)
  )
end

-- void SET_ENTITY_CAN_BE_DAMAGED(Entity entity, BOOL toggle) // 0x1760FFA8AB074D66
function ENTITY.SET_ENTITY_CAN_BE_DAMAGED(entity, toggle)
  native.invoke(
    Type.Void, 845, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- BOOL GET_ENTITY_CAN_BE_DAMAGED(Entity entity) // 0xD95CC5D2AB15A09F
function ENTITY.GET_ENTITY_CAN_BE_DAMAGED(entity)
  return native.invoke(
    Type.Bool, 846, false,
    arg(Type.Entity, entity)
  )
end

-- void SET_ENTITY_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP(Entity entity, BOOL bCanBeDamaged, int relGroup) // 0xE22D8FDE858B8119
function ENTITY.SET_ENTITY_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP(entity, bCanBeDamaged, relGroup)
  native.invoke(
    Type.Void, 847, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, bCanBeDamaged),
    arg(Type.Int, relGroup)
  )
end

-- void SET_ENTITY_CAN_ONLY_BE_DAMAGED_BY_SCRIPT_PARTICIPANTS(Entity entity, BOOL toggle) // 0x352E2B5CF420BF3B
function ENTITY.SET_ENTITY_CAN_ONLY_BE_DAMAGED_BY_SCRIPT_PARTICIPANTS(entity, toggle)
  native.invoke(
    Type.Void, 848, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- void SET_ENTITY_CAN_BE_TARGETED_WITHOUT_LOS(Entity entity, BOOL toggle) // 0xD3997889736FD899
--[[
Sets whether the entity can be targeted without being in line-of-sight.
--]]
function ENTITY.SET_ENTITY_CAN_BE_TARGETED_WITHOUT_LOS(entity, toggle)
  native.invoke(
    Type.Void, 849, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- void SET_ENTITY_COLLISION(Entity entity, BOOL toggle, BOOL keepPhysics) // 0x1A9205C1B9EE827F
function ENTITY.SET_ENTITY_COLLISION(entity, toggle, keepPhysics)
  native.invoke(
    Type.Void, 850, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle),
    arg(Type.Bool, keepPhysics)
  )
end

-- BOOL GET_ENTITY_COLLISION_DISABLED(Entity entity) // 0xCCF1E97BEFDAE480
function ENTITY.GET_ENTITY_COLLISION_DISABLED(entity)
  return native.invoke(
    Type.Bool, 851, false,
    arg(Type.Entity, entity)
  )
end

-- void SET_ENTITY_COMPLETELY_DISABLE_COLLISION(Entity entity, BOOL toggle, BOOL keepPhysics) // 0x9EBC85ED0FFFE51C
function ENTITY.SET_ENTITY_COMPLETELY_DISABLE_COLLISION(entity, toggle, keepPhysics)
  native.invoke(
    Type.Void, 852, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle),
    arg(Type.Bool, keepPhysics)
  )
end

-- void SET_ENTITY_COORDS(Entity entity, float xPos, float yPos, float zPos, BOOL xAxis, BOOL yAxis, BOOL zAxis, BOOL clearArea) // 0x06843DA7060A026B
--[[
p7 is always 1 in the scripts. Set to 1, an area around the destination coords for the moved entity is cleared from other entities. 
 
Often ends with 1, 0, 0, 1); in the scripts. It works. 

Axis - Invert Axis Flags
--]]
function ENTITY.SET_ENTITY_COORDS(entity, xPos, yPos, zPos, xAxis, yAxis, zAxis, clearArea)
  native.invoke(
    Type.Void, 853, false,
    arg(Type.Entity, entity),
    arg(Type.Float, xPos),
    arg(Type.Float, yPos),
    arg(Type.Float, zPos),
    arg(Type.Bool, xAxis),
    arg(Type.Bool, yAxis),
    arg(Type.Bool, zAxis),
    arg(Type.Bool, clearArea)
  )
end

-- void SET_ENTITY_COORDS_WITHOUT_PLANTS_RESET(Entity entity, float xPos, float yPos, float zPos, BOOL alive, BOOL deadFlag, BOOL ragdollFlag, BOOL clearArea) // 0x621873ECE1178967
function ENTITY.SET_ENTITY_COORDS_WITHOUT_PLANTS_RESET(entity, xPos, yPos, zPos, alive, deadFlag, ragdollFlag, clearArea)
  native.invoke(
    Type.Void, 854, false,
    arg(Type.Entity, entity),
    arg(Type.Float, xPos),
    arg(Type.Float, yPos),
    arg(Type.Float, zPos),
    arg(Type.Bool, alive),
    arg(Type.Bool, deadFlag),
    arg(Type.Bool, ragdollFlag),
    arg(Type.Bool, clearArea)
  )
end

-- void SET_ENTITY_COORDS_NO_OFFSET(Entity entity, float xPos, float yPos, float zPos, BOOL xAxis, BOOL yAxis, BOOL zAxis) // 0x239A3351AC1DA385
--[[
Axis - Invert Axis Flags
--]]
function ENTITY.SET_ENTITY_COORDS_NO_OFFSET(entity, xPos, yPos, zPos, xAxis, yAxis, zAxis)
  native.invoke(
    Type.Void, 855, false,
    arg(Type.Entity, entity),
    arg(Type.Float, xPos),
    arg(Type.Float, yPos),
    arg(Type.Float, zPos),
    arg(Type.Bool, xAxis),
    arg(Type.Bool, yAxis),
    arg(Type.Bool, zAxis)
  )
end

-- void SET_ENTITY_DYNAMIC(Entity entity, BOOL toggle) // 0x1718DE8E3F2823CA
function ENTITY.SET_ENTITY_DYNAMIC(entity, toggle)
  native.invoke(
    Type.Void, 856, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- void SET_ENTITY_HEADING(Entity entity, float heading) // 0x8E2530AA8ADA980E
--[[
Set the heading of an entity in degrees also known as "Yaw".
--]]
function ENTITY.SET_ENTITY_HEADING(entity, heading)
  native.invoke(
    Type.Void, 857, false,
    arg(Type.Entity, entity),
    arg(Type.Float, heading)
  )
end

-- void SET_ENTITY_HEALTH(Entity entity, int health, Entity instigator, Hash weaponType) // 0x6B76DC1F3AE6E6A3
--[[
health >= 0
male ped ~= 100 - 200
female ped ~= 0 - 100
--]]
function ENTITY.SET_ENTITY_HEALTH(entity, health, instigator, weaponType)
  native.invoke(
    Type.Void, 858, false,
    arg(Type.Entity, entity),
    arg(Type.Int, health),
    arg(Type.Entity, instigator),
    arg(Type.Hash, weaponType)
  )
end

-- void SET_ENTITY_INVINCIBLE(Entity entity, BOOL toggle) // 0x3882114BDE571AD4
--[[
Sets a ped or an object totally invincible. It doesn't take any kind of damage. Peds will not ragdoll on explosions and the tazer animation won't apply either.

If you use this for a ped and you want Ragdoll to stay enabled, then do:
*(DWORD *)(pedAddress + 0x188) |= (1 << 9);

Use this if you want to get the invincibility status:
  bool IsPedInvincible(Ped ped)
 {
     auto addr = getScriptHandleBaseAddress(ped);    

        if (addr)
     {
         DWORD flag = *(DWORD *)(addr + 0x188);
            return ((flag & (1 << 8)) != 0) || ((flag & (1 << 9)) != 0);
      }

       return false;
 }
--]]
function ENTITY.SET_ENTITY_INVINCIBLE(entity, toggle)
  native.invoke(
    Type.Void, 859, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- void SET_ENTITY_IS_TARGET_PRIORITY(Entity entity, BOOL p1, float p2) // 0xEA02E132F5C68722
function ENTITY.SET_ENTITY_IS_TARGET_PRIORITY(entity, p1, p2)
  native.invoke(
    Type.Void, 860, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, p1),
    arg(Type.Float, p2)
  )
end

-- void SET_ENTITY_LIGHTS(Entity entity, BOOL toggle) // 0x7CFBA6A80BDF3874
function ENTITY.SET_ENTITY_LIGHTS(entity, toggle)
  native.invoke(
    Type.Void, 861, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- void SET_ENTITY_LOAD_COLLISION_FLAG(Entity entity, BOOL toggle, Any p2) // 0x0DC7CABAB1E9B67E
--[[
Loads collision grid for an entity spawned outside of a player's loaded area. This allows peds to execute tasks rather than sit dormant because of a lack of a physics grid.
Certainly not the main usage of this native but when set to true for a Vehicle, it will prevent the vehicle to explode if it is spawned far away from the player.
--]]
function ENTITY.SET_ENTITY_LOAD_COLLISION_FLAG(entity, toggle, p2)
  native.invoke(
    Type.Void, 862, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle),
    arg(Type.Any, p2)
  )
end

-- BOOL HAS_COLLISION_LOADED_AROUND_ENTITY(Entity entity) // 0xE9676F61BC0B3321
function ENTITY.HAS_COLLISION_LOADED_AROUND_ENTITY(entity)
  return native.invoke(
    Type.Bool, 863, false,
    arg(Type.Entity, entity)
  )
end

-- void SET_ENTITY_MAX_SPEED(Entity entity, float speed) // 0x0E46A3FCBDE2A1B1
function ENTITY.SET_ENTITY_MAX_SPEED(entity, speed)
  native.invoke(
    Type.Void, 864, false,
    arg(Type.Entity, entity),
    arg(Type.Float, speed)
  )
end

-- void SET_ENTITY_ONLY_DAMAGED_BY_PLAYER(Entity entity, BOOL toggle) // 0x79F020FF9EDC0748
function ENTITY.SET_ENTITY_ONLY_DAMAGED_BY_PLAYER(entity, toggle)
  native.invoke(
    Type.Void, 865, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- void SET_ENTITY_ONLY_DAMAGED_BY_RELATIONSHIP_GROUP(Entity entity, BOOL p1, Any p2) // 0x7022BD828FA0B082
function ENTITY.SET_ENTITY_ONLY_DAMAGED_BY_RELATIONSHIP_GROUP(entity, p1, p2)
  native.invoke(
    Type.Void, 866, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, p1),
    arg(Type.Any, p2)
  )
end

-- void SET_ENTITY_PROOFS(Entity entity, BOOL bulletProof, BOOL fireProof, BOOL explosionProof, BOOL collisionProof, BOOL meleeProof, BOOL steamProof, BOOL p7, BOOL waterProof) // 0xFAEE099C6F890BB8
--[[
Enable / disable each type of damage.

waterProof is damage related to water not drowning
--------------
p7 is to to '1' in am_mp_property_ext/int: ENTITY::SET_ENTITY_PROOFS(uParam0->f_19, true, true, true, true, true, true, 1, true);

--]]
function ENTITY.SET_ENTITY_PROOFS(entity, bulletProof, fireProof, explosionProof, collisionProof, meleeProof, steamProof, p7, waterProof)
  native.invoke(
    Type.Void, 867, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, bulletProof),
    arg(Type.Bool, fireProof),
    arg(Type.Bool, explosionProof),
    arg(Type.Bool, collisionProof),
    arg(Type.Bool, meleeProof),
    arg(Type.Bool, steamProof),
    arg(Type.Bool, p7),
    arg(Type.Bool, waterProof)
  )
end

-- BOOL GET_ENTITY_PROOFS(Entity entity, BOOL* bulletProof, BOOL* fireProof, BOOL* explosionProof, BOOL* collisionProof, BOOL* meleeProof, BOOL* steamProof, BOOL* p7, BOOL* drownProof) // 0xBE8CD9BE829BBEBF
function ENTITY.GET_ENTITY_PROOFS(entity, bulletProof, fireProof, explosionProof, collisionProof, meleeProof, steamProof, p7, drownProof)
  return native.invoke(
    Type.Bool, 868, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, bulletProof),
    arg(Type.Bool, fireProof),
    arg(Type.Bool, explosionProof),
    arg(Type.Bool, collisionProof),
    arg(Type.Bool, meleeProof),
    arg(Type.Bool, steamProof),
    arg(Type.Bool, p7),
    arg(Type.Bool, drownProof)
  )
end

-- void SET_ENTITY_QUATERNION(Entity entity, float x, float y, float z, float w) // 0x77B21BE7AC540F07
--[[
w is the correct parameter name!
--]]
function ENTITY.SET_ENTITY_QUATERNION(entity, x, y, z, w)
  native.invoke(
    Type.Void, 869, false,
    arg(Type.Entity, entity),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, w)
  )
end

-- void SET_ENTITY_RECORDS_COLLISIONS(Entity entity, BOOL toggle) // 0x0A50A1EEDAD01E65
function ENTITY.SET_ENTITY_RECORDS_COLLISIONS(entity, toggle)
  native.invoke(
    Type.Void, 870, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- void SET_ENTITY_ROTATION(Entity entity, float pitch, float roll, float yaw, int rotationOrder, BOOL p5) // 0x8524A8B0171D5E07
--[[
rotationOrder refers to the order yaw pitch roll is applied
value ranges from 0 to 5. What you use for rotationOrder when setting must be the same as rotationOrder when getting the rotation. 
Unsure what value corresponds to what rotation order, more testing will be needed for that.
For the most part R* uses 1 or 2 as the order.
p5 is usually set as true

--]]
function ENTITY.SET_ENTITY_ROTATION(entity, pitch, roll, yaw, rotationOrder, p5)
  native.invoke(
    Type.Void, 871, false,
    arg(Type.Entity, entity),
    arg(Type.Float, pitch),
    arg(Type.Float, roll),
    arg(Type.Float, yaw),
    arg(Type.Int, rotationOrder),
    arg(Type.Bool, p5)
  )
end

-- void SET_ENTITY_VISIBLE(Entity entity, BOOL toggle, BOOL p2) // 0xEA1C610A04DB6BBB
--[[
p2 is always 0.
--]]
function ENTITY.SET_ENTITY_VISIBLE(entity, toggle, p2)
  native.invoke(
    Type.Void, 872, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle),
    arg(Type.Bool, p2)
  )
end

-- void SET_ENTITY_WATER_REFLECTION_FLAG(Entity entity, BOOL toggle) // 0xC34BC448DA29F5E9
function ENTITY.SET_ENTITY_WATER_REFLECTION_FLAG(entity, toggle)
  native.invoke(
    Type.Void, 873, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- void SET_ENTITY_MIRROR_REFLECTION_FLAG(Entity entity, BOOL p1) // 0xE66377CDDADA4810
function ENTITY.SET_ENTITY_MIRROR_REFLECTION_FLAG(entity, p1)
  native.invoke(
    Type.Void, 874, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, p1)
  )
end

-- void SET_ENTITY_VELOCITY(Entity entity, float x, float y, float z) // 0x1C99BB7B6E96D16F
--[[
Note that the third parameter(denoted as z) is "up and down" with positive numbers encouraging upwards movement.
--]]
function ENTITY.SET_ENTITY_VELOCITY(entity, x, y, z)
  native.invoke(
    Type.Void, 875, false,
    arg(Type.Entity, entity),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void SET_ENTITY_ANGULAR_VELOCITY(Entity entity, float x, float y, float z) // 0x8339643499D1222E
function ENTITY.SET_ENTITY_ANGULAR_VELOCITY(entity, x, y, z)
  native.invoke(
    Type.Void, 876, false,
    arg(Type.Entity, entity),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void SET_ENTITY_HAS_GRAVITY(Entity entity, BOOL toggle) // 0x4A4722448F18EEF5
function ENTITY.SET_ENTITY_HAS_GRAVITY(entity, toggle)
  native.invoke(
    Type.Void, 877, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- void SET_ENTITY_LOD_DIST(Entity entity, int value) // 0x5927F96A78577363
--[[
LOD distance can be 0 to 0xFFFF (higher values will result in 0xFFFF) as it is actually stored as a 16-bit value (aka uint16_t).
--]]
function ENTITY.SET_ENTITY_LOD_DIST(entity, value)
  native.invoke(
    Type.Void, 878, false,
    arg(Type.Entity, entity),
    arg(Type.Int, value)
  )
end

-- int GET_ENTITY_LOD_DIST(Entity entity) // 0x4159C2762B5791D6
--[[
Returns the LOD distance of an entity.
--]]
function ENTITY.GET_ENTITY_LOD_DIST(entity)
  return native.invoke(
    Type.Int, 879, false,
    arg(Type.Entity, entity)
  )
end

-- void SET_ENTITY_ALPHA(Entity entity, int alphaLevel, BOOL skin) // 0x44A0870B7E92D7C0
--[[
skin - everything alpha except skin
Set entity alpha level. Ranging from 0 to 255 but chnages occur after every 20 percent (after every 51).
--]]
function ENTITY.SET_ENTITY_ALPHA(entity, alphaLevel, skin)
  native.invoke(
    Type.Void, 880, false,
    arg(Type.Entity, entity),
    arg(Type.Int, alphaLevel),
    arg(Type.Bool, skin)
  )
end

-- int GET_ENTITY_ALPHA(Entity entity) // 0x5A47B3B5E63E94C6
function ENTITY.GET_ENTITY_ALPHA(entity)
  return native.invoke(
    Type.Int, 881, false,
    arg(Type.Entity, entity)
  )
end

-- void RESET_ENTITY_ALPHA(Entity entity) // 0x9B1E824FFBB7027A
function ENTITY.RESET_ENTITY_ALPHA(entity)
  native.invoke(
    Type.Void, 882, false,
    arg(Type.Entity, entity)
  )
end

-- void RESET_PICKUP_ENTITY_GLOW(Entity entity) // 0x490861B88F4FD846
--[[
Similar to RESET_ENTITY_ALPHA
--]]
function ENTITY.RESET_PICKUP_ENTITY_GLOW(entity)
  native.invoke(
    Type.Void, 883, false,
    arg(Type.Entity, entity)
  )
end

-- void SET_PICKUP_COLLIDES_WITH_PROJECTILES(Any p0, Any p1) // 0xCEA7C8E1B48FF68C
function ENTITY.SET_PICKUP_COLLIDES_WITH_PROJECTILES(p0, p1)
  native.invoke(
    Type.Void, 884, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void SET_ENTITY_SORT_BIAS(Entity entity, float p1) // 0x5C3B791D580E0BC2
--[[
Only called once in the scripts.

Related to weapon objects.

--]]
function ENTITY.SET_ENTITY_SORT_BIAS(entity, p1)
  native.invoke(
    Type.Void, 885, false,
    arg(Type.Entity, entity),
    arg(Type.Float, p1)
  )
end

-- void SET_ENTITY_ALWAYS_PRERENDER(Entity entity, BOOL toggle) // 0xACAD101E1FB66689
function ENTITY.SET_ENTITY_ALWAYS_PRERENDER(entity, toggle)
  native.invoke(
    Type.Void, 886, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- void SET_ENTITY_RENDER_SCORCHED(Entity entity, BOOL toggle) // 0x730F5F8D3F0F2050
function ENTITY.SET_ENTITY_RENDER_SCORCHED(entity, toggle)
  native.invoke(
    Type.Void, 887, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- void SET_ENTITY_TRAFFICLIGHT_OVERRIDE(Entity entity, int state) // 0x57C5DB656185EAC4
--[[
Example here: www.gtaforums.com/topic/830463-help-with-turning-lights-green-and-causing-peds-to-crash-into-each-other/#entry1068211340

0 = green
1 = red
2 = yellow
3 = reset changes
changing lights may not change the behavior of vehicles
--]]
function ENTITY.SET_ENTITY_TRAFFICLIGHT_OVERRIDE(entity, state)
  native.invoke(
    Type.Void, 888, false,
    arg(Type.Entity, entity),
    arg(Type.Int, state)
  )
end

-- void SET_ENTITY_IS_IN_VEHICLE(Entity entity) // 0x78E8E3A640178255
function ENTITY.SET_ENTITY_IS_IN_VEHICLE(entity)
  native.invoke(
    Type.Void, 889, false,
    arg(Type.Entity, entity)
  )
end

-- void CREATE_MODEL_SWAP(float x, float y, float z, float radius, Hash originalModel, Hash newModel, BOOL p6) // 0x92C47782FDA8B2A3
--[[
Only works with objects!
--]]
function ENTITY.CREATE_MODEL_SWAP(x, y, z, radius, originalModel, newModel, p6)
  native.invoke(
    Type.Void, 890, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Hash, originalModel),
    arg(Type.Hash, newModel),
    arg(Type.Bool, p6)
  )
end

-- void REMOVE_MODEL_SWAP(float x, float y, float z, float radius, Hash originalModel, Hash newModel, BOOL p6) // 0x033C0F9A64E229AE
function ENTITY.REMOVE_MODEL_SWAP(x, y, z, radius, originalModel, newModel, p6)
  native.invoke(
    Type.Void, 891, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Hash, originalModel),
    arg(Type.Hash, newModel),
    arg(Type.Bool, p6)
  )
end

-- void CREATE_MODEL_HIDE(float x, float y, float z, float radius, Hash modelHash, BOOL p5) // 0x8A97BCA30A0CE478
--[[
p5 = sets as true in scripts
Same as the comment for CREATE_MODEL_SWAP unless for some reason p5 affects it this only works with objects as well.

Network players do not see changes done with this.
--]]
function ENTITY.CREATE_MODEL_HIDE(x, y, z, radius, modelHash, p5)
  native.invoke(
    Type.Void, 892, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Hash, modelHash),
    arg(Type.Bool, p5)
  )
end

-- void CREATE_MODEL_HIDE_EXCLUDING_SCRIPT_OBJECTS(float x, float y, float z, float radius, Hash modelHash, BOOL p5) // 0x3A52AE588830BF7F
function ENTITY.CREATE_MODEL_HIDE_EXCLUDING_SCRIPT_OBJECTS(x, y, z, radius, modelHash, p5)
  native.invoke(
    Type.Void, 893, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Hash, modelHash),
    arg(Type.Bool, p5)
  )
end

-- void REMOVE_MODEL_HIDE(float x, float y, float z, float radius, Hash modelHash, BOOL p5) // 0xD9E3006FB3CBD765
--[[
This native makes entities visible that are hidden by the native CREATE_MODEL_HIDE.
p5 should be false, true does nothing
--]]
function ENTITY.REMOVE_MODEL_HIDE(x, y, z, radius, modelHash, p5)
  native.invoke(
    Type.Void, 894, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Hash, modelHash),
    arg(Type.Bool, p5)
  )
end

-- void CREATE_FORCED_OBJECT(float x, float y, float z, Any p3, Hash modelHash, BOOL p5) // 0x150E808B375A385A
function ENTITY.CREATE_FORCED_OBJECT(x, y, z, p3, modelHash, p5)
  native.invoke(
    Type.Void, 895, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Any, p3),
    arg(Type.Hash, modelHash),
    arg(Type.Bool, p5)
  )
end

-- void REMOVE_FORCED_OBJECT(float x, float y, float z, float p3, Hash modelHash) // 0x61B6775E83C0DB6F
function ENTITY.REMOVE_FORCED_OBJECT(x, y, z, p3, modelHash)
  native.invoke(
    Type.Void, 896, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, p3),
    arg(Type.Hash, modelHash)
  )
end

-- void SET_ENTITY_NO_COLLISION_ENTITY(Entity entity1, Entity entity2, BOOL thisFrameOnly) // 0xA53ED5520C07654A
--[[
Calling this function disables collision between two entities.
The importance of the order for entity1 and entity2 is unclear.
The third parameter, `thisFrame`, decides whether the collision is to be disabled until it is turned back on, or if it's just this frame.
--]]
function ENTITY.SET_ENTITY_NO_COLLISION_ENTITY(entity1, entity2, thisFrameOnly)
  native.invoke(
    Type.Void, 897, false,
    arg(Type.Entity, entity1),
    arg(Type.Entity, entity2),
    arg(Type.Bool, thisFrameOnly)
  )
end

-- void SET_ENTITY_MOTION_BLUR(Entity entity, BOOL toggle) // 0x295D82A8559F9150
function ENTITY.SET_ENTITY_MOTION_BLUR(entity, toggle)
  native.invoke(
    Type.Void, 898, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- void SET_CAN_AUTO_VAULT_ON_ENTITY(Entity entity, BOOL toggle) // 0xE12ABE5E3A389A6C
--[[
p1 always false.
--]]
function ENTITY.SET_CAN_AUTO_VAULT_ON_ENTITY(entity, toggle)
  native.invoke(
    Type.Void, 899, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- void SET_CAN_CLIMB_ON_ENTITY(Entity entity, BOOL toggle) // 0xA80AE305E0A3044F
--[[
p1 always false.
--]]
function ENTITY.SET_CAN_CLIMB_ON_ENTITY(entity, toggle)
  native.invoke(
    Type.Void, 900, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- void SET_WAIT_FOR_COLLISIONS_BEFORE_PROBE(Entity entity, BOOL toggle) // 0xDC6F8601FAF2E893
--[[
Only called within 1 script for x360. 'fm_mission_controller' and it used on an object. 

Ran after these 2 natives,
set_object_targettable(uParam0, 0);
set_entity_invincible(uParam0, 1);
--]]
function ENTITY.SET_WAIT_FOR_COLLISIONS_BEFORE_PROBE(entity, toggle)
  native.invoke(
    Type.Void, 901, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- void SET_ENTITY_NOWEAPONDECALS(Entity entity, BOOL p1) // 0x2C2E3DC128F44309
function ENTITY.SET_ENTITY_NOWEAPONDECALS(entity, p1)
  native.invoke(
    Type.Void, 902, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, p1)
  )
end

-- void SET_ENTITY_USE_MAX_DISTANCE_FOR_WATER_REFLECTION(Entity entity, BOOL p1) // 0x1A092BB0C3808B96
function ENTITY.SET_ENTITY_USE_MAX_DISTANCE_FOR_WATER_REFLECTION(entity, p1)
  native.invoke(
    Type.Void, 903, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, p1)
  )
end

-- Vector3 GET_ENTITY_BONE_ROTATION(Entity entity, int boneIndex) // 0xCE6294A232D03786
--[[
Gets the world rotation of the specified bone of the specified entity.
--]]
function ENTITY.GET_ENTITY_BONE_ROTATION(entity, boneIndex)
  return native.invoke(
    Type.Vector3, 904, false,
    arg(Type.Entity, entity),
    arg(Type.Int, boneIndex)
  )
end

-- Vector3 GET_ENTITY_BONE_POSTION(Entity entity, int boneIndex) // 0x46F8696933A63C9B
--[[
Gets the world position of the specified bone of the specified entity.
--]]
function ENTITY.GET_ENTITY_BONE_POSTION(entity, boneIndex)
  return native.invoke(
    Type.Vector3, 905, false,
    arg(Type.Entity, entity),
    arg(Type.Int, boneIndex)
  )
end

-- Vector3 GET_ENTITY_BONE_OBJECT_ROTATION(Entity entity, int boneIndex) // 0xBD8D32550E5CEBFE
--[[
Gets the local rotation of the specified bone of the specified entity.
--]]
function ENTITY.GET_ENTITY_BONE_OBJECT_ROTATION(entity, boneIndex)
  return native.invoke(
    Type.Vector3, 906, false,
    arg(Type.Entity, entity),
    arg(Type.Int, boneIndex)
  )
end

-- Vector3 GET_ENTITY_BONE_OBJECT_POSTION(Entity entity, int boneIndex) // 0xCF1247CC86961FD6
function ENTITY.GET_ENTITY_BONE_OBJECT_POSTION(entity, boneIndex)
  return native.invoke(
    Type.Vector3, 907, false,
    arg(Type.Entity, entity),
    arg(Type.Int, boneIndex)
  )
end

-- int GET_ENTITY_BONE_COUNT(Entity entity) // 0xB328DCC3A3AA401B
function ENTITY.GET_ENTITY_BONE_COUNT(entity)
  return native.invoke(
    Type.Int, 908, false,
    arg(Type.Entity, entity)
  )
end

-- void ENABLE_ENTITY_BULLET_COLLISION(Entity entity) // 0x6CE177D014502E8A
function ENTITY.ENABLE_ENTITY_BULLET_COLLISION(entity)
  native.invoke(
    Type.Void, 909, false,
    arg(Type.Entity, entity)
  )
end

-- void SET_ENTITY_CAN_ONLY_BE_DAMAGED_BY_ENTITY(Entity entity1, Entity entity2) // 0xB17BC6453F6CF5AC
function ENTITY.SET_ENTITY_CAN_ONLY_BE_DAMAGED_BY_ENTITY(entity1, entity2)
  native.invoke(
    Type.Void, 910, false,
    arg(Type.Entity, entity1),
    arg(Type.Entity, entity2)
  )
end

-- void SET_ENTITY_CANT_CAUSE_COLLISION_DAMAGED_ENTITY(Entity entity1, Entity entity2) // 0x68B562E124CC0AEF
function ENTITY.SET_ENTITY_CANT_CAUSE_COLLISION_DAMAGED_ENTITY(entity1, entity2)
  native.invoke(
    Type.Void, 911, false,
    arg(Type.Entity, entity1),
    arg(Type.Entity, entity2)
  )
end

-- void SET_ALLOW_MIGRATE_TO_SPECTATOR(Entity entity, Any p1) // 0x36F32DE87082343E
--[[
p1 is always set to 1
--]]
function ENTITY.SET_ALLOW_MIGRATE_TO_SPECTATOR(entity, p1)
  native.invoke(
    Type.Void, 912, false,
    arg(Type.Entity, entity),
    arg(Type.Any, p1)
  )
end

-- Entity GET_ENTITY_OF_TYPE_ATTACHED_TO_ENTITY(Entity entity, Hash modelHash) // 0x1F922734E259BD26
--[[
Gets the handle of an entity with a specific model hash attached to another entity, such as an object attached to a ped.
 This native does not appear to have anything to do with pickups as in scripts it is used with objects.

Example from fm_mission_controller_2020.c:

iVar8 = ENTITY::GET_ENTITY_OF_TYPE_ATTACHED_TO_ENTITY(bParam0->f_9, joaat("p_cs_clipboard"));
--]]
function ENTITY.GET_ENTITY_OF_TYPE_ATTACHED_TO_ENTITY(entity, modelHash)
  return native.invoke(
    Type.Entity, 913, false,
    arg(Type.Entity, entity),
    arg(Type.Hash, modelHash)
  )
end

-- void SET_PICK_UP_BY_CARGOBOB_DISABLED(Entity entity, BOOL toggle) // 0xD7B80E7C3BEFC396
function ENTITY.SET_PICK_UP_BY_CARGOBOB_DISABLED(entity, toggle)
  native.invoke(
    Type.Void, 914, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end


EVENT = {}

-- void SET_DECISION_MAKER(Ped ped, Hash name) // 0xB604A2942ADED0EE
function EVENT.SET_DECISION_MAKER(ped, name)
  native.invoke(
    Type.Void, 915, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, name)
  )
end

-- void CLEAR_DECISION_MAKER_EVENT_RESPONSE(Hash name, int eventType) // 0x4FC9381A7AEE8968
--[[
eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
--]]
function EVENT.CLEAR_DECISION_MAKER_EVENT_RESPONSE(name, eventType)
  native.invoke(
    Type.Void, 916, false,
    arg(Type.Hash, name),
    arg(Type.Int, eventType)
  )
end

-- void BLOCK_DECISION_MAKER_EVENT(Hash name, int eventType) // 0xE42FCDFD0E4196F7
--[[
eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt

This is limited to 4 blocked events at a time.
--]]
function EVENT.BLOCK_DECISION_MAKER_EVENT(name, eventType)
  native.invoke(
    Type.Void, 917, false,
    arg(Type.Hash, name),
    arg(Type.Int, eventType)
  )
end

-- void UNBLOCK_DECISION_MAKER_EVENT(Hash name, int eventType) // 0xD7CD9CF34F2C99E8
--[[
eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
--]]
function EVENT.UNBLOCK_DECISION_MAKER_EVENT(name, eventType)
  native.invoke(
    Type.Void, 918, false,
    arg(Type.Hash, name),
    arg(Type.Int, eventType)
  )
end

-- int ADD_SHOCKING_EVENT_AT_POSITION(int eventType, float x, float y, float z, float duration) // 0xD9F8455409B525E9
--[[
eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
--]]
function EVENT.ADD_SHOCKING_EVENT_AT_POSITION(eventType, x, y, z, duration)
  return native.invoke(
    Type.Int, 919, false,
    arg(Type.Int, eventType),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, duration)
  )
end

-- int ADD_SHOCKING_EVENT_FOR_ENTITY(int eventType, Entity entity, float duration) // 0x7FD8F3BE76F89422
--[[
eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
--]]
function EVENT.ADD_SHOCKING_EVENT_FOR_ENTITY(eventType, entity, duration)
  return native.invoke(
    Type.Int, 920, false,
    arg(Type.Int, eventType),
    arg(Type.Entity, entity),
    arg(Type.Float, duration)
  )
end

-- BOOL IS_SHOCKING_EVENT_IN_SPHERE(int eventType, float x, float y, float z, float radius) // 0x1374ABB7C15BAB92
--[[
eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
--]]
function EVENT.IS_SHOCKING_EVENT_IN_SPHERE(eventType, x, y, z, radius)
  return native.invoke(
    Type.Bool, 921, false,
    arg(Type.Int, eventType),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius)
  )
end

-- BOOL REMOVE_SHOCKING_EVENT(ScrHandle event) // 0x2CDA538C44C6CCE5
function EVENT.REMOVE_SHOCKING_EVENT(event)
  return native.invoke(
    Type.Bool, 922, false,
    arg(Type.Scrhandle, event)
  )
end

-- void REMOVE_ALL_SHOCKING_EVENTS(BOOL p0) // 0xEAABE8FDFA21274C
function EVENT.REMOVE_ALL_SHOCKING_EVENTS(p0)
  native.invoke(
    Type.Void, 923, false,
    arg(Type.Bool, p0)
  )
end

-- void REMOVE_SHOCKING_EVENT_SPAWN_BLOCKING_AREAS() // 0x340F1415B68AEADE
function EVENT.REMOVE_SHOCKING_EVENT_SPAWN_BLOCKING_AREAS()
  native.invoke(
    Type.Void, 924, false
  )
end

-- void SUPPRESS_SHOCKING_EVENTS_NEXT_FRAME() // 0x2F9A292AD0A3BD89
function EVENT.SUPPRESS_SHOCKING_EVENTS_NEXT_FRAME()
  native.invoke(
    Type.Void, 925, false
  )
end

-- void SUPPRESS_SHOCKING_EVENT_TYPE_NEXT_FRAME(int eventType) // 0x3FD2EC8BF1F1CF30
--[[
eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
--]]
function EVENT.SUPPRESS_SHOCKING_EVENT_TYPE_NEXT_FRAME(eventType)
  native.invoke(
    Type.Void, 926, false,
    arg(Type.Int, eventType)
  )
end

-- void SUPPRESS_AGITATION_EVENTS_NEXT_FRAME() // 0x5F3B7749C112D552
function EVENT.SUPPRESS_AGITATION_EVENTS_NEXT_FRAME()
  native.invoke(
    Type.Void, 927, false
  )
end


FILES = {}

-- int GET_NUM_TATTOO_SHOP_DLC_ITEMS(int character) // 0x278F76C3B0A8F109
--[[
Character types:
0 = Michael, 
1 = Franklin, 
2 = Trevor, 
3 = MPMale, 
4 = MPFemale
--]]
function FILES.GET_NUM_TATTOO_SHOP_DLC_ITEMS(character)
  return native.invoke(
    Type.Int, 928, false,
    arg(Type.Int, character)
  )
end

-- BOOL GET_TATTOO_SHOP_DLC_ITEM_DATA(int characterType, int decorationIndex, Any* outComponent) // 0xFF56381874F82086
--[[
Character types:
0 = Michael, 
1 = Franklin, 
2 = Trevor, 
3 = MPMale, 
4 = MPFemale


enum TattooZoneData
{  
    ZONE_TORSO = 0,  
    ZONE_HEAD = 1,  
    ZONE_LEFT_ARM = 2,  
    ZONE_RIGHT_ARM = 3,  
    ZONE_LEFT_LEG = 4,  
    ZONE_RIGHT_LEG = 5,  
    ZONE_UNKNOWN = 6,
    ZONE_NONE = 7,  
};
struct outComponent
{
    // these vars are suffixed with 4 bytes of padding each.
    uint unk;
    int unk2;
    uint tattooCollectionHash;
    uint tattooNameHash;
    int unk3;
    TattooZoneData zoneId;
    uint unk4;
    uint unk5;
    // maybe more, not sure exactly, decompiled scripts are very vague around this part.
}
--]]
function FILES.GET_TATTOO_SHOP_DLC_ITEM_DATA(characterType, decorationIndex, outComponent)
  return native.invoke(
    Type.Bool, 929, false,
    arg(Type.Int, characterType),
    arg(Type.Int, decorationIndex),
    arg(Type.Any, outComponent)
  )
end

-- int GET_TATTOO_SHOP_DLC_ITEM_INDEX(Hash overlayHash, Any p1, int character) // 0x10144267DD22866C
--[[
Returns some sort of index/offset for overlays/decorations.

Character types:
0 = Michael, 
1 = Franklin, 
2 = Trevor, 
3 = MPMale, 
4 = MPFemale
--]]
function FILES.GET_TATTOO_SHOP_DLC_ITEM_INDEX(overlayHash, p1, character)
  return native.invoke(
    Type.Int, 930, false,
    arg(Type.Hash, overlayHash),
    arg(Type.Any, p1),
    arg(Type.Int, character)
  )
end

-- void INIT_SHOP_PED_COMPONENT(Any* outComponent) // 0x1E8C308FD312C036
function FILES.INIT_SHOP_PED_COMPONENT(outComponent)
  native.invoke(
    Type.Void, 931, false,
    arg(Type.Any, outComponent)
  )
end

-- void INIT_SHOP_PED_PROP(Any* outProp) // 0xEB0A2B758F7B850F
function FILES.INIT_SHOP_PED_PROP(outProp)
  native.invoke(
    Type.Void, 932, false,
    arg(Type.Any, outProp)
  )
end

-- int SETUP_SHOP_PED_APPAREL_QUERY(int p0, int p1, int p2, int p3) // 0x50F457823CE6EB5F
function FILES.SETUP_SHOP_PED_APPAREL_QUERY(p0, p1, p2, p3)
  return native.invoke(
    Type.Int, 933, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1),
    arg(Type.Int, p2),
    arg(Type.Int, p3)
  )
end

-- int SETUP_SHOP_PED_APPAREL_QUERY_TU(int character, int p1, int p2, BOOL p3, int p4, int componentId) // 0x9BDF59818B1E38C1
--[[
character is 0 for Michael, 1 for Franklin, 2 for Trevor, 3 for freemode male, and 4 for freemode female.

componentId is between 0 and 11 and corresponds to the usual component slots.

p1 could be the outfit number; unsure.

p2 is usually -1; unknown function.

p3 appears to be for selecting between clothes and props; false is used with components/clothes, true is used with props.

p4 is usually -1; unknown function.

componentId is -1 when p3 is true in decompiled scripts.
--]]
function FILES.SETUP_SHOP_PED_APPAREL_QUERY_TU(character, p1, p2, p3, p4, componentId)
  return native.invoke(
    Type.Int, 934, false,
    arg(Type.Int, character),
    arg(Type.Int, p1),
    arg(Type.Int, p2),
    arg(Type.Bool, p3),
    arg(Type.Int, p4),
    arg(Type.Int, componentId)
  )
end

-- void GET_SHOP_PED_QUERY_COMPONENT(int componentId, Any* outComponent) // 0x249E310B2D920699
--[[
See https://git.io/JtcRf for example and structs.
--]]
function FILES.GET_SHOP_PED_QUERY_COMPONENT(componentId, outComponent)
  native.invoke(
    Type.Void, 935, false,
    arg(Type.Int, componentId),
    arg(Type.Any, outComponent)
  )
end

-- int GET_SHOP_PED_QUERY_COMPONENT_INDEX(Hash componentHash) // 0x96E2929292A4DB77
--[[
Returns some sort of index/offset for components.
Needs _GET_NUM_PROPS_FROM_OUTFIT to be called with p3 = false and componentId with the drawable's component slot first, returns -1 otherwise.
--]]
function FILES.GET_SHOP_PED_QUERY_COMPONENT_INDEX(componentHash)
  return native.invoke(
    Type.Int, 936, false,
    arg(Type.Hash, componentHash)
  )
end

-- void GET_SHOP_PED_COMPONENT(Hash componentHash, Any* outComponent) // 0x74C0E2A57EC66760
--[[
More info here: https://gist.github.com/root-cause/3b80234367b0c856d60bf5cb4b826f86
--]]
function FILES.GET_SHOP_PED_COMPONENT(componentHash, outComponent)
  native.invoke(
    Type.Void, 937, false,
    arg(Type.Hash, componentHash),
    arg(Type.Any, outComponent)
  )
end

-- void GET_SHOP_PED_QUERY_PROP(int componentId, Any* outProp) // 0xDE44A00999B2837D
--[[
See https://git.io/JtcRf for example and structs.
--]]
function FILES.GET_SHOP_PED_QUERY_PROP(componentId, outProp)
  native.invoke(
    Type.Void, 938, false,
    arg(Type.Int, componentId),
    arg(Type.Any, outProp)
  )
end

-- int GET_SHOP_PED_QUERY_PROP_INDEX(Hash componentHash) // 0x6CEBE002E58DEE97
--[[
Returns some sort of index/offset for props.
Needs _GET_NUM_PROPS_FROM_OUTFIT to be called with p3 = true and componentId = -1 first, returns -1 otherwise.
--]]
function FILES.GET_SHOP_PED_QUERY_PROP_INDEX(componentHash)
  return native.invoke(
    Type.Int, 939, false,
    arg(Type.Hash, componentHash)
  )
end

-- void GET_SHOP_PED_PROP(Hash componentHash, Any* outProp) // 0x5D5CAFF661DDF6FC
--[[
More info here: https://gist.github.com/root-cause/3b80234367b0c856d60bf5cb4b826f86
--]]
function FILES.GET_SHOP_PED_PROP(componentHash, outProp)
  native.invoke(
    Type.Void, 940, false,
    arg(Type.Hash, componentHash),
    arg(Type.Any, outProp)
  )
end

-- Hash GET_HASH_NAME_FOR_COMPONENT(Entity entity, int componentId, int drawableVariant, int textureVariant) // 0x0368B3A838070348
function FILES.GET_HASH_NAME_FOR_COMPONENT(entity, componentId, drawableVariant, textureVariant)
  return native.invoke(
    Type.Hash, 941, false,
    arg(Type.Entity, entity),
    arg(Type.Int, componentId),
    arg(Type.Int, drawableVariant),
    arg(Type.Int, textureVariant)
  )
end

-- Hash GET_HASH_NAME_FOR_PROP(Entity entity, int componentId, int propIndex, int propTextureIndex) // 0x5D6160275CAEC8DD
function FILES.GET_HASH_NAME_FOR_PROP(entity, componentId, propIndex, propTextureIndex)
  return native.invoke(
    Type.Hash, 942, false,
    arg(Type.Entity, entity),
    arg(Type.Int, componentId),
    arg(Type.Int, propIndex),
    arg(Type.Int, propTextureIndex)
  )
end

-- int GET_SHOP_PED_APPAREL_VARIANT_COMPONENT_COUNT(Hash componentHash) // 0xC17AD0E5752BECDA
function FILES.GET_SHOP_PED_APPAREL_VARIANT_COMPONENT_COUNT(componentHash)
  return native.invoke(
    Type.Int, 943, false,
    arg(Type.Hash, componentHash)
  )
end

-- int GET_SHOP_PED_APPAREL_VARIANT_PROP_COUNT(Hash propHash) // 0xD40AAC51E8E4C663
--[[
`propHash`: Ped helmet prop hash?
This native returns 1 when the player helmet has a visor (there is another prop index for the same helmet with closed/opened visor variant) that can be toggled. 0 if there's no alternative version with a visor for this helmet prop.
--]]
function FILES.GET_SHOP_PED_APPAREL_VARIANT_PROP_COUNT(propHash)
  return native.invoke(
    Type.Int, 944, false,
    arg(Type.Hash, propHash)
  )
end

-- void GET_VARIANT_COMPONENT(Hash componentHash, int variantComponentIndex, Hash* nameHash, int* enumValue, int* componentType) // 0x6E11F282F11863B6
function FILES.GET_VARIANT_COMPONENT(componentHash, variantComponentIndex, nameHash, enumValue, componentType)
  native.invoke(
    Type.Void, 945, false,
    arg(Type.Hash, componentHash),
    arg(Type.Int, variantComponentIndex),
    arg(Type.Hash, nameHash),
    arg(Type.Int, enumValue),
    arg(Type.Int, componentType)
  )
end

-- void GET_VARIANT_PROP(Hash componentHash, int variantPropIndex, Hash* nameHash, int* enumValue, int* anchorPoint) // 0xD81B7F27BC773E66
function FILES.GET_VARIANT_PROP(componentHash, variantPropIndex, nameHash, enumValue, anchorPoint)
  native.invoke(
    Type.Void, 946, false,
    arg(Type.Hash, componentHash),
    arg(Type.Int, variantPropIndex),
    arg(Type.Hash, nameHash),
    arg(Type.Int, enumValue),
    arg(Type.Int, anchorPoint)
  )
end

-- int GET_SHOP_PED_APPAREL_FORCED_COMPONENT_COUNT(Hash componentHash) // 0xC6B9DB42C04DD8C3
--[[
Returns number of possible values of the forcedComponentIndex argument of GET_FORCED_COMPONENT.
--]]
function FILES.GET_SHOP_PED_APPAREL_FORCED_COMPONENT_COUNT(componentHash)
  return native.invoke(
    Type.Int, 947, false,
    arg(Type.Hash, componentHash)
  )
end

-- int GET_SHOP_PED_APPAREL_FORCED_PROP_COUNT(Hash componentHash) // 0x017568A8182D98A6
--[[
Returns number of possible values of the forcedPropIndex argument of GET_FORCED_PROP.
--]]
function FILES.GET_SHOP_PED_APPAREL_FORCED_PROP_COUNT(componentHash)
  return native.invoke(
    Type.Int, 948, false,
    arg(Type.Hash, componentHash)
  )
end

-- void GET_FORCED_COMPONENT(Hash componentHash, int forcedComponentIndex, Hash* nameHash, int* enumValue, int* componentType) // 0x6C93ED8C2F74859B
function FILES.GET_FORCED_COMPONENT(componentHash, forcedComponentIndex, nameHash, enumValue, componentType)
  native.invoke(
    Type.Void, 949, false,
    arg(Type.Hash, componentHash),
    arg(Type.Int, forcedComponentIndex),
    arg(Type.Hash, nameHash),
    arg(Type.Int, enumValue),
    arg(Type.Int, componentType)
  )
end

-- void GET_FORCED_PROP(Hash componentHash, int forcedPropIndex, Hash* nameHash, int* enumValue, int* anchorPoint) // 0xE1CA84EBF72E691D
function FILES.GET_FORCED_PROP(componentHash, forcedPropIndex, nameHash, enumValue, anchorPoint)
  native.invoke(
    Type.Void, 950, false,
    arg(Type.Hash, componentHash),
    arg(Type.Int, forcedPropIndex),
    arg(Type.Hash, nameHash),
    arg(Type.Int, enumValue),
    arg(Type.Int, anchorPoint)
  )
end

-- BOOL DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(Hash componentHash, Hash restrictionTagHash, int componentId) // 0x341DE7ED1D2A1BFD
--[[
Full list of restriction tags by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pedApparelRestrictionTags.json

componentId/last parameter seems to be unused.
--]]
function FILES.DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(componentHash, restrictionTagHash, componentId)
  return native.invoke(
    Type.Bool, 951, false,
    arg(Type.Hash, componentHash),
    arg(Type.Hash, restrictionTagHash),
    arg(Type.Int, componentId)
  )
end

-- BOOL DOES_CURRENT_PED_COMPONENT_HAVE_RESTRICTION_TAG(Ped ped, int componentId, Hash restrictionTagHash) // 0x7796B21B76221BC5
function FILES.DOES_CURRENT_PED_COMPONENT_HAVE_RESTRICTION_TAG(ped, componentId, restrictionTagHash)
  return native.invoke(
    Type.Bool, 952, false,
    arg(Type.Ped, ped),
    arg(Type.Int, componentId),
    arg(Type.Hash, restrictionTagHash)
  )
end

-- BOOL DOES_CURRENT_PED_PROP_HAVE_RESTRICTION_TAG(Ped ped, int componentId, Hash restrictionTagHash) // 0xD726BAB4554DA580
function FILES.DOES_CURRENT_PED_PROP_HAVE_RESTRICTION_TAG(ped, componentId, restrictionTagHash)
  return native.invoke(
    Type.Bool, 953, false,
    arg(Type.Ped, ped),
    arg(Type.Int, componentId),
    arg(Type.Hash, restrictionTagHash)
  )
end

-- int SETUP_SHOP_PED_OUTFIT_QUERY(int character, BOOL p1) // 0xF3FBE2D50A6A8C28
--[[
characters

0: Michael
1: Franklin
2: Trevor
3: MPMale
4: MPFemale
--]]
function FILES.SETUP_SHOP_PED_OUTFIT_QUERY(character, p1)
  return native.invoke(
    Type.Int, 954, false,
    arg(Type.Int, character),
    arg(Type.Bool, p1)
  )
end

-- void GET_SHOP_PED_QUERY_OUTFIT(int outfitIndex, Any* outfit) // 0x6D793F03A631FE56
--[[
outfitIndex: from 0 to SETUP_SHOP_PED_OUTFIT_QUERY(characterIndex, false) - 1.
See https://git.io/JtcB8 for example and outfit struct.
--]]
function FILES.GET_SHOP_PED_QUERY_OUTFIT(outfitIndex, outfit)
  native.invoke(
    Type.Void, 955, false,
    arg(Type.Int, outfitIndex),
    arg(Type.Any, outfit)
  )
end

-- void GET_SHOP_PED_OUTFIT(Any p0, Any* p1) // 0xB7952076E444979D
function FILES.GET_SHOP_PED_OUTFIT(p0, p1)
  native.invoke(
    Type.Void, 956, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- int GET_SHOP_PED_OUTFIT_LOCATE(Any p0) // 0x073CA26B079F956E
function FILES.GET_SHOP_PED_OUTFIT_LOCATE(p0)
  return native.invoke(
    Type.Int, 957, false,
    arg(Type.Any, p0)
  )
end

-- BOOL GET_SHOP_PED_OUTFIT_PROP_VARIANT(Hash outfitHash, int variantIndex, Any* outPropVariant) // 0xA9F9C2E0FDE11CBB
--[[
See https://git.io/JtcBH for example and structs.
--]]
function FILES.GET_SHOP_PED_OUTFIT_PROP_VARIANT(outfitHash, variantIndex, outPropVariant)
  return native.invoke(
    Type.Bool, 958, false,
    arg(Type.Hash, outfitHash),
    arg(Type.Int, variantIndex),
    arg(Type.Any, outPropVariant)
  )
end

-- BOOL GET_SHOP_PED_OUTFIT_COMPONENT_VARIANT(Hash outfitHash, int variantIndex, Any* outComponentVariant) // 0x19F2A026EDF0013F
--[[
See https://git.io/JtcBH for example and structs.
--]]
function FILES.GET_SHOP_PED_OUTFIT_COMPONENT_VARIANT(outfitHash, variantIndex, outComponentVariant)
  return native.invoke(
    Type.Bool, 959, false,
    arg(Type.Hash, outfitHash),
    arg(Type.Int, variantIndex),
    arg(Type.Any, outComponentVariant)
  )
end

-- int GET_NUM_DLC_VEHICLES() // 0xA7A866D21CD2329B
function FILES.GET_NUM_DLC_VEHICLES()
  return native.invoke(
    Type.Int, 960, false
  )
end

-- Hash GET_DLC_VEHICLE_MODEL(int dlcVehicleIndex) // 0xECC01B7C5763333C
--[[
dlcVehicleIndex is 0 to GET_NUM_DLC_VEHICLS() - 1
--]]
function FILES.GET_DLC_VEHICLE_MODEL(dlcVehicleIndex)
  return native.invoke(
    Type.Hash, 961, false,
    arg(Type.Int, dlcVehicleIndex)
  )
end

-- BOOL GET_DLC_VEHICLE_DATA(int dlcVehicleIndex, Any* outData) // 0x33468EDC08E371F6
--[[
dlcVehicleIndex takes a number from 0 - GET_NUM_DLC_VEHICLES() - 1.
outData is a struct of 3 8-byte items.
The Second item in the struct *(Hash *)(outData + 1) is the vehicle hash.
--]]
function FILES.GET_DLC_VEHICLE_DATA(dlcVehicleIndex, outData)
  return native.invoke(
    Type.Bool, 962, false,
    arg(Type.Int, dlcVehicleIndex),
    arg(Type.Any, outData)
  )
end

-- int GET_DLC_VEHICLE_FLAGS(int dlcVehicleIndex) // 0x5549EE11FA22FCF2
function FILES.GET_DLC_VEHICLE_FLAGS(dlcVehicleIndex)
  return native.invoke(
    Type.Int, 963, false,
    arg(Type.Int, dlcVehicleIndex)
  )
end

-- int GET_NUM_DLC_WEAPONS() // 0xEE47635F352DA367
--[[
Returns the total number of DLC weapons.
--]]
function FILES.GET_NUM_DLC_WEAPONS()
  return native.invoke(
    Type.Int, 964, false
  )
end

-- int GET_NUM_DLC_WEAPONS_SP() // 0x4160B65AE085B5A9
--[[
Returns the total number of DLC weapons that are available in SP (availableInSP field in shop_weapon.meta).
--]]
function FILES.GET_NUM_DLC_WEAPONS_SP()
  return native.invoke(
    Type.Int, 965, false
  )
end

-- BOOL GET_DLC_WEAPON_DATA(int dlcWeaponIndex, Any* outData) // 0x79923CD21BECE14E
--[[

dlcWeaponIndex takes a number from 0 - GET_NUM_DLC_WEAPONS() - 1.
struct DlcWeaponData
{
int emptyCheck; //use DLC1::IS_CONTENT_ITEM_LOCKED on this
int padding1;
int weaponHash;
int padding2;
int unk;
int padding3;
int weaponCost;
int padding4;
int ammoCost;
int padding5;
int ammoType;
int padding6;
int defaultClipSize;
int padding7;
char nameLabel[64];
char descLabel[64];
char desc2Label[64]; // usually "the" + name
char upperCaseNameLabel[64];
};
--]]
function FILES.GET_DLC_WEAPON_DATA(dlcWeaponIndex, outData)
  return native.invoke(
    Type.Bool, 966, false,
    arg(Type.Int, dlcWeaponIndex),
    arg(Type.Any, outData)
  )
end

-- BOOL GET_DLC_WEAPON_DATA_SP(int dlcWeaponIndex, Any* outData) // 0x310836EE7129BA33
--[[
Same as GET_DLC_WEAPON_DATA but only works for DLC weapons that are available in SP.
--]]
function FILES.GET_DLC_WEAPON_DATA_SP(dlcWeaponIndex, outData)
  return native.invoke(
    Type.Bool, 967, false,
    arg(Type.Int, dlcWeaponIndex),
    arg(Type.Any, outData)
  )
end

-- int GET_NUM_DLC_WEAPON_COMPONENTS(int dlcWeaponIndex) // 0x405425358A7D61FE
--[[
Returns the total number of DLC weapon components.
--]]
function FILES.GET_NUM_DLC_WEAPON_COMPONENTS(dlcWeaponIndex)
  return native.invoke(
    Type.Int, 968, false,
    arg(Type.Int, dlcWeaponIndex)
  )
end

-- int GET_NUM_DLC_WEAPON_COMPONENTS_SP(int dlcWeaponIndex) // 0xAD2A7A6DFF55841B
--[[
Returns the total number of DLC weapon components that are available in SP.
--]]
function FILES.GET_NUM_DLC_WEAPON_COMPONENTS_SP(dlcWeaponIndex)
  return native.invoke(
    Type.Int, 969, false,
    arg(Type.Int, dlcWeaponIndex)
  )
end

-- BOOL GET_DLC_WEAPON_COMPONENT_DATA(int dlcWeaponIndex, int dlcWeapCompIndex, Any* ComponentDataPtr) // 0x6CF598A2957C2BF8
--[[
p0 seems to be the weapon index
p1 seems to be the weapon component index
struct DlcComponentData{
int attachBone;
int padding1;
int bActiveByDefault;
int padding2;
int unk;
int padding3;
int componentHash;
int padding4;
int unk2;
int padding5;
int componentCost;
int padding6;
char nameLabel[64];
char descLabel[64];
};

--]]
function FILES.GET_DLC_WEAPON_COMPONENT_DATA(dlcWeaponIndex, dlcWeapCompIndex, ComponentDataPtr)
  return native.invoke(
    Type.Bool, 970, false,
    arg(Type.Int, dlcWeaponIndex),
    arg(Type.Int, dlcWeapCompIndex),
    arg(Type.Any, ComponentDataPtr)
  )
end

-- BOOL GET_DLC_WEAPON_COMPONENT_DATA_SP(int dlcWeaponIndex, int dlcWeapCompIndex, Any* ComponentDataPtr) // 0x31D5E073B6F93CDC
--[[
Same as GET_DLC_WEAPON_COMPONENT_DATA but only works for DLC components that are available in SP.
--]]
function FILES.GET_DLC_WEAPON_COMPONENT_DATA_SP(dlcWeaponIndex, dlcWeapCompIndex, ComponentDataPtr)
  return native.invoke(
    Type.Bool, 971, false,
    arg(Type.Int, dlcWeaponIndex),
    arg(Type.Int, dlcWeapCompIndex),
    arg(Type.Any, ComponentDataPtr)
  )
end

-- BOOL IS_CONTENT_ITEM_LOCKED(Hash itemHash) // 0xD4D7B033C3AA243C
function FILES.IS_CONTENT_ITEM_LOCKED(itemHash)
  return native.invoke(
    Type.Bool, 972, false,
    arg(Type.Hash, itemHash)
  )
end

-- BOOL IS_DLC_VEHICLE_MOD(Hash hash) // 0x0564B9FF9631B82C
function FILES.IS_DLC_VEHICLE_MOD(hash)
  return native.invoke(
    Type.Bool, 973, false,
    arg(Type.Hash, hash)
  )
end

-- Hash GET_DLC_VEHICLE_MOD_LOCK_HASH(Hash hash) // 0xC098810437312FFF
function FILES.GET_DLC_VEHICLE_MOD_LOCK_HASH(hash)
  return native.invoke(
    Type.Hash, 974, false,
    arg(Type.Hash, hash)
  )
end

-- void EXECUTE_CONTENT_CHANGESET_GROUP_FOR_ALL(Hash hash) // 0x6BEDF5769AC2DC07
--[[
From fm_deathmatch_creator and fm_race_creator:

FILES::REVERT_CONTENT_CHANGESET_GROUP_FOR_ALL(joaat("GROUP_MAP_SP"));
FILES::EXECUTE_CONTENT_CHANGESET_GROUP_FOR_ALL(joaat("GROUP_MAP"));
--]]
function FILES.EXECUTE_CONTENT_CHANGESET_GROUP_FOR_ALL(hash)
  native.invoke(
    Type.Void, 975, false,
    arg(Type.Hash, hash)
  )
end

-- void REVERT_CONTENT_CHANGESET_GROUP_FOR_ALL(Hash hash) // 0x3C1978285B036B25
--[[
From fm_deathmatch_creator and fm_race_creator:

FILES::REVERT_CONTENT_CHANGESET_GROUP_FOR_ALL(joaat("GROUP_MAP_SP"));
FILES::EXECUTE_CONTENT_CHANGESET_GROUP_FOR_ALL(joaat("GROUP_MAP"));
--]]
function FILES.REVERT_CONTENT_CHANGESET_GROUP_FOR_ALL(hash)
  native.invoke(
    Type.Void, 976, false,
    arg(Type.Hash, hash)
  )
end


FIRE = {}

-- FireId START_SCRIPT_FIRE(float X, float Y, float Z, int maxChildren, BOOL isGasFire) // 0x6B83617E04503888
--[[
Starts a fire:

xyz: Location of fire
maxChildren: The max amount of times a fire can spread to other objects. Must be 25 or less, or the function will do nothing.
isGasFire: Whether or not the fire is powered by gasoline.
--]]
function FIRE.START_SCRIPT_FIRE(X, Y, Z, maxChildren, isGasFire)
  return native.invoke(
    Type.Fireid, 977, false,
    arg(Type.Float, X),
    arg(Type.Float, Y),
    arg(Type.Float, Z),
    arg(Type.Int, maxChildren),
    arg(Type.Bool, isGasFire)
  )
end

-- void REMOVE_SCRIPT_FIRE(FireId fireHandle) // 0x7FF548385680673F
function FIRE.REMOVE_SCRIPT_FIRE(fireHandle)
  native.invoke(
    Type.Void, 978, false,
    arg(Type.Fireid, fireHandle)
  )
end

-- FireId START_ENTITY_FIRE(Entity entity) // 0xF6A9D9708F6F23DF
function FIRE.START_ENTITY_FIRE(entity)
  return native.invoke(
    Type.Fireid, 979, false,
    arg(Type.Entity, entity)
  )
end

-- void STOP_ENTITY_FIRE(Entity entity) // 0x7F0DD2EBBB651AFF
function FIRE.STOP_ENTITY_FIRE(entity)
  native.invoke(
    Type.Void, 980, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL IS_ENTITY_ON_FIRE(Entity entity) // 0x28D3FED7190D3A0B
function FIRE.IS_ENTITY_ON_FIRE(entity)
  return native.invoke(
    Type.Bool, 981, false,
    arg(Type.Entity, entity)
  )
end

-- int GET_NUMBER_OF_FIRES_IN_RANGE(float x, float y, float z, float radius) // 0x50CAD495A460B305
function FIRE.GET_NUMBER_OF_FIRES_IN_RANGE(x, y, z, radius)
  return native.invoke(
    Type.Int, 982, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius)
  )
end

-- void SET_FLAMMABILITY_MULTIPLIER(float p0) // 0x8F390AC4155099BA
function FIRE.SET_FLAMMABILITY_MULTIPLIER(p0)
  native.invoke(
    Type.Void, 983, false,
    arg(Type.Float, p0)
  )
end

-- void STOP_FIRE_IN_RANGE(float x, float y, float z, float radius) // 0x056A8A219B8E829F
function FIRE.STOP_FIRE_IN_RANGE(x, y, z, radius)
  native.invoke(
    Type.Void, 984, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius)
  )
end

-- BOOL GET_CLOSEST_FIRE_POS(Vector3* outPosition, float x, float y, float z) // 0x352A9F6BCF90081F
--[[
Returns TRUE if it found something. FALSE if not.
--]]
function FIRE.GET_CLOSEST_FIRE_POS(outPosition, x, y, z)
  return native.invoke(
    Type.Bool, 985, true,
    arg(Type.Vector3, outPosition),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void ADD_EXPLOSION(float x, float y, float z, int explosionType, float damageScale, BOOL isAudible, BOOL isInvisible, float cameraShake, BOOL noDamage) // 0xE3AD2BDBAEE269AC
--[[
BOOL isAudible = If explosion makes a sound.
BOOL isInvisible = If the explosion is invisible or not.

explosionType: https://alloc8or.re/gta5/doc/enums/eExplosionTag.txt
--]]
function FIRE.ADD_EXPLOSION(x, y, z, explosionType, damageScale, isAudible, isInvisible, cameraShake, noDamage)
  native.invoke(
    Type.Void, 986, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, explosionType),
    arg(Type.Float, damageScale),
    arg(Type.Bool, isAudible),
    arg(Type.Bool, isInvisible),
    arg(Type.Float, cameraShake),
    arg(Type.Bool, noDamage)
  )
end

-- void ADD_OWNED_EXPLOSION(Ped ped, float x, float y, float z, int explosionType, float damageScale, BOOL isAudible, BOOL isInvisible, float cameraShake) // 0x172AA1B624FA1013
--[[
isAudible: If explosion makes a sound.
isInvisible: If the explosion is invisible or not.
explosionType: See ADD_EXPLOSION.
--]]
function FIRE.ADD_OWNED_EXPLOSION(ped, x, y, z, explosionType, damageScale, isAudible, isInvisible, cameraShake)
  native.invoke(
    Type.Void, 987, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, explosionType),
    arg(Type.Float, damageScale),
    arg(Type.Bool, isAudible),
    arg(Type.Bool, isInvisible),
    arg(Type.Float, cameraShake)
  )
end

-- void ADD_EXPLOSION_WITH_USER_VFX(float x, float y, float z, int explosionType, Hash explosionFx, float damageScale, BOOL isAudible, BOOL isInvisible, float cameraShake) // 0x36DD3FE58B5E5212
--[[
isAudible: If explosion makes a sound.
isInvisible: If the explosion is invisible or not.
explosionType: See ADD_EXPLOSION.
--]]
function FIRE.ADD_EXPLOSION_WITH_USER_VFX(x, y, z, explosionType, explosionFx, damageScale, isAudible, isInvisible, cameraShake)
  native.invoke(
    Type.Void, 988, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, explosionType),
    arg(Type.Hash, explosionFx),
    arg(Type.Float, damageScale),
    arg(Type.Bool, isAudible),
    arg(Type.Bool, isInvisible),
    arg(Type.Float, cameraShake)
  )
end

-- BOOL IS_EXPLOSION_IN_AREA(int explosionType, float x1, float y1, float z1, float x2, float y2, float z2) // 0x2E2EBA0EE7CED0E0
--[[
explosionType: See ADD_EXPLOSION.
--]]
function FIRE.IS_EXPLOSION_IN_AREA(explosionType, x1, y1, z1, x2, y2, z2)
  return native.invoke(
    Type.Bool, 989, false,
    arg(Type.Int, explosionType),
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2)
  )
end

-- BOOL IS_EXPLOSION_ACTIVE_IN_AREA(int explosionType, float x1, float y1, float z1, float x2, float y2, float z2) // 0x6070104B699B2EF4
--[[
explosionType: See ADD_EXPLOSION.
--]]
function FIRE.IS_EXPLOSION_ACTIVE_IN_AREA(explosionType, x1, y1, z1, x2, y2, z2)
  return native.invoke(
    Type.Bool, 990, false,
    arg(Type.Int, explosionType),
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2)
  )
end

-- BOOL IS_EXPLOSION_IN_SPHERE(int explosionType, float x, float y, float z, float radius) // 0xAB0F816885B0E483
--[[
explosionType: See ADD_EXPLOSION.
--]]
function FIRE.IS_EXPLOSION_IN_SPHERE(explosionType, x, y, z, radius)
  return native.invoke(
    Type.Bool, 991, false,
    arg(Type.Int, explosionType),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius)
  )
end

-- Entity GET_OWNER_OF_EXPLOSION_IN_SPHERE(int explosionType, float x, float y, float z, float radius) // 0xB3CD51E3DB86F176
--[[
explosionType: See ADD_EXPLOSION.
--]]
function FIRE.GET_OWNER_OF_EXPLOSION_IN_SPHERE(explosionType, x, y, z, radius)
  return native.invoke(
    Type.Entity, 992, false,
    arg(Type.Int, explosionType),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius)
  )
end

-- BOOL IS_EXPLOSION_IN_ANGLED_AREA(int explosionType, float x1, float y1, float z1, float x2, float y2, float z2, float width) // 0xA079A6C51525DC4B
--[[
explosionType: See ADD_EXPLOSION, -1 for any explosion type

--]]
function FIRE.IS_EXPLOSION_IN_ANGLED_AREA(explosionType, x1, y1, z1, x2, y2, z2, width)
  return native.invoke(
    Type.Bool, 993, false,
    arg(Type.Int, explosionType),
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Float, width)
  )
end

-- Entity GET_OWNER_OF_EXPLOSION_IN_ANGLED_AREA(int explosionType, float x1, float y1, float z1, float x2, float y2, float z2, float radius) // 0x14BA4BA137AF6CEC
--[[
Returns a handle to the first entity within the a circle spawned inside the 2 points from a radius.

explosionType: See ADD_EXPLOSION.
--]]
function FIRE.GET_OWNER_OF_EXPLOSION_IN_ANGLED_AREA(explosionType, x1, y1, z1, x2, y2, z2, radius)
  return native.invoke(
    Type.Entity, 994, false,
    arg(Type.Int, explosionType),
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Float, radius)
  )
end


GRAPHICS = {}

-- void SET_DEBUG_LINES_AND_SPHERES_DRAWING_ACTIVE(BOOL enabled) // 0x175B6BFC15CDD0C5
--[[
NOTE: Debugging functions are not present in the retail version of the game.
--]]
function GRAPHICS.SET_DEBUG_LINES_AND_SPHERES_DRAWING_ACTIVE(enabled)
  native.invoke(
    Type.Void, 995, false,
    arg(Type.Bool, enabled)
  )
end

-- void DRAW_DEBUG_LINE(float x1, float y1, float z1, float x2, float y2, float z2, int r, int g, int b, int alpha) // 0x7FDFADE676AA3CB0
function GRAPHICS.DRAW_DEBUG_LINE(x1, y1, z1, x2, y2, z2, r, g, b, alpha)
  native.invoke(
    Type.Void, 996, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b),
    arg(Type.Int, alpha)
  )
end

-- void DRAW_DEBUG_LINE_WITH_TWO_COLOURS(float x1, float y1, float z1, float x2, float y2, float z2, int r1, int g1, int b1, int r2, int g2, int b2, int alpha1, int alpha2) // 0xD8B9A8AC5608FF94
--[[
NOTE: Debugging functions are not present in the retail version of the game.
--]]
function GRAPHICS.DRAW_DEBUG_LINE_WITH_TWO_COLOURS(x1, y1, z1, x2, y2, z2, r1, g1, b1, r2, g2, b2, alpha1, alpha2)
  native.invoke(
    Type.Void, 997, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Int, r1),
    arg(Type.Int, g1),
    arg(Type.Int, b1),
    arg(Type.Int, r2),
    arg(Type.Int, g2),
    arg(Type.Int, b2),
    arg(Type.Int, alpha1),
    arg(Type.Int, alpha2)
  )
end

-- void DRAW_DEBUG_SPHERE(float x, float y, float z, float radius, int red, int green, int blue, int alpha) // 0xAAD68E1AB39DA632
--[[
NOTE: Debugging functions are not present in the retail version of the game.
--]]
function GRAPHICS.DRAW_DEBUG_SPHERE(x, y, z, radius, red, green, blue, alpha)
  native.invoke(
    Type.Void, 998, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Int, red),
    arg(Type.Int, green),
    arg(Type.Int, blue),
    arg(Type.Int, alpha)
  )
end

-- void DRAW_DEBUG_BOX(float x1, float y1, float z1, float x2, float y2, float z2, int r, int g, int b, int alpha) // 0x083A2CA4F2E573BD
function GRAPHICS.DRAW_DEBUG_BOX(x1, y1, z1, x2, y2, z2, r, g, b, alpha)
  native.invoke(
    Type.Void, 999, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b),
    arg(Type.Int, alpha)
  )
end

-- void DRAW_DEBUG_CROSS(float x, float y, float z, float size, int red, int green, int blue, int alpha) // 0x73B1189623049839
--[[
NOTE: Debugging functions are not present in the retail version of the game.
--]]
function GRAPHICS.DRAW_DEBUG_CROSS(x, y, z, size, red, green, blue, alpha)
  native.invoke(
    Type.Void, 1000, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, size),
    arg(Type.Int, red),
    arg(Type.Int, green),
    arg(Type.Int, blue),
    arg(Type.Int, alpha)
  )
end

-- void DRAW_DEBUG_TEXT(const char* text, float x, float y, float z, int red, int green, int blue, int alpha) // 0x3903E216620488E8
--[[
NOTE: Debugging functions are not present in the retail version of the game.
--]]
function GRAPHICS.DRAW_DEBUG_TEXT(text, x, y, z, red, green, blue, alpha)
  native.invoke(
    Type.Void, 1001, false,
    arg(Type.String, text),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, red),
    arg(Type.Int, green),
    arg(Type.Int, blue),
    arg(Type.Int, alpha)
  )
end

-- void DRAW_DEBUG_TEXT_2D(const char* text, float x, float y, float z, int red, int green, int blue, int alpha) // 0xA3BB2E9555C05A8F
--[[
NOTE: Debugging functions are not present in the retail version of the game.
--]]
function GRAPHICS.DRAW_DEBUG_TEXT_2D(text, x, y, z, red, green, blue, alpha)
  native.invoke(
    Type.Void, 1002, false,
    arg(Type.String, text),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, red),
    arg(Type.Int, green),
    arg(Type.Int, blue),
    arg(Type.Int, alpha)
  )
end

-- void DRAW_LINE(float x1, float y1, float z1, float x2, float y2, float z2, int red, int green, int blue, int alpha) // 0x6B7256074AE34680
--[[
Draws a depth-tested line from one point to another.
----------------
x1, y1, z1 : Coordinates for the first point
x2, y2, z2 : Coordinates for the second point
r, g, b, alpha : Color with RGBA-Values
I recommend using a predefined function to call this.
[VB.NET]
Public Sub DrawLine(from As Vector3, [to] As Vector3, col As Color)
    [Function].Call(Hash.DRAW_LINE, from.X, from.Y, from.Z, [to].X, [to].Y, [to].Z, col.R, col.G, col.B, col.A)
End Sub

[C#]
public void DrawLine(Vector3 from, Vector3 to, Color col)
{
    Function.Call(Hash.DRAW_LINE, from.X, from.Y, from.Z, to.X, to.Y, to.Z, col.R, col.G, col.B, col.A);
}
--]]
function GRAPHICS.DRAW_LINE(x1, y1, z1, x2, y2, z2, red, green, blue, alpha)
  native.invoke(
    Type.Void, 1003, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Int, red),
    arg(Type.Int, green),
    arg(Type.Int, blue),
    arg(Type.Int, alpha)
  )
end

-- void DRAW_POLY(float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3, int red, int green, int blue, int alpha) // 0xAC26716048436851
--[[
x/y/z - Location of a vertex (in world coords), presumably.
----------------
x1, y1, z1     : Coordinates for the first point
x2, y2, z2     : Coordinates for the second point
x3, y3, z3     : Coordinates for the third point
r, g, b, alpha : Color with RGBA-Values

Keep in mind that only one side of the drawn triangle is visible: It's the side, in which the vector-product of the vectors heads to: (b-a)x(c-a) Or (b-a)x(c-b).
But be aware: The function seems to work somehow differently. I have trouble having them drawn in rotated orientation. Try it yourself and if you somehow succeed, please edit this and post your solution.
I recommend using a predefined function to call this.
[VB.NET]
Public Sub DrawPoly(a As Vector3, b As Vector3, c As Vector3, col As Color)
    [Function].Call(Hash.DRAW_POLY, a.X, a.Y, a.Z, b.X, b.Y, b.Z, c.X, c.Y, c.Z, col.R, col.G, col.B, col.A)
End Sub

[C#]
public void DrawPoly(Vector3 a, Vector3 b, Vector3 c, Color col)
{
    Function.Call(Hash.DRAW_POLY, a.X, a.Y, a.Z, b.X, b.Y, b.Z, c.X, c.Y, c.Z, col.R, col.G, col.B, col.A);
}
BTW: Intersecting triangles are not supported: They overlap in the order they were called.
--]]
function GRAPHICS.DRAW_POLY(x1, y1, z1, x2, y2, z2, x3, y3, z3, red, green, blue, alpha)
  native.invoke(
    Type.Void, 1004, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Float, x3),
    arg(Type.Float, y3),
    arg(Type.Float, z3),
    arg(Type.Int, red),
    arg(Type.Int, green),
    arg(Type.Int, blue),
    arg(Type.Int, alpha)
  )
end

-- void DRAW_TEXTURED_POLY(float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3, int red, int green, int blue, int alpha, const char* textureDict, const char* textureName, float u1, float v1, float w1, float u2, float v2, float w2, float u3, float v3, float w3) // 0x29280002282F1928
--[[
Used for drawling Deadline trailing lights, see deadline.ytd

p15 through p23 are values that appear to be related to illiumation, scaling, and rotation; more testing required.
For UVW mapping (u,v,w parameters), reference your favourite internet resource for more details.
--]]
function GRAPHICS.DRAW_TEXTURED_POLY(x1, y1, z1, x2, y2, z2, x3, y3, z3, red, green, blue, alpha, textureDict, textureName, u1, v1, w1, u2, v2, w2, u3, v3, w3)
  native.invoke(
    Type.Void, 1005, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Float, x3),
    arg(Type.Float, y3),
    arg(Type.Float, z3),
    arg(Type.Int, red),
    arg(Type.Int, green),
    arg(Type.Int, blue),
    arg(Type.Int, alpha),
    arg(Type.String, textureDict),
    arg(Type.String, textureName),
    arg(Type.Float, u1),
    arg(Type.Float, v1),
    arg(Type.Float, w1),
    arg(Type.Float, u2),
    arg(Type.Float, v2),
    arg(Type.Float, w2),
    arg(Type.Float, u3),
    arg(Type.Float, v3),
    arg(Type.Float, w3)
  )
end

-- void DRAW_TEXTURED_POLY_WITH_THREE_COLOURS(float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3, float red1, float green1, float blue1, int alpha1, float red2, float green2, float blue2, int alpha2, float red3, float green3, float blue3, int alpha3, const char* textureDict, const char* textureName, float u1, float v1, float w1, float u2, float v2, float w2, float u3, float v3, float w3) // 0x736D7AA1B750856B
--[[
Used for drawling Deadline trailing lights, see deadline.ytd

Each vertex has its own colour that is blended/illuminated on the texture. Additionally, the R, G, and B components are floats that are int-casted internally.
For UVW mapping (u,v,w parameters), reference your favourite internet resource for more details.
--]]
function GRAPHICS.DRAW_TEXTURED_POLY_WITH_THREE_COLOURS(x1, y1, z1, x2, y2, z2, x3, y3, z3, red1, green1, blue1, alpha1, red2, green2, blue2, alpha2, red3, green3, blue3, alpha3, textureDict, textureName, u1, v1, w1, u2, v2, w2, u3, v3, w3)
  native.invoke(
    Type.Void, 1006, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Float, x3),
    arg(Type.Float, y3),
    arg(Type.Float, z3),
    arg(Type.Float, red1),
    arg(Type.Float, green1),
    arg(Type.Float, blue1),
    arg(Type.Int, alpha1),
    arg(Type.Float, red2),
    arg(Type.Float, green2),
    arg(Type.Float, blue2),
    arg(Type.Int, alpha2),
    arg(Type.Float, red3),
    arg(Type.Float, green3),
    arg(Type.Float, blue3),
    arg(Type.Int, alpha3),
    arg(Type.String, textureDict),
    arg(Type.String, textureName),
    arg(Type.Float, u1),
    arg(Type.Float, v1),
    arg(Type.Float, w1),
    arg(Type.Float, u2),
    arg(Type.Float, v2),
    arg(Type.Float, w2),
    arg(Type.Float, u3),
    arg(Type.Float, v3),
    arg(Type.Float, w3)
  )
end

-- void DRAW_BOX(float x1, float y1, float z1, float x2, float y2, float z2, int red, int green, int blue, int alpha) // 0xD3A9971CADAC7252
--[[
x,y,z = start pos
x2,y2,z2 = end pos

Draw's a 3D Box between the two x,y,z coords.
--------------
Keep in mind that the edges of the box do only align to the worlds base-vectors. Therefore something like rotation cannot be applied. That means this function is pretty much useless, unless you want a static unicolor box somewhere.
I recommend using a predefined function to call this.
[VB.NET]
Public Sub DrawBox(a As Vector3, b As Vector3, col As Color)
    [Function].Call(Hash.DRAW_BOX,a.X, a.Y, a.Z,b.X, b.Y, b.Z,col.R, col.G, col.B, col.A)
End Sub

[C#]
public void DrawBox(Vector3 a, Vector3 b, Color col)
{
    Function.Call(Hash.DRAW_BOX,a.X, a.Y, a.Z,b.X, b.Y, b.Z,col.R, col.G, col.B, col.A);
}
--]]
function GRAPHICS.DRAW_BOX(x1, y1, z1, x2, y2, z2, red, green, blue, alpha)
  native.invoke(
    Type.Void, 1007, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Int, red),
    arg(Type.Int, green),
    arg(Type.Int, blue),
    arg(Type.Int, alpha)
  )
end

-- void SET_BACKFACECULLING(BOOL toggle) // 0x23BA6B0C2AD7B0D3
function GRAPHICS.SET_BACKFACECULLING(toggle)
  native.invoke(
    Type.Void, 1008, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_DEPTHWRITING(BOOL toggle) // 0xC5C8F970D4EDFF71
function GRAPHICS.SET_DEPTHWRITING(toggle)
  native.invoke(
    Type.Void, 1009, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL BEGIN_TAKE_MISSION_CREATOR_PHOTO() // 0x1DD2139A9A20DCE8
function GRAPHICS.BEGIN_TAKE_MISSION_CREATOR_PHOTO()
  return native.invoke(
    Type.Bool, 1010, false
  )
end

-- int GET_STATUS_OF_TAKE_MISSION_CREATOR_PHOTO() // 0x90A78ECAA4E78453
function GRAPHICS.GET_STATUS_OF_TAKE_MISSION_CREATOR_PHOTO()
  return native.invoke(
    Type.Int, 1011, false
  )
end

-- void FREE_MEMORY_FOR_MISSION_CREATOR_PHOTO() // 0x0A46AF8A78DC5E0A
function GRAPHICS.FREE_MEMORY_FOR_MISSION_CREATOR_PHOTO()
  native.invoke(
    Type.Void, 1012, false
  )
end

-- BOOL LOAD_MISSION_CREATOR_PHOTO(Any* p0, Any p1, Any p2, Any p3) // 0x4862437A486F91B0
function GRAPHICS.LOAD_MISSION_CREATOR_PHOTO(p0, p1, p2, p3)
  return native.invoke(
    Type.Bool, 1013, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- int GET_STATUS_OF_LOAD_MISSION_CREATOR_PHOTO(Any* p0) // 0x1670F8D05056F257
function GRAPHICS.GET_STATUS_OF_LOAD_MISSION_CREATOR_PHOTO(p0)
  return native.invoke(
    Type.Int, 1014, false,
    arg(Type.Any, p0)
  )
end

-- BOOL BEGIN_CREATE_MISSION_CREATOR_PHOTO_PREVIEW() // 0x7FA5D82B8F58EC06
function GRAPHICS.BEGIN_CREATE_MISSION_CREATOR_PHOTO_PREVIEW()
  return native.invoke(
    Type.Bool, 1015, false
  )
end

-- int GET_STATUS_OF_CREATE_MISSION_CREATOR_PHOTO_PREVIEW() // 0x5B0316762AFD4A64
function GRAPHICS.GET_STATUS_OF_CREATE_MISSION_CREATOR_PHOTO_PREVIEW()
  return native.invoke(
    Type.Int, 1016, false
  )
end

-- void FREE_MEMORY_FOR_MISSION_CREATOR_PHOTO_PREVIEW() // 0x346EF3ECAAAB149E
function GRAPHICS.FREE_MEMORY_FOR_MISSION_CREATOR_PHOTO_PREVIEW()
  native.invoke(
    Type.Void, 1017, false
  )
end

-- BOOL BEGIN_TAKE_HIGH_QUALITY_PHOTO() // 0xA67C35C56EB1BD9D
function GRAPHICS.BEGIN_TAKE_HIGH_QUALITY_PHOTO()
  return native.invoke(
    Type.Bool, 1018, false
  )
end

-- int GET_STATUS_OF_TAKE_HIGH_QUALITY_PHOTO() // 0x0D6CA79EEEBD8CA3
function GRAPHICS.GET_STATUS_OF_TAKE_HIGH_QUALITY_PHOTO()
  return native.invoke(
    Type.Int, 1019, false
  )
end

-- void FREE_MEMORY_FOR_HIGH_QUALITY_PHOTO() // 0xD801CC02177FA3F1
function GRAPHICS.FREE_MEMORY_FOR_HIGH_QUALITY_PHOTO()
  native.invoke(
    Type.Void, 1020, false
  )
end

-- void SET_TAKEN_PHOTO_IS_MUGSHOT(BOOL toggle) // 0x1BBC135A4D25EDDE
function GRAPHICS.SET_TAKEN_PHOTO_IS_MUGSHOT(toggle)
  native.invoke(
    Type.Void, 1021, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_ARENA_THEME_AND_VARIATION_FOR_TAKEN_PHOTO(Any p0, int p1) // 0xF3F776ADA161E47D
function GRAPHICS.SET_ARENA_THEME_AND_VARIATION_FOR_TAKEN_PHOTO(p0, p1)
  native.invoke(
    Type.Void, 1022, false,
    arg(Type.Any, p0),
    arg(Type.Int, p1)
  )
end

-- void SET_ON_ISLAND_X_FOR_TAKEN_PHOTO(Any p0) // 0xADD6627C4D325458
function GRAPHICS.SET_ON_ISLAND_X_FOR_TAKEN_PHOTO(p0)
  native.invoke(
    Type.Void, 1023, false,
    arg(Type.Any, p0)
  )
end

-- BOOL SAVE_HIGH_QUALITY_PHOTO(int unused) // 0x3DEC726C25A11BAC
--[[
1 match in 1 script. cellphone_controller.
p0 is -1 in scripts.
--]]
function GRAPHICS.SAVE_HIGH_QUALITY_PHOTO(unused)
  return native.invoke(
    Type.Bool, 1024, false,
    arg(Type.Int, unused)
  )
end

-- int GET_STATUS_OF_SAVE_HIGH_QUALITY_PHOTO() // 0x0C0C4E81E1AC60A0
function GRAPHICS.GET_STATUS_OF_SAVE_HIGH_QUALITY_PHOTO()
  return native.invoke(
    Type.Int, 1025, false
  )
end

-- BOOL BEGIN_CREATE_LOW_QUALITY_COPY_OF_PHOTO(Any p0) // 0x759650634F07B6B4
function GRAPHICS.BEGIN_CREATE_LOW_QUALITY_COPY_OF_PHOTO(p0)
  return native.invoke(
    Type.Bool, 1026, false,
    arg(Type.Any, p0)
  )
end

-- int GET_STATUS_OF_CREATE_LOW_QUALITY_COPY_OF_PHOTO(int p0) // 0xCB82A0BF0E3E3265
function GRAPHICS.GET_STATUS_OF_CREATE_LOW_QUALITY_COPY_OF_PHOTO(p0)
  return native.invoke(
    Type.Int, 1027, false,
    arg(Type.Int, p0)
  )
end

-- void FREE_MEMORY_FOR_LOW_QUALITY_PHOTO() // 0x6A12D88881435DCA
function GRAPHICS.FREE_MEMORY_FOR_LOW_QUALITY_PHOTO()
  native.invoke(
    Type.Void, 1028, false
  )
end

-- void DRAW_LOW_QUALITY_PHOTO_TO_PHONE(BOOL p0, BOOL p1) // 0x1072F115DAB0717E
function GRAPHICS.DRAW_LOW_QUALITY_PHOTO_TO_PHONE(p0, p1)
  native.invoke(
    Type.Void, 1029, false,
    arg(Type.Bool, p0),
    arg(Type.Bool, p1)
  )
end

-- int GET_MAXIMUM_NUMBER_OF_PHOTOS() // 0x34D23450F028B0BF
--[[
This function is hard-coded to always return 0.
--]]
function GRAPHICS.GET_MAXIMUM_NUMBER_OF_PHOTOS()
  return native.invoke(
    Type.Int, 1030, false
  )
end

-- int GET_MAXIMUM_NUMBER_OF_CLOUD_PHOTOS() // 0xDC54A7AF8B3A14EF
--[[
This function is hard-coded to always return 96.
--]]
function GRAPHICS.GET_MAXIMUM_NUMBER_OF_CLOUD_PHOTOS()
  return native.invoke(
    Type.Int, 1031, false
  )
end

-- int GET_CURRENT_NUMBER_OF_CLOUD_PHOTOS() // 0x473151EBC762C6DA
function GRAPHICS.GET_CURRENT_NUMBER_OF_CLOUD_PHOTOS()
  return native.invoke(
    Type.Int, 1032, false
  )
end

-- BOOL QUEUE_OPERATION_TO_CREATE_SORTED_LIST_OF_PHOTOS(Any p0) // 0x2A893980E96B659A
--[[
2 matches across 2 scripts. Only showed in appcamera & appmedia. Both were 0.
--]]
function GRAPHICS.QUEUE_OPERATION_TO_CREATE_SORTED_LIST_OF_PHOTOS(p0)
  return native.invoke(
    Type.Bool, 1033, false,
    arg(Type.Any, p0)
  )
end

-- int GET_STATUS_OF_SORTED_LIST_OPERATION(Any p0) // 0xF5BED327CEA362B1
--[[
3 matches across 3 scripts. First 2 were 0, 3rd was 1. Possibly a bool.
appcamera, appmedia, and cellphone_controller.
--]]
function GRAPHICS.GET_STATUS_OF_SORTED_LIST_OPERATION(p0)
  return native.invoke(
    Type.Int, 1034, false,
    arg(Type.Any, p0)
  )
end

-- void CLEAR_STATUS_OF_SORTED_LIST_OPERATION() // 0x4AF92ACD3141D96C
function GRAPHICS.CLEAR_STATUS_OF_SORTED_LIST_OPERATION()
  native.invoke(
    Type.Void, 1035, false
  )
end

-- BOOL DOES_THIS_PHOTO_SLOT_CONTAIN_A_VALID_PHOTO(Any p0) // 0xE791DF1F73ED2C8B
--[[
This function is hard-coded to always return 0.
--]]
function GRAPHICS.DOES_THIS_PHOTO_SLOT_CONTAIN_A_VALID_PHOTO(p0)
  return native.invoke(
    Type.Bool, 1036, false,
    arg(Type.Any, p0)
  )
end

-- BOOL LOAD_HIGH_QUALITY_PHOTO(Any p0) // 0xEC72C258667BE5EA
--[[
This function is hard-coded to always return 0.
--]]
function GRAPHICS.LOAD_HIGH_QUALITY_PHOTO(p0)
  return native.invoke(
    Type.Bool, 1037, false,
    arg(Type.Any, p0)
  )
end

-- int GET_LOAD_HIGH_QUALITY_PHOTO_STATUS(int p0) // 0x40AFB081F8ADD4EE
--[[
Hardcoded to always return 2.
--]]
function GRAPHICS.GET_LOAD_HIGH_QUALITY_PHOTO_STATUS(p0)
  return native.invoke(
    Type.Int, 1038, false,
    arg(Type.Int, p0)
  )
end

-- void DRAW_LIGHT_WITH_RANGEEX(float x, float y, float z, int r, int g, int b, float range, float intensity, float shadow) // 0xF49E9A9716A04595
function GRAPHICS.DRAW_LIGHT_WITH_RANGEEX(x, y, z, r, g, b, range, intensity, shadow)
  native.invoke(
    Type.Void, 1039, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b),
    arg(Type.Float, range),
    arg(Type.Float, intensity),
    arg(Type.Float, shadow)
  )
end

-- void DRAW_LIGHT_WITH_RANGE(float posX, float posY, float posZ, int colorR, int colorG, int colorB, float range, float intensity) // 0xF2A1B2771A01DBD4
function GRAPHICS.DRAW_LIGHT_WITH_RANGE(posX, posY, posZ, colorR, colorG, colorB, range, intensity)
  native.invoke(
    Type.Void, 1040, false,
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ),
    arg(Type.Int, colorR),
    arg(Type.Int, colorG),
    arg(Type.Int, colorB),
    arg(Type.Float, range),
    arg(Type.Float, intensity)
  )
end

-- void DRAW_SPOT_LIGHT(float posX, float posY, float posZ, float dirX, float dirY, float dirZ, int colorR, int colorG, int colorB, float distance, float brightness, float hardness, float radius, float falloff) // 0xD0F64B265C8C8B33
--[[
Parameters:
* pos - coordinate where the spotlight is located
* dir - the direction vector the spotlight should aim at from its current position
* r,g,b - color of the spotlight
* distance - the maximum distance the light can reach
* brightness - the brightness of the light
* roundness - "smoothness" of the circle edge
* radius - the radius size of the spotlight
* falloff - the falloff size of the light's edge (example: www.i.imgur.com/DemAWeO.jpg)

Example in C# (spotlight aims at the closest vehicle):
Vector3 myPos = Game.Player.Character.Position;
Vehicle nearest = World.GetClosestVehicle(myPos , 1000f);
Vector3 destinationCoords = nearest.Position;
Vector3 dirVector = destinationCoords - myPos;
dirVector.Normalize();
Function.Call(Hash.DRAW_SPOT_LIGHT, pos.X, pos.Y, pos.Z, dirVector.X, dirVector.Y, dirVector.Z, 255, 255, 255, 100.0f, 1f, 0.0f, 13.0f, 1f);
--]]
function GRAPHICS.DRAW_SPOT_LIGHT(posX, posY, posZ, dirX, dirY, dirZ, colorR, colorG, colorB, distance, brightness, hardness, radius, falloff)
  native.invoke(
    Type.Void, 1041, false,
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ),
    arg(Type.Float, dirX),
    arg(Type.Float, dirY),
    arg(Type.Float, dirZ),
    arg(Type.Int, colorR),
    arg(Type.Int, colorG),
    arg(Type.Int, colorB),
    arg(Type.Float, distance),
    arg(Type.Float, brightness),
    arg(Type.Float, hardness),
    arg(Type.Float, radius),
    arg(Type.Float, falloff)
  )
end

-- void DRAW_SHADOWED_SPOT_LIGHT(float posX, float posY, float posZ, float dirX, float dirY, float dirZ, int colorR, int colorG, int colorB, float distance, float brightness, float roundness, float radius, float falloff, int shadowId) // 0x5BCA583A583194DB
function GRAPHICS.DRAW_SHADOWED_SPOT_LIGHT(posX, posY, posZ, dirX, dirY, dirZ, colorR, colorG, colorB, distance, brightness, roundness, radius, falloff, shadowId)
  native.invoke(
    Type.Void, 1042, false,
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ),
    arg(Type.Float, dirX),
    arg(Type.Float, dirY),
    arg(Type.Float, dirZ),
    arg(Type.Int, colorR),
    arg(Type.Int, colorG),
    arg(Type.Int, colorB),
    arg(Type.Float, distance),
    arg(Type.Float, brightness),
    arg(Type.Float, roundness),
    arg(Type.Float, radius),
    arg(Type.Float, falloff),
    arg(Type.Int, shadowId)
  )
end

-- void FADE_UP_PED_LIGHT(float p0) // 0xC9B18B4619F48F7B
function GRAPHICS.FADE_UP_PED_LIGHT(p0)
  native.invoke(
    Type.Void, 1043, false,
    arg(Type.Float, p0)
  )
end

-- void UPDATE_LIGHTS_ON_ENTITY(Entity entity) // 0xDEADC0DEDEADC0DE
function GRAPHICS.UPDATE_LIGHTS_ON_ENTITY(entity)
  native.invoke(
    Type.Void, 1044, false,
    arg(Type.Entity, entity)
  )
end

-- void SET_LIGHT_OVERRIDE_MAX_INTENSITY_SCALE(Any p0) // 0x9641588DAB93B4B5
function GRAPHICS.SET_LIGHT_OVERRIDE_MAX_INTENSITY_SCALE(p0)
  native.invoke(
    Type.Void, 1045, false,
    arg(Type.Any, p0)
  )
end

-- float GET_LIGHT_OVERRIDE_MAX_INTENSITY_SCALE() // 0x393BD2275CEB7793
function GRAPHICS.GET_LIGHT_OVERRIDE_MAX_INTENSITY_SCALE()
  return native.invoke(
    Type.Float, 1046, false
  )
end

-- void DRAW_MARKER(int type, float posX, float posY, float posZ, float dirX, float dirY, float dirZ, float rotX, float rotY, float rotZ, float scaleX, float scaleY, float scaleZ, int red, int green, int blue, int alpha, BOOL bobUpAndDown, BOOL faceCamera, int p19, BOOL rotate, const char* textureDict, const char* textureName, BOOL drawOnEnts) // 0x28477EC23D892089
--[[
enum MarkerTypes
{
    MarkerTypeUpsideDownCone = 0,
 MarkerTypeVerticalCylinder = 1,
   MarkerTypeThickChevronUp = 2,
 MarkerTypeThinChevronUp = 3,
  MarkerTypeCheckeredFlagRect = 4,
  MarkerTypeCheckeredFlagCircle = 5,
    MarkerTypeVerticleCircle = 6,
 MarkerTypePlaneModel = 7,
 MarkerTypeLostMCDark = 8,
 MarkerTypeLostMCLight = 9,
    MarkerTypeNumber0 = 10,
   MarkerTypeNumber1 = 11,
   MarkerTypeNumber2 = 12,
   MarkerTypeNumber3 = 13,
   MarkerTypeNumber4 = 14,
   MarkerTypeNumber5 = 15,
   MarkerTypeNumber6 = 16,
   MarkerTypeNumber7 = 17,
   MarkerTypeNumber8 = 18,
   MarkerTypeNumber9 = 19,
   MarkerTypeChevronUpx1 = 20,
   MarkerTypeChevronUpx2 = 21,
   MarkerTypeChevronUpx3 = 22,
   MarkerTypeHorizontalCircleFat = 23,
   MarkerTypeReplayIcon = 24,
    MarkerTypeHorizontalCircleSkinny = 25,
    MarkerTypeHorizontalCircleSkinny_Arrow = 26,
  MarkerTypeHorizontalSplitArrowCircle = 27,
    MarkerTypeDebugSphere = 28,
   MarkerTypeDallorSign = 29,
    MarkerTypeHorizontalBars = 30,
    MarkerTypeWolfHead = 31
};

dirX/Y/Z represent a heading on each axis in which the marker should face, alternatively you can rotate each axis independently with rotX/Y/Z (and set dirX/Y/Z all to 0).

faceCamera - Rotates only the y-axis (the heading) towards the camera

p19 - no effect, default value in script is 2

rotate - Rotates only on the y-axis (the heading)

textureDict - Name of texture dictionary to load texture from (e.g. "GolfPutting")

textureName - Name of texture inside dictionary to load (e.g. "PuttingMarker")

drawOnEnts - Draws the marker onto any entities that intersect it

basically what he said, except textureDict and textureName are totally not const char*, or if so, then they are always set to 0/NULL/nullptr in every script I checked, eg:

bj.c: graphics::draw_marker(6, vParam0, 0f, 0f, 1f, 0f, 0f, 0f, 4f, 4f, 4f, 240, 200, 80, iVar1, 0, 0, 2, 0, 0, 0, false);

his is what I used to draw an amber downward pointing chevron "V", has to be redrawn every frame.  The 180 is for 180 degrees rotation around the Y axis, the 50 is alpha, assuming max is 100, but it will accept 255.

GRAPHICS::DRAW_MARKER(2, v.x, v.y, v.z + 2, 0, 0, 0, 0, 180, 0, 2, 2, 2, 255, 128, 0, 50, 0, 1, 1, 0, 0, 0, 0);


--]]
function GRAPHICS.DRAW_MARKER(type, posX, posY, posZ, dirX, dirY, dirZ, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, red, green, blue, alpha, bobUpAndDown, faceCamera, p19, rotate, textureDict, textureName, drawOnEnts)
  native.invoke(
    Type.Void, 1047, false,
    arg(Type.Int, type),
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ),
    arg(Type.Float, dirX),
    arg(Type.Float, dirY),
    arg(Type.Float, dirZ),
    arg(Type.Float, rotX),
    arg(Type.Float, rotY),
    arg(Type.Float, rotZ),
    arg(Type.Float, scaleX),
    arg(Type.Float, scaleY),
    arg(Type.Float, scaleZ),
    arg(Type.Int, red),
    arg(Type.Int, green),
    arg(Type.Int, blue),
    arg(Type.Int, alpha),
    arg(Type.Bool, bobUpAndDown),
    arg(Type.Bool, faceCamera),
    arg(Type.Int, p19),
    arg(Type.Bool, rotate),
    arg(Type.String, textureDict),
    arg(Type.String, textureName),
    arg(Type.Bool, drawOnEnts)
  )
end

-- void DRAW_MARKER_EX(int type, float posX, float posY, float posZ, float dirX, float dirY, float dirZ, float rotX, float rotY, float rotZ, float scaleX, float scaleY, float scaleZ, int red, int green, int blue, int alpha, BOOL bobUpAndDown, BOOL faceCamera, Any p19, BOOL rotate, const char* textureDict, const char* textureName, BOOL drawOnEnts, BOOL p24, BOOL p25) // 0xE82728F0DE75D13A
function GRAPHICS.DRAW_MARKER_EX(type, posX, posY, posZ, dirX, dirY, dirZ, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, red, green, blue, alpha, bobUpAndDown, faceCamera, p19, rotate, textureDict, textureName, drawOnEnts, p24, p25)
  native.invoke(
    Type.Void, 1048, false,
    arg(Type.Int, type),
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ),
    arg(Type.Float, dirX),
    arg(Type.Float, dirY),
    arg(Type.Float, dirZ),
    arg(Type.Float, rotX),
    arg(Type.Float, rotY),
    arg(Type.Float, rotZ),
    arg(Type.Float, scaleX),
    arg(Type.Float, scaleY),
    arg(Type.Float, scaleZ),
    arg(Type.Int, red),
    arg(Type.Int, green),
    arg(Type.Int, blue),
    arg(Type.Int, alpha),
    arg(Type.Bool, bobUpAndDown),
    arg(Type.Bool, faceCamera),
    arg(Type.Any, p19),
    arg(Type.Bool, rotate),
    arg(Type.String, textureDict),
    arg(Type.String, textureName),
    arg(Type.Bool, drawOnEnts),
    arg(Type.Bool, p24),
    arg(Type.Bool, p25)
  )
end

-- void DRAW_MARKER_SPHERE(float x, float y, float z, float radius, int red, int green, int blue, float alpha) // 0x799017F9E3B10112
--[[
Draws a 3D sphere, typically seen in the GTA:O freemode event "Penned In".
Example https://imgur.com/nCbtS4H

alpha - The alpha for the sphere. Goes from 0.0 to 1.0.
--]]
function GRAPHICS.DRAW_MARKER_SPHERE(x, y, z, radius, red, green, blue, alpha)
  native.invoke(
    Type.Void, 1049, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Int, red),
    arg(Type.Int, green),
    arg(Type.Int, blue),
    arg(Type.Float, alpha)
  )
end

-- int CREATE_CHECKPOINT(int type, float posX1, float posY1, float posZ1, float posX2, float posY2, float posZ2, float diameter, int red, int green, int blue, int alpha, int reserved) // 0x0134F0835AB6BFCB
--[[
Creates a checkpoint. Returns the handle of the checkpoint.

20/03/17 : Attention, checkpoints are already handled by the game itself, so you must not loop it like markers.

Parameters:
* type - The type of checkpoint to create. See below for a list of checkpoint types.
* pos1 - The position of the checkpoint.
* pos2 - The position of the next checkpoint to point to.
* radius - The radius of the checkpoint.
* color - The color of the checkpoint.
* reserved - Special parameter, see below for details. Usually set to 0 in the scripts.

Checkpoint types:
0-4---------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
5-9---------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
10-14-------Ring: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
15-19-------1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker      
20-24-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker 
25-29-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker    
30-34-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker 
35-38-------Ring: Airplane Up, Left, Right, UpsideDown
39----------?
40----------Ring: just a ring
41----------?
42-44-------Cylinder w/ number (uses 'reserved' parameter)
45-47-------Cylinder no arrow or number

If using type 42-44, reserved sets number / number and shape to display

0-99------------Just numbers (0-99)
100-109-----------------Arrow (0-9)
110-119------------Two arrows (0-9)
120-129----------Three arrows (0-9)
130-139----------------Circle (0-9)
140-149------------CycleArrow (0-9)
150-159----------------Circle (0-9)
160-169----Circle  w/ pointer (0-9)
170-179-------Perforated ring (0-9)
180-189----------------Sphere (0-9)
--]]
function GRAPHICS.CREATE_CHECKPOINT(type, posX1, posY1, posZ1, posX2, posY2, posZ2, diameter, red, green, blue, alpha, reserved)
  return native.invoke(
    Type.Int, 1050, false,
    arg(Type.Int, type),
    arg(Type.Float, posX1),
    arg(Type.Float, posY1),
    arg(Type.Float, posZ1),
    arg(Type.Float, posX2),
    arg(Type.Float, posY2),
    arg(Type.Float, posZ2),
    arg(Type.Float, diameter),
    arg(Type.Int, red),
    arg(Type.Int, green),
    arg(Type.Int, blue),
    arg(Type.Int, alpha),
    arg(Type.Int, reserved)
  )
end

-- void SET_CHECKPOINT_INSIDE_CYLINDER_HEIGHT_SCALE(int checkpoint, float scale) // 0x4B5B4DA5D79F1943
function GRAPHICS.SET_CHECKPOINT_INSIDE_CYLINDER_HEIGHT_SCALE(checkpoint, scale)
  native.invoke(
    Type.Void, 1051, false,
    arg(Type.Int, checkpoint),
    arg(Type.Float, scale)
  )
end

-- void SET_CHECKPOINT_INSIDE_CYLINDER_SCALE(int checkpoint, float scale) // 0x44621483FF966526
function GRAPHICS.SET_CHECKPOINT_INSIDE_CYLINDER_SCALE(checkpoint, scale)
  native.invoke(
    Type.Void, 1052, false,
    arg(Type.Int, checkpoint),
    arg(Type.Float, scale)
  )
end

-- void SET_CHECKPOINT_CYLINDER_HEIGHT(int checkpoint, float nearHeight, float farHeight, float radius) // 0x2707AAE9D9297D89
--[[
Sets the cylinder height of the checkpoint.

Parameters:
* nearHeight - The height of the checkpoint when inside of the radius.
* farHeight - The height of the checkpoint when outside of the radius.
* radius - The radius of the checkpoint.
--]]
function GRAPHICS.SET_CHECKPOINT_CYLINDER_HEIGHT(checkpoint, nearHeight, farHeight, radius)
  native.invoke(
    Type.Void, 1053, false,
    arg(Type.Int, checkpoint),
    arg(Type.Float, nearHeight),
    arg(Type.Float, farHeight),
    arg(Type.Float, radius)
  )
end

-- void SET_CHECKPOINT_RGBA(int checkpoint, int red, int green, int blue, int alpha) // 0x7167371E8AD747F7
--[[
Sets the checkpoint color.
--]]
function GRAPHICS.SET_CHECKPOINT_RGBA(checkpoint, red, green, blue, alpha)
  native.invoke(
    Type.Void, 1054, false,
    arg(Type.Int, checkpoint),
    arg(Type.Int, red),
    arg(Type.Int, green),
    arg(Type.Int, blue),
    arg(Type.Int, alpha)
  )
end

-- void SET_CHECKPOINT_RGBA2(int checkpoint, int red, int green, int blue, int alpha) // 0xB9EA40907C680580
--[[
Sets the checkpoint icon color.
--]]
function GRAPHICS.SET_CHECKPOINT_RGBA2(checkpoint, red, green, blue, alpha)
  native.invoke(
    Type.Void, 1055, false,
    arg(Type.Int, checkpoint),
    arg(Type.Int, red),
    arg(Type.Int, green),
    arg(Type.Int, blue),
    arg(Type.Int, alpha)
  )
end

-- void SET_CHECKPOINT_CLIPPLANE_WITH_POS_NORM(int checkpoint, float posX, float posY, float posZ, float unkX, float unkY, float unkZ) // 0xF51D36185993515D
--[[
This does not move an existing checkpoint... so wtf.
--]]
function GRAPHICS.SET_CHECKPOINT_CLIPPLANE_WITH_POS_NORM(checkpoint, posX, posY, posZ, unkX, unkY, unkZ)
  native.invoke(
    Type.Void, 1056, false,
    arg(Type.Int, checkpoint),
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ),
    arg(Type.Float, unkX),
    arg(Type.Float, unkY),
    arg(Type.Float, unkZ)
  )
end

-- void SET_CHECKPOINT_FORCE_OLD_ARROW_POINTING(int checkpoint) // 0xFCF6788FC4860CD4
function GRAPHICS.SET_CHECKPOINT_FORCE_OLD_ARROW_POINTING(checkpoint)
  native.invoke(
    Type.Void, 1057, false,
    arg(Type.Int, checkpoint)
  )
end

-- void SET_CHECKPOINT_DECAL_ROT_ALIGNED_TO_CAMERA_ROT(int checkpoint) // 0x615D3925E87A3B26
--[[
Unknown. Called after creating a checkpoint (type: 51) in the creators.
--]]
function GRAPHICS.SET_CHECKPOINT_DECAL_ROT_ALIGNED_TO_CAMERA_ROT(checkpoint)
  native.invoke(
    Type.Void, 1058, false,
    arg(Type.Int, checkpoint)
  )
end

-- void SET_CHECKPOINT_FORCE_DIRECTION(int checkpoint) // 0xDB1EA9411C8911EC
function GRAPHICS.SET_CHECKPOINT_FORCE_DIRECTION(checkpoint)
  native.invoke(
    Type.Void, 1059, false,
    arg(Type.Int, checkpoint)
  )
end

-- void SET_CHECKPOINT_DIRECTION(int checkpoint, float posX, float posY, float posZ) // 0x3C788E7F6438754D
function GRAPHICS.SET_CHECKPOINT_DIRECTION(checkpoint, posX, posY, posZ)
  native.invoke(
    Type.Void, 1060, false,
    arg(Type.Int, checkpoint),
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ)
  )
end

-- void DELETE_CHECKPOINT(int checkpoint) // 0xF5ED37F54CD4D52E
function GRAPHICS.DELETE_CHECKPOINT(checkpoint)
  native.invoke(
    Type.Void, 1061, false,
    arg(Type.Int, checkpoint)
  )
end

-- void DONT_RENDER_IN_GAME_UI(BOOL p0) // 0x22A249A53034450A
function GRAPHICS.DONT_RENDER_IN_GAME_UI(p0)
  native.invoke(
    Type.Void, 1062, false,
    arg(Type.Bool, p0)
  )
end

-- void FORCE_RENDER_IN_GAME_UI(BOOL toggle) // 0xDC459CFA0CCE245B
function GRAPHICS.FORCE_RENDER_IN_GAME_UI(toggle)
  native.invoke(
    Type.Void, 1063, false,
    arg(Type.Bool, toggle)
  )
end

-- void REQUEST_STREAMED_TEXTURE_DICT(const char* textureDict, BOOL p1) // 0xDFA2EF8E04127DD5
--[[
This function can requests texture dictonaries from following RPFs:
scaleform_generic.rpf
scaleform_minigames.rpf
scaleform_minimap.rpf
scaleform_web.rpf

last param isnt a toggle
--]]
function GRAPHICS.REQUEST_STREAMED_TEXTURE_DICT(textureDict, p1)
  native.invoke(
    Type.Void, 1064, false,
    arg(Type.String, textureDict),
    arg(Type.Bool, p1)
  )
end

-- BOOL HAS_STREAMED_TEXTURE_DICT_LOADED(const char* textureDict) // 0x0145F696AAAAD2E4
function GRAPHICS.HAS_STREAMED_TEXTURE_DICT_LOADED(textureDict)
  return native.invoke(
    Type.Bool, 1065, false,
    arg(Type.String, textureDict)
  )
end

-- void SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED(const char* textureDict) // 0xBE2CACCF5A8AA805
function GRAPHICS.SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED(textureDict)
  native.invoke(
    Type.Void, 1066, false,
    arg(Type.String, textureDict)
  )
end

-- void DRAW_RECT(float x, float y, float width, float height, int r, int g, int b, int a, BOOL p8) // 0x3A618A217E5154F0
--[[
Draws a rectangle on the screen.

-x: The relative X point of the center of the rectangle. (0.0-1.0, 0.0 is the left edge of the screen, 1.0 is the right edge of the screen)

-y: The relative Y point of the center of the rectangle. (0.0-1.0, 0.0 is the top edge of the screen, 1.0 is the bottom edge of the screen)

-width: The relative width of the rectangle. (0.0-1.0, 1.0 means the whole screen width)

-height: The relative height of the rectangle. (0.0-1.0, 1.0 means the whole screen height)

-R: Red part of the color. (0-255)

-G: Green part of the color. (0-255)

-B: Blue part of the color. (0-255)

-A: Alpha part of the color. (0-255, 0 means totally transparent, 255 means totally opaque)

The total number of rectangles to be drawn in one frame is apparently limited to 399.

--]]
function GRAPHICS.DRAW_RECT(x, y, width, height, r, g, b, a, p8)
  native.invoke(
    Type.Void, 1067, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, width),
    arg(Type.Float, height),
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b),
    arg(Type.Int, a),
    arg(Type.Bool, p8)
  )
end

-- void SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU(BOOL toggle) // 0xC6372ECD45D73BCD
--[[
Sets a flag defining whether or not script draw commands should continue being drawn behind the pause menu. This is usually used for TV channels and other draw commands that are used with a world render target.
--]]
function GRAPHICS.SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU(toggle)
  native.invoke(
    Type.Void, 1068, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_SCRIPT_GFX_DRAW_ORDER(int drawOrder) // 0x61BB1D9B3A95D802
--[[
Sets the draw order for script draw commands.

Examples from decompiled scripts:
GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(7);
GRAPHICS::DRAW_RECT(0.5, 0.5, 3.0, 3.0, v_4, v_5, v_6, a_0._f172, 0);

GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(1);
GRAPHICS::DRAW_RECT(0.5, 0.5, 1.5, 1.5, 0, 0, 0, 255, 0);
--]]
function GRAPHICS.SET_SCRIPT_GFX_DRAW_ORDER(drawOrder)
  native.invoke(
    Type.Void, 1069, false,
    arg(Type.Int, drawOrder)
  )
end

-- void SET_SCRIPT_GFX_ALIGN(int horizontalAlign, int verticalAlign) // 0xB8A850F20A067EB6
--[[
horizontalAlign: The horizontal alignment. This can be 67 ('C'), 76 ('L'), or 82 ('R').
verticalAlign: The vertical alignment. This can be 67 ('C'), 66 ('B'), or 84 ('T').

This function anchors script draws to a side of the safe zone. This needs to be called to make the interface independent of the player's safe zone configuration.

These values are equivalent to alignX and alignY in common:/data/ui/frontend.xml, which can be used as a baseline for default alignment.

Using any other value (including 0) will result in the safe zone not being taken into account for this draw. The canonical value for this is 'I' (73).

For example, you can use SET_SCRIPT_GFX_ALIGN(0, 84) to only scale on the Y axis (to the top), but not change the X axis.

To reset the value, use RESET_SCRIPT_GFX_ALIGN.
--]]
function GRAPHICS.SET_SCRIPT_GFX_ALIGN(horizontalAlign, verticalAlign)
  native.invoke(
    Type.Void, 1070, false,
    arg(Type.Int, horizontalAlign),
    arg(Type.Int, verticalAlign)
  )
end

-- void RESET_SCRIPT_GFX_ALIGN() // 0xE3A3DB414A373DAB
--[[
This function resets the alignment set using SET_SCRIPT_GFX_ALIGN and SET_SCRIPT_GFX_ALIGN_PARAMS to the default values ('I', 'I'; 0, 0, 0, 0).
This should be used after having used the aforementioned functions in order to not affect any other scripts attempting to draw.
--]]
function GRAPHICS.RESET_SCRIPT_GFX_ALIGN()
  native.invoke(
    Type.Void, 1071, false
  )
end

-- void SET_SCRIPT_GFX_ALIGN_PARAMS(float x, float y, float w, float h) // 0xF5A2C681787E579D
--[[
Sets the draw offset/calculated size for SET_SCRIPT_GFX_ALIGN. If using any alignment other than left/top, the game expects the width/height to be configured using this native in order to get a proper starting position for the draw command.
--]]
function GRAPHICS.SET_SCRIPT_GFX_ALIGN_PARAMS(x, y, w, h)
  native.invoke(
    Type.Void, 1072, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, w),
    arg(Type.Float, h)
  )
end

-- void GET_SCRIPT_GFX_ALIGN_POSITION(float x, float y, float* calculatedX, float* calculatedY) // 0x6DD8F5AA635EB4B2
--[[
Calculates the effective X/Y fractions when applying the values set by SET_SCRIPT_GFX_ALIGN and SET_SCRIPT_GFX_ALIGN_PARAMS
--]]
function GRAPHICS.GET_SCRIPT_GFX_ALIGN_POSITION(x, y, calculatedX, calculatedY)
  native.invoke(
    Type.Void, 1073, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, calculatedX),
    arg(Type.Float, calculatedY)
  )
end

-- float GET_SAFE_ZONE_SIZE() // 0xBAF107B6BB2C97F0
--[[
Gets the scale of safe zone. if the safe zone size scale is max, it will return 1.0.
--]]
function GRAPHICS.GET_SAFE_ZONE_SIZE()
  return native.invoke(
    Type.Float, 1074, false
  )
end

-- void DRAW_SPRITE(const char* textureDict, const char* textureName, float screenX, float screenY, float width, float height, float heading, int red, int green, int blue, int alpha, BOOL p11, Any p12) // 0xE7FFAE5EBF23D890
--[[
Draws a 2D sprite on the screen.

Parameters:
textureDict - Name of texture dictionary to load texture from (e.g. "CommonMenu", "MPWeaponsCommon", etc.)

textureName - Name of texture to load from texture dictionary (e.g. "last_team_standing_icon", "tennis_icon", etc.)

screenX/Y - Screen offset (0.5 = center)
scaleX/Y - Texture scaling. Negative values can be used to flip the texture on that axis. (0.5 = half)

heading - Texture rotation in degrees (default = 0.0) positive is clockwise, measured in degrees

red,green,blue - Sprite color (default = 255/255/255)

alpha - opacity level
--]]
function GRAPHICS.DRAW_SPRITE(textureDict, textureName, screenX, screenY, width, height, heading, red, green, blue, alpha, p11, p12)
  native.invoke(
    Type.Void, 1075, false,
    arg(Type.String, textureDict),
    arg(Type.String, textureName),
    arg(Type.Float, screenX),
    arg(Type.Float, screenY),
    arg(Type.Float, width),
    arg(Type.Float, height),
    arg(Type.Float, heading),
    arg(Type.Int, red),
    arg(Type.Int, green),
    arg(Type.Int, blue),
    arg(Type.Int, alpha),
    arg(Type.Bool, p11),
    arg(Type.Any, p12)
  )
end

-- void DRAW_SPRITE_ARX(const char* textureDict, const char* textureName, float x, float y, float width, float height, float p6, int red, int green, int blue, int alpha, Any p11, Any p12) // 0x2D3B147AFAD49DE0
--[[
Used in arcade games and Beam hack minigame in Doomsday Heist. I will most certainly dive into this to try replicate arcade games.
x position must be between 0.0 and 1.0 (1.0 being the most right side of the screen)
y position must be between 0.0 and 1.0 (1.0 being the most bottom side of the screen)
width 0.0 - 1.0 is the reasonable amount generally
height 0.0 - 1.0 is the reasonable amount generally
p6 almost always 0.0
p11 seems to be unknown but almost always 0 int
--]]
function GRAPHICS.DRAW_SPRITE_ARX(textureDict, textureName, x, y, width, height, p6, red, green, blue, alpha, p11, p12)
  native.invoke(
    Type.Void, 1076, false,
    arg(Type.String, textureDict),
    arg(Type.String, textureName),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, width),
    arg(Type.Float, height),
    arg(Type.Float, p6),
    arg(Type.Int, red),
    arg(Type.Int, green),
    arg(Type.Int, blue),
    arg(Type.Int, alpha),
    arg(Type.Any, p11),
    arg(Type.Any, p12)
  )
end

-- void DRAW_SPRITE_NAMED_RENDERTARGET(const char* textureDict, const char* textureName, float screenX, float screenY, float width, float height, float heading, int red, int green, int blue, int alpha, Any p11) // 0x2BC54A8188768488
--[[
Similar to _DRAW_SPRITE, but seems to be some kind of "interactive" sprite, at least used by render targets.
These seem to be the only dicts ever requested by this native:

prop_screen_biker_laptop
Prop_Screen_GR_Disruption
Prop_Screen_TaleOfUs
prop_screen_nightclub
Prop_Screen_IE_Adhawk
prop_screen_sm_free_trade_shipping
prop_screen_hacker_truck
MPDesktop
Prop_Screen_Nightclub
And a few others

--]]
function GRAPHICS.DRAW_SPRITE_NAMED_RENDERTARGET(textureDict, textureName, screenX, screenY, width, height, heading, red, green, blue, alpha, p11)
  native.invoke(
    Type.Void, 1077, false,
    arg(Type.String, textureDict),
    arg(Type.String, textureName),
    arg(Type.Float, screenX),
    arg(Type.Float, screenY),
    arg(Type.Float, width),
    arg(Type.Float, height),
    arg(Type.Float, heading),
    arg(Type.Int, red),
    arg(Type.Int, green),
    arg(Type.Int, blue),
    arg(Type.Int, alpha),
    arg(Type.Any, p11)
  )
end

-- void DRAW_SPRITE_ARX_WITH_UV(const char* textureDict, const char* textureName, float x, float y, float width, float height, float u1, float v1, float u2, float v2, float heading, int red, int green, int blue, int alpha, Any p15) // 0x95812F9B26074726
--[[
Similar to DRAW_SPRITE, but allows to specify the texture coordinates used to draw the sprite.

u1, v1 - texture coordinates for the top-left corner
u2, v2 - texture coordinates for the bottom-right corner
--]]
function GRAPHICS.DRAW_SPRITE_ARX_WITH_UV(textureDict, textureName, x, y, width, height, u1, v1, u2, v2, heading, red, green, blue, alpha, p15)
  native.invoke(
    Type.Void, 1078, false,
    arg(Type.String, textureDict),
    arg(Type.String, textureName),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, width),
    arg(Type.Float, height),
    arg(Type.Float, u1),
    arg(Type.Float, v1),
    arg(Type.Float, u2),
    arg(Type.Float, v2),
    arg(Type.Float, heading),
    arg(Type.Int, red),
    arg(Type.Int, green),
    arg(Type.Int, blue),
    arg(Type.Int, alpha),
    arg(Type.Any, p15)
  )
end

-- int ADD_ENTITY_ICON(Entity entity, const char* icon) // 0x9CD43EEE12BF4DD0
--[[
Example:
GRAPHICS::ADD_ENTITY_ICON(a_0, "MP_Arrow");

I tried this and nothing happened...
--]]
function GRAPHICS.ADD_ENTITY_ICON(entity, icon)
  return native.invoke(
    Type.Int, 1079, false,
    arg(Type.Entity, entity),
    arg(Type.String, icon)
  )
end

-- void SET_ENTITY_ICON_VISIBILITY(Entity entity, BOOL toggle) // 0xE0E8BEECCA96BA31
function GRAPHICS.SET_ENTITY_ICON_VISIBILITY(entity, toggle)
  native.invoke(
    Type.Void, 1080, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- void SET_ENTITY_ICON_COLOR(Entity entity, int red, int green, int blue, int alpha) // 0x1D5F595CCAE2E238
function GRAPHICS.SET_ENTITY_ICON_COLOR(entity, red, green, blue, alpha)
  native.invoke(
    Type.Void, 1081, false,
    arg(Type.Entity, entity),
    arg(Type.Int, red),
    arg(Type.Int, green),
    arg(Type.Int, blue),
    arg(Type.Int, alpha)
  )
end

-- void SET_DRAW_ORIGIN(float x, float y, float z, BOOL p3) // 0xAA0008F3BBB8F416
--[[
Sets the on-screen drawing origin for draw-functions (which is normally x=0,y=0 in the upper left corner of the screen) to a world coordinate.
From now on, the screen coordinate which displays the given world coordinate on the screen is seen as x=0,y=0.

Example in C#:
Vector3 boneCoord = somePed.GetBoneCoord(Bone.SKEL_Head);
Function.Call(Hash.SET_DRAW_ORIGIN, boneCoord.X, boneCoord.Y, boneCoord.Z, 0);
Function.Call(Hash.DRAW_SPRITE, "helicopterhud", "hud_corner", -0.01, -0.015, 0.013, 0.013, 0.0, 255, 0, 0, 200);
Function.Call(Hash.DRAW_SPRITE, "helicopterhud", "hud_corner", 0.01, -0.015, 0.013, 0.013, 90.0, 255, 0, 0, 200);
Function.Call(Hash.DRAW_SPRITE, "helicopterhud", "hud_corner", -0.01, 0.015, 0.013, 0.013, 270.0, 255, 0, 0, 200);
Function.Call(Hash.DRAW_SPRITE, "helicopterhud", "hud_corner", 0.01, 0.015, 0.013, 0.013, 180.0, 255, 0, 0, 200);
Function.Call(Hash.CLEAR_DRAW_ORIGIN);

Result: www11.pic-upload.de/19.06.15/bkqohvil2uao.jpg
If the pedestrian starts walking around now, the sprites are always around her head, no matter where the head is displayed on the screen.

This function also effects the drawing of texts and other UI-elements.
The effect can be reset by calling GRAPHICS::CLEAR_DRAW_ORIGIN().
--]]
function GRAPHICS.SET_DRAW_ORIGIN(x, y, z, p3)
  native.invoke(
    Type.Void, 1082, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Bool, p3)
  )
end

-- void CLEAR_DRAW_ORIGIN() // 0xFF0B610F6BE0D7AF
--[[
Resets the screen's draw-origin which was changed by the function GRAPHICS::SET_DRAW_ORIGIN(...) back to x=0,y=0.

See GRAPHICS::SET_DRAW_ORIGIN(...) for further information.
--]]
function GRAPHICS.CLEAR_DRAW_ORIGIN()
  native.invoke(
    Type.Void, 1083, false
  )
end

-- int SET_BINK_MOVIE(const char* name) // 0x338D9F609FD632DB
function GRAPHICS.SET_BINK_MOVIE(name)
  return native.invoke(
    Type.Int, 1084, false,
    arg(Type.String, name)
  )
end

-- void PLAY_BINK_MOVIE(int binkMovie) // 0x70D2CC8A542A973C
function GRAPHICS.PLAY_BINK_MOVIE(binkMovie)
  native.invoke(
    Type.Void, 1085, false,
    arg(Type.Int, binkMovie)
  )
end

-- void STOP_BINK_MOVIE(int binkMovie) // 0x63606A61DE68898A
function GRAPHICS.STOP_BINK_MOVIE(binkMovie)
  native.invoke(
    Type.Void, 1086, false,
    arg(Type.Int, binkMovie)
  )
end

-- void RELEASE_BINK_MOVIE(int binkMovie) // 0x04D950EEFA4EED8C
function GRAPHICS.RELEASE_BINK_MOVIE(binkMovie)
  native.invoke(
    Type.Void, 1087, false,
    arg(Type.Int, binkMovie)
  )
end

-- void DRAW_BINK_MOVIE(int binkMovie, float p1, float p2, float p3, float p4, float p5, int r, int g, int b, int a) // 0x7118E83EEB9F7238
function GRAPHICS.DRAW_BINK_MOVIE(binkMovie, p1, p2, p3, p4, p5, r, g, b, a)
  native.invoke(
    Type.Void, 1088, false,
    arg(Type.Int, binkMovie),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b),
    arg(Type.Int, a)
  )
end

-- void SET_BINK_MOVIE_TIME(int binkMovie, float progress) // 0x0CB6B3446855B57A
--[[
In percentage: 0.0 - 100.0
--]]
function GRAPHICS.SET_BINK_MOVIE_TIME(binkMovie, progress)
  native.invoke(
    Type.Void, 1089, false,
    arg(Type.Int, binkMovie),
    arg(Type.Float, progress)
  )
end

-- float GET_BINK_MOVIE_TIME(int binkMovie) // 0x8E17DDD6B9D5BF29
--[[
In percentage: 0.0 - 100.0
--]]
function GRAPHICS.GET_BINK_MOVIE_TIME(binkMovie)
  return native.invoke(
    Type.Float, 1090, false,
    arg(Type.Int, binkMovie)
  )
end

-- void SET_BINK_MOVIE_VOLUME(int binkMovie, float value) // 0xAFF33B1178172223
--[[
binkMovie: Is return value from _SET_BINK_MOVIE. Has something to do with bink volume? (audRequestedSettings::SetVolumeCurveScale)
--]]
function GRAPHICS.SET_BINK_MOVIE_VOLUME(binkMovie, value)
  native.invoke(
    Type.Void, 1091, false,
    arg(Type.Int, binkMovie),
    arg(Type.Float, value)
  )
end

-- void ATTACH_TV_AUDIO_TO_ENTITY(Entity entity) // 0x845BAD77CC770633
--[[
Might be more appropriate in AUDIO?
--]]
function GRAPHICS.ATTACH_TV_AUDIO_TO_ENTITY(entity)
  native.invoke(
    Type.Void, 1092, false,
    arg(Type.Entity, entity)
  )
end

-- void SET_BINK_MOVIE_AUDIO_FRONTEND(int binkMovie, BOOL p1) // 0xF816F2933752322D
function GRAPHICS.SET_BINK_MOVIE_AUDIO_FRONTEND(binkMovie, p1)
  native.invoke(
    Type.Void, 1093, false,
    arg(Type.Int, binkMovie),
    arg(Type.Bool, p1)
  )
end

-- void SET_TV_AUDIO_FRONTEND(BOOL toggle) // 0x113D2C5DC57E1774
--[[
Probably changes tvs from being a 3d audio to being "global" audio
--]]
function GRAPHICS.SET_TV_AUDIO_FRONTEND(toggle)
  native.invoke(
    Type.Void, 1094, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_BINK_SHOULD_SKIP(int binkMovie, BOOL bShouldSkip) // 0x6805D58CAA427B72
function GRAPHICS.SET_BINK_SHOULD_SKIP(binkMovie, bShouldSkip)
  native.invoke(
    Type.Void, 1095, false,
    arg(Type.Int, binkMovie),
    arg(Type.Bool, bShouldSkip)
  )
end

-- int LOAD_MOVIE_MESH_SET(const char* movieMeshSetName) // 0xB66064452270E8F1
function GRAPHICS.LOAD_MOVIE_MESH_SET(movieMeshSetName)
  return native.invoke(
    Type.Int, 1096, false,
    arg(Type.String, movieMeshSetName)
  )
end

-- void RELEASE_MOVIE_MESH_SET(int movieMeshSet) // 0xEB119AA014E89183
function GRAPHICS.RELEASE_MOVIE_MESH_SET(movieMeshSet)
  native.invoke(
    Type.Void, 1097, false,
    arg(Type.Int, movieMeshSet)
  )
end

-- int QUERY_MOVIE_MESH_SET_STATE(Any p0) // 0x9B6E70C5CEEF4EEB
function GRAPHICS.QUERY_MOVIE_MESH_SET_STATE(p0)
  return native.invoke(
    Type.Int, 1098, false,
    arg(Type.Any, p0)
  )
end

-- void GET_SCREEN_RESOLUTION(int* x, int* y) // 0x888D57E407E63624
--[[
int screenresx,screenresy;
GET_SCREEN_RESOLUTION(&screenresx,&screenresy);
--]]
function GRAPHICS.GET_SCREEN_RESOLUTION(x, y)
  native.invoke(
    Type.Void, 1099, false,
    arg(Type.Int, x),
    arg(Type.Int, y)
  )
end

-- void GET_ACTUAL_SCREEN_RESOLUTION(int* x, int* y) // 0x873C9F3104101DD3
--[[
Returns current screen resolution.
--]]
function GRAPHICS.GET_ACTUAL_SCREEN_RESOLUTION(x, y)
  native.invoke(
    Type.Void, 1100, false,
    arg(Type.Int, x),
    arg(Type.Int, y)
  )
end

-- float GET_ASPECT_RATIO(BOOL b) // 0xF1307EF624A80D87
function GRAPHICS.GET_ASPECT_RATIO(b)
  return native.invoke(
    Type.Float, 1101, false,
    arg(Type.Bool, b)
  )
end

-- float GET_SCREEN_ASPECT_RATIO() // 0xB2EBE8CBC58B90E9
function GRAPHICS.GET_SCREEN_ASPECT_RATIO()
  return native.invoke(
    Type.Float, 1102, false
  )
end

-- BOOL GET_IS_WIDESCREEN() // 0x30CF4BDA4FCB1905
--[[
Setting Aspect Ratio Manually in game will return:

false - for Narrow format Aspect Ratios (3:2, 4:3, 5:4, etc. )
true - for Wide format Aspect Ratios (5:3, 16:9, 16:10, etc. )

Setting Aspect Ratio to "Auto" in game will return "false" or "true" based on the actual set Resolution Ratio.
--]]
function GRAPHICS.GET_IS_WIDESCREEN()
  return native.invoke(
    Type.Bool, 1103, false
  )
end

-- BOOL GET_IS_HIDEF() // 0x84ED31191CC5D2C9
--[[
false = Any resolution < 1280x720
true = Any resolution >= 1280x720
--]]
function GRAPHICS.GET_IS_HIDEF()
  return native.invoke(
    Type.Bool, 1104, false
  )
end

-- void ADJUST_NEXT_POS_SIZE_AS_NORMALIZED_16_9() // 0xEFABC7722293DA7C
function GRAPHICS.ADJUST_NEXT_POS_SIZE_AS_NORMALIZED_16_9()
  native.invoke(
    Type.Void, 1105, false
  )
end

-- void SET_NIGHTVISION(BOOL toggle) // 0x18F621F7A5B1F85D
--[[
Enables Night Vision.

Example:
C#: Function.Call(Hash.SET_NIGHTVISION, true);
C++: GRAPHICS::SET_NIGHTVISION(true);

BOOL toggle:
true = turns night vision on for your player.
false = turns night vision off for your player.
--]]
function GRAPHICS.SET_NIGHTVISION(toggle)
  native.invoke(
    Type.Void, 1106, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL GET_REQUESTINGNIGHTVISION() // 0x35FB78DC42B7BD21
function GRAPHICS.GET_REQUESTINGNIGHTVISION()
  return native.invoke(
    Type.Bool, 1107, false
  )
end

-- BOOL GET_USINGNIGHTVISION() // 0x2202A3F42C8E5F79
function GRAPHICS.GET_USINGNIGHTVISION()
  return native.invoke(
    Type.Bool, 1108, false
  )
end

-- void SET_EXPOSURETWEAK(BOOL toggle) // 0xEF398BEEE4EF45F9
function GRAPHICS.SET_EXPOSURETWEAK(toggle)
  native.invoke(
    Type.Void, 1109, false,
    arg(Type.Bool, toggle)
  )
end

-- void FORCE_EXPOSURE_READBACK(BOOL toggle) // 0x814AF7DCAACC597B
function GRAPHICS.FORCE_EXPOSURE_READBACK(toggle)
  native.invoke(
    Type.Void, 1110, false,
    arg(Type.Bool, toggle)
  )
end

-- void OVERRIDE_NIGHTVISION_LIGHT_RANGE(float p0) // 0x43FA7CBE20DAB219
function GRAPHICS.OVERRIDE_NIGHTVISION_LIGHT_RANGE(p0)
  native.invoke(
    Type.Void, 1111, false,
    arg(Type.Float, p0)
  )
end

-- void SET_NOISEOVERIDE(BOOL toggle) // 0xE787BF1C5CF823C9
function GRAPHICS.SET_NOISEOVERIDE(toggle)
  native.invoke(
    Type.Void, 1112, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_NOISINESSOVERIDE(float value) // 0xCB6A7C3BB17A0C67
function GRAPHICS.SET_NOISINESSOVERIDE(value)
  native.invoke(
    Type.Void, 1113, false,
    arg(Type.Float, value)
  )
end

-- BOOL GET_SCREEN_COORD_FROM_WORLD_COORD(float worldX, float worldY, float worldZ, float* screenX, float* screenY) // 0x34E82F05DF2974F5
--[[
Convert a world coordinate into its relative screen coordinate.  (WorldToScreen)

Returns a boolean; whether or not the operation was successful. It will return false if the coordinates given are not visible to the rendering camera.


For .NET users...

VB:
Public Shared Function World3DToScreen2d(pos as vector3) As Vector2

        Dim x2dp, y2dp As New Native.OutputArgument

        Native.Function.Call(Of Boolean)(Native.Hash.GET_SCREEN_COORD_FROM_WORLD_COORD , pos.x, pos.y, pos.z, x2dp, y2dp)
        Return New Vector2(x2dp.GetResult(Of Single), y2dp.GetResult(Of Single))
      
    End Function

C#:
Vector2 World3DToScreen2d(Vector3 pos)
    {
        var x2dp = new OutputArgument();
        var y2dp = new OutputArgument();

        Function.Call<bool>(Hash.GET_SCREEN_COORD_FROM_WORLD_COORD , pos.X, pos.Y, pos.Z, x2dp, y2dp);
        return new Vector2(x2dp.GetResult<float>(), y2dp.GetResult<float>());
    }
//USE VERY SMALL VALUES FOR THE SCALE OF RECTS/TEXT because it is dramatically larger on screen than in 3D, e.g '0.05' small.

Used to be called _WORLD3D_TO_SCREEN2D

I thought we lost you from the scene forever. It does seem however that calling SET_DRAW_ORIGIN then your natives, then ending it. Seems to work better for certain things such as keeping boxes around people for a predator missile e.g.
--]]
function GRAPHICS.GET_SCREEN_COORD_FROM_WORLD_COORD(worldX, worldY, worldZ, screenX, screenY)
  return native.invoke(
    Type.Bool, 1114, false,
    arg(Type.Float, worldX),
    arg(Type.Float, worldY),
    arg(Type.Float, worldZ),
    arg(Type.Float, screenX),
    arg(Type.Float, screenY)
  )
end

-- Vector3 GET_TEXTURE_RESOLUTION(const char* textureDict, const char* textureName) // 0x35736EE65BD00C11
--[[
Returns the texture resolution of the passed texture dict+name.

Note: Most texture resolutions are doubled compared to the console version of the game.
--]]
function GRAPHICS.GET_TEXTURE_RESOLUTION(textureDict, textureName)
  return native.invoke(
    Type.Vector3, 1115, false,
    arg(Type.String, textureDict),
    arg(Type.String, textureName)
  )
end

-- BOOL OVERRIDE_PED_CREW_LOGO_TEXTURE(Ped ped, const char* txd, const char* txn) // 0x95EB5E34F821BABE
--[[
Overriding ped badge texture to a passed texture. It's synced between players (even custom textures!), don't forget to request used dict on *all* clients to make it sync properly. Can be removed by passing empty strings.
--]]
function GRAPHICS.OVERRIDE_PED_CREW_LOGO_TEXTURE(ped, txd, txn)
  return native.invoke(
    Type.Bool, 1116, false,
    arg(Type.Ped, ped),
    arg(Type.String, txd),
    arg(Type.String, txn)
  )
end

-- void SET_DISTANCE_BLUR_STRENGTH_OVERRIDE(float p0) // 0xE2892E7E55D7073A
function GRAPHICS.SET_DISTANCE_BLUR_STRENGTH_OVERRIDE(p0)
  native.invoke(
    Type.Void, 1117, false,
    arg(Type.Float, p0)
  )
end

-- void SET_FLASH(float p0, float p1, float fadeIn, float duration, float fadeOut) // 0x0AB84296FED9CFC6
--[[
Purpose of p0 and p1 unknown.
--]]
function GRAPHICS.SET_FLASH(p0, p1, fadeIn, duration, fadeOut)
  native.invoke(
    Type.Void, 1118, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1),
    arg(Type.Float, fadeIn),
    arg(Type.Float, duration),
    arg(Type.Float, fadeOut)
  )
end

-- void DISABLE_OCCLUSION_THIS_FRAME() // 0x3669F1B198DCAA4F
function GRAPHICS.DISABLE_OCCLUSION_THIS_FRAME()
  native.invoke(
    Type.Void, 1119, false
  )
end

-- void SET_ARTIFICIAL_LIGHTS_STATE(BOOL state) // 0x1268615ACE24D504
--[[
Does not affect weapons, particles, fire/explosions, flashlights or the sun.
When set to true, all emissive textures (including ped components that have light effects), street lights, building lights, vehicle lights, etc will all be turned off.

Used in Humane Labs Heist for EMP.

state: True turns off all artificial light sources in the map: buildings, street lights, car lights, etc. False turns them back on.
--]]
function GRAPHICS.SET_ARTIFICIAL_LIGHTS_STATE(state)
  native.invoke(
    Type.Void, 1120, false,
    arg(Type.Bool, state)
  )
end

-- void SET_ARTIFICIAL_VEHICLE_LIGHTS_STATE(BOOL toggle) // 0xE2B187C0939B3D32
--[[
If "blackout" is enabled, this native allows you to ignore "blackout" for vehicles.
--]]
function GRAPHICS.SET_ARTIFICIAL_VEHICLE_LIGHTS_STATE(toggle)
  native.invoke(
    Type.Void, 1121, false,
    arg(Type.Bool, toggle)
  )
end

-- void DISABLE_HDTEX_THIS_FRAME() // 0xC35A6D07C93802B2
function GRAPHICS.DISABLE_HDTEX_THIS_FRAME()
  native.invoke(
    Type.Void, 1122, false
  )
end

-- int CREATE_TRACKED_POINT() // 0xE2C9439ED45DEA60
--[[
Creates a tracked point, useful for checking the visibility of a 3D point on screen.
--]]
function GRAPHICS.CREATE_TRACKED_POINT()
  return native.invoke(
    Type.Int, 1123, false
  )
end

-- void SET_TRACKED_POINT_INFO(int point, float x, float y, float z, float radius) // 0x164ECBB3CF750CB0
function GRAPHICS.SET_TRACKED_POINT_INFO(point, x, y, z, radius)
  native.invoke(
    Type.Void, 1124, false,
    arg(Type.Int, point),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius)
  )
end

-- BOOL IS_TRACKED_POINT_VISIBLE(int point) // 0xC45CCDAAC9221CA8
function GRAPHICS.IS_TRACKED_POINT_VISIBLE(point)
  return native.invoke(
    Type.Bool, 1125, false,
    arg(Type.Int, point)
  )
end

-- void DESTROY_TRACKED_POINT(int point) // 0xB25DC90BAD56CA42
function GRAPHICS.DESTROY_TRACKED_POINT(point)
  native.invoke(
    Type.Void, 1126, false,
    arg(Type.Int, point)
  )
end

-- int SET_GRASS_CULL_SPHERE(float p0, float p1, float p2, float p3) // 0xBE197EAA669238F4
--[[
This function is hard-coded to always return 0.
--]]
function GRAPHICS.SET_GRASS_CULL_SPHERE(p0, p1, p2, p3)
  return native.invoke(
    Type.Int, 1127, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3)
  )
end

-- void REMOVE_GRASS_CULL_SPHERE(int handle) // 0x61F95E5BB3E0A8C6
--[[
This native does absolutely nothing, just a nullsub
--]]
function GRAPHICS.REMOVE_GRASS_CULL_SPHERE(handle)
  native.invoke(
    Type.Void, 1128, false,
    arg(Type.Int, handle)
  )
end

-- void PROCGRASS_ENABLE_CULLSPHERE(int handle, float x, float y, float z, float scale) // 0xAE51BC858F32BA66
function GRAPHICS.PROCGRASS_ENABLE_CULLSPHERE(handle, x, y, z, scale)
  native.invoke(
    Type.Void, 1129, false,
    arg(Type.Int, handle),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, scale)
  )
end

-- void PROCGRASS_DISABLE_CULLSPHERE(int handle) // 0x649C97D52332341A
function GRAPHICS.PROCGRASS_DISABLE_CULLSPHERE(handle)
  native.invoke(
    Type.Void, 1130, false,
    arg(Type.Int, handle)
  )
end

-- BOOL PROCGRASS_IS_CULLSPHERE_ENABLED(int handle) // 0x2C42340F916C5930
function GRAPHICS.PROCGRASS_IS_CULLSPHERE_ENABLED(handle)
  return native.invoke(
    Type.Bool, 1131, false,
    arg(Type.Int, handle)
  )
end

-- void PROCGRASS_ENABLE_AMBSCALESCAN() // 0x14FC5833464340A8
function GRAPHICS.PROCGRASS_ENABLE_AMBSCALESCAN()
  native.invoke(
    Type.Void, 1132, false
  )
end

-- void PROCGRASS_DISABLE_AMBSCALESCAN() // 0x0218BA067D249DEA
function GRAPHICS.PROCGRASS_DISABLE_AMBSCALESCAN()
  native.invoke(
    Type.Void, 1133, false
  )
end

-- void DISABLE_PROCOBJ_CREATION() // 0x1612C45F9E3E0D44
function GRAPHICS.DISABLE_PROCOBJ_CREATION()
  native.invoke(
    Type.Void, 1134, false
  )
end

-- void ENABLE_PROCOBJ_CREATION() // 0x5DEBD9C4DC995692
function GRAPHICS.ENABLE_PROCOBJ_CREATION()
  native.invoke(
    Type.Void, 1135, false
  )
end

-- void GRASSBATCH_ENABLE_FLATTENING_EXT_IN_SPHERE(float x, float y, float z, Any p3, float p4, float p5, float p6, float scale) // 0xAAE9BE70EC7C69AB
function GRAPHICS.GRASSBATCH_ENABLE_FLATTENING_EXT_IN_SPHERE(x, y, z, p3, p4, p5, p6, scale)
  native.invoke(
    Type.Void, 1136, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Any, p3),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Float, p6),
    arg(Type.Float, scale)
  )
end

-- void GRASSBATCH_ENABLE_FLATTENING_IN_SPHERE(float x, float y, float z, float radius, float p4, float p5, float p6) // 0x6D955F6A9E0295B1
--[[
Wraps 0xAAE9BE70EC7C69AB with FLT_MAX as p7, Jenkins: 0x73E96210?
--]]
function GRAPHICS.GRASSBATCH_ENABLE_FLATTENING_IN_SPHERE(x, y, z, radius, p4, p5, p6)
  native.invoke(
    Type.Void, 1137, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Float, p6)
  )
end

-- void GRASSBATCH_DISABLE_FLATTENING() // 0x302C91AB2D477F7E
function GRAPHICS.GRASSBATCH_DISABLE_FLATTENING()
  native.invoke(
    Type.Void, 1138, false
  )
end

-- void CASCADE_SHADOWS_INIT_SESSION() // 0x03FC694AE06C5A20
function GRAPHICS.CASCADE_SHADOWS_INIT_SESSION()
  native.invoke(
    Type.Void, 1139, false
  )
end

-- void CASCADE_SHADOWS_SET_CASCADE_BOUNDS(Any p0, BOOL p1, float p2, float p3, float p4, float p5, BOOL p6, float p7) // 0xD2936CAB8B58FCBD
function GRAPHICS.CASCADE_SHADOWS_SET_CASCADE_BOUNDS(p0, p1, p2, p3, p4, p5, p6, p7)
  native.invoke(
    Type.Void, 1140, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Bool, p6),
    arg(Type.Float, p7)
  )
end

-- void CASCADE_SHADOWS_SET_CASCADE_BOUNDS_SCALE(float p0) // 0x5F0F3F56635809EF
function GRAPHICS.CASCADE_SHADOWS_SET_CASCADE_BOUNDS_SCALE(p0)
  native.invoke(
    Type.Void, 1141, false,
    arg(Type.Float, p0)
  )
end

-- void CASCADE_SHADOWS_SET_ENTITY_TRACKER_SCALE(float p0) // 0x5E9DAF5A20F15908
function GRAPHICS.CASCADE_SHADOWS_SET_ENTITY_TRACKER_SCALE(p0)
  native.invoke(
    Type.Void, 1142, false,
    arg(Type.Float, p0)
  )
end

-- void CASCADE_SHADOWS_SET_SPLIT_Z_EXP_WEIGHT(float p0) // 0x36F6626459D91457
function GRAPHICS.CASCADE_SHADOWS_SET_SPLIT_Z_EXP_WEIGHT(p0)
  native.invoke(
    Type.Void, 1143, false,
    arg(Type.Float, p0)
  )
end

-- void CASCADE_SHADOWS_SET_BOUND_POSITION(Any p0) // 0x259BA6D4E6F808F1
function GRAPHICS.CASCADE_SHADOWS_SET_BOUND_POSITION(p0)
  native.invoke(
    Type.Void, 1144, false,
    arg(Type.Any, p0)
  )
end

-- void CASCADE_SHADOWS_ENABLE_ENTITY_TRACKER(BOOL toggle) // 0x80ECBC0C856D3B0B
--[[
When this is set to ON, shadows only draw as you get nearer.

When OFF, they draw from a further distance.
--]]
function GRAPHICS.CASCADE_SHADOWS_ENABLE_ENTITY_TRACKER(toggle)
  native.invoke(
    Type.Void, 1145, false,
    arg(Type.Bool, toggle)
  )
end

-- void CASCADE_SHADOWS_SET_SCREEN_SIZE_CHECK_ENABLED(BOOL p0) // 0x25FC3E33A31AD0C9
function GRAPHICS.CASCADE_SHADOWS_SET_SCREEN_SIZE_CHECK_ENABLED(p0)
  native.invoke(
    Type.Void, 1146, false,
    arg(Type.Bool, p0)
  )
end

-- void CASCADE_SHADOWS_SET_SHADOW_SAMPLE_TYPE(const char* type) // 0xB11D94BC55F41932
--[[
Possible values:
"CSM_ST_POINT"
"CSM_ST_LINEAR"
"CSM_ST_TWOTAP"
"CSM_ST_BOX3x3"
"CSM_ST_BOX4x4"
"CSM_ST_DITHER2_LINEAR"
"CSM_ST_CUBIC"
"CSM_ST_DITHER4"
"CSM_ST_DITHER16"
"CSM_ST_SOFT16"
"CSM_ST_DITHER16_RPDB"
"CSM_ST_POISSON16_RPDB_GNORM"
"CSM_ST_HIGHRES_BOX4x4"
"CSM_ST_CLOUDS_SIMPLE"
"CSM_ST_CLOUDS_LINEAR"
"CSM_ST_CLOUDS_TWOTAP"
"CSM_ST_CLOUDS_BOX3x3"
"CSM_ST_CLOUDS_BOX4x4"
"CSM_ST_CLOUDS_DITHER2_LINEAR"
"CSM_ST_CLOUDS_SOFT16"
"CSM_ST_CLOUDS_DITHER16_RPDB"
"CSM_ST_CLOUDS_POISSON16_RPDB_GNORM"
--]]
function GRAPHICS.CASCADE_SHADOWS_SET_SHADOW_SAMPLE_TYPE(type)
  native.invoke(
    Type.Void, 1147, false,
    arg(Type.String, type)
  )
end

-- void CASCADE_SHADOWS_CLEAR_SHADOW_SAMPLE_TYPE() // 0x27CB772218215325
function GRAPHICS.CASCADE_SHADOWS_CLEAR_SHADOW_SAMPLE_TYPE()
  native.invoke(
    Type.Void, 1148, false
  )
end

-- void CASCADE_SHADOWS_SET_AIRCRAFT_MODE(BOOL p0) // 0x6DDBF9DFFC4AC080
function GRAPHICS.CASCADE_SHADOWS_SET_AIRCRAFT_MODE(p0)
  native.invoke(
    Type.Void, 1149, false,
    arg(Type.Bool, p0)
  )
end

-- void CASCADE_SHADOWS_SET_DYNAMIC_DEPTH_MODE(BOOL p0) // 0xD39D13C9FEBF0511
function GRAPHICS.CASCADE_SHADOWS_SET_DYNAMIC_DEPTH_MODE(p0)
  native.invoke(
    Type.Void, 1150, false,
    arg(Type.Bool, p0)
  )
end

-- void CASCADE_SHADOWS_SET_DYNAMIC_DEPTH_VALUE(float p0) // 0x02AC28F3A01FA04A
function GRAPHICS.CASCADE_SHADOWS_SET_DYNAMIC_DEPTH_VALUE(p0)
  native.invoke(
    Type.Void, 1151, false,
    arg(Type.Float, p0)
  )
end

-- void CASCADE_SHADOWS_ENABLE_FREEZER(BOOL p0) // 0x0AE73D8DF3A762B2
function GRAPHICS.CASCADE_SHADOWS_ENABLE_FREEZER(p0)
  native.invoke(
    Type.Void, 1152, false,
    arg(Type.Bool, p0)
  )
end

-- void WATER_REFLECTION_SET_SCRIPT_OBJECT_VISIBILITY(Any p0) // 0xCA465D9CC0D231BA
function GRAPHICS.WATER_REFLECTION_SET_SCRIPT_OBJECT_VISIBILITY(p0)
  native.invoke(
    Type.Void, 1153, false,
    arg(Type.Any, p0)
  )
end

-- void GOLF_TRAIL_SET_ENABLED(BOOL toggle) // 0xA51C4B86B71652AE
function GRAPHICS.GOLF_TRAIL_SET_ENABLED(toggle)
  native.invoke(
    Type.Void, 1154, false,
    arg(Type.Bool, toggle)
  )
end

-- void GOLF_TRAIL_SET_PATH(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, BOOL p8) // 0x312342E1A4874F3F
--[[
p8 seems to always be false.
--]]
function GRAPHICS.GOLF_TRAIL_SET_PATH(p0, p1, p2, p3, p4, p5, p6, p7, p8)
  native.invoke(
    Type.Void, 1155, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Float, p6),
    arg(Type.Float, p7),
    arg(Type.Bool, p8)
  )
end

-- void GOLF_TRAIL_SET_RADIUS(float p0, float p1, float p2) // 0x2485D34E50A22E84
function GRAPHICS.GOLF_TRAIL_SET_RADIUS(p0, p1, p2)
  native.invoke(
    Type.Void, 1156, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1),
    arg(Type.Float, p2)
  )
end

-- void GOLF_TRAIL_SET_COLOUR(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11) // 0x12995F2E53FFA601
function GRAPHICS.GOLF_TRAIL_SET_COLOUR(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11)
  native.invoke(
    Type.Void, 1157, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1),
    arg(Type.Int, p2),
    arg(Type.Int, p3),
    arg(Type.Int, p4),
    arg(Type.Int, p5),
    arg(Type.Int, p6),
    arg(Type.Int, p7),
    arg(Type.Int, p8),
    arg(Type.Int, p9),
    arg(Type.Int, p10),
    arg(Type.Int, p11)
  )
end

-- void GOLF_TRAIL_SET_TESSELLATION(int p0, int p1) // 0xDBAA5EC848BA2D46
function GRAPHICS.GOLF_TRAIL_SET_TESSELLATION(p0, p1)
  native.invoke(
    Type.Void, 1158, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1)
  )
end

-- void GOLF_TRAIL_SET_FIXED_CONTROL_POINT_ENABLE(BOOL p0) // 0xC0416B061F2B7E5E
function GRAPHICS.GOLF_TRAIL_SET_FIXED_CONTROL_POINT_ENABLE(p0)
  native.invoke(
    Type.Void, 1159, false,
    arg(Type.Bool, p0)
  )
end

-- void GOLF_TRAIL_SET_FIXED_CONTROL_POINT(int type, float xPos, float yPos, float zPos, float p4, int red, int green, int blue, int alpha) // 0xB1BB03742917A5D6
--[[
12 matches across 4 scripts. All 4 scripts were job creators.

type ranged from 0 - 2.
p4 was always 0.2f. Likely scale.
assuming p5 - p8 is RGBA, the graphic is always yellow (255, 255, 0, 255).

Tested but noticed nothing.
--]]
function GRAPHICS.GOLF_TRAIL_SET_FIXED_CONTROL_POINT(type, xPos, yPos, zPos, p4, red, green, blue, alpha)
  native.invoke(
    Type.Void, 1160, false,
    arg(Type.Int, type),
    arg(Type.Float, xPos),
    arg(Type.Float, yPos),
    arg(Type.Float, zPos),
    arg(Type.Float, p4),
    arg(Type.Int, red),
    arg(Type.Int, green),
    arg(Type.Int, blue),
    arg(Type.Int, alpha)
  )
end

-- void GOLF_TRAIL_SET_SHADER_PARAMS(float p0, float p1, float p2, float p3, float p4) // 0x9CFDD90B2B844BF7
--[[
Only appeared in Golf & Golf_mp. Parameters were all ptrs
--]]
function GRAPHICS.GOLF_TRAIL_SET_SHADER_PARAMS(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 1161, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4)
  )
end

-- void GOLF_TRAIL_SET_FACING(BOOL p0) // 0x06F761EA47C1D3ED
function GRAPHICS.GOLF_TRAIL_SET_FACING(p0)
  native.invoke(
    Type.Void, 1162, false,
    arg(Type.Bool, p0)
  )
end

-- float GOLF_TRAIL_GET_MAX_HEIGHT() // 0xA4819F5E23E2FFAD
function GRAPHICS.GOLF_TRAIL_GET_MAX_HEIGHT()
  return native.invoke(
    Type.Float, 1163, false
  )
end

-- Vector3 GOLF_TRAIL_GET_VISUAL_CONTROL_POINT(int p0) // 0xA4664972A9B8F8BA
function GRAPHICS.GOLF_TRAIL_GET_VISUAL_CONTROL_POINT(p0)
  return native.invoke(
    Type.Vector3, 1164, false,
    arg(Type.Int, p0)
  )
end

-- void SET_SEETHROUGH(BOOL toggle) // 0x7E08924259E08CE0
--[[
Toggles Heatvision on/off.
--]]
function GRAPHICS.SET_SEETHROUGH(toggle)
  native.invoke(
    Type.Void, 1165, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL GET_USINGSEETHROUGH() // 0x44B80ABAB9D80BD3
function GRAPHICS.GET_USINGSEETHROUGH()
  return native.invoke(
    Type.Bool, 1166, false
  )
end

-- void SEETHROUGH_RESET() // 0x70A64C0234EF522C
function GRAPHICS.SEETHROUGH_RESET()
  native.invoke(
    Type.Void, 1167, false
  )
end

-- void SEETHROUGH_SET_FADE_STARTDISTANCE(float distance) // 0xA78DE25577300BA1
function GRAPHICS.SEETHROUGH_SET_FADE_STARTDISTANCE(distance)
  native.invoke(
    Type.Void, 1168, false,
    arg(Type.Float, distance)
  )
end

-- void SEETHROUGH_SET_FADE_ENDDISTANCE(float distance) // 0x9D75795B9DC6EBBF
function GRAPHICS.SEETHROUGH_SET_FADE_ENDDISTANCE(distance)
  native.invoke(
    Type.Void, 1169, false,
    arg(Type.Float, distance)
  )
end

-- float SEETHROUGH_GET_MAX_THICKNESS() // 0x43DBAE39626CE83F
function GRAPHICS.SEETHROUGH_GET_MAX_THICKNESS()
  return native.invoke(
    Type.Float, 1170, false
  )
end

-- void SEETHROUGH_SET_MAX_THICKNESS(float thickness) // 0x0C8FAC83902A62DF
--[[
0.0 = you will not be able to see people behind the walls. 50.0 and more = you will see everyone through the walls. More value is "better" view. See https://gfycat.com/FirmFlippantGourami
min: 1.0
max: 10000.0
--]]
function GRAPHICS.SEETHROUGH_SET_MAX_THICKNESS(thickness)
  native.invoke(
    Type.Void, 1171, false,
    arg(Type.Float, thickness)
  )
end

-- void SEETHROUGH_SET_NOISE_MIN(float amount) // 0xFF5992E1C9E65D05
function GRAPHICS.SEETHROUGH_SET_NOISE_MIN(amount)
  native.invoke(
    Type.Void, 1172, false,
    arg(Type.Float, amount)
  )
end

-- void SEETHROUGH_SET_NOISE_MAX(float amount) // 0xFEBFBFDFB66039DE
function GRAPHICS.SEETHROUGH_SET_NOISE_MAX(amount)
  native.invoke(
    Type.Void, 1173, false,
    arg(Type.Float, amount)
  )
end

-- void SEETHROUGH_SET_HILIGHT_INTENSITY(float intensity) // 0x19E50EB6E33E1D28
function GRAPHICS.SEETHROUGH_SET_HILIGHT_INTENSITY(intensity)
  native.invoke(
    Type.Void, 1174, false,
    arg(Type.Float, intensity)
  )
end

-- void SEETHROUGH_SET_HIGHLIGHT_NOISE(float noise) // 0x1636D7FC127B10D2
function GRAPHICS.SEETHROUGH_SET_HIGHLIGHT_NOISE(noise)
  native.invoke(
    Type.Void, 1175, false,
    arg(Type.Float, noise)
  )
end

-- void SEETHROUGH_SET_HEATSCALE(int index, float heatScale) // 0xD7D0B00177485411
--[[
min: 0.0
max: 0.75
--]]
function GRAPHICS.SEETHROUGH_SET_HEATSCALE(index, heatScale)
  native.invoke(
    Type.Void, 1176, false,
    arg(Type.Int, index),
    arg(Type.Float, heatScale)
  )
end

-- void SEETHROUGH_SET_COLOR_NEAR(int red, int green, int blue) // 0x1086127B3A63505E
function GRAPHICS.SEETHROUGH_SET_COLOR_NEAR(red, green, blue)
  native.invoke(
    Type.Void, 1177, false,
    arg(Type.Int, red),
    arg(Type.Int, green),
    arg(Type.Int, blue)
  )
end

-- void SET_MOTIONBLUR_MAX_VEL_SCALER(float p0) // 0xB3C641F3630BF6DA
--[[
Setter for GET_MOTIONBLUR_MAX_VEL_SCALER
--]]
function GRAPHICS.SET_MOTIONBLUR_MAX_VEL_SCALER(p0)
  native.invoke(
    Type.Void, 1178, false,
    arg(Type.Float, p0)
  )
end

-- float GET_MOTIONBLUR_MAX_VEL_SCALER() // 0xE59343E9E96529E7
--[[
Getter for SET_MOTIONBLUR_MAX_VEL_SCALER
--]]
function GRAPHICS.GET_MOTIONBLUR_MAX_VEL_SCALER()
  return native.invoke(
    Type.Float, 1179, false
  )
end

-- void SET_FORCE_MOTIONBLUR(BOOL toggle) // 0x6A51F78772175A51
function GRAPHICS.SET_FORCE_MOTIONBLUR(toggle)
  native.invoke(
    Type.Void, 1180, false,
    arg(Type.Bool, toggle)
  )
end

-- void TOGGLE_PLAYER_DAMAGE_OVERLAY(BOOL toggle) // 0xE63D7C6EECECB66B
function GRAPHICS.TOGGLE_PLAYER_DAMAGE_OVERLAY(toggle)
  native.invoke(
    Type.Void, 1181, false,
    arg(Type.Bool, toggle)
  )
end

-- void RESET_ADAPTATION(int p0) // 0xE3E2C1B4C59DBC77
--[[
Sets an value related to timecycles.
--]]
function GRAPHICS.RESET_ADAPTATION(p0)
  native.invoke(
    Type.Void, 1182, false,
    arg(Type.Int, p0)
  )
end

-- BOOL TRIGGER_SCREENBLUR_FADE_IN(float transitionTime) // 0xA328A24AAA6B7FDC
--[[
time in ms to transition to fully blurred screen
--]]
function GRAPHICS.TRIGGER_SCREENBLUR_FADE_IN(transitionTime)
  return native.invoke(
    Type.Bool, 1183, false,
    arg(Type.Float, transitionTime)
  )
end

-- BOOL TRIGGER_SCREENBLUR_FADE_OUT(float transitionTime) // 0xEFACC8AEF94430D5
--[[
time in ms to transition from fully blurred to normal
--]]
function GRAPHICS.TRIGGER_SCREENBLUR_FADE_OUT(transitionTime)
  return native.invoke(
    Type.Bool, 1184, false,
    arg(Type.Float, transitionTime)
  )
end

-- void DISABLE_SCREENBLUR_FADE() // 0xDE81239437E8C5A8
function GRAPHICS.DISABLE_SCREENBLUR_FADE()
  native.invoke(
    Type.Void, 1185, false
  )
end

-- float GET_SCREENBLUR_FADE_CURRENT_TIME() // 0x5CCABFFCA31DDE33
function GRAPHICS.GET_SCREENBLUR_FADE_CURRENT_TIME()
  return native.invoke(
    Type.Float, 1186, false
  )
end

-- BOOL IS_SCREENBLUR_FADE_RUNNING() // 0x7B226C785A52A0A9
--[[
Returns whether screen transition to blur/from blur is running.
--]]
function GRAPHICS.IS_SCREENBLUR_FADE_RUNNING()
  return native.invoke(
    Type.Bool, 1187, false
  )
end

-- void TOGGLE_PAUSED_RENDERPHASES(BOOL toggle) // 0xDFC252D8A3E15AB7
function GRAPHICS.TOGGLE_PAUSED_RENDERPHASES(toggle)
  native.invoke(
    Type.Void, 1188, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL GET_TOGGLE_PAUSED_RENDERPHASES_STATUS() // 0xEB3DAC2C86001E5E
function GRAPHICS.GET_TOGGLE_PAUSED_RENDERPHASES_STATUS()
  return native.invoke(
    Type.Bool, 1189, false
  )
end

-- void RESET_PAUSED_RENDERPHASES() // 0xE1C8709406F2C41C
function GRAPHICS.RESET_PAUSED_RENDERPHASES()
  native.invoke(
    Type.Void, 1190, false
  )
end

-- void GRAB_PAUSEMENU_OWNERSHIP() // 0x851CD923176EBA7C
function GRAPHICS.GRAB_PAUSEMENU_OWNERSHIP()
  native.invoke(
    Type.Void, 1191, false
  )
end

-- void SET_HIDOF_OVERRIDE(BOOL p0, BOOL p1, float nearplaneOut, float nearplaneIn, float farplaneOut, float farplaneIn) // 0xBA3D65906822BED5
function GRAPHICS.SET_HIDOF_OVERRIDE(p0, p1, nearplaneOut, nearplaneIn, farplaneOut, farplaneIn)
  native.invoke(
    Type.Void, 1192, false,
    arg(Type.Bool, p0),
    arg(Type.Bool, p1),
    arg(Type.Float, nearplaneOut),
    arg(Type.Float, nearplaneIn),
    arg(Type.Float, farplaneOut),
    arg(Type.Float, farplaneIn)
  )
end

-- void SET_LOCK_ADAPTIVE_DOF_DISTANCE(BOOL p0) // 0xB569F41F3E7E83A4
function GRAPHICS.SET_LOCK_ADAPTIVE_DOF_DISTANCE(p0)
  native.invoke(
    Type.Void, 1193, false,
    arg(Type.Bool, p0)
  )
end

-- BOOL PHONEPHOTOEDITOR_TOGGLE(BOOL p0) // 0x7AC24EAB6D74118D
function GRAPHICS.PHONEPHOTOEDITOR_TOGGLE(p0)
  return native.invoke(
    Type.Bool, 1194, false,
    arg(Type.Bool, p0)
  )
end

-- BOOL PHONEPHOTOEDITOR_IS_ACTIVE() // 0xBCEDB009461DA156
function GRAPHICS.PHONEPHOTOEDITOR_IS_ACTIVE()
  return native.invoke(
    Type.Bool, 1195, false
  )
end

-- BOOL PHONEPHOTOEDITOR_SET_FRAME_TXD(const char* textureDict, BOOL p1) // 0x27FEB5254759CDE3
function GRAPHICS.PHONEPHOTOEDITOR_SET_FRAME_TXD(textureDict, p1)
  return native.invoke(
    Type.Bool, 1196, false,
    arg(Type.String, textureDict),
    arg(Type.Bool, p1)
  )
end

-- BOOL START_PARTICLE_FX_NON_LOOPED_AT_COORD(const char* effectName, float xPos, float yPos, float zPos, float xRot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis) // 0x25129531F77B9ED3
--[[
GRAPHICS::START_PARTICLE_FX_NON_LOOPED_AT_COORD("scr_paleto_roof_impact", -140.8576f, 6420.789f, 41.1391f, 0f, 0f, 267.3957f, 0x3F800000, 0, 0, 0);

Axis - Invert Axis Flags

Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json


-------------------------------------------------------------------
C#

Function.Call<int>(Hash.START_PARTICLE_FX_NON_LOOPED_AT_COORD, = you are calling this function.

char *effectname = This is an in-game effect name, for e.g. "scr_fbi4_trucks_crash" is used to give the effects when truck crashes etc

float x, y, z pos = this one is Simple, you just have to declare, where do you want this effect to take place at, so declare the ordinates

float xrot, yrot, zrot = Again simple? just mention the value in case if you want the effect to rotate.

float scale = is declare the scale of the effect, this may vary as per the effects for e.g 1.0f

bool xaxis, yaxis, zaxis = To bool the axis values.

example:
Function.Call<int>(Hash.START_PARTICLE_FX_NON_LOOPED_AT_COORD, "scr_fbi4_trucks_crash", GTA.Game.Player.Character.Position.X, GTA.Game.Player.Character.Position.Y, GTA.Game.Player.Character.Position.Z + 4f, 0, 0, 0, 5.5f, 0, 0, 0);
--]]
function GRAPHICS.START_PARTICLE_FX_NON_LOOPED_AT_COORD(effectName, xPos, yPos, zPos, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis)
  return native.invoke(
    Type.Bool, 1197, false,
    arg(Type.String, effectName),
    arg(Type.Float, xPos),
    arg(Type.Float, yPos),
    arg(Type.Float, zPos),
    arg(Type.Float, xRot),
    arg(Type.Float, yRot),
    arg(Type.Float, zRot),
    arg(Type.Float, scale),
    arg(Type.Bool, xAxis),
    arg(Type.Bool, yAxis),
    arg(Type.Bool, zAxis)
  )
end

-- BOOL START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD(const char* effectName, float xPos, float yPos, float zPos, float xRot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis, BOOL p11) // 0xF56B8137DF10135D
--[[
Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
--]]
function GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD(effectName, xPos, yPos, zPos, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, p11)
  return native.invoke(
    Type.Bool, 1198, false,
    arg(Type.String, effectName),
    arg(Type.Float, xPos),
    arg(Type.Float, yPos),
    arg(Type.Float, zPos),
    arg(Type.Float, xRot),
    arg(Type.Float, yRot),
    arg(Type.Float, zRot),
    arg(Type.Float, scale),
    arg(Type.Bool, xAxis),
    arg(Type.Bool, yAxis),
    arg(Type.Bool, zAxis),
    arg(Type.Bool, p11)
  )
end

-- BOOL START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE(const char* effectName, Ped ped, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, int boneIndex, float scale, BOOL axisX, BOOL axisY, BOOL axisZ) // 0x0E7E72961BA18619
--[[
GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE("scr_sh_bong_smoke", PLAYER::PLAYER_PED_ID(), -0.025f, 0.13f, 0f, 0f, 0f, 0f, 31086, 0x3F800000, 0, 0, 0);

Axis - Invert Axis Flags

Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
--]]
function GRAPHICS.START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE(effectName, ped, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ)
  return native.invoke(
    Type.Bool, 1199, false,
    arg(Type.String, effectName),
    arg(Type.Ped, ped),
    arg(Type.Float, offsetX),
    arg(Type.Float, offsetY),
    arg(Type.Float, offsetZ),
    arg(Type.Float, rotX),
    arg(Type.Float, rotY),
    arg(Type.Float, rotZ),
    arg(Type.Int, boneIndex),
    arg(Type.Float, scale),
    arg(Type.Bool, axisX),
    arg(Type.Bool, axisY),
    arg(Type.Bool, axisZ)
  )
end

-- BOOL START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_PED_BONE(const char* effectName, Ped ped, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, int boneIndex, float scale, BOOL axisX, BOOL axisY, BOOL axisZ) // 0xA41B6A43642AC2CF
--[[
Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
--]]
function GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_PED_BONE(effectName, ped, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ)
  return native.invoke(
    Type.Bool, 1200, false,
    arg(Type.String, effectName),
    arg(Type.Ped, ped),
    arg(Type.Float, offsetX),
    arg(Type.Float, offsetY),
    arg(Type.Float, offsetZ),
    arg(Type.Float, rotX),
    arg(Type.Float, rotY),
    arg(Type.Float, rotZ),
    arg(Type.Int, boneIndex),
    arg(Type.Float, scale),
    arg(Type.Bool, axisX),
    arg(Type.Bool, axisY),
    arg(Type.Bool, axisZ)
  )
end

-- BOOL START_PARTICLE_FX_NON_LOOPED_ON_ENTITY(const char* effectName, Entity entity, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, float scale, BOOL axisX, BOOL axisY, BOOL axisZ) // 0x0D53A3B8DA0809D2
--[[
Starts a particle effect on an entity for example your player.

Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json

Example:
C#:
Function.Call(Hash.REQUEST_NAMED_PTFX_ASSET, "scr_rcbarry2");                     Function.Call(Hash.USE_PARTICLE_FX_ASSET, "scr_rcbarry2");                             Function.Call(Hash.START_PARTICLE_FX_NON_LOOPED_ON_ENTITY, "scr_clown_appears", Game.Player.Character, 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, 1.0, false, false, false);

Internally this calls the same function as GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE
however it uses -1 for the specified bone index, so it should be possible to start a non looped fx on an entity bone using that native

-can confirm START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE does NOT work on vehicle bones.
--]]
function GRAPHICS.START_PARTICLE_FX_NON_LOOPED_ON_ENTITY(effectName, entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, scale, axisX, axisY, axisZ)
  return native.invoke(
    Type.Bool, 1201, false,
    arg(Type.String, effectName),
    arg(Type.Entity, entity),
    arg(Type.Float, offsetX),
    arg(Type.Float, offsetY),
    arg(Type.Float, offsetZ),
    arg(Type.Float, rotX),
    arg(Type.Float, rotY),
    arg(Type.Float, rotZ),
    arg(Type.Float, scale),
    arg(Type.Bool, axisX),
    arg(Type.Bool, axisY),
    arg(Type.Bool, axisZ)
  )
end

-- BOOL START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY(const char* effectName, Entity entity, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, float scale, BOOL axisX, BOOL axisY, BOOL axisZ) // 0xC95EB1DB6E92113D
--[[
Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
--]]
function GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY(effectName, entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, scale, axisX, axisY, axisZ)
  return native.invoke(
    Type.Bool, 1202, false,
    arg(Type.String, effectName),
    arg(Type.Entity, entity),
    arg(Type.Float, offsetX),
    arg(Type.Float, offsetY),
    arg(Type.Float, offsetZ),
    arg(Type.Float, rotX),
    arg(Type.Float, rotY),
    arg(Type.Float, rotZ),
    arg(Type.Float, scale),
    arg(Type.Bool, axisX),
    arg(Type.Bool, axisY),
    arg(Type.Bool, axisZ)
  )
end

-- BOOL START_PARTICLE_FX_NON_LOOPED_ON_ENTITY_BONE(const char* effectName, Entity entity, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, int boneIndex, float scale, BOOL axisX, BOOL axisY, BOOL axisZ) // 0x02B1F2A72E0F5325
--[[
Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
--]]
function GRAPHICS.START_PARTICLE_FX_NON_LOOPED_ON_ENTITY_BONE(effectName, entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ)
  return native.invoke(
    Type.Bool, 1203, false,
    arg(Type.String, effectName),
    arg(Type.Entity, entity),
    arg(Type.Float, offsetX),
    arg(Type.Float, offsetY),
    arg(Type.Float, offsetZ),
    arg(Type.Float, rotX),
    arg(Type.Float, rotY),
    arg(Type.Float, rotZ),
    arg(Type.Int, boneIndex),
    arg(Type.Float, scale),
    arg(Type.Bool, axisX),
    arg(Type.Bool, axisY),
    arg(Type.Bool, axisZ)
  )
end

-- void SET_PARTICLE_FX_NON_LOOPED_COLOUR(float r, float g, float b) // 0x26143A59EF48B262
--[[
only works on some fx's, not networked
--]]
function GRAPHICS.SET_PARTICLE_FX_NON_LOOPED_COLOUR(r, g, b)
  native.invoke(
    Type.Void, 1204, false,
    arg(Type.Float, r),
    arg(Type.Float, g),
    arg(Type.Float, b)
  )
end

-- void SET_PARTICLE_FX_NON_LOOPED_ALPHA(float alpha) // 0x77168D722C58B2FC
--[[
Usage example for C#:

Function.Call(Hash.SET_PARTICLE_FX_NON_LOOPED_ALPHA, new InputArgument[] { 0.1f });

Note: the argument alpha ranges from 0.0f-1.0f !
--]]
function GRAPHICS.SET_PARTICLE_FX_NON_LOOPED_ALPHA(alpha)
  native.invoke(
    Type.Void, 1205, false,
    arg(Type.Float, alpha)
  )
end

-- void SET_PARTICLE_FX_NON_LOOPED_SCALE(float scale) // 0xB7EF5850C39FABCA
function GRAPHICS.SET_PARTICLE_FX_NON_LOOPED_SCALE(scale)
  native.invoke(
    Type.Void, 1206, false,
    arg(Type.Float, scale)
  )
end

-- void SET_PARTICLE_FX_NON_LOOPED_EMITTER_SIZE(float p0, float p1, float scale) // 0x1E2E01C00837D26E
function GRAPHICS.SET_PARTICLE_FX_NON_LOOPED_EMITTER_SIZE(p0, p1, scale)
  native.invoke(
    Type.Void, 1207, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1),
    arg(Type.Float, scale)
  )
end

-- void SET_PARTICLE_FX_FORCE_VEHICLE_INTERIOR(BOOL toggle) // 0x8CDE909A0370BB3A
--[[
Used only once in the scripts (taxi_clowncar)
--]]
function GRAPHICS.SET_PARTICLE_FX_FORCE_VEHICLE_INTERIOR(toggle)
  native.invoke(
    Type.Void, 1208, false,
    arg(Type.Bool, toggle)
  )
end

-- int START_PARTICLE_FX_LOOPED_AT_COORD(const char* effectName, float x, float y, float z, float xRot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis, BOOL p11) // 0xE184F4F0DC5910E7
--[[
GRAPHICS::START_PARTICLE_FX_LOOPED_AT_COORD("scr_fbi_falling_debris", 93.7743f, -749.4572f, 70.86904f, 0f, 0f, 0f, 0x3F800000, 0, 0, 0, 0)


p11 seems to be always 0

Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
--]]
function GRAPHICS.START_PARTICLE_FX_LOOPED_AT_COORD(effectName, x, y, z, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, p11)
  return native.invoke(
    Type.Int, 1209, false,
    arg(Type.String, effectName),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, xRot),
    arg(Type.Float, yRot),
    arg(Type.Float, zRot),
    arg(Type.Float, scale),
    arg(Type.Bool, xAxis),
    arg(Type.Bool, yAxis),
    arg(Type.Bool, zAxis),
    arg(Type.Bool, p11)
  )
end

-- int START_PARTICLE_FX_LOOPED_ON_PED_BONE(const char* effectName, Ped ped, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, int boneIndex, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis) // 0xF28DA9F38CD1787C
--[[
Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
--]]
function GRAPHICS.START_PARTICLE_FX_LOOPED_ON_PED_BONE(effectName, ped, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis)
  return native.invoke(
    Type.Int, 1210, false,
    arg(Type.String, effectName),
    arg(Type.Ped, ped),
    arg(Type.Float, xOffset),
    arg(Type.Float, yOffset),
    arg(Type.Float, zOffset),
    arg(Type.Float, xRot),
    arg(Type.Float, yRot),
    arg(Type.Float, zRot),
    arg(Type.Int, boneIndex),
    arg(Type.Float, scale),
    arg(Type.Bool, xAxis),
    arg(Type.Bool, yAxis),
    arg(Type.Bool, zAxis)
  )
end

-- int START_PARTICLE_FX_LOOPED_ON_ENTITY(const char* effectName, Entity entity, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis) // 0x1AE42C1660FD6517
--[[
Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
--]]
function GRAPHICS.START_PARTICLE_FX_LOOPED_ON_ENTITY(effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis)
  return native.invoke(
    Type.Int, 1211, false,
    arg(Type.String, effectName),
    arg(Type.Entity, entity),
    arg(Type.Float, xOffset),
    arg(Type.Float, yOffset),
    arg(Type.Float, zOffset),
    arg(Type.Float, xRot),
    arg(Type.Float, yRot),
    arg(Type.Float, zRot),
    arg(Type.Float, scale),
    arg(Type.Bool, xAxis),
    arg(Type.Bool, yAxis),
    arg(Type.Bool, zAxis)
  )
end

-- int START_PARTICLE_FX_LOOPED_ON_ENTITY_BONE(const char* effectName, Entity entity, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, int boneIndex, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis) // 0xC6EB449E33977F0B
--[[
Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
--]]
function GRAPHICS.START_PARTICLE_FX_LOOPED_ON_ENTITY_BONE(effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis)
  return native.invoke(
    Type.Int, 1212, false,
    arg(Type.String, effectName),
    arg(Type.Entity, entity),
    arg(Type.Float, xOffset),
    arg(Type.Float, yOffset),
    arg(Type.Float, zOffset),
    arg(Type.Float, xRot),
    arg(Type.Float, yRot),
    arg(Type.Float, zRot),
    arg(Type.Int, boneIndex),
    arg(Type.Float, scale),
    arg(Type.Bool, xAxis),
    arg(Type.Bool, yAxis),
    arg(Type.Bool, zAxis)
  )
end

-- int START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY(const char* effectName, Entity entity, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis, float r, float g, float b, float a) // 0x6F60E89A7B64EE1D
--[[
Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
--]]
function GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY(effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, r, g, b, a)
  return native.invoke(
    Type.Int, 1213, false,
    arg(Type.String, effectName),
    arg(Type.Entity, entity),
    arg(Type.Float, xOffset),
    arg(Type.Float, yOffset),
    arg(Type.Float, zOffset),
    arg(Type.Float, xRot),
    arg(Type.Float, yRot),
    arg(Type.Float, zRot),
    arg(Type.Float, scale),
    arg(Type.Bool, xAxis),
    arg(Type.Bool, yAxis),
    arg(Type.Bool, zAxis),
    arg(Type.Float, r),
    arg(Type.Float, g),
    arg(Type.Float, b),
    arg(Type.Float, a)
  )
end

-- int START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE(const char* effectName, Entity entity, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, int boneIndex, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis, float r, float g, float b, float a) // 0xDDE23F30CC5A0F03
--[[
Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
--]]
function GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE(effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis, r, g, b, a)
  return native.invoke(
    Type.Int, 1214, false,
    arg(Type.String, effectName),
    arg(Type.Entity, entity),
    arg(Type.Float, xOffset),
    arg(Type.Float, yOffset),
    arg(Type.Float, zOffset),
    arg(Type.Float, xRot),
    arg(Type.Float, yRot),
    arg(Type.Float, zRot),
    arg(Type.Int, boneIndex),
    arg(Type.Float, scale),
    arg(Type.Bool, xAxis),
    arg(Type.Bool, yAxis),
    arg(Type.Bool, zAxis),
    arg(Type.Float, r),
    arg(Type.Float, g),
    arg(Type.Float, b),
    arg(Type.Float, a)
  )
end

-- void STOP_PARTICLE_FX_LOOPED(int ptfxHandle, BOOL p1) // 0x8F75998877616996
--[[
p1 is always 0 in the native scripts
--]]
function GRAPHICS.STOP_PARTICLE_FX_LOOPED(ptfxHandle, p1)
  native.invoke(
    Type.Void, 1215, false,
    arg(Type.Int, ptfxHandle),
    arg(Type.Bool, p1)
  )
end

-- void REMOVE_PARTICLE_FX(int ptfxHandle, BOOL p1) // 0xC401503DFE8D53CF
function GRAPHICS.REMOVE_PARTICLE_FX(ptfxHandle, p1)
  native.invoke(
    Type.Void, 1216, false,
    arg(Type.Int, ptfxHandle),
    arg(Type.Bool, p1)
  )
end

-- void REMOVE_PARTICLE_FX_FROM_ENTITY(Entity entity) // 0xB8FEAEEBCC127425
function GRAPHICS.REMOVE_PARTICLE_FX_FROM_ENTITY(entity)
  native.invoke(
    Type.Void, 1217, false,
    arg(Type.Entity, entity)
  )
end

-- void REMOVE_PARTICLE_FX_IN_RANGE(float X, float Y, float Z, float radius) // 0xDD19FA1C6D657305
function GRAPHICS.REMOVE_PARTICLE_FX_IN_RANGE(X, Y, Z, radius)
  native.invoke(
    Type.Void, 1218, false,
    arg(Type.Float, X),
    arg(Type.Float, Y),
    arg(Type.Float, Z),
    arg(Type.Float, radius)
  )
end

-- void FORCE_PARTICLE_FX_IN_VEHICLE_INTERIOR(Any p0, Any p1) // 0xBA0127DA25FD54C9
function GRAPHICS.FORCE_PARTICLE_FX_IN_VEHICLE_INTERIOR(p0, p1)
  native.invoke(
    Type.Void, 1219, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL DOES_PARTICLE_FX_LOOPED_EXIST(int ptfxHandle) // 0x74AFEF0D2E1E409B
function GRAPHICS.DOES_PARTICLE_FX_LOOPED_EXIST(ptfxHandle)
  return native.invoke(
    Type.Bool, 1220, false,
    arg(Type.Int, ptfxHandle)
  )
end

-- void SET_PARTICLE_FX_LOOPED_OFFSETS(int ptfxHandle, float x, float y, float z, float rotX, float rotY, float rotZ) // 0xF7DDEBEC43483C43
function GRAPHICS.SET_PARTICLE_FX_LOOPED_OFFSETS(ptfxHandle, x, y, z, rotX, rotY, rotZ)
  native.invoke(
    Type.Void, 1221, false,
    arg(Type.Int, ptfxHandle),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, rotX),
    arg(Type.Float, rotY),
    arg(Type.Float, rotZ)
  )
end

-- void SET_PARTICLE_FX_LOOPED_EVOLUTION(int ptfxHandle, const char* propertyName, float amount, BOOL noNetwork) // 0x5F0C4B5B1C393BE2
function GRAPHICS.SET_PARTICLE_FX_LOOPED_EVOLUTION(ptfxHandle, propertyName, amount, noNetwork)
  native.invoke(
    Type.Void, 1222, false,
    arg(Type.Int, ptfxHandle),
    arg(Type.String, propertyName),
    arg(Type.Float, amount),
    arg(Type.Bool, noNetwork)
  )
end

-- void SET_PARTICLE_FX_LOOPED_COLOUR(int ptfxHandle, float r, float g, float b, BOOL p4) // 0x7F8F65877F88783B
--[[
only works on some fx's

p4 = 0
--]]
function GRAPHICS.SET_PARTICLE_FX_LOOPED_COLOUR(ptfxHandle, r, g, b, p4)
  native.invoke(
    Type.Void, 1223, false,
    arg(Type.Int, ptfxHandle),
    arg(Type.Float, r),
    arg(Type.Float, g),
    arg(Type.Float, b),
    arg(Type.Bool, p4)
  )
end

-- void SET_PARTICLE_FX_LOOPED_ALPHA(int ptfxHandle, float alpha) // 0x726845132380142E
function GRAPHICS.SET_PARTICLE_FX_LOOPED_ALPHA(ptfxHandle, alpha)
  native.invoke(
    Type.Void, 1224, false,
    arg(Type.Int, ptfxHandle),
    arg(Type.Float, alpha)
  )
end

-- void SET_PARTICLE_FX_LOOPED_SCALE(int ptfxHandle, float scale) // 0xB44250AAA456492D
function GRAPHICS.SET_PARTICLE_FX_LOOPED_SCALE(ptfxHandle, scale)
  native.invoke(
    Type.Void, 1225, false,
    arg(Type.Int, ptfxHandle),
    arg(Type.Float, scale)
  )
end

-- void SET_PARTICLE_FX_LOOPED_FAR_CLIP_DIST(int ptfxHandle, float range) // 0xDCB194B85EF7B541
function GRAPHICS.SET_PARTICLE_FX_LOOPED_FAR_CLIP_DIST(ptfxHandle, range)
  native.invoke(
    Type.Void, 1226, false,
    arg(Type.Int, ptfxHandle),
    arg(Type.Float, range)
  )
end

-- void _SET_PARTICLE_FX_LOOPED_CAMERA_BIAS(int ptfxHandle, float p1) // 0x4100BF0346A8D2C3
function GRAPHICS._SET_PARTICLE_FX_LOOPED_CAMERA_BIAS(ptfxHandle, p1)
  native.invoke(
    Type.Void, 1227, false,
    arg(Type.Int, ptfxHandle),
    arg(Type.Float, p1)
  )
end

-- void SET_PARTICLE_FX_CAM_INSIDE_VEHICLE(BOOL p0) // 0xEEC4047028426510
function GRAPHICS.SET_PARTICLE_FX_CAM_INSIDE_VEHICLE(p0)
  native.invoke(
    Type.Void, 1228, false,
    arg(Type.Bool, p0)
  )
end

-- void SET_PARTICLE_FX_CAM_INSIDE_NONPLAYER_VEHICLE(Vehicle vehicle, BOOL p1) // 0xACEE6F360FC1F6B6
function GRAPHICS.SET_PARTICLE_FX_CAM_INSIDE_NONPLAYER_VEHICLE(vehicle, p1)
  native.invoke(
    Type.Void, 1229, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1)
  )
end

-- void SET_PARTICLE_FX_SHOOTOUT_BOAT(Any p0) // 0x96EF97DAEB89BEF5
function GRAPHICS.SET_PARTICLE_FX_SHOOTOUT_BOAT(p0)
  native.invoke(
    Type.Void, 1230, false,
    arg(Type.Any, p0)
  )
end

-- void CLEAR_PARTICLE_FX_SHOOTOUT_BOAT() // 0x2A251AA48B2B46DB
function GRAPHICS.CLEAR_PARTICLE_FX_SHOOTOUT_BOAT()
  native.invoke(
    Type.Void, 1231, false
  )
end

-- void SET_PARTICLE_FX_BLOOD_SCALE(Any p0) // 0x908311265D42A820
function GRAPHICS.SET_PARTICLE_FX_BLOOD_SCALE(p0)
  native.invoke(
    Type.Void, 1232, false,
    arg(Type.Any, p0)
  )
end

-- void DISABLE_IN_WATER_PTFX(BOOL toggle) // 0xCFD16F0DB5A3535C
function GRAPHICS.DISABLE_IN_WATER_PTFX(toggle)
  native.invoke(
    Type.Void, 1233, false,
    arg(Type.Bool, toggle)
  )
end

-- void DISABLE_DOWNWASH_PTFX(BOOL toggle) // 0x5F6DF3D92271E8A1
function GRAPHICS.DISABLE_DOWNWASH_PTFX(toggle)
  native.invoke(
    Type.Void, 1234, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_PARTICLE_FX_SLIPSTREAM_LODRANGE_SCALE(float scale) // 0x2B40A97646381508
function GRAPHICS.SET_PARTICLE_FX_SLIPSTREAM_LODRANGE_SCALE(scale)
  native.invoke(
    Type.Void, 1235, false,
    arg(Type.Float, scale)
  )
end

-- void ENABLE_CLOWN_BLOOD_VFX(BOOL toggle) // 0xD821490579791273
--[[
Creates cartoon effect when Michel smokes the weed
--]]
function GRAPHICS.ENABLE_CLOWN_BLOOD_VFX(toggle)
  native.invoke(
    Type.Void, 1236, false,
    arg(Type.Bool, toggle)
  )
end

-- void ENABLE_ALIEN_BLOOD_VFX(BOOL toggle) // 0x9DCE1F0F78260875
--[[
Creates a motion-blur sort of effect, this native does not seem to work, however by using the `START_SCREEN_EFFECT` native with `DrugsMichaelAliensFight` as the effect parameter, you should be able to get the effect.
--]]
function GRAPHICS.ENABLE_ALIEN_BLOOD_VFX(toggle)
  native.invoke(
    Type.Void, 1237, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_PARTICLE_FX_BULLET_IMPACT_SCALE(float scale) // 0x27E32866E9A5C416
function GRAPHICS.SET_PARTICLE_FX_BULLET_IMPACT_SCALE(scale)
  native.invoke(
    Type.Void, 1238, false,
    arg(Type.Float, scale)
  )
end

-- void SET_PARTICLE_FX_BULLET_IMPACT_LODRANGE_SCALE(float p0) // 0xBB90E12CAC1DAB25
function GRAPHICS.SET_PARTICLE_FX_BULLET_IMPACT_LODRANGE_SCALE(p0)
  native.invoke(
    Type.Void, 1239, false,
    arg(Type.Float, p0)
  )
end

-- void SET_PARTICLE_FX_BULLET_TRACE_NO_ANGLE_REJECT(BOOL p0) // 0xCA4AE345A153D573
function GRAPHICS.SET_PARTICLE_FX_BULLET_TRACE_NO_ANGLE_REJECT(p0)
  native.invoke(
    Type.Void, 1240, false,
    arg(Type.Bool, p0)
  )
end

-- void SET_PARTICLE_FX_BANG_SCRAPE_LODRANGE_SCALE(float p0) // 0x54E22EA2C1956A8D
function GRAPHICS.SET_PARTICLE_FX_BANG_SCRAPE_LODRANGE_SCALE(p0)
  native.invoke(
    Type.Void, 1241, false,
    arg(Type.Float, p0)
  )
end

-- void SET_PARTICLE_FX_FOOT_LODRANGE_SCALE(float p0) // 0x949F397A288B28B3
function GRAPHICS.SET_PARTICLE_FX_FOOT_LODRANGE_SCALE(p0)
  native.invoke(
    Type.Void, 1242, false,
    arg(Type.Float, p0)
  )
end

-- void SET_PARTICLE_FX_FOOT_OVERRIDE_NAME(const char* p0) // 0xBA3D194057C79A7B
--[[
Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
--]]
function GRAPHICS.SET_PARTICLE_FX_FOOT_OVERRIDE_NAME(p0)
  native.invoke(
    Type.Void, 1243, false,
    arg(Type.String, p0)
  )
end

-- void SET_SKIDMARK_RANGE_SCALE(float scale) // 0x5DBF05DB5926D089
function GRAPHICS.SET_SKIDMARK_RANGE_SCALE(scale)
  native.invoke(
    Type.Void, 1244, false,
    arg(Type.Float, scale)
  )
end

-- void SET_PTFX_FORCE_VEHICLE_INTERIOR_FLAG(Any p0) // 0xC6730E0D14E50703
function GRAPHICS.SET_PTFX_FORCE_VEHICLE_INTERIOR_FLAG(p0)
  native.invoke(
    Type.Void, 1245, false,
    arg(Type.Any, p0)
  )
end

-- void REGISTER_POSTFX_BULLET_IMPACT(float weaponWorldPosX, float weaponWorldPosY, float weaponWorldPosZ, float intensity) // 0x170911F37F646F29
function GRAPHICS.REGISTER_POSTFX_BULLET_IMPACT(weaponWorldPosX, weaponWorldPosY, weaponWorldPosZ, intensity)
  native.invoke(
    Type.Void, 1246, false,
    arg(Type.Float, weaponWorldPosX),
    arg(Type.Float, weaponWorldPosY),
    arg(Type.Float, weaponWorldPosZ),
    arg(Type.Float, intensity)
  )
end

-- void FORCE_POSTFX_BULLET_IMPACTS_AFTER_HUD(BOOL p0) // 0x9B079E5221D984D3
function GRAPHICS.FORCE_POSTFX_BULLET_IMPACTS_AFTER_HUD(p0)
  native.invoke(
    Type.Void, 1247, false,
    arg(Type.Bool, p0)
  )
end

-- void USE_PARTICLE_FX_ASSET(const char* name) // 0x6C38AF3693A69A91
--[[
From the b678d decompiled scripts:

 GRAPHICS::USE_PARTICLE_FX_ASSET("FM_Mission_Controler");
 GRAPHICS::USE_PARTICLE_FX_ASSET("scr_apartment_mp");
 GRAPHICS::USE_PARTICLE_FX_ASSET("scr_indep_fireworks");
 GRAPHICS::USE_PARTICLE_FX_ASSET("scr_mp_cig_plane");
 GRAPHICS::USE_PARTICLE_FX_ASSET("scr_mp_creator");
 GRAPHICS::USE_PARTICLE_FX_ASSET("scr_ornate_heist");
 GRAPHICS::USE_PARTICLE_FX_ASSET("scr_prison_break_heist_station");

Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
--]]
function GRAPHICS.USE_PARTICLE_FX_ASSET(name)
  native.invoke(
    Type.Void, 1248, false,
    arg(Type.String, name)
  )
end

-- void SET_PARTICLE_FX_OVERRIDE(const char* oldAsset, const char* newAsset) // 0xEA1E2D93F6F75ED9
--[[
Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
--]]
function GRAPHICS.SET_PARTICLE_FX_OVERRIDE(oldAsset, newAsset)
  native.invoke(
    Type.Void, 1249, false,
    arg(Type.String, oldAsset),
    arg(Type.String, newAsset)
  )
end

-- void RESET_PARTICLE_FX_OVERRIDE(const char* name) // 0x89C8553DD3274AAE
--[[
Resets the effect of SET_PARTICLE_FX_OVERRIDE

Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
--]]
function GRAPHICS.RESET_PARTICLE_FX_OVERRIDE(name)
  native.invoke(
    Type.Void, 1250, false,
    arg(Type.String, name)
  )
end

-- int _START_VEHICLE_PARTICLE_FX_LOOPED(Vehicle vehicle, const char* effectName, BOOL frontBack, BOOL leftRight, BOOL localOnly) // 0xDF269BE2909E181A
--[[
Returns ptfxHandle
effectName: scr_sv_drag_burnout
--]]
function GRAPHICS._START_VEHICLE_PARTICLE_FX_LOOPED(vehicle, effectName, frontBack, leftRight, localOnly)
  return native.invoke(
    Type.Int, 1251, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.String, effectName),
    arg(Type.Bool, frontBack),
    arg(Type.Bool, leftRight),
    arg(Type.Bool, localOnly)
  )
end

-- void SET_WEATHER_PTFX_USE_OVERRIDE_SETTINGS(BOOL p0) // 0xA46B73FAA3460AE1
function GRAPHICS.SET_WEATHER_PTFX_USE_OVERRIDE_SETTINGS(p0)
  native.invoke(
    Type.Void, 1252, false,
    arg(Type.Bool, p0)
  )
end

-- void SET_WEATHER_PTFX_OVERRIDE_CURR_LEVEL(float p0) // 0xF78B803082D4386F
function GRAPHICS.SET_WEATHER_PTFX_OVERRIDE_CURR_LEVEL(p0)
  native.invoke(
    Type.Void, 1253, false,
    arg(Type.Float, p0)
  )
end

-- void WASH_DECALS_IN_RANGE(float x, float y, float z, float range, float p4) // 0x9C30613D50A6ADEF
function GRAPHICS.WASH_DECALS_IN_RANGE(x, y, z, range, p4)
  native.invoke(
    Type.Void, 1254, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, range),
    arg(Type.Float, p4)
  )
end

-- void WASH_DECALS_FROM_VEHICLE(Vehicle vehicle, float p1) // 0x5B712761429DBC14
function GRAPHICS.WASH_DECALS_FROM_VEHICLE(vehicle, p1)
  native.invoke(
    Type.Void, 1255, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, p1)
  )
end

-- void FADE_DECALS_IN_RANGE(float x, float y, float z, float p3, float p4) // 0xD77EDADB0420E6E0
--[[
Fades nearby decals within the range specified
--]]
function GRAPHICS.FADE_DECALS_IN_RANGE(x, y, z, p3, p4)
  native.invoke(
    Type.Void, 1256, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, p3),
    arg(Type.Float, p4)
  )
end

-- void REMOVE_DECALS_IN_RANGE(float x, float y, float z, float range) // 0x5D6B2D4830A67C62
--[[
Removes all decals in range from a position, it includes the bullet holes, blood pools, petrol...
--]]
function GRAPHICS.REMOVE_DECALS_IN_RANGE(x, y, z, range)
  native.invoke(
    Type.Void, 1257, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, range)
  )
end

-- void REMOVE_DECALS_FROM_OBJECT(Object obj) // 0xCCF71CBDDF5B6CB9
function GRAPHICS.REMOVE_DECALS_FROM_OBJECT(obj)
  native.invoke(
    Type.Void, 1258, false,
    arg(Type.Object, obj)
  )
end

-- void REMOVE_DECALS_FROM_OBJECT_FACING(Object obj, float x, float y, float z) // 0xA6F6F70FDC6D144C
function GRAPHICS.REMOVE_DECALS_FROM_OBJECT_FACING(obj, x, y, z)
  native.invoke(
    Type.Void, 1259, false,
    arg(Type.Object, obj),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void REMOVE_DECALS_FROM_VEHICLE(Vehicle vehicle) // 0xE91F1B65F2B48D57
function GRAPHICS.REMOVE_DECALS_FROM_VEHICLE(vehicle)
  native.invoke(
    Type.Void, 1260, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- int ADD_DECAL(int decalType, float posX, float posY, float posZ, float p4, float p5, float p6, float p7, float p8, float p9, float width, float height, float rCoef, float gCoef, float bCoef, float opacity, float timeout, BOOL p17, BOOL p18, BOOL p19) // 0xB302244A1839BDAD
--[[
decal types:

public enum DecalTypes
{
    splatters_blood = 1010,
    splatters_blood_dir = 1015,
    splatters_blood_mist = 1017,
    splatters_mud = 1020,
    splatters_paint = 1030,
    splatters_water = 1040,
    splatters_water_hydrant = 1050,
    splatters_blood2 = 1110,
    weapImpact_metal = 4010,
    weapImpact_concrete = 4020,
    weapImpact_mattress = 4030,
    weapImpact_mud = 4032,
    weapImpact_wood = 4050,
    weapImpact_sand = 4053,
    weapImpact_cardboard = 4040,
    weapImpact_melee_glass = 4100,
    weapImpact_glass_blood = 4102,
    weapImpact_glass_blood2 = 4104,
    weapImpact_shotgun_paper = 4200,
    weapImpact_shotgun_mattress,
    weapImpact_shotgun_metal,
    weapImpact_shotgun_wood,
    weapImpact_shotgun_dirt,
    weapImpact_shotgun_tvscreen,
    weapImpact_shotgun_tvscreen2,
    weapImpact_shotgun_tvscreen3,
    weapImpact_melee_concrete = 4310,
    weapImpact_melee_wood = 4312,
    weapImpact_melee_metal = 4314,
    burn1 = 4421,
    burn2,
    burn3,
    burn4,
    burn5,
    bang_concrete_bang = 5000,
    bang_concrete_bang2,
    bang_bullet_bang,
    bang_bullet_bang2 = 5004,
    bang_glass = 5031,
    bang_glass2,
    solidPool_water = 9000,
    solidPool_blood,
    solidPool_oil,
    solidPool_petrol,
    solidPool_mud,
    porousPool_water,
    porousPool_blood,
    porousPool_oil,
    porousPool_petrol,
    porousPool_mud,
    porousPool_water_ped_drip,
    liquidTrail_water = 9050
}
--]]
function GRAPHICS.ADD_DECAL(decalType, posX, posY, posZ, p4, p5, p6, p7, p8, p9, width, height, rCoef, gCoef, bCoef, opacity, timeout, p17, p18, p19)
  return native.invoke(
    Type.Int, 1261, false,
    arg(Type.Int, decalType),
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Float, p6),
    arg(Type.Float, p7),
    arg(Type.Float, p8),
    arg(Type.Float, p9),
    arg(Type.Float, width),
    arg(Type.Float, height),
    arg(Type.Float, rCoef),
    arg(Type.Float, gCoef),
    arg(Type.Float, bCoef),
    arg(Type.Float, opacity),
    arg(Type.Float, timeout),
    arg(Type.Bool, p17),
    arg(Type.Bool, p18),
    arg(Type.Bool, p19)
  )
end

-- int ADD_PETROL_DECAL(float x, float y, float z, float groundLvl, float width, float transparency) // 0x4F5212C7AD880DF8
function GRAPHICS.ADD_PETROL_DECAL(x, y, z, groundLvl, width, transparency)
  return native.invoke(
    Type.Int, 1262, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, groundLvl),
    arg(Type.Float, width),
    arg(Type.Float, transparency)
  )
end

-- int ADD_OIL_DECAL(float x, float y, float z, float groundLvl, float width, float transparency) // 0x126D7F89FE859A5E
function GRAPHICS.ADD_OIL_DECAL(x, y, z, groundLvl, width, transparency)
  return native.invoke(
    Type.Int, 1263, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, groundLvl),
    arg(Type.Float, width),
    arg(Type.Float, transparency)
  )
end

-- void START_PETROL_TRAIL_DECALS(float p0) // 0x99AC7F0D8B9C893D
function GRAPHICS.START_PETROL_TRAIL_DECALS(p0)
  native.invoke(
    Type.Void, 1264, false,
    arg(Type.Float, p0)
  )
end

-- void ADD_PETROL_TRAIL_DECAL_INFO(float x, float y, float z, float p3) // 0x967278682CB6967A
function GRAPHICS.ADD_PETROL_TRAIL_DECAL_INFO(x, y, z, p3)
  native.invoke(
    Type.Void, 1265, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, p3)
  )
end

-- void END_PETROL_TRAIL_DECALS() // 0x0A123435A26C36CD
function GRAPHICS.END_PETROL_TRAIL_DECALS()
  native.invoke(
    Type.Void, 1266, false
  )
end

-- void REMOVE_DECAL(int decal) // 0xED3F346429CCD659
function GRAPHICS.REMOVE_DECAL(decal)
  native.invoke(
    Type.Void, 1267, false,
    arg(Type.Int, decal)
  )
end

-- BOOL IS_DECAL_ALIVE(int decal) // 0xC694D74949CAFD0C
function GRAPHICS.IS_DECAL_ALIVE(decal)
  return native.invoke(
    Type.Bool, 1268, false,
    arg(Type.Int, decal)
  )
end

-- float GET_DECAL_WASH_LEVEL(int decal) // 0x323F647679A09103
function GRAPHICS.GET_DECAL_WASH_LEVEL(decal)
  return native.invoke(
    Type.Float, 1269, false,
    arg(Type.Int, decal)
  )
end

-- void SET_DISABLE_PETROL_DECALS_IGNITING_THIS_FRAME() // 0xD9454B5752C857DC
function GRAPHICS.SET_DISABLE_PETROL_DECALS_IGNITING_THIS_FRAME()
  native.invoke(
    Type.Void, 1270, false
  )
end

-- void SET_DISABLE_PETROL_DECALS_RECYCLING_THIS_FRAME() // 0x27CFB1B1E078CB2D
function GRAPHICS.SET_DISABLE_PETROL_DECALS_RECYCLING_THIS_FRAME()
  native.invoke(
    Type.Void, 1271, false
  )
end

-- void SET_DISABLE_DECAL_RENDERING_THIS_FRAME() // 0x4B5CFC83122DF602
function GRAPHICS.SET_DISABLE_DECAL_RENDERING_THIS_FRAME()
  native.invoke(
    Type.Void, 1272, false
  )
end

-- BOOL GET_IS_PETROL_DECAL_IN_RANGE(float xCoord, float yCoord, float zCoord, float radius) // 0x2F09F7976C512404
function GRAPHICS.GET_IS_PETROL_DECAL_IN_RANGE(xCoord, yCoord, zCoord, radius)
  return native.invoke(
    Type.Bool, 1273, false,
    arg(Type.Float, xCoord),
    arg(Type.Float, yCoord),
    arg(Type.Float, zCoord),
    arg(Type.Float, radius)
  )
end

-- void PATCH_DECAL_DIFFUSE_MAP(int decalType, const char* textureDict, const char* textureName) // 0x8A35C742130C6080
function GRAPHICS.PATCH_DECAL_DIFFUSE_MAP(decalType, textureDict, textureName)
  native.invoke(
    Type.Void, 1274, false,
    arg(Type.Int, decalType),
    arg(Type.String, textureDict),
    arg(Type.String, textureName)
  )
end

-- void UNPATCH_DECAL_DIFFUSE_MAP(int decalType) // 0xB7ED70C49521A61D
function GRAPHICS.UNPATCH_DECAL_DIFFUSE_MAP(decalType)
  native.invoke(
    Type.Void, 1275, false,
    arg(Type.Int, decalType)
  )
end

-- void MOVE_VEHICLE_DECALS(Any p0, Any p1) // 0x84C8D7C2D30D3280
function GRAPHICS.MOVE_VEHICLE_DECALS(p0, p1)
  native.invoke(
    Type.Void, 1276, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL ADD_VEHICLE_CREW_EMBLEM(Vehicle vehicle, Ped ped, int boneIndex, float x1, float x2, float x3, float y1, float y2, float y3, float z1, float z2, float z3, float scale, Any p13, int alpha) // 0x428BDCB9DA58DA53
--[[
boneIndex is always chassis_dummy in the scripts. The x/y/z params are location relative to the chassis bone.
--]]
function GRAPHICS.ADD_VEHICLE_CREW_EMBLEM(vehicle, ped, boneIndex, x1, x2, x3, y1, y2, y3, z1, z2, z3, scale, p13, alpha)
  return native.invoke(
    Type.Bool, 1277, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Ped, ped),
    arg(Type.Int, boneIndex),
    arg(Type.Float, x1),
    arg(Type.Float, x2),
    arg(Type.Float, x3),
    arg(Type.Float, y1),
    arg(Type.Float, y2),
    arg(Type.Float, y3),
    arg(Type.Float, z1),
    arg(Type.Float, z2),
    arg(Type.Float, z3),
    arg(Type.Float, scale),
    arg(Type.Any, p13),
    arg(Type.Int, alpha)
  )
end

-- BOOL ABORT_VEHICLE_CREW_EMBLEM_REQUEST(int* p0) // 0x82ACC484FFA3B05F
function GRAPHICS.ABORT_VEHICLE_CREW_EMBLEM_REQUEST(p0)
  return native.invoke(
    Type.Bool, 1278, false,
    arg(Type.Int, p0)
  )
end

-- void REMOVE_VEHICLE_CREW_EMBLEM(Vehicle vehicle, int p1) // 0xD2300034310557E4
function GRAPHICS.REMOVE_VEHICLE_CREW_EMBLEM(vehicle, p1)
  native.invoke(
    Type.Void, 1279, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, p1)
  )
end

-- int GET_VEHICLE_CREW_EMBLEM_REQUEST_STATE(Vehicle vehicle, int p1) // 0xFE26117A5841B2FF
function GRAPHICS.GET_VEHICLE_CREW_EMBLEM_REQUEST_STATE(vehicle, p1)
  return native.invoke(
    Type.Int, 1280, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, p1)
  )
end

-- BOOL DOES_VEHICLE_HAVE_CREW_EMBLEM(Vehicle vehicle, int p1) // 0x060D935D3981A275
function GRAPHICS.DOES_VEHICLE_HAVE_CREW_EMBLEM(vehicle, p1)
  return native.invoke(
    Type.Bool, 1281, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, p1)
  )
end

-- void DISABLE_COMPOSITE_SHOTGUN_DECALS(BOOL toggle) // 0x0E4299C549F0D1F1
function GRAPHICS.DISABLE_COMPOSITE_SHOTGUN_DECALS(toggle)
  native.invoke(
    Type.Void, 1282, false,
    arg(Type.Bool, toggle)
  )
end

-- void DISABLE_SCUFF_DECALS(BOOL toggle) // 0x02369D5C8A51FDCF
function GRAPHICS.DISABLE_SCUFF_DECALS(toggle)
  native.invoke(
    Type.Void, 1283, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_DECAL_BULLET_IMPACT_RANGE_SCALE(float p0) // 0x46D1A61A21F566FC
function GRAPHICS.SET_DECAL_BULLET_IMPACT_RANGE_SCALE(p0)
  native.invoke(
    Type.Void, 1284, false,
    arg(Type.Float, p0)
  )
end

-- void OVERRIDE_INTERIOR_SMOKE_NAME(const char* name) // 0x2A2A52824DB96700
function GRAPHICS.OVERRIDE_INTERIOR_SMOKE_NAME(name)
  native.invoke(
    Type.Void, 1285, false,
    arg(Type.String, name)
  )
end

-- void OVERRIDE_INTERIOR_SMOKE_LEVEL(float level) // 0x1600FD8CF72EBC12
function GRAPHICS.OVERRIDE_INTERIOR_SMOKE_LEVEL(level)
  native.invoke(
    Type.Void, 1286, false,
    arg(Type.Float, level)
  )
end

-- void OVERRIDE_INTERIOR_SMOKE_END() // 0xEFB55E7C25D3B3BE
function GRAPHICS.OVERRIDE_INTERIOR_SMOKE_END()
  native.invoke(
    Type.Void, 1287, false
  )
end

-- void REGISTER_NOIR_LENS_EFFECT() // 0xA44FF770DFBC5DAE
--[[
Used with 'NG_filmnoir_BW{01,02}' timecycles and the "NOIR_FILTER_SOUNDS" audioref.
--]]
function GRAPHICS.REGISTER_NOIR_LENS_EFFECT()
  native.invoke(
    Type.Void, 1288, false
  )
end

-- void DISABLE_VEHICLE_DISTANTLIGHTS(BOOL toggle) // 0xC9F98AC1884E73A2
function GRAPHICS.DISABLE_VEHICLE_DISTANTLIGHTS(toggle)
  native.invoke(
    Type.Void, 1289, false,
    arg(Type.Bool, toggle)
  )
end

-- void RENDER_SHADOWED_LIGHTS_WITH_NO_SHADOWS(BOOL p0) // 0x03300B57FCAC6DDB
function GRAPHICS.RENDER_SHADOWED_LIGHTS_WITH_NO_SHADOWS(p0)
  native.invoke(
    Type.Void, 1290, false,
    arg(Type.Bool, p0)
  )
end

-- void REQUEST_EARLY_LIGHT_CHECK() // 0x98EDF76A7271E4F2
function GRAPHICS.REQUEST_EARLY_LIGHT_CHECK()
  native.invoke(
    Type.Void, 1291, false
  )
end

-- void USE_SNOW_FOOT_VFX_WHEN_UNSHELTERED(BOOL toggle) // 0xAEEDAD1420C65CC0
--[[
Forces footstep tracks on all surfaces.
--]]
function GRAPHICS.USE_SNOW_FOOT_VFX_WHEN_UNSHELTERED(toggle)
  native.invoke(
    Type.Void, 1292, false,
    arg(Type.Bool, toggle)
  )
end

-- void _FORCE_ALLOW_SNOW_FOOT_VFX_ON_ICE(BOOL toggle) // 0xA342A3763B3AFB6C
function GRAPHICS._FORCE_ALLOW_SNOW_FOOT_VFX_ON_ICE(toggle)
  native.invoke(
    Type.Void, 1293, false,
    arg(Type.Bool, toggle)
  )
end

-- void USE_SNOW_WHEEL_VFX_WHEN_UNSHELTERED(BOOL toggle) // 0x4CC7F0FEA5283FE0
--[[
Forces vehicle trails on all surfaces.
--]]
function GRAPHICS.USE_SNOW_WHEEL_VFX_WHEN_UNSHELTERED(toggle)
  native.invoke(
    Type.Void, 1294, false,
    arg(Type.Bool, toggle)
  )
end

-- void DISABLE_REGION_VFX(Any p0) // 0xEFD97FF47B745B8D
function GRAPHICS.DISABLE_REGION_VFX(p0)
  native.invoke(
    Type.Void, 1295, false,
    arg(Type.Any, p0)
  )
end

-- void _FORCE_GROUND_SNOW_PASS(BOOL toggle) // 0x6E9EF3A33C8899F8
function GRAPHICS._FORCE_GROUND_SNOW_PASS(toggle)
  native.invoke(
    Type.Void, 1296, false,
    arg(Type.Bool, toggle)
  )
end

-- void PRESET_INTERIOR_AMBIENT_CACHE(const char* timecycleModifierName) // 0xD7021272EB0A451E
--[[
Only one match in the scripts:

GRAPHICS::PRESET_INTERIOR_AMBIENT_CACHE("int_carrier_hanger");
--]]
function GRAPHICS.PRESET_INTERIOR_AMBIENT_CACHE(timecycleModifierName)
  native.invoke(
    Type.Void, 1297, false,
    arg(Type.String, timecycleModifierName)
  )
end

-- void SET_TIMECYCLE_MODIFIER(const char* modifierName) // 0x2C933ABF17A1DF41
--[[
Loads the specified timecycle modifier. Modifiers are defined separately in another file (e.g. "timecycle_mods_1.xml")

Parameters:
modifierName - The modifier to load (e.g. "V_FIB_IT3", "scanline_cam", etc.)

Full list of timecycle modifiers by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/timecycleModifiers.json
--]]
function GRAPHICS.SET_TIMECYCLE_MODIFIER(modifierName)
  native.invoke(
    Type.Void, 1298, false,
    arg(Type.String, modifierName)
  )
end

-- void SET_TIMECYCLE_MODIFIER_STRENGTH(float strength) // 0x82E7FFCD5B2326B3
function GRAPHICS.SET_TIMECYCLE_MODIFIER_STRENGTH(strength)
  native.invoke(
    Type.Void, 1299, false,
    arg(Type.Float, strength)
  )
end

-- void SET_TRANSITION_TIMECYCLE_MODIFIER(const char* modifierName, float transition) // 0x3BCF567485E1971C
--[[
Full list of timecycle modifiers by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/timecycleModifiers.json
--]]
function GRAPHICS.SET_TRANSITION_TIMECYCLE_MODIFIER(modifierName, transition)
  native.invoke(
    Type.Void, 1300, false,
    arg(Type.String, modifierName),
    arg(Type.Float, transition)
  )
end

-- void SET_TRANSITION_OUT_OF_TIMECYCLE_MODIFIER(float strength) // 0x1CBA05AE7BD7EE05
function GRAPHICS.SET_TRANSITION_OUT_OF_TIMECYCLE_MODIFIER(strength)
  native.invoke(
    Type.Void, 1301, false,
    arg(Type.Float, strength)
  )
end

-- void CLEAR_TIMECYCLE_MODIFIER() // 0x0F07E7745A236711
function GRAPHICS.CLEAR_TIMECYCLE_MODIFIER()
  native.invoke(
    Type.Void, 1302, false
  )
end

-- int GET_TIMECYCLE_MODIFIER_INDEX() // 0xFDF3D97C674AFB66
--[[
Only use for this in the PC scripts is:

if (GRAPHICS::GET_TIMECYCLE_MODIFIER_INDEX() != -1)
--]]
function GRAPHICS.GET_TIMECYCLE_MODIFIER_INDEX()
  return native.invoke(
    Type.Int, 1303, false
  )
end

-- int GET_TIMECYCLE_TRANSITION_MODIFIER_INDEX() // 0x459FD2C8D0AB78BC
function GRAPHICS.GET_TIMECYCLE_TRANSITION_MODIFIER_INDEX()
  return native.invoke(
    Type.Int, 1304, false
  )
end

-- BOOL GET_IS_TIMECYCLE_TRANSITIONING_OUT() // 0x98D18905BF723B99
function GRAPHICS.GET_IS_TIMECYCLE_TRANSITIONING_OUT()
  return native.invoke(
    Type.Bool, 1305, false
  )
end

-- void PUSH_TIMECYCLE_MODIFIER() // 0x58F735290861E6B4
function GRAPHICS.PUSH_TIMECYCLE_MODIFIER()
  native.invoke(
    Type.Void, 1306, false
  )
end

-- void POP_TIMECYCLE_MODIFIER() // 0x3C8938D7D872211E
function GRAPHICS.POP_TIMECYCLE_MODIFIER()
  native.invoke(
    Type.Void, 1307, false
  )
end

-- void SET_CURRENT_PLAYER_TCMODIFIER(const char* modifierName) // 0xBBF327DED94E4DEB
function GRAPHICS.SET_CURRENT_PLAYER_TCMODIFIER(modifierName)
  native.invoke(
    Type.Void, 1308, false,
    arg(Type.String, modifierName)
  )
end

-- void SET_PLAYER_TCMODIFIER_TRANSITION(float value) // 0xBDEB86F4D5809204
function GRAPHICS.SET_PLAYER_TCMODIFIER_TRANSITION(value)
  native.invoke(
    Type.Void, 1309, false,
    arg(Type.Float, value)
  )
end

-- void SET_NEXT_PLAYER_TCMODIFIER(const char* modifierName) // 0xBF59707B3E5ED531
function GRAPHICS.SET_NEXT_PLAYER_TCMODIFIER(modifierName)
  native.invoke(
    Type.Void, 1310, false,
    arg(Type.String, modifierName)
  )
end

-- void ADD_TCMODIFIER_OVERRIDE(const char* modifierName1, const char* modifierName2) // 0x1A8E2C8B9CF4549C
function GRAPHICS.ADD_TCMODIFIER_OVERRIDE(modifierName1, modifierName2)
  native.invoke(
    Type.Void, 1311, false,
    arg(Type.String, modifierName1),
    arg(Type.String, modifierName2)
  )
end

-- void CLEAR_ALL_TCMODIFIER_OVERRIDES(const char* p0) // 0x15E33297C3E8DC60
function GRAPHICS.CLEAR_ALL_TCMODIFIER_OVERRIDES(p0)
  native.invoke(
    Type.Void, 1312, false,
    arg(Type.String, p0)
  )
end

-- void SET_EXTRA_TCMODIFIER(const char* modifierName) // 0x5096FD9CCB49056D
--[[
Full list of timecycle modifiers by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/timecycleModifiers.json
--]]
function GRAPHICS.SET_EXTRA_TCMODIFIER(modifierName)
  native.invoke(
    Type.Void, 1313, false,
    arg(Type.String, modifierName)
  )
end

-- void CLEAR_EXTRA_TCMODIFIER() // 0x92CCC17A7A2285DA
--[[
Clears the secondary timecycle modifier usually set with _SET_EXTRA_TIMECYCLE_MODIFIER
--]]
function GRAPHICS.CLEAR_EXTRA_TCMODIFIER()
  native.invoke(
    Type.Void, 1314, false
  )
end

-- int GET_EXTRA_TCMODIFIER() // 0xBB0527EC6341496D
--[[
See GET_TIMECYCLE_MODIFIER_INDEX for use, works the same just for the secondary timecycle modifier.
Returns an integer representing the Timecycle modifier
--]]
function GRAPHICS.GET_EXTRA_TCMODIFIER()
  return native.invoke(
    Type.Int, 1315, false
  )
end

-- void ENABLE_MOON_CYCLE_OVERRIDE(float strength) // 0x2C328AF17210F009
--[[
The same as SET_TIMECYCLE_MODIFIER_STRENGTH but for the secondary timecycle modifier.
--]]
function GRAPHICS.ENABLE_MOON_CYCLE_OVERRIDE(strength)
  native.invoke(
    Type.Void, 1316, false,
    arg(Type.Float, strength)
  )
end

-- void DISABLE_MOON_CYCLE_OVERRIDE() // 0x2BF72AD5B41AA739
--[[
Resets the extra timecycle modifier strength normally set with 0x2C328AF17210F009
--]]
function GRAPHICS.DISABLE_MOON_CYCLE_OVERRIDE()
  native.invoke(
    Type.Void, 1317, false
  )
end

-- int REQUEST_SCALEFORM_MOVIE(const char* scaleformName) // 0x11FE353CF9733E6F
function GRAPHICS.REQUEST_SCALEFORM_MOVIE(scaleformName)
  return native.invoke(
    Type.Int, 1318, false,
    arg(Type.String, scaleformName)
  )
end

-- int REQUEST_SCALEFORM_MOVIE_WITH_IGNORE_SUPER_WIDESCREEN(const char* scaleformName) // 0x65E7E78842E74CDB
--[[
Another REQUEST_SCALEFORM_MOVIE equivalent.
--]]
function GRAPHICS.REQUEST_SCALEFORM_MOVIE_WITH_IGNORE_SUPER_WIDESCREEN(scaleformName)
  return native.invoke(
    Type.Int, 1319, false,
    arg(Type.String, scaleformName)
  )
end

-- int REQUEST_SCALEFORM_MOVIE_INSTANCE(const char* scaleformName) // 0xC514489CFB8AF806
function GRAPHICS.REQUEST_SCALEFORM_MOVIE_INSTANCE(scaleformName)
  return native.invoke(
    Type.Int, 1320, false,
    arg(Type.String, scaleformName)
  )
end

-- int REQUEST_SCALEFORM_MOVIE_SKIP_RENDER_WHILE_PAUSED(const char* scaleformName) // 0xBD06C611BB9048C2
--[[
Similar to REQUEST_SCALEFORM_MOVIE, but seems to be some kind of "interactive" scaleform movie?

These seem to be the only scaleforms ever requested by this native:
"breaking_news"
"desktop_pc"
"ECG_MONITOR"
"Hacking_PC"
"TEETH_PULLING"

Note: Unless this hash is out-of-order, this native is next-gen only.

--]]
function GRAPHICS.REQUEST_SCALEFORM_MOVIE_SKIP_RENDER_WHILE_PAUSED(scaleformName)
  return native.invoke(
    Type.Int, 1321, false,
    arg(Type.String, scaleformName)
  )
end

-- BOOL HAS_SCALEFORM_MOVIE_LOADED(int scaleformHandle) // 0x85F01B8D5B90570E
function GRAPHICS.HAS_SCALEFORM_MOVIE_LOADED(scaleformHandle)
  return native.invoke(
    Type.Bool, 1322, false,
    arg(Type.Int, scaleformHandle)
  )
end

-- BOOL IS_ACTIVE_SCALEFORM_MOVIE_DELETING(int val) // 0x2FCB133CA50A49EB
--[[
val is 1-20 (0 will return false)
--]]
function GRAPHICS.IS_ACTIVE_SCALEFORM_MOVIE_DELETING(val)
  return native.invoke(
    Type.Bool, 1323, false,
    arg(Type.Int, val)
  )
end

-- BOOL IS_SCALEFORM_MOVIE_DELETING(int val) // 0x86255B1FC929E33E
--[[
val is 1-20. Return is related to INSTRUCTIONAL_BUTTONS, COLOUR_SWITCHER_02, etc?
--]]
function GRAPHICS.IS_SCALEFORM_MOVIE_DELETING(val)
  return native.invoke(
    Type.Bool, 1324, false,
    arg(Type.Int, val)
  )
end

-- BOOL HAS_SCALEFORM_MOVIE_FILENAME_LOADED(const char* scaleformName) // 0x0C1C5D756FB5F337
--[[
Only values used in the scripts are:

"heist_mp"
"heistmap_mp"
"instructional_buttons"
"heist_pre"
--]]
function GRAPHICS.HAS_SCALEFORM_MOVIE_FILENAME_LOADED(scaleformName)
  return native.invoke(
    Type.Bool, 1325, false,
    arg(Type.String, scaleformName)
  )
end

-- BOOL HAS_SCALEFORM_CONTAINER_MOVIE_LOADED_INTO_PARENT(int scaleformHandle) // 0x8217150E1217EBFD
function GRAPHICS.HAS_SCALEFORM_CONTAINER_MOVIE_LOADED_INTO_PARENT(scaleformHandle)
  return native.invoke(
    Type.Bool, 1326, false,
    arg(Type.Int, scaleformHandle)
  )
end

-- void SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED(int* scaleformHandle) // 0x1D132D614DD86811
function GRAPHICS.SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED(scaleformHandle)
  native.invoke(
    Type.Void, 1327, false,
    arg(Type.Int, scaleformHandle)
  )
end

-- void SET_SCALEFORM_MOVIE_TO_USE_SYSTEM_TIME(int scaleform, BOOL toggle) // 0x6D8EB211944DCE08
function GRAPHICS.SET_SCALEFORM_MOVIE_TO_USE_SYSTEM_TIME(scaleform, toggle)
  native.invoke(
    Type.Void, 1328, false,
    arg(Type.Int, scaleform),
    arg(Type.Bool, toggle)
  )
end

-- void SET_SCALEFORM_MOVIE_TO_USE_LARGE_RT(int scaleformHandle, BOOL toggle) // 0x32F34FF7F617643B
function GRAPHICS.SET_SCALEFORM_MOVIE_TO_USE_LARGE_RT(scaleformHandle, toggle)
  native.invoke(
    Type.Void, 1329, false,
    arg(Type.Int, scaleformHandle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_SCALEFORM_MOVIE_TO_USE_SUPER_LARGE_RT(int scaleformHandle, BOOL toggle) // 0xE6A9F00D4240B519
--[[
This native is used in some casino scripts to fit the scaleform in the rendertarget.
--]]
function GRAPHICS.SET_SCALEFORM_MOVIE_TO_USE_SUPER_LARGE_RT(scaleformHandle, toggle)
  native.invoke(
    Type.Void, 1330, false,
    arg(Type.Int, scaleformHandle),
    arg(Type.Bool, toggle)
  )
end

-- void DRAW_SCALEFORM_MOVIE(int scaleformHandle, float x, float y, float width, float height, int red, int green, int blue, int alpha, int p9) // 0x54972ADAF0294A93
function GRAPHICS.DRAW_SCALEFORM_MOVIE(scaleformHandle, x, y, width, height, red, green, blue, alpha, p9)
  native.invoke(
    Type.Void, 1331, false,
    arg(Type.Int, scaleformHandle),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, width),
    arg(Type.Float, height),
    arg(Type.Int, red),
    arg(Type.Int, green),
    arg(Type.Int, blue),
    arg(Type.Int, alpha),
    arg(Type.Int, p9)
  )
end

-- void DRAW_SCALEFORM_MOVIE_FULLSCREEN(int scaleform, int red, int green, int blue, int alpha, int p5) // 0x0DF606929C105BE1
--[[
unk is not used so no need
--]]
function GRAPHICS.DRAW_SCALEFORM_MOVIE_FULLSCREEN(scaleform, red, green, blue, alpha, p5)
  native.invoke(
    Type.Void, 1332, false,
    arg(Type.Int, scaleform),
    arg(Type.Int, red),
    arg(Type.Int, green),
    arg(Type.Int, blue),
    arg(Type.Int, alpha),
    arg(Type.Int, p5)
  )
end

-- void DRAW_SCALEFORM_MOVIE_FULLSCREEN_MASKED(int scaleform1, int scaleform2, int red, int green, int blue, int alpha) // 0xCF537FDE4FBD4CE5
function GRAPHICS.DRAW_SCALEFORM_MOVIE_FULLSCREEN_MASKED(scaleform1, scaleform2, red, green, blue, alpha)
  native.invoke(
    Type.Void, 1333, false,
    arg(Type.Int, scaleform1),
    arg(Type.Int, scaleform2),
    arg(Type.Int, red),
    arg(Type.Int, green),
    arg(Type.Int, blue),
    arg(Type.Int, alpha)
  )
end

-- void DRAW_SCALEFORM_MOVIE_3D(int scaleform, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float p7, float p8, float p9, float scaleX, float scaleY, float scaleZ, int rotationOrder) // 0x87D51D72255D4E78
function GRAPHICS.DRAW_SCALEFORM_MOVIE_3D(scaleform, posX, posY, posZ, rotX, rotY, rotZ, p7, p8, p9, scaleX, scaleY, scaleZ, rotationOrder)
  native.invoke(
    Type.Void, 1334, false,
    arg(Type.Int, scaleform),
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ),
    arg(Type.Float, rotX),
    arg(Type.Float, rotY),
    arg(Type.Float, rotZ),
    arg(Type.Float, p7),
    arg(Type.Float, p8),
    arg(Type.Float, p9),
    arg(Type.Float, scaleX),
    arg(Type.Float, scaleY),
    arg(Type.Float, scaleZ),
    arg(Type.Int, rotationOrder)
  )
end

-- void DRAW_SCALEFORM_MOVIE_3D_SOLID(int scaleform, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float p7, float p8, float p9, float scaleX, float scaleY, float scaleZ, int rotationOrder) // 0x1CE592FDC749D6F5
function GRAPHICS.DRAW_SCALEFORM_MOVIE_3D_SOLID(scaleform, posX, posY, posZ, rotX, rotY, rotZ, p7, p8, p9, scaleX, scaleY, scaleZ, rotationOrder)
  native.invoke(
    Type.Void, 1335, false,
    arg(Type.Int, scaleform),
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ),
    arg(Type.Float, rotX),
    arg(Type.Float, rotY),
    arg(Type.Float, rotZ),
    arg(Type.Float, p7),
    arg(Type.Float, p8),
    arg(Type.Float, p9),
    arg(Type.Float, scaleX),
    arg(Type.Float, scaleY),
    arg(Type.Float, scaleZ),
    arg(Type.Int, rotationOrder)
  )
end

-- void CALL_SCALEFORM_MOVIE_METHOD(int scaleform, const char* method) // 0xFBD96D87AC96D533
--[[
Calls the Scaleform function.
--]]
function GRAPHICS.CALL_SCALEFORM_MOVIE_METHOD(scaleform, method)
  native.invoke(
    Type.Void, 1336, false,
    arg(Type.Int, scaleform),
    arg(Type.String, method)
  )
end

-- void CALL_SCALEFORM_MOVIE_METHOD_WITH_NUMBER(int scaleform, const char* methodName, float param1, float param2, float param3, float param4, float param5) // 0xD0837058AE2E4BEE
--[[
Calls the Scaleform function and passes the parameters as floats.

The number of parameters passed to the function varies, so the end of the parameter list is represented by -1.0.
--]]
function GRAPHICS.CALL_SCALEFORM_MOVIE_METHOD_WITH_NUMBER(scaleform, methodName, param1, param2, param3, param4, param5)
  native.invoke(
    Type.Void, 1337, false,
    arg(Type.Int, scaleform),
    arg(Type.String, methodName),
    arg(Type.Float, param1),
    arg(Type.Float, param2),
    arg(Type.Float, param3),
    arg(Type.Float, param4),
    arg(Type.Float, param5)
  )
end

-- void CALL_SCALEFORM_MOVIE_METHOD_WITH_STRING(int scaleform, const char* methodName, const char* param1, const char* param2, const char* param3, const char* param4, const char* param5) // 0x51BC1ED3CC44E8F7
--[[
Calls the Scaleform function and passes the parameters as strings.

The number of parameters passed to the function varies, so the end of the parameter list is represented by 0 (NULL).
--]]
function GRAPHICS.CALL_SCALEFORM_MOVIE_METHOD_WITH_STRING(scaleform, methodName, param1, param2, param3, param4, param5)
  native.invoke(
    Type.Void, 1338, false,
    arg(Type.Int, scaleform),
    arg(Type.String, methodName),
    arg(Type.String, param1),
    arg(Type.String, param2),
    arg(Type.String, param3),
    arg(Type.String, param4),
    arg(Type.String, param5)
  )
end

-- void CALL_SCALEFORM_MOVIE_METHOD_WITH_NUMBER_AND_STRING(int scaleform, const char* methodName, float floatParam1, float floatParam2, float floatParam3, float floatParam4, float floatParam5, const char* stringParam1, const char* stringParam2, const char* stringParam3, const char* stringParam4, const char* stringParam5) // 0xEF662D8D57E290B1
--[[
Calls the Scaleform function and passes both float and string parameters (in their respective order).

The number of parameters passed to the function varies, so the end of the float parameters is represented by -1.0, and the end of the string parameters is represented by 0 (NULL).

NOTE: The order of parameters in the function prototype is important! All float parameters must come first, followed by the string parameters.

Examples:
// function MY_FUNCTION(floatParam1, floatParam2, stringParam)
GRAPHICS::CALL_SCALEFORM_MOVIE_METHOD_WITH_NUMBER_AND_STRING(scaleform, "MY_FUNCTION", 10.0, 20.0, -1.0, -1.0, -1.0, "String param", 0, 0, 0, 0);

// function MY_FUNCTION_2(floatParam, stringParam1, stringParam2)
GRAPHICS::CALL_SCALEFORM_MOVIE_METHOD_WITH_NUMBER_AND_STRING(scaleform, "MY_FUNCTION_2", 10.0, -1.0, -1.0, -1.0, -1.0, "String param #1", "String param #2", 0, 0, 0);
--]]
function GRAPHICS.CALL_SCALEFORM_MOVIE_METHOD_WITH_NUMBER_AND_STRING(scaleform, methodName, floatParam1, floatParam2, floatParam3, floatParam4, floatParam5, stringParam1, stringParam2, stringParam3, stringParam4, stringParam5)
  native.invoke(
    Type.Void, 1339, false,
    arg(Type.Int, scaleform),
    arg(Type.String, methodName),
    arg(Type.Float, floatParam1),
    arg(Type.Float, floatParam2),
    arg(Type.Float, floatParam3),
    arg(Type.Float, floatParam4),
    arg(Type.Float, floatParam5),
    arg(Type.String, stringParam1),
    arg(Type.String, stringParam2),
    arg(Type.String, stringParam3),
    arg(Type.String, stringParam4),
    arg(Type.String, stringParam5)
  )
end

-- BOOL BEGIN_SCALEFORM_SCRIPT_HUD_MOVIE_METHOD(int hudComponent, const char* methodName) // 0x98C494FD5BDFBFD5
--[[
Pushes a function from the Hud component Scaleform onto the stack. Same behavior as GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD, just a hud component id instead of a Scaleform.

Known components:
19 - MP_RANK_BAR
20 - HUD_DIRECTOR_MODE

This native requires more research - all information can be found inside of 'hud.gfx'. Using a decompiler, the different components are located under "scripts\__Packages\com\rockstargames\gtav\hud\hudComponents" and "scripts\__Packages\com\rockstargames\gtav\Multiplayer".
--]]
function GRAPHICS.BEGIN_SCALEFORM_SCRIPT_HUD_MOVIE_METHOD(hudComponent, methodName)
  return native.invoke(
    Type.Bool, 1340, false,
    arg(Type.Int, hudComponent),
    arg(Type.String, methodName)
  )
end

-- BOOL BEGIN_SCALEFORM_MOVIE_METHOD(int scaleform, const char* methodName) // 0xF6E48914C7A8694E
--[[
Push a function from the Scaleform onto the stack

--]]
function GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(scaleform, methodName)
  return native.invoke(
    Type.Bool, 1341, false,
    arg(Type.Int, scaleform),
    arg(Type.String, methodName)
  )
end

-- BOOL BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND(const char* methodName) // 0xAB58C27C2E6123C6
--[[
Starts frontend (pause menu) scaleform movie methods.
This can be used when you want to make custom frontend menus, and customize things like images or text in the menus etc.
Use `BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND_HEADER` for header scaleform functions.
--]]
function GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND(methodName)
  return native.invoke(
    Type.Bool, 1342, false,
    arg(Type.String, methodName)
  )
end

-- BOOL BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND_HEADER(const char* methodName) // 0xB9449845F73F5E9C
--[[
Starts frontend (pause menu) scaleform movie methods for header options.
Use `BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND` to customize the content inside the frontend menus.
--]]
function GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND_HEADER(methodName)
  return native.invoke(
    Type.Bool, 1343, false,
    arg(Type.String, methodName)
  )
end

-- void END_SCALEFORM_MOVIE_METHOD() // 0xC6796A8FFA375E53
--[[
Pops and calls the Scaleform function on the stack
--]]
function GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
  native.invoke(
    Type.Void, 1344, false
  )
end

-- int END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE() // 0xC50AA39A577AF886
function GRAPHICS.END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE()
  return native.invoke(
    Type.Int, 1345, false
  )
end

-- BOOL IS_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_READY(int methodReturn) // 0x768FF8961BA904D6
--[[
methodReturn: The return value of this native: END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE
Returns true if the return value of a scaleform function is ready to be collected (using GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING or GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT).
--]]
function GRAPHICS.IS_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_READY(methodReturn)
  return native.invoke(
    Type.Bool, 1346, false,
    arg(Type.Int, methodReturn)
  )
end

-- int GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT(int methodReturn) // 0x2DE7EFA66B906036
--[[
methodReturn: The return value of this native: END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE
Used to get a return value from a scaleform function. Returns an int in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING returns a string.
--]]
function GRAPHICS.GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT(methodReturn)
  return native.invoke(
    Type.Int, 1347, false,
    arg(Type.Int, methodReturn)
  )
end

-- BOOL GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_BOOL(int methodReturn) // 0xD80A80346A45D761
--[[
methodReturn: The return value of this native: END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE
--]]
function GRAPHICS.GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_BOOL(methodReturn)
  return native.invoke(
    Type.Bool, 1348, false,
    arg(Type.Int, methodReturn)
  )
end

-- const char* GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING(int methodReturn) // 0xE1E258829A885245
--[[
methodReturn: The return value of this native: END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE
Used to get a return value from a scaleform function. Returns a string in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT returns an int.
--]]
function GRAPHICS.GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING(methodReturn)
  return native.invoke(
    Type.Const char, 1349, false,
    arg(Type.Int, methodReturn)
  )
end

-- void SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(int value) // 0xC3D0841A0CC546A6
--[[
Pushes an integer for the Scaleform function onto the stack.
--]]
function GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(value)
  native.invoke(
    Type.Void, 1350, false,
    arg(Type.Int, value)
  )
end

-- void SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(float value) // 0xD69736AAE04DB51A
--[[
Pushes a float for the Scaleform function onto the stack.
--]]
function GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(value)
  native.invoke(
    Type.Void, 1351, false,
    arg(Type.Float, value)
  )
end

-- void SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(BOOL value) // 0xC58424BA936EB458
--[[
Pushes a boolean for the Scaleform function onto the stack.
--]]
function GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(value)
  native.invoke(
    Type.Void, 1352, false,
    arg(Type.Bool, value)
  )
end

-- void BEGIN_TEXT_COMMAND_SCALEFORM_STRING(const char* componentType) // 0x80338406F3475E55
--[[
Called prior to adding a text component to the UI. After doing so, GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING is called.

Examples:
GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("NUMBER");
HUD::ADD_TEXT_COMPONENT_INTEGER(MISC::ABSI(a_1));
GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();

GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING");
HUD::ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(a_2);
GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();

GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRTNM2");
HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL_HASH_KEY(v_3);
HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL_HASH_KEY(v_4);
GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();

GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRTNM1");
HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL_HASH_KEY(v_3);
GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
--]]
function GRAPHICS.BEGIN_TEXT_COMMAND_SCALEFORM_STRING(componentType)
  native.invoke(
    Type.Void, 1353, false,
    arg(Type.String, componentType)
  )
end

-- void END_TEXT_COMMAND_SCALEFORM_STRING() // 0x362E2D3FE93A9959
function GRAPHICS.END_TEXT_COMMAND_SCALEFORM_STRING()
  native.invoke(
    Type.Void, 1354, false
  )
end

-- void END_TEXT_COMMAND_UNPARSED_SCALEFORM_STRING() // 0xAE4E8157D9ECF087
--[[
Same as END_TEXT_COMMAND_SCALEFORM_STRING but does not perform HTML conversion for text tokens.

END_TEXT_COMMAND_VIA_SPECIAL_MODIFIABLE_STRING?
--]]
function GRAPHICS.END_TEXT_COMMAND_UNPARSED_SCALEFORM_STRING()
  native.invoke(
    Type.Void, 1355, false
  )
end

-- void SCALEFORM_MOVIE_METHOD_ADD_PARAM_LITERAL_STRING(const char* string) // 0x77FE3402004CD1B0
--[[
Same as SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING
Both SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING / _SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING_2 works, but _SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING_2 is usually used for "name" (organisation, players..).
--]]
function GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_LITERAL_STRING(string)
  native.invoke(
    Type.Void, 1356, false,
    arg(Type.String, string)
  )
end

-- void SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING(const char* string) // 0xBA7148484BD90365
function GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING(string)
  native.invoke(
    Type.Void, 1357, false,
    arg(Type.String, string)
  )
end

-- void SCALEFORM_MOVIE_METHOD_ADD_PARAM_PLAYER_NAME_STRING(const char* string) // 0xE83A3E3557A56640
function GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_PLAYER_NAME_STRING(string)
  native.invoke(
    Type.Void, 1358, false,
    arg(Type.String, string)
  )
end

-- BOOL DOES_LATEST_BRIEF_STRING_EXIST(int p0) // 0x5E657EF1099EDD65
function GRAPHICS.DOES_LATEST_BRIEF_STRING_EXIST(p0)
  return native.invoke(
    Type.Bool, 1359, false,
    arg(Type.Int, p0)
  )
end

-- void SCALEFORM_MOVIE_METHOD_ADD_PARAM_LATEST_BRIEF_STRING(int value) // 0xEC52C631A1831C03
function GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_LATEST_BRIEF_STRING(value)
  native.invoke(
    Type.Void, 1360, false,
    arg(Type.Int, value)
  )
end

-- void REQUEST_SCALEFORM_SCRIPT_HUD_MOVIE(int hudComponent) // 0x9304881D6F6537EA
function GRAPHICS.REQUEST_SCALEFORM_SCRIPT_HUD_MOVIE(hudComponent)
  native.invoke(
    Type.Void, 1361, false,
    arg(Type.Int, hudComponent)
  )
end

-- BOOL HAS_SCALEFORM_SCRIPT_HUD_MOVIE_LOADED(int hudComponent) // 0xDF6E5987D2B4D140
function GRAPHICS.HAS_SCALEFORM_SCRIPT_HUD_MOVIE_LOADED(hudComponent)
  return native.invoke(
    Type.Bool, 1362, false,
    arg(Type.Int, hudComponent)
  )
end

-- void REMOVE_SCALEFORM_SCRIPT_HUD_MOVIE(int hudComponent) // 0xF44A5456AC3F4F97
function GRAPHICS.REMOVE_SCALEFORM_SCRIPT_HUD_MOVIE(hudComponent)
  native.invoke(
    Type.Void, 1363, false,
    arg(Type.Int, hudComponent)
  )
end

-- BOOL PASS_KEYBOARD_INPUT_TO_SCALEFORM(int scaleformHandle) // 0xD1C7CB175E012964
function GRAPHICS.PASS_KEYBOARD_INPUT_TO_SCALEFORM(scaleformHandle)
  return native.invoke(
    Type.Bool, 1364, false,
    arg(Type.Int, scaleformHandle)
  )
end

-- void SET_TV_CHANNEL(int channel) // 0xBAABBB23EB6E484E
function GRAPHICS.SET_TV_CHANNEL(channel)
  native.invoke(
    Type.Void, 1365, false,
    arg(Type.Int, channel)
  )
end

-- int GET_TV_CHANNEL() // 0xFC1E275A90D39995
function GRAPHICS.GET_TV_CHANNEL()
  return native.invoke(
    Type.Int, 1366, false
  )
end

-- void SET_TV_VOLUME(float volume) // 0x2982BF73F66E9DDC
function GRAPHICS.SET_TV_VOLUME(volume)
  native.invoke(
    Type.Void, 1367, false,
    arg(Type.Float, volume)
  )
end

-- float GET_TV_VOLUME() // 0x2170813D3DD8661B
function GRAPHICS.GET_TV_VOLUME()
  return native.invoke(
    Type.Float, 1368, false
  )
end

-- void DRAW_TV_CHANNEL(float xPos, float yPos, float xScale, float yScale, float rotation, int red, int green, int blue, int alpha) // 0xFDDC2B4ED3C69DF0
--[[
All calls to this native are preceded by calls to GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER and GRAPHICS::SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU, respectively.

"act_cinema.ysc", line 1483:
HUD::SET_HUD_COMPONENT_POSITION(15, 0.0, -0.0375);
HUD::SET_TEXT_RENDER_ID(l_AE);
GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(4);
GRAPHICS::SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU(1);
if (GRAPHICS::IS_TVSHOW_CURRENTLY_PLAYING(${movie_arthouse})) {
    GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 0.7375, 1.0, 0.0, 255, 255, 255, 255);
} else { 
    GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 1.0, 1.0, 0.0, 255, 255, 255, 255);
}

"am_mp_property_int.ysc", line 102545:
if (ENTITY::DOES_ENTITY_EXIST(a_2._f3)) {
    if (HUD::IS_NAMED_RENDERTARGET_LINKED(ENTITY::GET_ENTITY_MODEL(a_2._f3))) {
        HUD::SET_TEXT_RENDER_ID(a_2._f1);
        GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(4);
        GRAPHICS::SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU(1);
        GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 1.0, 1.0, 0.0, 255, 255, 255, 255);
        if (GRAPHICS::GET_TV_CHANNEL() == -1) {
            sub_a8fa5(a_2, 1);
        } else { 
            sub_a8fa5(a_2, 1);
            GRAPHICS::ATTACH_TV_AUDIO_TO_ENTITY(a_2._f3);
        }
        HUD::SET_TEXT_RENDER_ID(HUD::GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID());
    }
}

--]]
function GRAPHICS.DRAW_TV_CHANNEL(xPos, yPos, xScale, yScale, rotation, red, green, blue, alpha)
  native.invoke(
    Type.Void, 1369, false,
    arg(Type.Float, xPos),
    arg(Type.Float, yPos),
    arg(Type.Float, xScale),
    arg(Type.Float, yScale),
    arg(Type.Float, rotation),
    arg(Type.Int, red),
    arg(Type.Int, green),
    arg(Type.Int, blue),
    arg(Type.Int, alpha)
  )
end

-- void SET_TV_CHANNEL_PLAYLIST(int tvChannel, const char* playlistName, BOOL restart) // 0xF7B38B8305F1FE8B
--[[
Loads specified video sequence into the TV Channel
TV_Channel ranges from 0-2
VideoSequence can be any of the following:
"PL_STD_CNT" CNT Standard Channel
"PL_STD_WZL" Weazel Standard Channel
"PL_LO_CNT"
"PL_LO_WZL"
"PL_SP_WORKOUT"
"PL_SP_INV" - Jay Norris Assassination Mission Fail
"PL_SP_INV_EXP" - Jay Norris Assassination Mission Success
"PL_LO_RS" - Righteous Slaughter Ad
"PL_LO_RS_CUTSCENE" - Righteous Slaughter Cut-scene
"PL_SP_PLSH1_INTRO"
"PL_LES1_FAME_OR_SHAME"
"PL_STD_WZL_FOS_EP2"
"PL_MP_WEAZEL" - Weazel Logo on loop
"PL_MP_CCTV" - Generic CCTV loop

Restart:
0=video sequence continues as normal
1=sequence restarts from beginning every time that channel is selected


The above playlists work as intended, and are commonly used, but there are many more playlists, as seen in `tvplaylists.xml`. A pastebin below outlines all playlists, they will be surronded by the name tag I.E. (<Name>PL_STD_CNT</Name> = PL_STD_CNT).
https://pastebin.com/zUzGB6h7
--]]
function GRAPHICS.SET_TV_CHANNEL_PLAYLIST(tvChannel, playlistName, restart)
  native.invoke(
    Type.Void, 1370, false,
    arg(Type.Int, tvChannel),
    arg(Type.String, playlistName),
    arg(Type.Bool, restart)
  )
end

-- void SET_TV_CHANNEL_PLAYLIST_AT_HOUR(int tvChannel, const char* playlistName, int hour) // 0x2201C576FACAEBE8
function GRAPHICS.SET_TV_CHANNEL_PLAYLIST_AT_HOUR(tvChannel, playlistName, hour)
  native.invoke(
    Type.Void, 1371, false,
    arg(Type.Int, tvChannel),
    arg(Type.String, playlistName),
    arg(Type.Int, hour)
  )
end

-- void _SET_TV_CHANNEL_PLAYLIST_DIRTY(int tvChannel, BOOL p1) // 0xEE831F15A8D0D94A
function GRAPHICS._SET_TV_CHANNEL_PLAYLIST_DIRTY(tvChannel, p1)
  native.invoke(
    Type.Void, 1372, false,
    arg(Type.Int, tvChannel),
    arg(Type.Bool, p1)
  )
end

-- void CLEAR_TV_CHANNEL_PLAYLIST(int tvChannel) // 0xBEB3D46BB7F043C0
function GRAPHICS.CLEAR_TV_CHANNEL_PLAYLIST(tvChannel)
  native.invoke(
    Type.Void, 1373, false,
    arg(Type.Int, tvChannel)
  )
end

-- BOOL IS_PLAYLIST_ON_CHANNEL(int tvChannel, Any p1) // 0x1F710BFF7DAE6261
function GRAPHICS.IS_PLAYLIST_ON_CHANNEL(tvChannel, p1)
  return native.invoke(
    Type.Bool, 1374, false,
    arg(Type.Int, tvChannel),
    arg(Type.Any, p1)
  )
end

-- BOOL IS_TVSHOW_CURRENTLY_PLAYING(Hash videoCliphash) // 0x0AD973CA1E077B60
function GRAPHICS.IS_TVSHOW_CURRENTLY_PLAYING(videoCliphash)
  return native.invoke(
    Type.Bool, 1375, false,
    arg(Type.Hash, videoCliphash)
  )
end

-- void ENABLE_MOVIE_KEYFRAME_WAIT(BOOL toggle) // 0x74C180030FDE4B69
function GRAPHICS.ENABLE_MOVIE_KEYFRAME_WAIT(toggle)
  native.invoke(
    Type.Void, 1376, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_TV_PLAYER_WATCHING_THIS_FRAME(Any p0) // 0xD1C55B110E4DF534
function GRAPHICS.SET_TV_PLAYER_WATCHING_THIS_FRAME(p0)
  native.invoke(
    Type.Void, 1377, false,
    arg(Type.Any, p0)
  )
end

-- Hash GET_CURRENT_TV_CLIP_NAMEHASH() // 0x30432A0118736E00
function GRAPHICS.GET_CURRENT_TV_CLIP_NAMEHASH()
  return native.invoke(
    Type.Hash, 1378, false
  )
end

-- void ENABLE_MOVIE_SUBTITLES(BOOL toggle) // 0x873FA65C778AD970
function GRAPHICS.ENABLE_MOVIE_SUBTITLES(toggle)
  native.invoke(
    Type.Void, 1379, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL UI3DSCENE_IS_AVAILABLE() // 0xD3A10FC7FD8D98CD
function GRAPHICS.UI3DSCENE_IS_AVAILABLE()
  return native.invoke(
    Type.Bool, 1380, false
  )
end

-- BOOL UI3DSCENE_PUSH_PRESET(const char* presetName) // 0xF1CEA8A4198D8E9A
--[[
All presets can be found in common\data\ui\uiscenes.meta
--]]
function GRAPHICS.UI3DSCENE_PUSH_PRESET(presetName)
  return native.invoke(
    Type.Bool, 1381, false,
    arg(Type.String, presetName)
  )
end

-- BOOL UI3DSCENE_ASSIGN_PED_TO_SLOT(const char* presetName, Ped ped, int slot, float posX, float posY, float posZ) // 0x98C4FE6EC34154CA
--[[
It's called after UI3DSCENE_IS_AVAILABLE and UI3DSCENE_PUSH_PRESET

presetName was always "CELEBRATION_WINNER"
All presets can be found in common\data\ui\uiscenes.meta
--]]
function GRAPHICS.UI3DSCENE_ASSIGN_PED_TO_SLOT(presetName, ped, slot, posX, posY, posZ)
  return native.invoke(
    Type.Bool, 1382, false,
    arg(Type.String, presetName),
    arg(Type.Ped, ped),
    arg(Type.Int, slot),
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ)
  )
end

-- void UI3DSCENE_CLEAR_PATCHED_DATA() // 0x7A42B2E236E71415
function GRAPHICS.UI3DSCENE_CLEAR_PATCHED_DATA()
  native.invoke(
    Type.Void, 1383, false
  )
end

-- void UI3DSCENE_MAKE_PUSHED_PRESET_PERSISTENT(BOOL toggle) // 0x108BE26959A9D9BB
function GRAPHICS.UI3DSCENE_MAKE_PUSHED_PRESET_PERSISTENT(toggle)
  native.invoke(
    Type.Void, 1384, false,
    arg(Type.Bool, toggle)
  )
end

-- void TERRAINGRID_ACTIVATE(BOOL toggle) // 0xA356990E161C9E65
--[[
This native enables/disables the gold putting grid display (https://i.imgur.com/TC6cku6.png).
This requires these two natives to be called as well to configure the grid: `TERRAINGRID_SET_PARAMS` and `TERRAINGRID_SET_COLOURS`.
--]]
function GRAPHICS.TERRAINGRID_ACTIVATE(toggle)
  native.invoke(
    Type.Void, 1385, false,
    arg(Type.Bool, toggle)
  )
end

-- void TERRAINGRID_SET_PARAMS(float x, float y, float z, float forwardX, float forwardY, float forwardZ, float sizeX, float sizeY, float sizeZ, float gridScale, float glowIntensity, float normalHeight, float heightDiff) // 0x1C4FC5752BCD8E48
--[[
This native is used along with these two natives: `TERRAINGRID_ACTIVATE` and `TERRAINGRID_SET_COLOURS`.
This native configures the location, size, rotation, normal height, and the difference ratio between min, normal and max.

All those natives combined they will output something like this: https://i.imgur.com/TC6cku6.png

This native renders a box at the given position, with a special shader that renders a grid on world geometry behind it. This box does not have backface culling.
The forward args here are a direction vector, something similar to what's returned by GET_ENTITY_FORWARD_VECTOR.
normalHeight and heightDiff are used for positioning the color gradient of the grid, colors specified via TERRAINGRID_SET_COLOURS.

Example with box superimposed on the image to demonstrate: https://i.imgur.com/wdqskxd.jpg
--]]
function GRAPHICS.TERRAINGRID_SET_PARAMS(x, y, z, forwardX, forwardY, forwardZ, sizeX, sizeY, sizeZ, gridScale, glowIntensity, normalHeight, heightDiff)
  native.invoke(
    Type.Void, 1386, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, forwardX),
    arg(Type.Float, forwardY),
    arg(Type.Float, forwardZ),
    arg(Type.Float, sizeX),
    arg(Type.Float, sizeY),
    arg(Type.Float, sizeZ),
    arg(Type.Float, gridScale),
    arg(Type.Float, glowIntensity),
    arg(Type.Float, normalHeight),
    arg(Type.Float, heightDiff)
  )
end

-- void TERRAINGRID_SET_COLOURS(int lowR, int lowG, int lowB, int lowAlpha, int r, int g, int b, int alpha, int highR, int highG, int highB, int highAlpha) // 0x5CE62918F8D703C7
--[[
This native is used along with these two natives: `TERRAINGRID_ACTIVATE` and `TERRAINGRID_SET_PARAMS`.
This native sets the colors for the golf putting grid. the 'min...' values are for the lower areas that the grid covers, the 'max...' values are for the higher areas that the grid covers, all remaining values are for the 'normal' ground height.
All those natives combined they will output something like this: https://i.imgur.com/TC6cku6.png
--]]
function GRAPHICS.TERRAINGRID_SET_COLOURS(lowR, lowG, lowB, lowAlpha, r, g, b, alpha, highR, highG, highB, highAlpha)
  native.invoke(
    Type.Void, 1387, false,
    arg(Type.Int, lowR),
    arg(Type.Int, lowG),
    arg(Type.Int, lowB),
    arg(Type.Int, lowAlpha),
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b),
    arg(Type.Int, alpha),
    arg(Type.Int, highR),
    arg(Type.Int, highG),
    arg(Type.Int, highB),
    arg(Type.Int, highAlpha)
  )
end

-- void ANIMPOSTFX_PLAY(const char* effectName, int duration, BOOL looped) // 0x2206BF9A37B7F724
--[[
duration - is how long to play the effect for in milliseconds. If 0, it plays the default length
if loop is true, the effect won't stop until you call ANIMPOSTFX_STOP on it. (only loopable effects)

Full list of animpostFX / screen effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animPostFxNamesCompact.json
--]]
function GRAPHICS.ANIMPOSTFX_PLAY(effectName, duration, looped)
  native.invoke(
    Type.Void, 1388, false,
    arg(Type.String, effectName),
    arg(Type.Int, duration),
    arg(Type.Bool, looped)
  )
end

-- void ANIMPOSTFX_STOP(const char* effectName) // 0x068E835A1D0DC0E3
--[[
See ANIMPOSTFX_PLAY

Full list of animpostFX / screen effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animPostFxNamesCompact.json
--]]
function GRAPHICS.ANIMPOSTFX_STOP(effectName)
  native.invoke(
    Type.Void, 1389, false,
    arg(Type.String, effectName)
  )
end

-- float ANIMPOSTFX_GET_CURRENT_TIME(const char* effectName) // 0xE35B38A27E8E7179
--[[
See ANIMPOSTFX_PLAY

Full list of animpostFX / screen effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animPostFxNamesCompact.json
--]]
function GRAPHICS.ANIMPOSTFX_GET_CURRENT_TIME(effectName)
  return native.invoke(
    Type.Float, 1390, false,
    arg(Type.String, effectName)
  )
end

-- BOOL ANIMPOSTFX_IS_RUNNING(const char* effectName) // 0x36AD3E690DA5ACEB
--[[
Returns whether the specified effect is active.
See ANIMPOSTFX_PLAY

Full list of animpostFX / screen effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animPostFxNamesCompact.json
--]]
function GRAPHICS.ANIMPOSTFX_IS_RUNNING(effectName)
  return native.invoke(
    Type.Bool, 1391, false,
    arg(Type.String, effectName)
  )
end

-- void ANIMPOSTFX_STOP_ALL() // 0xB4EDDC19532BFB85
--[[
Stops ALL currently playing effects.
--]]
function GRAPHICS.ANIMPOSTFX_STOP_ALL()
  native.invoke(
    Type.Void, 1392, false
  )
end

-- void ANIMPOSTFX_STOP_AND_FLUSH_REQUESTS(const char* effectName) // 0xD2209BE128B5418C
--[[
Stops the effect and sets a value (bool) in its data (+0x199) to false.
See ANIMPOSTFX_PLAY

Full list of animpostFX / screen effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animPostFxNamesCompact.json
--]]
function GRAPHICS.ANIMPOSTFX_STOP_AND_FLUSH_REQUESTS(effectName)
  native.invoke(
    Type.Void, 1393, false,
    arg(Type.String, effectName)
  )
end


HUD = {}

-- void BEGIN_TEXT_COMMAND_BUSYSPINNER_ON(const char* string) // 0xABA17D7CE615ADBF
--[[
Initializes the text entry for the the text next to a loading prompt. All natives for building UI texts can be used here


e.g
void StartLoadingMessage(char *text, int spinnerType = 3)
  {
     BEGIN_TEXT_COMMAND_BUSYSPINNER_ON("STRING");
       ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
       END_TEXT_COMMAND_BUSYSPINNER_ON(spinnerType);
    }
/*OR*/
 void ShowLoadingMessage(char *text, int spinnerType = 3, int timeMs = 10000)
  {
     BEGIN_TEXT_COMMAND_BUSYSPINNER_ON("STRING");
       ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
       END_TEXT_COMMAND_BUSYSPINNER_ON(spinnerType);
        WAIT(timeMs);
     BUSYSPINNER_OFF();
 }


These are some localized strings used in the loading spinner.
"PM_WAIT"                   = Please Wait
"CELEB_WPLYRS"              = Waiting For Players.
"CELL_SPINNER2"             = Scanning storage.
"ERROR_CHECKYACHTNAME" = Registering your yacht's name. Please wait.
"ERROR_CHECKPROFANITY"   = Checking your text for profanity. Please wait.
"FM_COR_AUTOD"                        = Just spinner no text
"FM_IHELP_WAT2"                        = Waiting for other players
"FM_JIP_WAITO"                            = Game options are being set
"FMMC_DOWNLOAD"                    = Downloading
"FMMC_PLYLOAD"                         = Loading
"FMMC_STARTTRAN"                    = Launching session
"HUD_QUITTING"                           =  Quiting session
"KILL_STRIP_IDM"                         = Waiting for to accept
"MP_SPINLOADING"                      = Loading
--]]
function HUD.BEGIN_TEXT_COMMAND_BUSYSPINNER_ON(string)
  native.invoke(
    Type.Void, 1394, false,
    arg(Type.String, string)
  )
end

-- void END_TEXT_COMMAND_BUSYSPINNER_ON(int busySpinnerType) // 0xBD12F8228410D9B4
--[[
enum eBusySpinnerType
{
	BUSY_SPINNER_LEFT,
	BUSY_SPINNER_LEFT_2,
	BUSY_SPINNER_LEFT_3,
	BUSY_SPINNER_SAVE,
	BUSY_SPINNER_RIGHT,
};
--]]
function HUD.END_TEXT_COMMAND_BUSYSPINNER_ON(busySpinnerType)
  native.invoke(
    Type.Void, 1395, false,
    arg(Type.Int, busySpinnerType)
  )
end

-- void BUSYSPINNER_OFF() // 0x10D373323E5B9C0D
--[[
Removes the loading prompt at the bottom right of the screen.
--]]
function HUD.BUSYSPINNER_OFF()
  native.invoke(
    Type.Void, 1396, false
  )
end

-- void PRELOAD_BUSYSPINNER() // 0xC65AB383CD91DF98
function HUD.PRELOAD_BUSYSPINNER()
  native.invoke(
    Type.Void, 1397, false
  )
end

-- BOOL BUSYSPINNER_IS_ON() // 0xD422FCC5F239A915
function HUD.BUSYSPINNER_IS_ON()
  return native.invoke(
    Type.Bool, 1398, false
  )
end

-- BOOL BUSYSPINNER_IS_DISPLAYING() // 0xB2A592B04648A9CB
function HUD.BUSYSPINNER_IS_DISPLAYING()
  return native.invoke(
    Type.Bool, 1399, false
  )
end

-- void DISABLE_PAUSEMENU_SPINNER(BOOL p0) // 0x9245E81072704B8A
function HUD.DISABLE_PAUSEMENU_SPINNER(p0)
  native.invoke(
    Type.Void, 1400, false,
    arg(Type.Bool, p0)
  )
end

-- void SET_MOUSE_CURSOR_THIS_FRAME() // 0xAAE7CE1D63167423
--[[
Shows the cursor on screen for one frame.
--]]
function HUD.SET_MOUSE_CURSOR_THIS_FRAME()
  native.invoke(
    Type.Void, 1401, false
  )
end

-- void SET_MOUSE_CURSOR_STYLE(int spriteId) // 0x8DB8CFFD58B62552
--[[
Changes the mouse cursor's sprite. 
1 = Normal
6 = Left Arrow
7 = Right Arrow
--]]
function HUD.SET_MOUSE_CURSOR_STYLE(spriteId)
  native.invoke(
    Type.Void, 1402, false,
    arg(Type.Int, spriteId)
  )
end

-- void SET_MOUSE_CURSOR_VISIBLE(BOOL toggle) // 0x98215325A695E78A
--[[
Shows/hides the frontend cursor on the pause menu or similar menus.
Clicking off and then on the game window will show it again.
--]]
function HUD.SET_MOUSE_CURSOR_VISIBLE(toggle)
  native.invoke(
    Type.Void, 1403, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_MOUSE_ROLLED_OVER_INSTRUCTIONAL_BUTTONS() // 0x3D9ACB1EB139E702
--[[
Returns TRUE if mouse is hovering above instructional buttons. Works with all buttons gfx, such as popup_warning, pause_menu_instructional_buttons, instructional_buttons, etc. Note: You have to call TOGGLE_MOUSE_BUTTONS on the scaleform if you want this native to work.
--]]
function HUD.IS_MOUSE_ROLLED_OVER_INSTRUCTIONAL_BUTTONS()
  return native.invoke(
    Type.Bool, 1404, false
  )
end

-- BOOL GET_MOUSE_EVENT(int scaleformHandle, Any* p1, Any* p2, Any* p3) // 0x632B2940C67F4EA9
function HUD.GET_MOUSE_EVENT(scaleformHandle, p1, p2, p3)
  return native.invoke(
    Type.Bool, 1405, false,
    arg(Type.Int, scaleformHandle),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void THEFEED_ONLY_SHOW_TOOLTIPS(BOOL toggle) // 0x6F1554B0CC2089FA
function HUD.THEFEED_ONLY_SHOW_TOOLTIPS(toggle)
  native.invoke(
    Type.Void, 1406, false,
    arg(Type.Bool, toggle)
  )
end

-- void THEFEED_SET_SCRIPTED_MENU_HEIGHT(float pos) // 0x55598D21339CB998
function HUD.THEFEED_SET_SCRIPTED_MENU_HEIGHT(pos)
  native.invoke(
    Type.Void, 1407, false,
    arg(Type.Float, pos)
  )
end

-- void THEFEED_HIDE() // 0x32888337579A5970
--[[
Stops loading screen tips shown by invoking `THEFEED_SHOW`
--]]
function HUD.THEFEED_HIDE()
  native.invoke(
    Type.Void, 1408, false
  )
end

-- void THEFEED_HIDE_THIS_FRAME() // 0x25F87B30C382FCA7
--[[
Once called each frame hides all above radar notifications.
--]]
function HUD.THEFEED_HIDE_THIS_FRAME()
  native.invoke(
    Type.Void, 1409, false
  )
end

-- void THEFEED_SHOW() // 0x15CFA549788D35EF
--[[
Displays loading screen tips, requires `THEFEED_AUTO_POST_GAMETIPS_ON` to be called beforehand.
--]]
function HUD.THEFEED_SHOW()
  native.invoke(
    Type.Void, 1410, false
  )
end

-- void THEFEED_FLUSH_QUEUE() // 0xA8FDB297A8D25FBA
function HUD.THEFEED_FLUSH_QUEUE()
  native.invoke(
    Type.Void, 1411, false
  )
end

-- void THEFEED_REMOVE_ITEM(int notificationId) // 0xBE4390CB40B3E627
--[[
Removes a notification instantly instead of waiting for it to disappear
--]]
function HUD.THEFEED_REMOVE_ITEM(notificationId)
  native.invoke(
    Type.Void, 1412, false,
    arg(Type.Int, notificationId)
  )
end

-- void THEFEED_FORCE_RENDER_ON() // 0xA13C11E1B5C06BFC
function HUD.THEFEED_FORCE_RENDER_ON()
  native.invoke(
    Type.Void, 1413, false
  )
end

-- void THEFEED_FORCE_RENDER_OFF() // 0x583049884A2EEE3C
--[[
Enables loading screen tips to be be shown (`THEFEED_SHOW`), blocks other kinds of notifications from being displayed (at least from current script). Call `0xADED7F5748ACAFE6` to display those again.
--]]
function HUD.THEFEED_FORCE_RENDER_OFF()
  native.invoke(
    Type.Void, 1414, false
  )
end

-- void THEFEED_PAUSE() // 0xFDB423997FA30340
function HUD.THEFEED_PAUSE()
  native.invoke(
    Type.Void, 1415, false
  )
end

-- void THEFEED_RESUME() // 0xE1CD1E48E025E661
function HUD.THEFEED_RESUME()
  native.invoke(
    Type.Void, 1416, false
  )
end

-- BOOL THEFEED_IS_PAUSED() // 0xA9CBFD40B3FA3010
function HUD.THEFEED_IS_PAUSED()
  return native.invoke(
    Type.Bool, 1417, false
  )
end

-- void THEFEED_REPORT_LOGO_ON() // 0xD4438C0564490E63
function HUD.THEFEED_REPORT_LOGO_ON()
  native.invoke(
    Type.Void, 1418, false
  )
end

-- void THEFEED_REPORT_LOGO_OFF() // 0xB695E2CD0A2DA9EE
function HUD.THEFEED_REPORT_LOGO_OFF()
  native.invoke(
    Type.Void, 1419, false
  )
end

-- int THEFEED_GET_LAST_SHOWN_PHONE_ACTIVATABLE_FEED_ID() // 0x82352748437638CA
--[[
Returns the handle for the notification currently displayed on the screen. Name may be a hash collision, but describes the function accurately.
--]]
function HUD.THEFEED_GET_LAST_SHOWN_PHONE_ACTIVATABLE_FEED_ID()
  return native.invoke(
    Type.Int, 1420, false
  )
end

-- void THEFEED_AUTO_POST_GAMETIPS_ON() // 0x56C8B608CFD49854
--[[
Enables loading screen tips to be be shown (`THEFEED_SHOW`), blocks other kinds of notifications from being displayed (at least from current script). Call `THEFEED_AUTO_POST_GAMETIPS_OFF` to display those again.
--]]
function HUD.THEFEED_AUTO_POST_GAMETIPS_ON()
  native.invoke(
    Type.Void, 1421, false
  )
end

-- void THEFEED_AUTO_POST_GAMETIPS_OFF() // 0xADED7F5748ACAFE6
--[[
Displays "normal" notifications again after calling `THEFEED_AUTO_POST_GAMETIPS_ON` (those that were drawn before calling this native too), though those will have a weird offset and stay on screen forever (tested with notifications created from same script).
--]]
function HUD.THEFEED_AUTO_POST_GAMETIPS_OFF()
  native.invoke(
    Type.Void, 1422, false
  )
end

-- void THEFEED_SET_BACKGROUND_COLOR_FOR_NEXT_POST(int hudColorIndex) // 0x92F0DA1E27DB96DC
--[[
From the decompiled scripts:
HUD::THEFEED_SET_BACKGROUND_COLOR_FOR_NEXT_POST(6);
HUD::THEFEED_SET_BACKGROUND_COLOR_FOR_NEXT_POST(184);
HUD::THEFEED_SET_BACKGROUND_COLOR_FOR_NEXT_POST(190);

sets background color for the next notification
6 = red
184 = green
190 = yellow

Here is a list of some colors that can be used: https://gyazo.com/68bd384455fceb0a85a8729e48216e15
--]]
function HUD.THEFEED_SET_BACKGROUND_COLOR_FOR_NEXT_POST(hudColorIndex)
  native.invoke(
    Type.Void, 1423, false,
    arg(Type.Int, hudColorIndex)
  )
end

-- void THEFEED_SET_RGBA_PARAMETER_FOR_NEXT_MESSAGE(int red, int green, int blue, int alpha) // 0x17430B918701C342
function HUD.THEFEED_SET_RGBA_PARAMETER_FOR_NEXT_MESSAGE(red, green, blue, alpha)
  native.invoke(
    Type.Void, 1424, false,
    arg(Type.Int, red),
    arg(Type.Int, green),
    arg(Type.Int, blue),
    arg(Type.Int, alpha)
  )
end

-- void THEFEED_SET_FLASH_DURATION_PARAMETER_FOR_NEXT_MESSAGE(int count) // 0x17AD8C9706BDD88A
--[[
Related to notification color flashing, setting count to 0 invalidates a `THEFEED_SET_RGBA_PARAMETER_FOR_NEXT_MESSAGE` call for the target notification.
--]]
function HUD.THEFEED_SET_FLASH_DURATION_PARAMETER_FOR_NEXT_MESSAGE(count)
  native.invoke(
    Type.Void, 1425, false,
    arg(Type.Int, count)
  )
end

-- void THEFEED_SET_VIBRATE_PARAMETER_FOR_NEXT_MESSAGE(BOOL toggle) // 0x4A0C7C9BB10ABB36
function HUD.THEFEED_SET_VIBRATE_PARAMETER_FOR_NEXT_MESSAGE(toggle)
  native.invoke(
    Type.Void, 1426, false,
    arg(Type.Bool, toggle)
  )
end

-- void THEFEED_RESET_ALL_PARAMETERS() // 0xFDD85225B2DEA55E
function HUD.THEFEED_RESET_ALL_PARAMETERS()
  native.invoke(
    Type.Void, 1427, false
  )
end

-- void THEFEED_FREEZE_NEXT_POST() // 0xFDEC055AB549E328
--[[
Requires manual management of game stream handles (i.e., 0xBE4390CB40B3E627).
--]]
function HUD.THEFEED_FREEZE_NEXT_POST()
  native.invoke(
    Type.Void, 1428, false
  )
end

-- void THEFEED_CLEAR_FROZEN_POST() // 0x80FE4F3AB4E1B62A
function HUD.THEFEED_CLEAR_FROZEN_POST()
  native.invoke(
    Type.Void, 1429, false
  )
end

-- void THEFEED_SET_SNAP_FEED_ITEM_POSITIONS(BOOL p0) // 0xBAE4F9B97CD43B30
function HUD.THEFEED_SET_SNAP_FEED_ITEM_POSITIONS(p0)
  native.invoke(
    Type.Void, 1430, false,
    arg(Type.Bool, p0)
  )
end

-- void THEFEED_UPDATE_ITEM_TEXTURE(const char* txdString1, const char* txnString1, const char* txdString2, const char* txnString2) // 0x317EBA71D7543F52
--[[
Used in the native scripts to reference "GET_PEDHEADSHOT_TXD_STRING" and "CHAR_DEFAULT".
--]]
function HUD.THEFEED_UPDATE_ITEM_TEXTURE(txdString1, txnString1, txdString2, txnString2)
  native.invoke(
    Type.Void, 1431, false,
    arg(Type.String, txdString1),
    arg(Type.String, txnString1),
    arg(Type.String, txdString2),
    arg(Type.String, txnString2)
  )
end

-- void BEGIN_TEXT_COMMAND_THEFEED_POST(const char* text) // 0x202709F4C58A0424
--[[
Declares the entry type of a notification, for example "STRING".

int ShowNotification(char *text)
{
	BEGIN_TEXT_COMMAND_THEFEED_POST("STRING");
	ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
	return END_TEXT_COMMAND_THEFEED_POST_TICKER(1, 1);
}
--]]
function HUD.BEGIN_TEXT_COMMAND_THEFEED_POST(text)
  native.invoke(
    Type.Void, 1432, false,
    arg(Type.String, text)
  )
end

-- int END_TEXT_COMMAND_THEFEED_POST_STATS(const char* statTitle, int iconEnum, BOOL stepVal, int barValue, BOOL isImportant, const char* pictureTextureDict, const char* pictureTextureName) // 0x2B7E9A4EAAA93C89
--[[
List of picture names: https://pastebin.com/XdpJVbHz
Example result: https://i.imgur.com/SdEZ22m.png
--]]
function HUD.END_TEXT_COMMAND_THEFEED_POST_STATS(statTitle, iconEnum, stepVal, barValue, isImportant, pictureTextureDict, pictureTextureName)
  return native.invoke(
    Type.Int, 1433, false,
    arg(Type.String, statTitle),
    arg(Type.Int, iconEnum),
    arg(Type.Bool, stepVal),
    arg(Type.Int, barValue),
    arg(Type.Bool, isImportant),
    arg(Type.String, pictureTextureDict),
    arg(Type.String, pictureTextureName)
  )
end

-- int END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT(const char* txdName, const char* textureName, BOOL flash, int iconType, const char* sender, const char* subject) // 0x1CCD9A37359072CF
--[[
This function can show pictures of every texture that can be requested by REQUEST_STREAMED_TEXTURE_DICT.

List of picNames: https://pastebin.com/XdpJVbHz


flash is a bool for fading in.
iconTypes:
1 : Chat Box
2 : Email
3 : Add Friend Request
4 : Nothing
5 : Nothing
6 : Nothing
7 : Right Jumping Arrow
8 : RP Icon
9 : $ Icon

"sender" is the very top header. This can be any old string.
"subject" is the header under the sender.
--]]
function HUD.END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT(txdName, textureName, flash, iconType, sender, subject)
  return native.invoke(
    Type.Int, 1434, false,
    arg(Type.String, txdName),
    arg(Type.String, textureName),
    arg(Type.Bool, flash),
    arg(Type.Int, iconType),
    arg(Type.String, sender),
    arg(Type.String, subject)
  )
end

-- int END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_SUBTITLE_LABEL(const char* txdName, const char* textureName, BOOL flash, int iconType, const char* sender, const char* subject) // 0xC6F580E4C94926AC
--[[
This function can show pictures of every texture that can be requested by REQUEST_STREAMED_TEXTURE_DICT.

Needs more research.

Only one type of usage in the scripts:

HUD::END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_SUBTITLE_LABEL("CHAR_ACTING_UP", "CHAR_ACTING_UP", 0, 0, "DI_FEED_CHAR", a_0);
--]]
function HUD.END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_SUBTITLE_LABEL(txdName, textureName, flash, iconType, sender, subject)
  return native.invoke(
    Type.Int, 1435, false,
    arg(Type.String, txdName),
    arg(Type.String, textureName),
    arg(Type.Bool, flash),
    arg(Type.Int, iconType),
    arg(Type.String, sender),
    arg(Type.String, subject)
  )
end

-- int END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_TU(const char* txdName, const char* textureName, BOOL flash, int iconType, const char* sender, const char* subject, float duration) // 0x1E6611149DB3DB6B
--[[
This function can show pictures of every texture that can be requested by REQUEST_STREAMED_TEXTURE_DICT.

NOTE: 'duration' is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.

Example, only occurrence in the scripts:
v_8 = HUD::END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_TU("CHAR_SOCIAL_CLUB", "CHAR_SOCIAL_CLUB", 0, 0, &v_9, "", a_5);
--]]
function HUD.END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_TU(txdName, textureName, flash, iconType, sender, subject, duration)
  return native.invoke(
    Type.Int, 1436, false,
    arg(Type.String, txdName),
    arg(Type.String, textureName),
    arg(Type.Bool, flash),
    arg(Type.Int, iconType),
    arg(Type.String, sender),
    arg(Type.String, subject),
    arg(Type.Float, duration)
  )
end

-- int END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_WITH_CREW_TAG(const char* txdName, const char* textureName, BOOL flash, int iconType, const char* sender, const char* subject, float duration, const char* clanTag) // 0x5CBF7BADE20DB93E
--[[
This function can show pictures of every texture that can be requested by REQUEST_STREAMED_TEXTURE_DICT.

List of picNames https://pastebin.com/XdpJVbHz

flash is a bool for fading in.
iconTypes:
1 : Chat Box
2 : Email
3 : Add Friend Request
4 : Nothing
5 : Nothing
6 : Nothing
7 : Right Jumping Arrow
8 : RP Icon
9 : $ Icon

"sender" is the very top header. This can be any old string.
"subject" is the header under the sender.
"duration" is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.
"clanTag" shows a crew tag in the "sender" header, after the text. You need to use 3 underscores as padding. Maximum length of this field seems to be 7. (e.g. "MK" becomes "___MK", "ACE" becomes "___ACE", etc.)
--]]
function HUD.END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_WITH_CREW_TAG(txdName, textureName, flash, iconType, sender, subject, duration, clanTag)
  return native.invoke(
    Type.Int, 1437, false,
    arg(Type.String, txdName),
    arg(Type.String, textureName),
    arg(Type.Bool, flash),
    arg(Type.Int, iconType),
    arg(Type.String, sender),
    arg(Type.String, subject),
    arg(Type.Float, duration),
    arg(Type.String, clanTag)
  )
end

-- int END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_WITH_CREW_TAG_AND_ADDITIONAL_ICON(const char* txdName, const char* textureName, BOOL flash, int iconType1, const char* sender, const char* subject, float duration, const char* clanTag, int iconType2, int p9) // 0x531B84E7DA981FB6
--[[
This function can show pictures of every texture that can be requested by REQUEST_STREAMED_TEXTURE_DICT.

List of picNames:  https://pastebin.com/XdpJVbHz

flash is a bool for fading in.
iconTypes:
1 : Chat Box
2 : Email
3 : Add Friend Request
4 : Nothing
5 : Nothing
6 : Nothing
7 : Right Jumping Arrow
8 : RP Icon
9 : $ Icon

"sender" is the very top header. This can be any old string.
"subject" is the header under the sender.
"duration" is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.
"clanTag" shows a crew tag in the "sender" header, after the text. You need to use 3 underscores as padding. Maximum length of this field seems to be 7. (e.g. "MK" becomes "___MK", "ACE" becomes "___ACE", etc.)
iconType2 is a mirror of iconType. It shows in the "subject" line, right under the original iconType.


int IconNotification(char *text, char *text2, char *Subject)
{
    BEGIN_TEXT_COMMAND_THEFEED_POST("STRING");
 ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
   _SET_NOTIFICATION_MESSAGE_CLAN_TAG_2("CHAR_SOCIAL_CLUB", "CHAR_SOCIAL_CLUB", 1, 7, text2, Subject, 1.0f, "__EXAMPLE", 7);
   return END_TEXT_COMMAND_THEFEED_POST_TICKER(1, 1);
}
--]]
function HUD.END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_WITH_CREW_TAG_AND_ADDITIONAL_ICON(txdName, textureName, flash, iconType1, sender, subject, duration, clanTag, iconType2, p9)
  return native.invoke(
    Type.Int, 1438, false,
    arg(Type.String, txdName),
    arg(Type.String, textureName),
    arg(Type.Bool, flash),
    arg(Type.Int, iconType1),
    arg(Type.String, sender),
    arg(Type.String, subject),
    arg(Type.Float, duration),
    arg(Type.String, clanTag),
    arg(Type.Int, iconType2),
    arg(Type.Int, p9)
  )
end

-- int END_TEXT_COMMAND_THEFEED_POST_TICKER(BOOL blink, BOOL p1) // 0x2ED7843F8F801023
function HUD.END_TEXT_COMMAND_THEFEED_POST_TICKER(blink, p1)
  return native.invoke(
    Type.Int, 1439, false,
    arg(Type.Bool, blink),
    arg(Type.Bool, p1)
  )
end

-- int END_TEXT_COMMAND_THEFEED_POST_TICKER_FORCED(BOOL blink, BOOL p1) // 0x44FA03975424A0EE
function HUD.END_TEXT_COMMAND_THEFEED_POST_TICKER_FORCED(blink, p1)
  return native.invoke(
    Type.Int, 1440, false,
    arg(Type.Bool, blink),
    arg(Type.Bool, p1)
  )
end

-- int END_TEXT_COMMAND_THEFEED_POST_TICKER_WITH_TOKENS(BOOL blink, BOOL p1) // 0x378E809BF61EC840
function HUD.END_TEXT_COMMAND_THEFEED_POST_TICKER_WITH_TOKENS(blink, p1)
  return native.invoke(
    Type.Int, 1441, false,
    arg(Type.Bool, blink),
    arg(Type.Bool, p1)
  )
end

-- int END_TEXT_COMMAND_THEFEED_POST_AWARD(const char* textureDict, const char* textureName, int rpBonus, int colorOverlay, const char* titleLabel) // 0xAA295B6F28BD587D
--[[
Shows an "award" notification above the minimap, example: https://i.imgur.com/e2DNaKX.png
Example:

HUD::BEGIN_TEXT_COMMAND_THEFEED_POST("HUNT");
HUD::END_TEXT_COMMAND_THEFEED_POST_AWARD("Hunting", "Hunting_Gold_128", 0, 109, "HUD_MED_UNLKED");
--]]
function HUD.END_TEXT_COMMAND_THEFEED_POST_AWARD(textureDict, textureName, rpBonus, colorOverlay, titleLabel)
  return native.invoke(
    Type.Int, 1442, false,
    arg(Type.String, textureDict),
    arg(Type.String, textureName),
    arg(Type.Int, rpBonus),
    arg(Type.Int, colorOverlay),
    arg(Type.String, titleLabel)
  )
end

-- int END_TEXT_COMMAND_THEFEED_POST_CREWTAG(BOOL p0, BOOL p1, int* p2, int p3, BOOL isLeader, BOOL unk0, int clanDesc, int R, int G, int B) // 0x97C9E4E7024A8F2C
function HUD.END_TEXT_COMMAND_THEFEED_POST_CREWTAG(p0, p1, p2, p3, isLeader, unk0, clanDesc, R, G, B)
  return native.invoke(
    Type.Int, 1443, false,
    arg(Type.Bool, p0),
    arg(Type.Bool, p1),
    arg(Type.Int, p2),
    arg(Type.Int, p3),
    arg(Type.Bool, isLeader),
    arg(Type.Bool, unk0),
    arg(Type.Int, clanDesc),
    arg(Type.Int, R),
    arg(Type.Int, G),
    arg(Type.Int, B)
  )
end

-- int END_TEXT_COMMAND_THEFEED_POST_CREWTAG_WITH_GAME_NAME(BOOL p0, BOOL p1, int* p2, int p3, BOOL isLeader, BOOL unk0, int clanDesc, const char* playerName, int R, int G, int B) // 0x137BC35589E34E1E
function HUD.END_TEXT_COMMAND_THEFEED_POST_CREWTAG_WITH_GAME_NAME(p0, p1, p2, p3, isLeader, unk0, clanDesc, playerName, R, G, B)
  return native.invoke(
    Type.Int, 1444, false,
    arg(Type.Bool, p0),
    arg(Type.Bool, p1),
    arg(Type.Int, p2),
    arg(Type.Int, p3),
    arg(Type.Bool, isLeader),
    arg(Type.Bool, unk0),
    arg(Type.Int, clanDesc),
    arg(Type.String, playerName),
    arg(Type.Int, R),
    arg(Type.Int, G),
    arg(Type.Int, B)
  )
end

-- int END_TEXT_COMMAND_THEFEED_POST_UNLOCK(const char* gxtLabel1, int p1, const char* gxtLabel2) // 0x33EE12743CCD6343
function HUD.END_TEXT_COMMAND_THEFEED_POST_UNLOCK(gxtLabel1, p1, gxtLabel2)
  return native.invoke(
    Type.Int, 1445, false,
    arg(Type.String, gxtLabel1),
    arg(Type.Int, p1),
    arg(Type.String, gxtLabel2)
  )
end

-- int END_TEXT_COMMAND_THEFEED_POST_UNLOCK_TU(const char* gxtLabel1, int p1, const char* gxtLabel2, int p3) // 0xC8F3AAF93D0600BF
function HUD.END_TEXT_COMMAND_THEFEED_POST_UNLOCK_TU(gxtLabel1, p1, gxtLabel2, p3)
  return native.invoke(
    Type.Int, 1446, false,
    arg(Type.String, gxtLabel1),
    arg(Type.Int, p1),
    arg(Type.String, gxtLabel2),
    arg(Type.Int, p3)
  )
end

-- int END_TEXT_COMMAND_THEFEED_POST_UNLOCK_TU_WITH_COLOR(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) // 0x7AE0589093A2E088
function HUD.END_TEXT_COMMAND_THEFEED_POST_UNLOCK_TU_WITH_COLOR(p0, p1, p2, p3, p4, p5)
  return native.invoke(
    Type.Int, 1447, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5)
  )
end

-- int END_TEXT_COMMAND_THEFEED_POST_MPTICKER(BOOL blink, BOOL p1) // 0xF020C96915705B3A
function HUD.END_TEXT_COMMAND_THEFEED_POST_MPTICKER(blink, p1)
  return native.invoke(
    Type.Int, 1448, false,
    arg(Type.Bool, blink),
    arg(Type.Bool, p1)
  )
end

-- int END_TEXT_COMMAND_THEFEED_POST_CREW_RANKUP_WITH_LITERAL_FLAG(const char* p0, const char* p1, const char* p2, BOOL p3, BOOL p4) // 0x8EFCCF6EC66D85E4
function HUD.END_TEXT_COMMAND_THEFEED_POST_CREW_RANKUP_WITH_LITERAL_FLAG(p0, p1, p2, p3, p4)
  return native.invoke(
    Type.Int, 1449, false,
    arg(Type.String, p0),
    arg(Type.String, p1),
    arg(Type.String, p2),
    arg(Type.Bool, p3),
    arg(Type.Bool, p4)
  )
end

-- int END_TEXT_COMMAND_THEFEED_POST_VERSUS_TU(const char* txdName1, const char* textureName1, int count1, const char* txdName2, const char* textureName2, int count2, int hudColor1, int hudColor2) // 0xB6871B0555B02996
--[[
This function can show pictures of every texture that can be requested by REQUEST_STREAMED_TEXTURE_DICT.

List of picNames: https://pastebin.com/XdpJVbHz
HUD colors and their values: https://pastebin.com/d9aHPbXN

Shows a deathmatch score above the minimap, example: https://i.imgur.com/YmoMklG.png
--]]
function HUD.END_TEXT_COMMAND_THEFEED_POST_VERSUS_TU(txdName1, textureName1, count1, txdName2, textureName2, count2, hudColor1, hudColor2)
  return native.invoke(
    Type.Int, 1450, false,
    arg(Type.String, txdName1),
    arg(Type.String, textureName1),
    arg(Type.Int, count1),
    arg(Type.String, txdName2),
    arg(Type.String, textureName2),
    arg(Type.Int, count2),
    arg(Type.Int, hudColor1),
    arg(Type.Int, hudColor2)
  )
end

-- int END_TEXT_COMMAND_THEFEED_POST_REPLAY(int type, int image, const char* text) // 0xD202B92CBF1D816F
--[[
returns a notification handle, prints out a notification like below:
type range: 0 - 2
if you set type to 1, image goes from 0 - 39 - Xbox you can add text to

example: 
HUD::END_TEXT_COMMAND_THEFEED_POST_REPLAY_INPUT(1, 20, "Who you trynna get crazy with, ese? Don't you know I'm LOCO?!");
- https://imgur.com/lGBPCz3
--]]
function HUD.END_TEXT_COMMAND_THEFEED_POST_REPLAY(type, image, text)
  return native.invoke(
    Type.Int, 1451, false,
    arg(Type.Int, type),
    arg(Type.Int, image),
    arg(Type.String, text)
  )
end

-- int END_TEXT_COMMAND_THEFEED_POST_REPLAY_INPUT(int type, const char* button, const char* text) // 0xDD6CB2CCE7C2735C
--[[
returns a notification handle, prints out a notification like below:
type range: 0 - 2
if you set type to 1, button accepts "~INPUT_SOMETHING~"

example:
HUD::END_TEXT_COMMAND_THEFEED_POST_REPLAY_INPUT(1, "~INPUT_TALK~", "Who you trynna get crazy with, ese? Don't you know I'm LOCO?!");
- https://imgur.com/UPy0Ial


Examples from the scripts:
l_D1[1/*1*/]=HUD::END_TEXT_COMMAND_THEFEED_POST_REPLAY_INPUT(1,"~INPUT_REPLAY_START_STOP_RECORDING~","");
l_D1[2/*1*/]=HUD::END_TEXT_COMMAND_THEFEED_POST_REPLAY_INPUT(1,"~INPUT_SAVE_REPLAY_CLIP~","");
l_D1[1/*1*/]=HUD::END_TEXT_COMMAND_THEFEED_POST_REPLAY_INPUT(1,"~INPUT_REPLAY_START_STOP_RECORDING~","");
l_D1[2/*1*/]=HUD::END_TEXT_COMMAND_THEFEED_POST_REPLAY_INPUT(1,"~INPUT_REPLAY_START_STOP_RECORDING_SECONDARY~","");

--]]
function HUD.END_TEXT_COMMAND_THEFEED_POST_REPLAY_INPUT(type, button, text)
  return native.invoke(
    Type.Int, 1452, false,
    arg(Type.Int, type),
    arg(Type.String, button),
    arg(Type.String, text)
  )
end

-- void BEGIN_TEXT_COMMAND_PRINT(const char* GxtEntry) // 0xB87A37EEB7FAA67D
--[[
void ShowSubtitle(const char *text)
{
  BEGIN_TEXT_COMMAND_PRINT("STRING");
 ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
   END_TEXT_COMMAND_PRINT(2000, true);
}
--]]
function HUD.BEGIN_TEXT_COMMAND_PRINT(GxtEntry)
  native.invoke(
    Type.Void, 1453, false,
    arg(Type.String, GxtEntry)
  )
end

-- void END_TEXT_COMMAND_PRINT(int duration, BOOL drawImmediately) // 0x9D77056A530643F6
--[[
Draws the subtitle at middle center of the screen.

int duration = time in milliseconds to show text on screen before disappearing

drawImmediately = If true, the text will be drawn immediately, if false, the text will be drawn after the previous subtitle has finished

Used to be known as _DRAW_SUBTITLE_TIMED
--]]
function HUD.END_TEXT_COMMAND_PRINT(duration, drawImmediately)
  native.invoke(
    Type.Void, 1454, false,
    arg(Type.Int, duration),
    arg(Type.Bool, drawImmediately)
  )
end

-- void BEGIN_TEXT_COMMAND_IS_MESSAGE_DISPLAYED(const char* text) // 0x853648FD1063A213
--[[
nothin doin. 

BOOL Message(const char* text)
   {
     BEGIN_TEXT_COMMAND_IS_MESSAGE_DISPLAYED("STRING");
      ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
       return END_TEXT_COMMAND_IS_MESSAGE_DISPLAYED();
   }
--]]
function HUD.BEGIN_TEXT_COMMAND_IS_MESSAGE_DISPLAYED(text)
  native.invoke(
    Type.Void, 1455, false,
    arg(Type.String, text)
  )
end

-- BOOL END_TEXT_COMMAND_IS_MESSAGE_DISPLAYED() // 0x8A9BA1AB3E237613
function HUD.END_TEXT_COMMAND_IS_MESSAGE_DISPLAYED()
  return native.invoke(
    Type.Bool, 1456, false
  )
end

-- void BEGIN_TEXT_COMMAND_DISPLAY_TEXT(const char* text) // 0x25FBB336DF1804CB
--[[
The following were found in the decompiled script files:
STRING, TWOSTRINGS, NUMBER, PERCENTAGE, FO_TWO_NUM, ESMINDOLLA, ESDOLLA, MTPHPER_XPNO, AHD_DIST, CMOD_STAT_0, CMOD_STAT_1, CMOD_STAT_2, CMOD_STAT_3, DFLT_MNU_OPT, F3A_TRAFDEST, ES_HELP_SOC3

ESDOLLA - cash
ESMINDOLLA - cash (negative)

Used to be known as _SET_TEXT_ENTRY
--]]
function HUD.BEGIN_TEXT_COMMAND_DISPLAY_TEXT(text)
  native.invoke(
    Type.Void, 1457, false,
    arg(Type.String, text)
  )
end

-- void END_TEXT_COMMAND_DISPLAY_TEXT(float x, float y, int p2) // 0xCD015E5BB0D96A57
--[[
After applying the properties to the text (See HUD::SET_TEXT_), this will draw the text in the applied position. Also 0.0f < x, y < 1.0f, percentage of the axis.

Used to be known as _DRAW_TEXT
--]]
function HUD.END_TEXT_COMMAND_DISPLAY_TEXT(x, y, p2)
  native.invoke(
    Type.Void, 1458, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Int, p2)
  )
end

-- void BEGIN_TEXT_COMMAND_GET_SCREEN_WIDTH_OF_DISPLAY_TEXT(const char* text) // 0x54CE8AC98E120CAB
function HUD.BEGIN_TEXT_COMMAND_GET_SCREEN_WIDTH_OF_DISPLAY_TEXT(text)
  native.invoke(
    Type.Void, 1459, false,
    arg(Type.String, text)
  )
end

-- float END_TEXT_COMMAND_GET_SCREEN_WIDTH_OF_DISPLAY_TEXT(BOOL p0) // 0x85F061DA64ED2F67
function HUD.END_TEXT_COMMAND_GET_SCREEN_WIDTH_OF_DISPLAY_TEXT(p0)
  return native.invoke(
    Type.Float, 1460, false,
    arg(Type.Bool, p0)
  )
end

-- void BEGIN_TEXT_COMMAND_GET_NUMBER_OF_LINES_FOR_STRING(const char* entry) // 0x521FB041D93DD0E4
--[[
int GetLineCount(char *text, float x, float y)
    {
     BEGIN_TEXT_COMMAND_GET_NUMBER_OF_LINES_FOR_STRING("STRING");
                ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
      return BEGIN_TEXT_COMMAND_GET_NUMBER_OF_LINES_FOR_STRING(x, y);
    }
--]]
function HUD.BEGIN_TEXT_COMMAND_GET_NUMBER_OF_LINES_FOR_STRING(entry)
  native.invoke(
    Type.Void, 1461, false,
    arg(Type.String, entry)
  )
end

-- int END_TEXT_COMMAND_GET_NUMBER_OF_LINES_FOR_STRING(float x, float y) // 0x9040DFB09BE75706
--[[
Determines how many lines the text string will use when drawn on screen. 
Must use 0x521FB041D93DD0E4 for setting up
--]]
function HUD.END_TEXT_COMMAND_GET_NUMBER_OF_LINES_FOR_STRING(x, y)
  return native.invoke(
    Type.Int, 1462, false,
    arg(Type.Float, x),
    arg(Type.Float, y)
  )
end

-- void BEGIN_TEXT_COMMAND_DISPLAY_HELP(const char* inputType) // 0x8509B634FBE7DA11
--[[
Used to be known as _SET_TEXT_COMPONENT_FORMAT
--]]
function HUD.BEGIN_TEXT_COMMAND_DISPLAY_HELP(inputType)
  native.invoke(
    Type.Void, 1463, false,
    arg(Type.String, inputType)
  )
end

-- void END_TEXT_COMMAND_DISPLAY_HELP(int p0, BOOL loop, BOOL beep, int shape) // 0x238FFE5C7B0498A6
--[[
shape goes from -1 to 50 (may be more).
p0 is always 0.

Example:
void FloatingHelpText(const char* text)
{
    BEGIN_TEXT_COMMAND_DISPLAY_HELP("STRING");
  ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
   END_TEXT_COMMAND_DISPLAY_HELP (0, 0, 1, -1);
}

Image:
- imgbin.org/images/26209.jpg

more inputs/icons:
- https://pastebin.com/nqNYWMSB

Used to be known as _DISPLAY_HELP_TEXT_FROM_STRING_LABEL
--]]
function HUD.END_TEXT_COMMAND_DISPLAY_HELP(p0, loop, beep, shape)
  native.invoke(
    Type.Void, 1464, false,
    arg(Type.Int, p0),
    arg(Type.Bool, loop),
    arg(Type.Bool, beep),
    arg(Type.Int, shape)
  )
end

-- void BEGIN_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(const char* labelName) // 0x0A24DA3A41B718F5
--[[
BOOL IsContextActive(char *ctx)
    {
     BEGIN_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(ctx);
     return END_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(0);
  }
--]]
function HUD.BEGIN_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(labelName)
  native.invoke(
    Type.Void, 1465, false,
    arg(Type.String, labelName)
  )
end

-- BOOL END_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(int p0) // 0x10BDDBFC529428DD
function HUD.END_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(p0)
  return native.invoke(
    Type.Bool, 1466, false,
    arg(Type.Int, p0)
  )
end

-- void BEGIN_TEXT_COMMAND_SET_BLIP_NAME(const char* textLabel) // 0xF9113A30DE5C6670
--[[
Starts a text command to change the name of a blip displayed in the pause menu.
This should be paired with `END_TEXT_COMMAND_SET_BLIP_NAME`, once adding all required text components.
Example:

HUD::BEGIN_TEXT_COMMAND_SET_BLIP_NAME("STRING");
HUD::ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME("Name");
HUD::END_TEXT_COMMAND_SET_BLIP_NAME(blip);
--]]
function HUD.BEGIN_TEXT_COMMAND_SET_BLIP_NAME(textLabel)
  native.invoke(
    Type.Void, 1467, false,
    arg(Type.String, textLabel)
  )
end

-- void END_TEXT_COMMAND_SET_BLIP_NAME(Blip blip) // 0xBC38B49BCB83BC9B
--[[
Finalizes a text command started with BEGIN_TEXT_COMMAND_SET_BLIP_NAME, setting the name of the specified blip.
--]]
function HUD.END_TEXT_COMMAND_SET_BLIP_NAME(blip)
  native.invoke(
    Type.Void, 1468, false,
    arg(Type.Blip, blip)
  )
end

-- void BEGIN_TEXT_COMMAND_ADD_DIRECTLY_TO_PREVIOUS_BRIEFS(const char* p0) // 0x23D69E0465570028
function HUD.BEGIN_TEXT_COMMAND_ADD_DIRECTLY_TO_PREVIOUS_BRIEFS(p0)
  native.invoke(
    Type.Void, 1469, false,
    arg(Type.String, p0)
  )
end

-- void END_TEXT_COMMAND_ADD_DIRECTLY_TO_PREVIOUS_BRIEFS(BOOL p0) // 0xCFDBDF5AE59BA0F4
function HUD.END_TEXT_COMMAND_ADD_DIRECTLY_TO_PREVIOUS_BRIEFS(p0)
  native.invoke(
    Type.Void, 1470, false,
    arg(Type.Bool, p0)
  )
end

-- void BEGIN_TEXT_COMMAND_CLEAR_PRINT(const char* text) // 0xE124FA80A759019C
--[[
clears a print text command with this text
--]]
function HUD.BEGIN_TEXT_COMMAND_CLEAR_PRINT(text)
  native.invoke(
    Type.Void, 1471, false,
    arg(Type.String, text)
  )
end

-- void END_TEXT_COMMAND_CLEAR_PRINT() // 0xFCC75460ABA29378
function HUD.END_TEXT_COMMAND_CLEAR_PRINT()
  native.invoke(
    Type.Void, 1472, false
  )
end

-- void BEGIN_TEXT_COMMAND_OVERRIDE_BUTTON_TEXT(const char* gxtEntry) // 0x8F9EE5687F8EECCD
function HUD.BEGIN_TEXT_COMMAND_OVERRIDE_BUTTON_TEXT(gxtEntry)
  native.invoke(
    Type.Void, 1473, false,
    arg(Type.String, gxtEntry)
  )
end

-- void END_TEXT_COMMAND_OVERRIDE_BUTTON_TEXT(int p0) // 0xA86911979638106F
function HUD.END_TEXT_COMMAND_OVERRIDE_BUTTON_TEXT(p0)
  native.invoke(
    Type.Void, 1474, false,
    arg(Type.Int, p0)
  )
end

-- void ADD_TEXT_COMPONENT_INTEGER(int value) // 0x03B504CF259931BC
function HUD.ADD_TEXT_COMPONENT_INTEGER(value)
  native.invoke(
    Type.Void, 1475, false,
    arg(Type.Int, value)
  )
end

-- void ADD_TEXT_COMPONENT_FLOAT(float value, int decimalPlaces) // 0xE7DCB5B874BCD96E
function HUD.ADD_TEXT_COMPONENT_FLOAT(value, decimalPlaces)
  native.invoke(
    Type.Void, 1476, false,
    arg(Type.Float, value),
    arg(Type.Int, decimalPlaces)
  )
end

-- void ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(const char* labelName) // 0xC63CD5D2920ACBE7
function HUD.ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(labelName)
  native.invoke(
    Type.Void, 1477, false,
    arg(Type.String, labelName)
  )
end

-- void ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL_HASH_KEY(Hash gxtEntryHash) // 0x17299B63C7683A2B
--[[
It adds the localized text of the specified GXT entry name. Eg. if the argument is GET_HASH_KEY("ES_HELP"), adds "Continue". Just uses a text labels hash key
--]]
function HUD.ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL_HASH_KEY(gxtEntryHash)
  native.invoke(
    Type.Void, 1478, false,
    arg(Type.Hash, gxtEntryHash)
  )
end

-- void ADD_TEXT_COMPONENT_SUBSTRING_BLIP_NAME(Blip blip) // 0x80EAD8E2E1D5D52E
function HUD.ADD_TEXT_COMPONENT_SUBSTRING_BLIP_NAME(blip)
  native.invoke(
    Type.Void, 1479, false,
    arg(Type.Blip, blip)
  )
end

-- void ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(const char* text) // 0x6C188BE134E074AA
function HUD.ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text)
  native.invoke(
    Type.Void, 1480, false,
    arg(Type.String, text)
  )
end

-- void ADD_TEXT_COMPONENT_SUBSTRING_TIME(int timestamp, int flags) // 0x1115F16B8AB9E8BF
--[[
Adds a timer (e.g. "00:00:00:000"). The appearance of the timer depends on the flags, which needs more research.
--]]
function HUD.ADD_TEXT_COMPONENT_SUBSTRING_TIME(timestamp, flags)
  native.invoke(
    Type.Void, 1481, false,
    arg(Type.Int, timestamp),
    arg(Type.Int, flags)
  )
end

-- void ADD_TEXT_COMPONENT_FORMATTED_INTEGER(int value, BOOL commaSeparated) // 0x0E4C749FF9DE9CC4
function HUD.ADD_TEXT_COMPONENT_FORMATTED_INTEGER(value, commaSeparated)
  native.invoke(
    Type.Void, 1482, false,
    arg(Type.Int, value),
    arg(Type.Bool, commaSeparated)
  )
end

-- void ADD_TEXT_COMPONENT_SUBSTRING_PHONE_NUMBER(const char* p0, int p1) // 0x761B77454205A61D
--[[
p1 was always -1
--]]
function HUD.ADD_TEXT_COMPONENT_SUBSTRING_PHONE_NUMBER(p0, p1)
  native.invoke(
    Type.Void, 1483, false,
    arg(Type.String, p0),
    arg(Type.Int, p1)
  )
end

-- void ADD_TEXT_COMPONENT_SUBSTRING_WEBSITE(const char* website) // 0x94CF4AC034C9C986
--[[
This native (along with ADD_TEXT_COMPONENT_SUBSTRING_KEYBOARD_DISPLAY and ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME) do not actually filter anything. They simply add the provided text (as of 944)
--]]
function HUD.ADD_TEXT_COMPONENT_SUBSTRING_WEBSITE(website)
  native.invoke(
    Type.Void, 1484, false,
    arg(Type.String, website)
  )
end

-- void ADD_TEXT_COMPONENT_SUBSTRING_KEYBOARD_DISPLAY(const char* string) // 0x5F68520888E69014
function HUD.ADD_TEXT_COMPONENT_SUBSTRING_KEYBOARD_DISPLAY(string)
  native.invoke(
    Type.Void, 1485, false,
    arg(Type.String, string)
  )
end

-- void SET_COLOUR_OF_NEXT_TEXT_COMPONENT(int hudColor) // 0x39BBF623FC803EAC
function HUD.SET_COLOUR_OF_NEXT_TEXT_COMPONENT(hudColor)
  native.invoke(
    Type.Void, 1486, false,
    arg(Type.Int, hudColor)
  )
end

-- const char* GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(const char* text, int position, int length) // 0x169BD9382084C8C0
--[[
Returns a substring of a specified length starting at a specified position.

Example:
// Get "STRING" text from "MY_STRING"
subStr = HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME("MY_STRING", 3, 6);
--]]
function HUD.GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(text, position, length)
  return native.invoke(
    Type.Const char, 1487, false,
    arg(Type.String, text),
    arg(Type.Int, position),
    arg(Type.Int, length)
  )
end

-- const char* GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME_WITH_BYTE_LIMIT(const char* text, int position, int length, int maxLength) // 0xB2798643312205C5
--[[
Returns a substring of a specified length starting at a specified position. The result is guaranteed not to exceed the specified max length.

NOTE: The 'maxLength' parameter might actually be the size of the buffer that is returned. More research is needed. -CL69

Example:
// Condensed example of how Rockstar uses this function
strLen = HUD::GET_LENGTH_OF_LITERAL_STRING(MISC::GET_ONSCREEN_KEYBOARD_RESULT());
subStr = HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME_WITH_BYTE_LIMIT(MISC::GET_ONSCREEN_KEYBOARD_RESULT(), 0, strLen, 63);

--

"fm_race_creator.ysc", line 85115:
// parameters modified for clarity
BOOL sub_8e5aa(char *text, int length) {
    for (i = 0; i <= (length - 2); i += 1) {
        if (!MISC::ARE_STRINGS_EQUAL(HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME_WITH_BYTE_LIMIT(text, i, i + 1, 1), " ")) {
            return FALSE;
        }
    }
    return TRUE;
}
--]]
function HUD.GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME_WITH_BYTE_LIMIT(text, position, length, maxLength)
  return native.invoke(
    Type.Const char, 1488, false,
    arg(Type.String, text),
    arg(Type.Int, position),
    arg(Type.Int, length),
    arg(Type.Int, maxLength)
  )
end

-- const char* GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME_BYTES(const char* text, int startPosition, int endPosition) // 0xCE94AEBA5D82908A
--[[
Returns a substring that is between two specified positions. The length of the string will be calculated using (endPosition - startPosition).

Example:
// Get "STRING" text from "MY_STRING"
subStr = HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME_BYTES("MY_STRING", 3, 9);
// Overflows are possibly replaced with underscores (needs verification)
subStr = HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME_BYTES("MY_STRING", 3, 10); // "STRING_"?
--]]
function HUD.GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME_BYTES(text, startPosition, endPosition)
  return native.invoke(
    Type.Const char, 1489, false,
    arg(Type.String, text),
    arg(Type.Int, startPosition),
    arg(Type.Int, endPosition)
  )
end

-- const char* GET_FILENAME_FOR_AUDIO_CONVERSATION(const char* labelName) // 0x7B5280EBA9840C72
--[[
Gets a localized string literal from a label name. Can be used for output of e.g. VEHICLE::GET_LIVERY_NAME. To check if a GXT label can be localized with this, HUD::DOES_TEXT_LABEL_EXIST can be used.
--]]
function HUD.GET_FILENAME_FOR_AUDIO_CONVERSATION(labelName)
  return native.invoke(
    Type.Const char, 1490, false,
    arg(Type.String, labelName)
  )
end

-- void CLEAR_PRINTS() // 0xCC33FA791322B9D9
function HUD.CLEAR_PRINTS()
  native.invoke(
    Type.Void, 1491, false
  )
end

-- void CLEAR_BRIEF() // 0x9D292F73ADBD9313
function HUD.CLEAR_BRIEF()
  native.invoke(
    Type.Void, 1492, false
  )
end

-- void CLEAR_ALL_HELP_MESSAGES() // 0x6178F68A87A4D3A0
function HUD.CLEAR_ALL_HELP_MESSAGES()
  native.invoke(
    Type.Void, 1493, false
  )
end

-- void CLEAR_THIS_PRINT(const char* p0) // 0xCF708001E1E536DD
--[[
p0: found arguments in the b617d scripts: https://pastebin.com/X5akCN7z
--]]
function HUD.CLEAR_THIS_PRINT(p0)
  native.invoke(
    Type.Void, 1494, false,
    arg(Type.String, p0)
  )
end

-- void CLEAR_SMALL_PRINTS() // 0x2CEA2839313C09AC
function HUD.CLEAR_SMALL_PRINTS()
  native.invoke(
    Type.Void, 1495, false
  )
end

-- BOOL DOES_TEXT_BLOCK_EXIST(const char* gxt) // 0x1C7302E725259789
function HUD.DOES_TEXT_BLOCK_EXIST(gxt)
  return native.invoke(
    Type.Bool, 1496, false,
    arg(Type.String, gxt)
  )
end

-- void REQUEST_ADDITIONAL_TEXT(const char* gxt, int slot) // 0x71A78003C8E71424
--[[
Request a gxt into the passed slot.
--]]
function HUD.REQUEST_ADDITIONAL_TEXT(gxt, slot)
  native.invoke(
    Type.Void, 1497, false,
    arg(Type.String, gxt),
    arg(Type.Int, slot)
  )
end

-- void REQUEST_ADDITIONAL_TEXT_FOR_DLC(const char* gxt, int slot) // 0x6009F9F1AE90D8A6
function HUD.REQUEST_ADDITIONAL_TEXT_FOR_DLC(gxt, slot)
  native.invoke(
    Type.Void, 1498, false,
    arg(Type.String, gxt),
    arg(Type.Int, slot)
  )
end

-- BOOL HAS_ADDITIONAL_TEXT_LOADED(int slot) // 0x02245FE4BED318B8
function HUD.HAS_ADDITIONAL_TEXT_LOADED(slot)
  return native.invoke(
    Type.Bool, 1499, false,
    arg(Type.Int, slot)
  )
end

-- void CLEAR_ADDITIONAL_TEXT(int p0, BOOL p1) // 0x2A179DF17CCF04CD
function HUD.CLEAR_ADDITIONAL_TEXT(p0, p1)
  native.invoke(
    Type.Void, 1500, false,
    arg(Type.Int, p0),
    arg(Type.Bool, p1)
  )
end

-- BOOL IS_STREAMING_ADDITIONAL_TEXT(int p0) // 0x8B6817B71B85EBF0
function HUD.IS_STREAMING_ADDITIONAL_TEXT(p0)
  return native.invoke(
    Type.Bool, 1501, false,
    arg(Type.Int, p0)
  )
end

-- BOOL HAS_THIS_ADDITIONAL_TEXT_LOADED(const char* gxt, int slot) // 0xADBF060E2B30C5BC
--[[
Checks if the specified gxt has loaded into the passed slot.
--]]
function HUD.HAS_THIS_ADDITIONAL_TEXT_LOADED(gxt, slot)
  return native.invoke(
    Type.Bool, 1502, false,
    arg(Type.String, gxt),
    arg(Type.Int, slot)
  )
end

-- BOOL IS_MESSAGE_BEING_DISPLAYED() // 0x7984C03AA5CC2F41
function HUD.IS_MESSAGE_BEING_DISPLAYED()
  return native.invoke(
    Type.Bool, 1503, false
  )
end

-- BOOL DOES_TEXT_LABEL_EXIST(const char* gxt) // 0xAC09CA973C564252
--[[
Checks if the passed gxt name exists in the game files.
--]]
function HUD.DOES_TEXT_LABEL_EXIST(gxt)
  return native.invoke(
    Type.Bool, 1504, false,
    arg(Type.String, gxt)
  )
end

-- const char* GET_FIRST_N_CHARACTERS_OF_LITERAL_STRING(const char* string, int length) // 0x98C3CF913D895111
function HUD.GET_FIRST_N_CHARACTERS_OF_LITERAL_STRING(string, length)
  return native.invoke(
    Type.Const char, 1505, false,
    arg(Type.String, string),
    arg(Type.Int, length)
  )
end

-- int GET_LENGTH_OF_STRING_WITH_THIS_TEXT_LABEL(const char* gxt) // 0x801BD273D3A23F74
--[[
Returns the string length of the string from the gxt string .
--]]
function HUD.GET_LENGTH_OF_STRING_WITH_THIS_TEXT_LABEL(gxt)
  return native.invoke(
    Type.Int, 1506, false,
    arg(Type.String, gxt)
  )
end

-- int GET_LENGTH_OF_LITERAL_STRING(const char* string) // 0xF030907CCBB8A9FD
--[[
Returns the length of the string passed (much like strlen).
--]]
function HUD.GET_LENGTH_OF_LITERAL_STRING(string)
  return native.invoke(
    Type.Int, 1507, false,
    arg(Type.String, string)
  )
end

-- int GET_LENGTH_OF_LITERAL_STRING_IN_BYTES(const char* string) // 0x43E4111189E54F0E
function HUD.GET_LENGTH_OF_LITERAL_STRING_IN_BYTES(string)
  return native.invoke(
    Type.Int, 1508, false,
    arg(Type.String, string)
  )
end

-- const char* GET_STREET_NAME_FROM_HASH_KEY(Hash hash) // 0xD0EF8A959B8A4CB9
--[[
This functions converts the hash of a street name into a readable string.

For how to get the hashes, see PATHFIND::GET_STREET_NAME_AT_COORD.
--]]
function HUD.GET_STREET_NAME_FROM_HASH_KEY(hash)
  return native.invoke(
    Type.Const char, 1509, false,
    arg(Type.Hash, hash)
  )
end

-- BOOL IS_HUD_PREFERENCE_SWITCHED_ON() // 0x1930DFA731813EC4
function HUD.IS_HUD_PREFERENCE_SWITCHED_ON()
  return native.invoke(
    Type.Bool, 1510, false
  )
end

-- BOOL IS_RADAR_PREFERENCE_SWITCHED_ON() // 0x9EB6522EA68F22FE
function HUD.IS_RADAR_PREFERENCE_SWITCHED_ON()
  return native.invoke(
    Type.Bool, 1511, false
  )
end

-- BOOL IS_SUBTITLE_PREFERENCE_SWITCHED_ON() // 0xAD6DACA4BA53E0A4
function HUD.IS_SUBTITLE_PREFERENCE_SWITCHED_ON()
  return native.invoke(
    Type.Bool, 1512, false
  )
end

-- void DISPLAY_HUD(BOOL toggle) // 0xA6294919E56FF02A
--[[
If Hud should be displayed
--]]
function HUD.DISPLAY_HUD(toggle)
  native.invoke(
    Type.Void, 1513, false,
    arg(Type.Bool, toggle)
  )
end

-- void DISPLAY_HUD_WHEN_NOT_IN_STATE_OF_PLAY_THIS_FRAME() // 0x7669F9E39DC17063
--[[
Enables drawing some hud components, such as help labels, this frame, when the player is dead.
--]]
function HUD.DISPLAY_HUD_WHEN_NOT_IN_STATE_OF_PLAY_THIS_FRAME()
  native.invoke(
    Type.Void, 1514, false
  )
end

-- void DISPLAY_HUD_WHEN_PAUSED_THIS_FRAME() // 0x402F9ED62087E898
function HUD.DISPLAY_HUD_WHEN_PAUSED_THIS_FRAME()
  native.invoke(
    Type.Void, 1515, false
  )
end

-- void DISPLAY_RADAR(BOOL toggle) // 0xA0EBB943C300E693
--[[
If Minimap / Radar should be displayed.
--]]
function HUD.DISPLAY_RADAR(toggle)
  native.invoke(
    Type.Void, 1516, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_FAKE_SPECTATOR_MODE(BOOL toggle) // 0xCD74233600C4EA6B
--[[
Setter for GET_FAKE_SPECTATOR_MODE
--]]
function HUD.SET_FAKE_SPECTATOR_MODE(toggle)
  native.invoke(
    Type.Void, 1517, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL GET_FAKE_SPECTATOR_MODE() // 0xC2D2AD9EAAE265B8
--[[
Getter for SET_FAKE_SPECTATOR_MODE
--]]
function HUD.GET_FAKE_SPECTATOR_MODE()
  return native.invoke(
    Type.Bool, 1518, false
  )
end

-- BOOL IS_HUD_HIDDEN() // 0xA86478C6958735C5
function HUD.IS_HUD_HIDDEN()
  return native.invoke(
    Type.Bool, 1519, false
  )
end

-- BOOL IS_RADAR_HIDDEN() // 0x157F93B036700462
function HUD.IS_RADAR_HIDDEN()
  return native.invoke(
    Type.Bool, 1520, false
  )
end

-- BOOL IS_MINIMAP_RENDERING() // 0xAF754F20EB5CD51A
function HUD.IS_MINIMAP_RENDERING()
  return native.invoke(
    Type.Bool, 1521, false
  )
end

-- void USE_VEHICLE_TARGETING_RETICULE(Any p0) // 0x0C698D8F099174C7
function HUD.USE_VEHICLE_TARGETING_RETICULE(p0)
  native.invoke(
    Type.Void, 1522, false,
    arg(Type.Any, p0)
  )
end

-- void _USE_VEHICLE_TARGETING_RETICULE_ON_VEHICLES(BOOL enable) // 0x1BC0EA2912708625
function HUD._USE_VEHICLE_TARGETING_RETICULE_ON_VEHICLES(enable)
  native.invoke(
    Type.Void, 1523, false,
    arg(Type.Bool, enable)
  )
end

-- void ADD_VALID_VEHICLE_HIT_HASH(Any p0) // 0xE4C3B169876D33D7
function HUD.ADD_VALID_VEHICLE_HIT_HASH(p0)
  native.invoke(
    Type.Void, 1524, false,
    arg(Type.Any, p0)
  )
end

-- void CLEAR_VALID_VEHICLE_HIT_HASHES() // 0xEB81A3DADD503187
function HUD.CLEAR_VALID_VEHICLE_HIT_HASHES()
  native.invoke(
    Type.Void, 1525, false
  )
end

-- void SET_BLIP_ROUTE(Blip blip, BOOL enabled) // 0x4F7D8A9BFB0B43E9
--[[
Enable / disable showing route for the Blip-object.
--]]
function HUD.SET_BLIP_ROUTE(blip, enabled)
  native.invoke(
    Type.Void, 1526, false,
    arg(Type.Blip, blip),
    arg(Type.Bool, enabled)
  )
end

-- void CLEAR_ALL_BLIP_ROUTES() // 0xD12882D3FF82BF11
function HUD.CLEAR_ALL_BLIP_ROUTES()
  native.invoke(
    Type.Void, 1527, false
  )
end

-- void SET_BLIP_ROUTE_COLOUR(Blip blip, int colour) // 0x837155CD2F63DA09
function HUD.SET_BLIP_ROUTE_COLOUR(blip, colour)
  native.invoke(
    Type.Void, 1528, false,
    arg(Type.Blip, blip),
    arg(Type.Int, colour)
  )
end

-- void SET_FORCE_SHOW_GPS(BOOL toggle) // 0x2790F4B17D098E26
function HUD.SET_FORCE_SHOW_GPS(toggle)
  native.invoke(
    Type.Void, 1529, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_USE_SET_DESTINATION_IN_PAUSE_MAP(BOOL toggle) // 0x6CDD58146A436083
function HUD.SET_USE_SET_DESTINATION_IN_PAUSE_MAP(toggle)
  native.invoke(
    Type.Void, 1530, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_BLOCK_WANTED_FLASH(BOOL disabled) // 0xD1942374085C8469
function HUD.SET_BLOCK_WANTED_FLASH(disabled)
  native.invoke(
    Type.Void, 1531, false,
    arg(Type.Bool, disabled)
  )
end

-- void ADD_NEXT_MESSAGE_TO_PREVIOUS_BRIEFS(BOOL p0) // 0x60296AF4BA14ABC5
function HUD.ADD_NEXT_MESSAGE_TO_PREVIOUS_BRIEFS(p0)
  native.invoke(
    Type.Void, 1532, false,
    arg(Type.Bool, p0)
  )
end

-- void FORCE_NEXT_MESSAGE_TO_PREVIOUS_BRIEFS_LIST(int p0) // 0x57D760D55F54E071
function HUD.FORCE_NEXT_MESSAGE_TO_PREVIOUS_BRIEFS_LIST(p0)
  native.invoke(
    Type.Void, 1533, false,
    arg(Type.Int, p0)
  )
end

-- void SET_RADAR_ZOOM_PRECISE(float zoom) // 0xBD12C5EEE184C337
--[[
zoom ranges from 0 to 90f in R* Scripts
--]]
function HUD.SET_RADAR_ZOOM_PRECISE(zoom)
  native.invoke(
    Type.Void, 1534, false,
    arg(Type.Float, zoom)
  )
end

-- void SET_RADAR_ZOOM(int zoomLevel) // 0x096EF57A0C999BBA
--[[
zoomLevel ranges from 0 to 1400 in R* Scripts
--]]
function HUD.SET_RADAR_ZOOM(zoomLevel)
  native.invoke(
    Type.Void, 1535, false,
    arg(Type.Int, zoomLevel)
  )
end

-- void SET_RADAR_ZOOM_TO_BLIP(Blip blip, float zoom) // 0xF98E4B3E56AFC7B1
function HUD.SET_RADAR_ZOOM_TO_BLIP(blip, zoom)
  native.invoke(
    Type.Void, 1536, false,
    arg(Type.Blip, blip),
    arg(Type.Float, zoom)
  )
end

-- void SET_RADAR_ZOOM_TO_DISTANCE(float zoom) // 0xCB7CC0D58405AD41
function HUD.SET_RADAR_ZOOM_TO_DISTANCE(zoom)
  native.invoke(
    Type.Void, 1537, false,
    arg(Type.Float, zoom)
  )
end

-- void UPDATE_RADAR_ZOOM_TO_BLIP() // 0xD2049635DEB9C375
--[[
Does nothing (it's a nullsub).
--]]
function HUD.UPDATE_RADAR_ZOOM_TO_BLIP()
  native.invoke(
    Type.Void, 1538, false
  )
end

-- void GET_HUD_COLOUR(int hudColorIndex, int* r, int* g, int* b, int* a) // 0x7C9C91AB74A0360F
function HUD.GET_HUD_COLOUR(hudColorIndex, r, g, b, a)
  native.invoke(
    Type.Void, 1539, false,
    arg(Type.Int, hudColorIndex),
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b),
    arg(Type.Int, a)
  )
end

-- void SET_SCRIPT_VARIABLE_HUD_COLOUR(int r, int g, int b, int a) // 0xD68A5FF8A3A89874
--[[
Sets the color of HUD_COLOUR_SCRIPT_VARIABLE
--]]
function HUD.SET_SCRIPT_VARIABLE_HUD_COLOUR(r, g, b, a)
  native.invoke(
    Type.Void, 1540, false,
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b),
    arg(Type.Int, a)
  )
end

-- void SET_SECOND_SCRIPT_VARIABLE_HUD_COLOUR(int r, int g, int b, int a) // 0x16A304E6CB2BFAB9
--[[
Sets the color of HUD_COLOUR_SCRIPT_VARIABLE_2
--]]
function HUD.SET_SECOND_SCRIPT_VARIABLE_HUD_COLOUR(r, g, b, a)
  native.invoke(
    Type.Void, 1541, false,
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b),
    arg(Type.Int, a)
  )
end

-- void REPLACE_HUD_COLOUR(int hudColorIndex, int hudColorIndex2) // 0x1CCC708F0F850613
--[[
makes hudColorIndex2 color into hudColorIndex color
--]]
function HUD.REPLACE_HUD_COLOUR(hudColorIndex, hudColorIndex2)
  native.invoke(
    Type.Void, 1542, false,
    arg(Type.Int, hudColorIndex),
    arg(Type.Int, hudColorIndex2)
  )
end

-- void REPLACE_HUD_COLOUR_WITH_RGBA(int hudColorIndex, int r, int g, int b, int a) // 0xF314CF4F0211894E
function HUD.REPLACE_HUD_COLOUR_WITH_RGBA(hudColorIndex, r, g, b, a)
  native.invoke(
    Type.Void, 1543, false,
    arg(Type.Int, hudColorIndex),
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b),
    arg(Type.Int, a)
  )
end

-- void SET_ABILITY_BAR_VISIBILITY(BOOL visible) // 0x1DFEDD15019315A9
function HUD.SET_ABILITY_BAR_VISIBILITY(visible)
  native.invoke(
    Type.Void, 1544, false,
    arg(Type.Bool, visible)
  )
end

-- void SET_ALLOW_ABILITY_BAR(BOOL toggle) // 0x889329C80FE5963C
function HUD.SET_ALLOW_ABILITY_BAR(toggle)
  native.invoke(
    Type.Void, 1545, false,
    arg(Type.Bool, toggle)
  )
end

-- void FLASH_ABILITY_BAR(int millisecondsToFlash) // 0x02CFBA0C9E9275CE
function HUD.FLASH_ABILITY_BAR(millisecondsToFlash)
  native.invoke(
    Type.Void, 1546, false,
    arg(Type.Int, millisecondsToFlash)
  )
end

-- void SET_ABILITY_BAR_VALUE(float p0, float p1) // 0x9969599CCFF5D85E
function HUD.SET_ABILITY_BAR_VALUE(p0, p1)
  native.invoke(
    Type.Void, 1547, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1)
  )
end

-- void FLASH_WANTED_DISPLAY(BOOL p0) // 0xA18AFB39081B6A1F
function HUD.FLASH_WANTED_DISPLAY(p0)
  native.invoke(
    Type.Void, 1548, false,
    arg(Type.Bool, p0)
  )
end

-- void FORCE_OFF_WANTED_STAR_FLASH(BOOL toggle) // 0xBA8D65C1C65702E5
function HUD.FORCE_OFF_WANTED_STAR_FLASH(toggle)
  native.invoke(
    Type.Void, 1549, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_CUSTOM_MP_HUD_COLOR(int hudColorId) // 0x2ACCB195F3CCD9DE
function HUD.SET_CUSTOM_MP_HUD_COLOR(hudColorId)
  native.invoke(
    Type.Void, 1550, false,
    arg(Type.Int, hudColorId)
  )
end

-- float GET_RENDERED_CHARACTER_HEIGHT(float size, int font) // 0xDB88A37483346780
--[[
This gets the height of the FONT and not the total text. You need to get the number of lines your text uses, and get the height of a newline (I'm using a smaller value) to get the total text height.
--]]
function HUD.GET_RENDERED_CHARACTER_HEIGHT(size, font)
  return native.invoke(
    Type.Float, 1551, false,
    arg(Type.Float, size),
    arg(Type.Int, font)
  )
end

-- void SET_TEXT_SCALE(float scale, float size) // 0x07C837F9A01C34C9
--[[
Size range : 0F to 1.0F
p0 is unknown and doesn't seem to have an effect, yet in the game scripts it changes to 1.0F sometimes.
--]]
function HUD.SET_TEXT_SCALE(scale, size)
  native.invoke(
    Type.Void, 1552, false,
    arg(Type.Float, scale),
    arg(Type.Float, size)
  )
end

-- void SET_TEXT_COLOUR(int red, int green, int blue, int alpha) // 0xBE6B23FFA53FB442
--[[
colors you input not same as you think?
A: for some reason its R B G A
--]]
function HUD.SET_TEXT_COLOUR(red, green, blue, alpha)
  native.invoke(
    Type.Void, 1553, false,
    arg(Type.Int, red),
    arg(Type.Int, green),
    arg(Type.Int, blue),
    arg(Type.Int, alpha)
  )
end

-- void SET_TEXT_CENTRE(BOOL align) // 0xC02F4DBFB51D988B
function HUD.SET_TEXT_CENTRE(align)
  native.invoke(
    Type.Void, 1554, false,
    arg(Type.Bool, align)
  )
end

-- void SET_TEXT_RIGHT_JUSTIFY(BOOL toggle) // 0x6B3C4650BC8BEE47
function HUD.SET_TEXT_RIGHT_JUSTIFY(toggle)
  native.invoke(
    Type.Void, 1555, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_TEXT_JUSTIFICATION(int justifyType) // 0x4E096588B13FFECA
--[[
Types -
0: Center-Justify
1: Left-Justify
2: Right-Justify

Right-Justify requires SET_TEXT_WRAP, otherwise it will draw to the far right of the screen
--]]
function HUD.SET_TEXT_JUSTIFICATION(justifyType)
  native.invoke(
    Type.Void, 1556, false,
    arg(Type.Int, justifyType)
  )
end

-- void SET_TEXT_LINE_HEIGHT_MULT(float lineHeightMult) // 0x9F4624F76E6953D1
function HUD.SET_TEXT_LINE_HEIGHT_MULT(lineHeightMult)
  native.invoke(
    Type.Void, 1557, false,
    arg(Type.Float, lineHeightMult)
  )
end

-- void SET_TEXT_WRAP(float start, float end) // 0x63145D9C883A1A70
--[[
It sets the text in a specified box and wraps the text if it exceeds the boundries. Both values are for X axis. Useful when positioning text set to center or aligned to the right.

start - left boundry on screen position (0.0 - 1.0)
end - right boundry on screen position (0.0 - 1.0)
--]]
function HUD.SET_TEXT_WRAP(start, end_)
  native.invoke(
    Type.Void, 1558, false,
    arg(Type.Float, start),
    arg(Type.Float, end_)
  )
end

-- void SET_TEXT_LEADING(int p0) // 0xA50ABC31E3CDFAFF
function HUD.SET_TEXT_LEADING(p0)
  native.invoke(
    Type.Void, 1559, false,
    arg(Type.Int, p0)
  )
end

-- void SET_TEXT_PROPORTIONAL(BOOL p0) // 0x038C1F517D7FDCF8
--[[
This native does absolutely nothing, just a nullsub
--]]
function HUD.SET_TEXT_PROPORTIONAL(p0)
  native.invoke(
    Type.Void, 1560, false,
    arg(Type.Bool, p0)
  )
end

-- void SET_TEXT_FONT(int fontType) // 0x66E0276CC5F6B9DA
--[[
fonts that mess up your text where made for number values/misc stuff
--]]
function HUD.SET_TEXT_FONT(fontType)
  native.invoke(
    Type.Void, 1561, false,
    arg(Type.Int, fontType)
  )
end

-- void SET_TEXT_DROP_SHADOW() // 0x1CA3E9EAC9D93E5E
function HUD.SET_TEXT_DROP_SHADOW()
  native.invoke(
    Type.Void, 1562, false
  )
end

-- void SET_TEXT_DROPSHADOW(int distance, int r, int g, int b, int a) // 0x465C84BC39F1C351
--[[
distance - shadow distance in pixels, both horizontal and vertical
r, g, b, a - color
--]]
function HUD.SET_TEXT_DROPSHADOW(distance, r, g, b, a)
  native.invoke(
    Type.Void, 1563, false,
    arg(Type.Int, distance),
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b),
    arg(Type.Int, a)
  )
end

-- void SET_TEXT_OUTLINE() // 0x2513DFB0FB8400FE
function HUD.SET_TEXT_OUTLINE()
  native.invoke(
    Type.Void, 1564, false
  )
end

-- void SET_TEXT_EDGE(int p0, int r, int g, int b, int a) // 0x441603240D202FA6
--[[
This native does absolutely nothing, just a nullsub
--]]
function HUD.SET_TEXT_EDGE(p0, r, g, b, a)
  native.invoke(
    Type.Void, 1565, false,
    arg(Type.Int, p0),
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b),
    arg(Type.Int, a)
  )
end

-- void SET_TEXT_RENDER_ID(int renderId) // 0x5F15302936E07111
function HUD.SET_TEXT_RENDER_ID(renderId)
  native.invoke(
    Type.Void, 1566, false,
    arg(Type.Int, renderId)
  )
end

-- int GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID() // 0x52F0982D7FD156B6
--[[
This function is hard-coded to always return 1.
--]]
function HUD.GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID()
  return native.invoke(
    Type.Int, 1567, false
  )
end

-- BOOL REGISTER_NAMED_RENDERTARGET(const char* name, BOOL p1) // 0x57D9C12635E25CE3
function HUD.REGISTER_NAMED_RENDERTARGET(name, p1)
  return native.invoke(
    Type.Bool, 1568, false,
    arg(Type.String, name),
    arg(Type.Bool, p1)
  )
end

-- BOOL IS_NAMED_RENDERTARGET_REGISTERED(const char* name) // 0x78DCDC15C9F116B4
function HUD.IS_NAMED_RENDERTARGET_REGISTERED(name)
  return native.invoke(
    Type.Bool, 1569, false,
    arg(Type.String, name)
  )
end

-- BOOL RELEASE_NAMED_RENDERTARGET(const char* name) // 0xE9F6FFE837354DD4
function HUD.RELEASE_NAMED_RENDERTARGET(name)
  return native.invoke(
    Type.Bool, 1570, false,
    arg(Type.String, name)
  )
end

-- void LINK_NAMED_RENDERTARGET(Hash modelHash) // 0xF6C09E276AEB3F2D
function HUD.LINK_NAMED_RENDERTARGET(modelHash)
  native.invoke(
    Type.Void, 1571, false,
    arg(Type.Hash, modelHash)
  )
end

-- int GET_NAMED_RENDERTARGET_RENDER_ID(const char* name) // 0x1A6478B61C6BDC3B
function HUD.GET_NAMED_RENDERTARGET_RENDER_ID(name)
  return native.invoke(
    Type.Int, 1572, false,
    arg(Type.String, name)
  )
end

-- BOOL IS_NAMED_RENDERTARGET_LINKED(Hash modelHash) // 0x113750538FA31298
function HUD.IS_NAMED_RENDERTARGET_LINKED(modelHash)
  return native.invoke(
    Type.Bool, 1573, false,
    arg(Type.Hash, modelHash)
  )
end

-- void CLEAR_HELP(BOOL toggle) // 0x8DFCED7A656F8802
function HUD.CLEAR_HELP(toggle)
  native.invoke(
    Type.Void, 1574, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_HELP_MESSAGE_ON_SCREEN() // 0xDAD37F45428801AE
function HUD.IS_HELP_MESSAGE_ON_SCREEN()
  return native.invoke(
    Type.Bool, 1575, false
  )
end

-- BOOL HAS_SCRIPT_HIDDEN_HELP_THIS_FRAME() // 0x214CD562A939246A
function HUD.HAS_SCRIPT_HIDDEN_HELP_THIS_FRAME()
  return native.invoke(
    Type.Bool, 1576, false
  )
end

-- BOOL IS_HELP_MESSAGE_BEING_DISPLAYED() // 0x4D79439A6B55AC67
function HUD.IS_HELP_MESSAGE_BEING_DISPLAYED()
  return native.invoke(
    Type.Bool, 1577, false
  )
end

-- BOOL IS_HELP_MESSAGE_FADING_OUT() // 0x327EDEEEAC55C369
function HUD.IS_HELP_MESSAGE_FADING_OUT()
  return native.invoke(
    Type.Bool, 1578, false
  )
end

-- void SET_HELP_MESSAGE_STYLE(int style, int hudColor, int alpha, int p3, int p4) // 0xB9C362BABECDDC7A
function HUD.SET_HELP_MESSAGE_STYLE(style, hudColor, alpha, p3, p4)
  native.invoke(
    Type.Void, 1579, false,
    arg(Type.Int, style),
    arg(Type.Int, hudColor),
    arg(Type.Int, alpha),
    arg(Type.Int, p3),
    arg(Type.Int, p4)
  )
end

-- int GET_STANDARD_BLIP_ENUM_ID() // 0x4A9923385BDB9DAD
function HUD.GET_STANDARD_BLIP_ENUM_ID()
  return native.invoke(
    Type.Int, 1580, false
  )
end

-- int GET_WAYPOINT_BLIP_ENUM_ID() // 0x186E5D252FA50E7D
function HUD.GET_WAYPOINT_BLIP_ENUM_ID()
  return native.invoke(
    Type.Int, 1581, false
  )
end

-- int GET_NUMBER_OF_ACTIVE_BLIPS() // 0x9A3FF3DE163034E8
function HUD.GET_NUMBER_OF_ACTIVE_BLIPS()
  return native.invoke(
    Type.Int, 1582, false
  )
end

-- Blip GET_NEXT_BLIP_INFO_ID(int blipSprite) // 0x14F96AA50D6FBEA7
function HUD.GET_NEXT_BLIP_INFO_ID(blipSprite)
  return native.invoke(
    Type.Blip, 1583, false,
    arg(Type.Int, blipSprite)
  )
end

-- Blip GET_FIRST_BLIP_INFO_ID(int blipSprite) // 0x1BEDE233E6CD2A1F
function HUD.GET_FIRST_BLIP_INFO_ID(blipSprite)
  return native.invoke(
    Type.Blip, 1584, false,
    arg(Type.Int, blipSprite)
  )
end

-- Blip GET_CLOSEST_BLIP_INFO_ID(int blipSprite) // 0xD484BF71050CA1EE
function HUD.GET_CLOSEST_BLIP_INFO_ID(blipSprite)
  return native.invoke(
    Type.Blip, 1585, false,
    arg(Type.Int, blipSprite)
  )
end

-- Vector3 GET_BLIP_INFO_ID_COORD(Blip blip) // 0xFA7C7F0AADF25D09
function HUD.GET_BLIP_INFO_ID_COORD(blip)
  return native.invoke(
    Type.Vector3, 1586, false,
    arg(Type.Blip, blip)
  )
end

-- int GET_BLIP_INFO_ID_DISPLAY(Blip blip) // 0x1E314167F701DC3B
function HUD.GET_BLIP_INFO_ID_DISPLAY(blip)
  return native.invoke(
    Type.Int, 1587, false,
    arg(Type.Blip, blip)
  )
end

-- int GET_BLIP_INFO_ID_TYPE(Blip blip) // 0xBE9B0959FFD0779B
--[[
Returns a value based on what the blip is attached to
1 - Vehicle
2 - Ped
3 - Object
4 - Coord
5 - unk
6 - Pickup
7 - Radius
--]]
function HUD.GET_BLIP_INFO_ID_TYPE(blip)
  return native.invoke(
    Type.Int, 1588, false,
    arg(Type.Blip, blip)
  )
end

-- Entity GET_BLIP_INFO_ID_ENTITY_INDEX(Blip blip) // 0x4BA4E2553AFEDC2C
function HUD.GET_BLIP_INFO_ID_ENTITY_INDEX(blip)
  return native.invoke(
    Type.Entity, 1589, false,
    arg(Type.Blip, blip)
  )
end

-- Pickup GET_BLIP_INFO_ID_PICKUP_INDEX(Blip blip) // 0x9B6786E4C03DD382
--[[
This function is hard-coded to always return 0.
--]]
function HUD.GET_BLIP_INFO_ID_PICKUP_INDEX(blip)
  return native.invoke(
    Type.Pickup, 1590, false,
    arg(Type.Blip, blip)
  )
end

-- Blip GET_BLIP_FROM_ENTITY(Entity entity) // 0xBC8DBDCA2436F7E8
--[[
Returns the Blip handle of given Entity.
--]]
function HUD.GET_BLIP_FROM_ENTITY(entity)
  return native.invoke(
    Type.Blip, 1591, false,
    arg(Type.Entity, entity)
  )
end

-- Blip ADD_BLIP_FOR_RADIUS(float posX, float posY, float posZ, float radius) // 0x46818D79B1F7499A
function HUD.ADD_BLIP_FOR_RADIUS(posX, posY, posZ, radius)
  return native.invoke(
    Type.Blip, 1592, false,
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ),
    arg(Type.Float, radius)
  )
end

-- Blip ADD_BLIP_FOR_AREA(float x, float y, float z, float width, float height) // 0xCE5D0E5E315DB238
--[[
Adds a rectangular blip for the specified coordinates/area.

It is recommended to use SET_BLIP_ROTATION and SET_BLIP_COLOUR to make the blip not rotate along with the camera.

By default, the blip will show as a _regular_ blip with the specified color/sprite if it is outside of the minimap view.

Example image:
minimap https://w.wew.wtf/pdcjig.png
big map https://w.wew.wtf/zgcjcm.png

(Native name is _likely_ to actually be ADD_BLIP_FOR_AREA, but due to the usual reasons this can't be confirmed)
--]]
function HUD.ADD_BLIP_FOR_AREA(x, y, z, width, height)
  return native.invoke(
    Type.Blip, 1593, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, width),
    arg(Type.Float, height)
  )
end

-- Blip ADD_BLIP_FOR_ENTITY(Entity entity) // 0x5CDE92C702A8FCE7
--[[
Returns red ( default ) blip attached to entity.

Example:
Blip blip; //Put this outside your case or option
blip = HUD::ADD_BLIP_FOR_ENTITY(YourPedOrBodyguardName);
HUD::SET_BLIP_AS_FRIENDLY(blip, true);
--]]
function HUD.ADD_BLIP_FOR_ENTITY(entity)
  return native.invoke(
    Type.Blip, 1594, false,
    arg(Type.Entity, entity)
  )
end

-- Blip ADD_BLIP_FOR_PICKUP(Pickup pickup) // 0xBE339365C863BD36
function HUD.ADD_BLIP_FOR_PICKUP(pickup)
  return native.invoke(
    Type.Blip, 1595, false,
    arg(Type.Pickup, pickup)
  )
end

-- Blip ADD_BLIP_FOR_COORD(float x, float y, float z) // 0x5A039BB0BCA604B6
--[[
Creates an orange ( default ) Blip-object. Returns a Blip-object which can then be modified.
--]]
function HUD.ADD_BLIP_FOR_COORD(x, y, z)
  return native.invoke(
    Type.Blip, 1596, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void TRIGGER_SONAR_BLIP(float posX, float posY, float posZ, float radius, int p4) // 0x72DD432F3CDFC0EE
function HUD.TRIGGER_SONAR_BLIP(posX, posY, posZ, radius, p4)
  native.invoke(
    Type.Void, 1597, false,
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ),
    arg(Type.Float, radius),
    arg(Type.Int, p4)
  )
end

-- void ALLOW_SONAR_BLIPS(BOOL toggle) // 0x60734CC207C9833C
function HUD.ALLOW_SONAR_BLIPS(toggle)
  native.invoke(
    Type.Void, 1598, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_BLIP_COORDS(Blip blip, float posX, float posY, float posZ) // 0xAE2AF67E9D9AF65D
function HUD.SET_BLIP_COORDS(blip, posX, posY, posZ)
  native.invoke(
    Type.Void, 1599, false,
    arg(Type.Blip, blip),
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ)
  )
end

-- Vector3 GET_BLIP_COORDS(Blip blip) // 0x586AFE3FF72D996E
function HUD.GET_BLIP_COORDS(blip)
  return native.invoke(
    Type.Vector3, 1600, false,
    arg(Type.Blip, blip)
  )
end

-- void SET_BLIP_SPRITE(Blip blip, int spriteId) // 0xDF735600A4696DAF
--[[
Sets the displayed sprite for a specific blip..

You may have your own list, but since dev-c didn't show it I was bored and started looking through scripts and functions to get a presumable almost positive list of a majority of blip IDs
https://pastebin.com/Bpj9Sfft

Blips Images + IDs:
https://gtaxscripting.blogspot.com/2016/05/gta-v-blips-id-and-image.html
--]]
function HUD.SET_BLIP_SPRITE(blip, spriteId)
  native.invoke(
    Type.Void, 1601, false,
    arg(Type.Blip, blip),
    arg(Type.Int, spriteId)
  )
end

-- int GET_BLIP_SPRITE(Blip blip) // 0x1FC877464A04FC4F
--[[
Blips Images + IDs:
gtaxscripting.blogspot.com/2016/05/gta-v-blips-id-and-image.html
--]]
function HUD.GET_BLIP_SPRITE(blip)
  return native.invoke(
    Type.Int, 1602, false,
    arg(Type.Blip, blip)
  )
end

-- void SET_COP_BLIP_SPRITE(int p0, float p1) // 0x9FCB3CBFB3EAD69A
function HUD.SET_COP_BLIP_SPRITE(p0, p1)
  native.invoke(
    Type.Void, 1603, false,
    arg(Type.Int, p0),
    arg(Type.Float, p1)
  )
end

-- void SET_COP_BLIP_SPRITE_AS_STANDARD() // 0xB7B873520C84C118
function HUD.SET_COP_BLIP_SPRITE_AS_STANDARD()
  native.invoke(
    Type.Void, 1604, false
  )
end

-- void SET_BLIP_NAME_FROM_TEXT_FILE(Blip blip, const char* gxtEntry) // 0xEAA0FFE120D92784
--[[
Doesn't work if the label text of gxtEntry is >= 80.
--]]
function HUD.SET_BLIP_NAME_FROM_TEXT_FILE(blip, gxtEntry)
  native.invoke(
    Type.Void, 1605, false,
    arg(Type.Blip, blip),
    arg(Type.String, gxtEntry)
  )
end

-- void SET_BLIP_NAME_TO_PLAYER_NAME(Blip blip, Player player) // 0x127DE7B20C60A6A3
function HUD.SET_BLIP_NAME_TO_PLAYER_NAME(blip, player)
  native.invoke(
    Type.Void, 1606, false,
    arg(Type.Blip, blip),
    arg(Type.Player, player)
  )
end

-- void SET_BLIP_ALPHA(Blip blip, int alpha) // 0x45FF974EEE1C8734
--[[
Sets alpha-channel for blip color.

Example:

Blip blip = HUD::ADD_BLIP_FOR_ENTITY(entity);
HUD::SET_BLIP_COLOUR(blip , 3);
HUD::SET_BLIP_ALPHA(blip , 64);

--]]
function HUD.SET_BLIP_ALPHA(blip, alpha)
  native.invoke(
    Type.Void, 1607, false,
    arg(Type.Blip, blip),
    arg(Type.Int, alpha)
  )
end

-- int GET_BLIP_ALPHA(Blip blip) // 0x970F608F0EE6C885
function HUD.GET_BLIP_ALPHA(blip)
  return native.invoke(
    Type.Int, 1608, false,
    arg(Type.Blip, blip)
  )
end

-- void SET_BLIP_FADE(Blip blip, int opacity, int duration) // 0x2AEE8F8390D2298C
function HUD.SET_BLIP_FADE(blip, opacity, duration)
  native.invoke(
    Type.Void, 1609, false,
    arg(Type.Blip, blip),
    arg(Type.Int, opacity),
    arg(Type.Int, duration)
  )
end

-- int GET_BLIP_FADE_DIRECTION(Blip blip) // 0x2C173AE2BDB9385E
--[[
Returns -1, 0, +1, depending on if the blip is fading out, doing nothing, or fading in respectively.
--]]
function HUD.GET_BLIP_FADE_DIRECTION(blip)
  return native.invoke(
    Type.Int, 1610, false,
    arg(Type.Blip, blip)
  )
end

-- void SET_BLIP_ROTATION(Blip blip, int rotation) // 0xF87683CDF73C3F6E
--[[
After some testing, looks like you need to use CEIL() on the rotation (vehicle/ped heading) before using it there.
--]]
function HUD.SET_BLIP_ROTATION(blip, rotation)
  native.invoke(
    Type.Void, 1611, false,
    arg(Type.Blip, blip),
    arg(Type.Int, rotation)
  )
end

-- void SET_BLIP_ROTATION_WITH_FLOAT(Blip blip, float heading) // 0xA8B6AFDAC320AC87
--[[
Does not require whole number/integer rotations.
--]]
function HUD.SET_BLIP_ROTATION_WITH_FLOAT(blip, heading)
  native.invoke(
    Type.Void, 1612, false,
    arg(Type.Blip, blip),
    arg(Type.Float, heading)
  )
end

-- int GET_BLIP_ROTATION(Blip blip) // 0x003E92BA477F9D7F
function HUD.GET_BLIP_ROTATION(blip)
  return native.invoke(
    Type.Int, 1613, false,
    arg(Type.Blip, blip)
  )
end

-- void SET_BLIP_FLASH_TIMER(Blip blip, int duration) // 0xD3CD6FD297AE87CC
--[[
Adds up after viewing multiple R* scripts. I believe that the duration is in miliseconds.
--]]
function HUD.SET_BLIP_FLASH_TIMER(blip, duration)
  native.invoke(
    Type.Void, 1614, false,
    arg(Type.Blip, blip),
    arg(Type.Int, duration)
  )
end

-- void SET_BLIP_FLASH_INTERVAL(Blip blip, Any p1) // 0xAA51DB313C010A7E
function HUD.SET_BLIP_FLASH_INTERVAL(blip, p1)
  native.invoke(
    Type.Void, 1615, false,
    arg(Type.Blip, blip),
    arg(Type.Any, p1)
  )
end

-- void SET_BLIP_COLOUR(Blip blip, int color) // 0x03D7FB09E75D6B7E
--[[
https://gtaforums.com/topic/864881-all-blip-color-ids-pictured/
--]]
function HUD.SET_BLIP_COLOUR(blip, color)
  native.invoke(
    Type.Void, 1616, false,
    arg(Type.Blip, blip),
    arg(Type.Int, color)
  )
end

-- void SET_BLIP_SECONDARY_COLOUR(Blip blip, int r, int g, int b) // 0x14892474891E09EB
--[[
Can be used to give blips any RGB colour with SET_BLIP_COLOUR(blip, 84).
--]]
function HUD.SET_BLIP_SECONDARY_COLOUR(blip, r, g, b)
  native.invoke(
    Type.Void, 1617, false,
    arg(Type.Blip, blip),
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b)
  )
end

-- int GET_BLIP_COLOUR(Blip blip) // 0xDF729E8D20CF7327
function HUD.GET_BLIP_COLOUR(blip)
  return native.invoke(
    Type.Int, 1618, false,
    arg(Type.Blip, blip)
  )
end

-- int GET_BLIP_HUD_COLOUR(Blip blip) // 0x729B5F1EFBC0AAEE
function HUD.GET_BLIP_HUD_COLOUR(blip)
  return native.invoke(
    Type.Int, 1619, false,
    arg(Type.Blip, blip)
  )
end

-- BOOL IS_BLIP_SHORT_RANGE(Blip blip) // 0xDA5F8727EB75B926
function HUD.IS_BLIP_SHORT_RANGE(blip)
  return native.invoke(
    Type.Bool, 1620, false,
    arg(Type.Blip, blip)
  )
end

-- BOOL IS_BLIP_ON_MINIMAP(Blip blip) // 0xE41CA53051197A27
function HUD.IS_BLIP_ON_MINIMAP(blip)
  return native.invoke(
    Type.Bool, 1621, false,
    arg(Type.Blip, blip)
  )
end

-- BOOL DOES_BLIP_HAVE_GPS_ROUTE(Blip blip) // 0xDD2238F57B977751
function HUD.DOES_BLIP_HAVE_GPS_ROUTE(blip)
  return native.invoke(
    Type.Bool, 1622, false,
    arg(Type.Blip, blip)
  )
end

-- void SET_BLIP_HIDDEN_ON_LEGEND(Blip blip, BOOL toggle) // 0x54318C915D27E4CE
function HUD.SET_BLIP_HIDDEN_ON_LEGEND(blip, toggle)
  native.invoke(
    Type.Void, 1623, false,
    arg(Type.Blip, blip),
    arg(Type.Bool, toggle)
  )
end

-- void SET_BLIP_HIGH_DETAIL(Blip blip, BOOL toggle) // 0xE2590BC29220CEBB
function HUD.SET_BLIP_HIGH_DETAIL(blip, toggle)
  native.invoke(
    Type.Void, 1624, false,
    arg(Type.Blip, blip),
    arg(Type.Bool, toggle)
  )
end

-- void SET_BLIP_AS_MISSION_CREATOR_BLIP(Blip blip, BOOL toggle) // 0x24AC0137444F9FD5
function HUD.SET_BLIP_AS_MISSION_CREATOR_BLIP(blip, toggle)
  native.invoke(
    Type.Void, 1625, false,
    arg(Type.Blip, blip),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_MISSION_CREATOR_BLIP(Blip blip) // 0x26F49BF3381D933D
function HUD.IS_MISSION_CREATOR_BLIP(blip)
  return native.invoke(
    Type.Bool, 1626, false,
    arg(Type.Blip, blip)
  )
end

-- Blip GET_NEW_SELECTED_MISSION_CREATOR_BLIP() // 0x5C90988E7C8E1AF4
function HUD.GET_NEW_SELECTED_MISSION_CREATOR_BLIP()
  return native.invoke(
    Type.Blip, 1627, false
  )
end

-- BOOL IS_HOVERING_OVER_MISSION_CREATOR_BLIP() // 0x4167EFE0527D706E
function HUD.IS_HOVERING_OVER_MISSION_CREATOR_BLIP()
  return native.invoke(
    Type.Bool, 1628, false
  )
end

-- void SHOW_START_MISSION_INSTRUCTIONAL_BUTTON(BOOL toggle) // 0xF1A6C18B35BCADE6
function HUD.SHOW_START_MISSION_INSTRUCTIONAL_BUTTON(toggle)
  native.invoke(
    Type.Void, 1629, false,
    arg(Type.Bool, toggle)
  )
end

-- void SHOW_CONTACT_INSTRUCTIONAL_BUTTON(BOOL toggle) // 0xC772A904CDE1186F
function HUD.SHOW_CONTACT_INSTRUCTIONAL_BUTTON(toggle)
  native.invoke(
    Type.Void, 1630, false,
    arg(Type.Bool, toggle)
  )
end

-- void RELOAD_MAP_MENU() // 0x2916A928514C9827
function HUD.RELOAD_MAP_MENU()
  native.invoke(
    Type.Void, 1631, false
  )
end

-- void SET_BLIP_MARKER_LONG_DISTANCE(Any p0, Any p1) // 0xB552929B85FC27EC
function HUD.SET_BLIP_MARKER_LONG_DISTANCE(p0, p1)
  native.invoke(
    Type.Void, 1632, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void SET_BLIP_FLASHES(Blip blip, BOOL toggle) // 0xB14552383D39CE3E
function HUD.SET_BLIP_FLASHES(blip, toggle)
  native.invoke(
    Type.Void, 1633, false,
    arg(Type.Blip, blip),
    arg(Type.Bool, toggle)
  )
end

-- void SET_BLIP_FLASHES_ALTERNATE(Blip blip, BOOL toggle) // 0x2E8D9498C56DD0D1
function HUD.SET_BLIP_FLASHES_ALTERNATE(blip, toggle)
  native.invoke(
    Type.Void, 1634, false,
    arg(Type.Blip, blip),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_BLIP_FLASHING(Blip blip) // 0xA5E41FD83AD6CEF0
function HUD.IS_BLIP_FLASHING(blip)
  return native.invoke(
    Type.Bool, 1635, false,
    arg(Type.Blip, blip)
  )
end

-- void SET_BLIP_AS_SHORT_RANGE(Blip blip, BOOL toggle) // 0xBE8BE4FE60E27B72
--[[
Sets whether or not the specified blip should only be displayed when nearby, or on the minimap.
--]]
function HUD.SET_BLIP_AS_SHORT_RANGE(blip, toggle)
  native.invoke(
    Type.Void, 1636, false,
    arg(Type.Blip, blip),
    arg(Type.Bool, toggle)
  )
end

-- void SET_BLIP_SCALE(Blip blip, float scale) // 0xD38744167B2FA257
function HUD.SET_BLIP_SCALE(blip, scale)
  native.invoke(
    Type.Void, 1637, false,
    arg(Type.Blip, blip),
    arg(Type.Float, scale)
  )
end

-- void SET_BLIP_SCALE_2D(Blip blip, float xScale, float yScale) // 0xCD6524439909C979
--[[
See https://imgur.com/a/lLkEsMN
--]]
function HUD.SET_BLIP_SCALE_2D(blip, xScale, yScale)
  native.invoke(
    Type.Void, 1638, false,
    arg(Type.Blip, blip),
    arg(Type.Float, xScale),
    arg(Type.Float, yScale)
  )
end

-- void SET_BLIP_PRIORITY(Blip blip, int priority) // 0xAE9FC9EF6A9FAC79
--[[
See this topic for more details : gtaforums.com/topic/717612-v-scriptnative-documentation-and-research/page-35?p=1069477935
--]]
function HUD.SET_BLIP_PRIORITY(blip, priority)
  native.invoke(
    Type.Void, 1639, false,
    arg(Type.Blip, blip),
    arg(Type.Int, priority)
  )
end

-- void SET_BLIP_DISPLAY(Blip blip, int displayId) // 0x9029B2F3DA924928
--[[
Display Id behaviours:
0 = Doesn't show up, ever, anywhere.
1 = Doesn't show up, ever, anywhere.
2 = Shows on both main map and minimap. (Selectable on map)
3 = Shows on main map only. (Selectable on map)
4 = Shows on main map only. (Selectable on map)
5 = Shows on minimap only.
6 = Shows on both main map and minimap. (Selectable on map)
7 = Doesn't show up, ever, anywhere.
8 = Shows on both main map and minimap. (Not selectable on map)
9 = Shows on minimap only.
10 = Shows on both main map and minimap. (Not selectable on map)

Anything higher than 10 seems to be exactly the same as 10.
--]]
function HUD.SET_BLIP_DISPLAY(blip, displayId)
  native.invoke(
    Type.Void, 1640, false,
    arg(Type.Blip, blip),
    arg(Type.Int, displayId)
  )
end

-- void SET_BLIP_CATEGORY(Blip blip, int index) // 0x234CDD44D996FD9A
--[[
Example: https://i.imgur.com/skY6vAJ.png

Index:
1 = No distance shown in legend
2 = Distance shown in legend
7 = "Other Players" category, also shows distance in legend
10 = "Property" category
11 = "Owned Property" category

Any other value behaves like index = 1, index wraps around after 255
Blips with categories 7, 10 or 11 will all show under the specific categories listing in the map legend, regardless of sprite or name.
Legend entries:
7 = Other Players (BLIP_OTHPLYR)
10 = Property (BLIP_PROPCAT)
11 = Owned Property (BLIP_APARTCAT)

Category needs to be `7` in order for blip names to show on the expanded minimap when using DISPLAY_PLAYER_NAME_TAGS_ON_BLIPS.
--]]
function HUD.SET_BLIP_CATEGORY(blip, index)
  native.invoke(
    Type.Void, 1641, false,
    arg(Type.Blip, blip),
    arg(Type.Int, index)
  )
end

-- void REMOVE_BLIP(Blip* blip) // 0x86A652570E5F25DD
--[[
In the C++ SDK, this seems not to work-- the blip isn't removed immediately. I use it for saving cars.

E.g.:

Ped pped = PLAYER::PLAYER_PED_ID();
Vehicle v = PED::GET_VEHICLE_PED_IS_USING(pped);
Blip b = HUD::ADD_BLIP_FOR_ENTITY(v);

works fine.
But later attempting to delete it with:

Blip b = HUD::GET_BLIP_FROM_ENTITY(v);
if (HUD::DOES_BLIP_EXIST(b)) HUD::REMOVE_BLIP(&b);

doesn't work. And yes, doesn't work without the DOES_BLIP_EXIST check either. Also, if you attach multiple blips to the same thing (say, a vehicle), and that thing disappears, the blips randomly attach to other things (in my case, a vehicle).

Thus for me, HUD::REMOVE_BLIP(&b) only works if there's one blip, (in my case) the vehicle is marked as no longer needed, you drive away from it and it eventually despawns, AND there is only one blip attached to it. I never intentionally attach multiple blips but if the user saves the car, this adds a blip. Then if they delete it, it is supposed to remove the blip, but it doesn't. Then they can immediately save it again, causing another blip to re-appear.
-------------

Passing the address of the variable instead of the value works for me.
e.g.
int blip = HUD::ADD_BLIP_FOR_ENTITY(ped);
HUD::REMOVE_BLIP(&blip);


Remove blip will currently crash your game, just artificially remove the blip by setting the sprite to a id that is 'invisible'.
--]]
function HUD.REMOVE_BLIP(blip)
  native.invoke(
    Type.Void, 1642, false,
    arg(Type.Blip, blip)
  )
end

-- void SET_BLIP_AS_FRIENDLY(Blip blip, BOOL toggle) // 0x6F6F290102C02AB4
--[[
false for enemy
true for friendly
--]]
function HUD.SET_BLIP_AS_FRIENDLY(blip, toggle)
  native.invoke(
    Type.Void, 1643, false,
    arg(Type.Blip, blip),
    arg(Type.Bool, toggle)
  )
end

-- void PULSE_BLIP(Blip blip) // 0x742D6FD43115AF73
function HUD.PULSE_BLIP(blip)
  native.invoke(
    Type.Void, 1644, false,
    arg(Type.Blip, blip)
  )
end

-- void SHOW_NUMBER_ON_BLIP(Blip blip, int number) // 0xA3C0B359DCB848B6
function HUD.SHOW_NUMBER_ON_BLIP(blip, number)
  native.invoke(
    Type.Void, 1645, false,
    arg(Type.Blip, blip),
    arg(Type.Int, number)
  )
end

-- void HIDE_NUMBER_ON_BLIP(Blip blip) // 0x532CFF637EF80148
function HUD.HIDE_NUMBER_ON_BLIP(blip)
  native.invoke(
    Type.Void, 1646, false,
    arg(Type.Blip, blip)
  )
end

-- void SHOW_HEIGHT_ON_BLIP(Blip blip, BOOL toggle) // 0x75A16C3DA34F1245
function HUD.SHOW_HEIGHT_ON_BLIP(blip, toggle)
  native.invoke(
    Type.Void, 1647, false,
    arg(Type.Blip, blip),
    arg(Type.Bool, toggle)
  )
end

-- void SHOW_TICK_ON_BLIP(Blip blip, BOOL toggle) // 0x74513EA3E505181E
--[[
Adds a green checkmark on top of a blip.
--]]
function HUD.SHOW_TICK_ON_BLIP(blip, toggle)
  native.invoke(
    Type.Void, 1648, false,
    arg(Type.Blip, blip),
    arg(Type.Bool, toggle)
  )
end

-- void SHOW_GOLD_TICK_ON_BLIP(Blip blip, BOOL toggle) // 0xCAC2031EBF79B1A8
--[[
Adds a orange checkmark on top of a given blip handle: https://imgur.com/a/aw5OTMF
_SHOW_FRIEND_INDICATOR_ON_BLIP* - _SHOW_HEADING_INDICATOR_ON_BLIP*
--]]
function HUD.SHOW_GOLD_TICK_ON_BLIP(blip, toggle)
  native.invoke(
    Type.Void, 1649, false,
    arg(Type.Blip, blip),
    arg(Type.Bool, toggle)
  )
end

-- void SHOW_FOR_SALE_ICON_ON_BLIP(Blip blip, BOOL toggle) // 0x19BD6E3C0E16A8FA
function HUD.SHOW_FOR_SALE_ICON_ON_BLIP(blip, toggle)
  native.invoke(
    Type.Void, 1650, false,
    arg(Type.Blip, blip),
    arg(Type.Bool, toggle)
  )
end

-- void SHOW_HEADING_INDICATOR_ON_BLIP(Blip blip, BOOL toggle) // 0x5FBCA48327B914DF
--[[
Adds the GTA: Online player heading indicator to a blip.
--]]
function HUD.SHOW_HEADING_INDICATOR_ON_BLIP(blip, toggle)
  native.invoke(
    Type.Void, 1651, false,
    arg(Type.Blip, blip),
    arg(Type.Bool, toggle)
  )
end

-- void SHOW_OUTLINE_INDICATOR_ON_BLIP(Blip blip, BOOL toggle) // 0xB81656BC81FE24D1
--[[
Highlights a blip by a cyan color circle.

Color can be changed with SET_BLIP_SECONDARY_COLOUR
--]]
function HUD.SHOW_OUTLINE_INDICATOR_ON_BLIP(blip, toggle)
  native.invoke(
    Type.Void, 1652, false,
    arg(Type.Blip, blip),
    arg(Type.Bool, toggle)
  )
end

-- void SHOW_FRIEND_INDICATOR_ON_BLIP(Blip blip, BOOL toggle) // 0x23C3EB807312F01A
--[[
Highlights a blip by a half cyan circle on the right side of the blip. https://i.imgur.com/FrV9M4e.png
.Indicating that that player is a friend (in GTA:O). This color can not be changed.
To toggle the left side (crew member indicator) of the half circle around the blip, use: `SHOW_CREW_INDICATOR_ON_BLIP`
--]]
function HUD.SHOW_FRIEND_INDICATOR_ON_BLIP(blip, toggle)
  native.invoke(
    Type.Void, 1653, false,
    arg(Type.Blip, blip),
    arg(Type.Bool, toggle)
  )
end

-- void SHOW_CREW_INDICATOR_ON_BLIP(Blip blip, BOOL toggle) // 0xDCFB5D4DB8BF367E
--[[
Enables or disables the blue half circle https://i.imgur.com/iZes9Ec.png around the specified blip on the left side of the blip. This is used to indicate that the player is in your crew in GTA:O. Color is changeable by using `SET_BLIP_SECONDARY_COLOUR`.
--]]
function HUD.SHOW_CREW_INDICATOR_ON_BLIP(blip, toggle)
  native.invoke(
    Type.Void, 1654, false,
    arg(Type.Blip, blip),
    arg(Type.Bool, toggle)
  )
end

-- void SET_BLIP_EXTENDED_HEIGHT_THRESHOLD(Blip blip, BOOL toggle) // 0xC4278F70131BAA6D
--[[
Must be toggled before being queued for animation
--]]
function HUD.SET_BLIP_EXTENDED_HEIGHT_THRESHOLD(blip, toggle)
  native.invoke(
    Type.Void, 1655, false,
    arg(Type.Blip, blip),
    arg(Type.Bool, toggle)
  )
end

-- void SET_BLIP_SHORT_HEIGHT_THRESHOLD(Any p0, Any p1) // 0x4B5B620C9B59ED34
function HUD.SET_BLIP_SHORT_HEIGHT_THRESHOLD(p0, p1)
  native.invoke(
    Type.Void, 1656, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void SET_BLIP_USE_HEIGHT_INDICATOR_ON_EDGE(Blip blip, Any p1) // 0x2C9F302398E13141
function HUD.SET_BLIP_USE_HEIGHT_INDICATOR_ON_EDGE(blip, p1)
  native.invoke(
    Type.Void, 1657, false,
    arg(Type.Blip, blip),
    arg(Type.Any, p1)
  )
end

-- void SET_BLIP_AS_MINIMAL_ON_EDGE(Blip blip, BOOL toggle) // 0x2B6D467DAB714E8D
--[[
Makes a blip go small when off the minimap.
--]]
function HUD.SET_BLIP_AS_MINIMAL_ON_EDGE(blip, toggle)
  native.invoke(
    Type.Void, 1658, false,
    arg(Type.Blip, blip),
    arg(Type.Bool, toggle)
  )
end

-- void SET_RADIUS_BLIP_EDGE(Blip blip, BOOL toggle) // 0x25615540D894B814
--[[
Enabling this on a radius blip will make it outline only. See https://cdn.discordapp.com/attachments/553235301632573459/575132227935928330/unknown.png
--]]
function HUD.SET_RADIUS_BLIP_EDGE(blip, toggle)
  native.invoke(
    Type.Void, 1659, false,
    arg(Type.Blip, blip),
    arg(Type.Bool, toggle)
  )
end

-- BOOL DOES_BLIP_EXIST(Blip blip) // 0xA6DB27D19ECBB7DA
function HUD.DOES_BLIP_EXIST(blip)
  return native.invoke(
    Type.Bool, 1660, false,
    arg(Type.Blip, blip)
  )
end

-- void SET_WAYPOINT_OFF() // 0xA7E4E2D361C2627F
--[[
This native removes the current waypoint from the map.

Example:
C#:
Function.Call(Hash.SET_WAYPOINT_OFF);

C++:
HUD::SET_WAYPOINT_OFF();
--]]
function HUD.SET_WAYPOINT_OFF()
  native.invoke(
    Type.Void, 1661, false
  )
end

-- void DELETE_WAYPOINTS_FROM_THIS_PLAYER() // 0xD8E694757BCEA8E9
function HUD.DELETE_WAYPOINTS_FROM_THIS_PLAYER()
  native.invoke(
    Type.Void, 1662, false
  )
end

-- void REFRESH_WAYPOINT() // 0x81FA173F170560D1
function HUD.REFRESH_WAYPOINT()
  native.invoke(
    Type.Void, 1663, false
  )
end

-- BOOL IS_WAYPOINT_ACTIVE() // 0x1DD1F58F493F1DA5
function HUD.IS_WAYPOINT_ACTIVE()
  return native.invoke(
    Type.Bool, 1664, false
  )
end

-- void SET_NEW_WAYPOINT(float x, float y) // 0xFE43368D2AA4F2FC
function HUD.SET_NEW_WAYPOINT(x, y)
  native.invoke(
    Type.Void, 1665, false,
    arg(Type.Float, x),
    arg(Type.Float, y)
  )
end

-- void SET_BLIP_BRIGHT(Blip blip, BOOL toggle) // 0xB203913733F27884
function HUD.SET_BLIP_BRIGHT(blip, toggle)
  native.invoke(
    Type.Void, 1666, false,
    arg(Type.Blip, blip),
    arg(Type.Bool, toggle)
  )
end

-- void SET_BLIP_SHOW_CONE(Blip blip, BOOL toggle, int hudColorIndex) // 0x13127EC3665E8EE1
--[[
As of b2189, the third parameter sets the color of the cone (before b2189 it was ignored). Note that it uses HUD colors, not blip colors.
--]]
function HUD.SET_BLIP_SHOW_CONE(blip, toggle, hudColorIndex)
  native.invoke(
    Type.Void, 1667, false,
    arg(Type.Blip, blip),
    arg(Type.Bool, toggle),
    arg(Type.Int, hudColorIndex)
  )
end

-- void REMOVE_COP_BLIP_FROM_PED(Ped ped) // 0xC594B315EDF2D4AF
--[[
Interesting fact: A hash collision for this is RESET_JETPACK_MODEL_SETTINGS
--]]
function HUD.REMOVE_COP_BLIP_FROM_PED(ped)
  native.invoke(
    Type.Void, 1668, false,
    arg(Type.Ped, ped)
  )
end

-- void SETUP_FAKE_CONE_DATA(Blip blip, float p1, float p2, float p3, float p4, float p5, float p6, Any p7, int p8) // 0xF83D0FEBE75E62C9
function HUD.SETUP_FAKE_CONE_DATA(blip, p1, p2, p3, p4, p5, p6, p7, p8)
  native.invoke(
    Type.Void, 1669, false,
    arg(Type.Blip, blip),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Float, p6),
    arg(Type.Any, p7),
    arg(Type.Int, p8)
  )
end

-- void REMOVE_FAKE_CONE_DATA(Blip blip) // 0x35A3CD97B2C0A6D2
function HUD.REMOVE_FAKE_CONE_DATA(blip)
  native.invoke(
    Type.Void, 1670, false,
    arg(Type.Blip, blip)
  )
end

-- void CLEAR_FAKE_CONE_ARRAY() // 0x8410C5E0CD847B9D
function HUD.CLEAR_FAKE_CONE_ARRAY()
  native.invoke(
    Type.Void, 1671, false
  )
end

-- void _SET_BLIP_GPS_ROUTE_DISPLAY_DISTANCE(Blip blip, int blipChangeParam46, BOOL blipChangeParam47) // 0x25D984CFB64ED6DE
--[[
Applies to new eBlipParams _BLIP_CHANGE_46* and _BLIP_CHANGE_47*
--]]
function HUD._SET_BLIP_GPS_ROUTE_DISPLAY_DISTANCE(blip, blipChangeParam46, blipChangeParam47)
  native.invoke(
    Type.Void, 1672, false,
    arg(Type.Blip, blip),
    arg(Type.Int, blipChangeParam46),
    arg(Type.Bool, blipChangeParam47)
  )
end

-- BOOL SET_MINIMAP_COMPONENT(int componentId, BOOL toggle, int overrideColor) // 0x75A9A10948D1DEA6
--[[
This native is used to colorize certain map components like the army base at the top of the map.
p2 appears to be always -1. If p2 is -1 then native wouldn't change the color. See https://gfycat.com/SkinnyPinkChupacabra
--]]
function HUD.SET_MINIMAP_COMPONENT(componentId, toggle, overrideColor)
  return native.invoke(
    Type.Bool, 1673, false,
    arg(Type.Int, componentId),
    arg(Type.Bool, toggle),
    arg(Type.Int, overrideColor)
  )
end

-- void SET_MINIMAP_SONAR_SWEEP(BOOL toggle) // 0x6B50FC8749632EC1
function HUD.SET_MINIMAP_SONAR_SWEEP(toggle)
  native.invoke(
    Type.Void, 1674, false,
    arg(Type.Bool, toggle)
  )
end

-- void SHOW_ACCOUNT_PICKER() // 0x60E892BA4F5BDCA4
function HUD.SHOW_ACCOUNT_PICKER()
  native.invoke(
    Type.Void, 1675, false
  )
end

-- Blip GET_MAIN_PLAYER_BLIP_ID() // 0xDCD4EC3F419D02FA
function HUD.GET_MAIN_PLAYER_BLIP_ID()
  return native.invoke(
    Type.Blip, 1676, false
  )
end

-- void SET_PM_WARNINGSCREEN_ACTIVE(BOOL p0) // 0x41350B4FC28E3941
function HUD.SET_PM_WARNINGSCREEN_ACTIVE(p0)
  native.invoke(
    Type.Void, 1677, false,
    arg(Type.Bool, p0)
  )
end

-- void HIDE_LOADING_ON_FADE_THIS_FRAME() // 0x4B0311D3CDC4648F
function HUD.HIDE_LOADING_ON_FADE_THIS_FRAME()
  native.invoke(
    Type.Void, 1678, false
  )
end

-- void SET_RADAR_AS_INTERIOR_THIS_FRAME(Hash interior, float x, float y, int z, int zoom) // 0x59E727A1C9D3E31A
--[[
List of interior hashes: https://pastebin.com/1FUyXNqY
Not for every interior zoom > 0 available.
--]]
function HUD.SET_RADAR_AS_INTERIOR_THIS_FRAME(interior, x, y, z, zoom)
  native.invoke(
    Type.Void, 1679, false,
    arg(Type.Hash, interior),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Int, z),
    arg(Type.Int, zoom)
  )
end

-- void SET_INSIDE_VERY_SMALL_INTERIOR(BOOL toggle) // 0x504DFE62A1692296
function HUD.SET_INSIDE_VERY_SMALL_INTERIOR(toggle)
  native.invoke(
    Type.Void, 1680, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_INSIDE_VERY_LARGE_INTERIOR(BOOL toggle) // 0x7EC8ABA5E74B3D7A
function HUD.SET_INSIDE_VERY_LARGE_INTERIOR(toggle)
  native.invoke(
    Type.Void, 1681, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_RADAR_AS_EXTERIOR_THIS_FRAME() // 0xE81B7D2A3DAB2D81
function HUD.SET_RADAR_AS_EXTERIOR_THIS_FRAME()
  native.invoke(
    Type.Void, 1682, false
  )
end

-- void SET_FAKE_PAUSEMAP_PLAYER_POSITION_THIS_FRAME(float x, float y) // 0x77E2DD177910E1CF
--[[
Sets the position of the arrow icon representing the player on both the minimap and world map.

Too bad this wouldn't work over the network (obviously not). Could spoof where we would be.
--]]
function HUD.SET_FAKE_PAUSEMAP_PLAYER_POSITION_THIS_FRAME(x, y)
  native.invoke(
    Type.Void, 1683, false,
    arg(Type.Float, x),
    arg(Type.Float, y)
  )
end

-- void SET_FAKE_GPS_PLAYER_POSITION_THIS_FRAME(float x, float y, Any p2) // 0xA17784FCA9548D15
--[[
p2 maybe z float?
--]]
function HUD.SET_FAKE_GPS_PLAYER_POSITION_THIS_FRAME(x, y, p2)
  native.invoke(
    Type.Void, 1684, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Any, p2)
  )
end

-- BOOL IS_PAUSEMAP_IN_INTERIOR_MODE() // 0x9049FE339D5F6F6F
function HUD.IS_PAUSEMAP_IN_INTERIOR_MODE()
  return native.invoke(
    Type.Bool, 1685, false
  )
end

-- void HIDE_MINIMAP_EXTERIOR_MAP_THIS_FRAME() // 0x5FBAE526203990C9
function HUD.HIDE_MINIMAP_EXTERIOR_MAP_THIS_FRAME()
  native.invoke(
    Type.Void, 1686, false
  )
end

-- void HIDE_MINIMAP_INTERIOR_MAP_THIS_FRAME() // 0x20FE7FDFEEAD38C0
function HUD.HIDE_MINIMAP_INTERIOR_MAP_THIS_FRAME()
  native.invoke(
    Type.Void, 1687, false
  )
end

-- void SET_USE_ISLAND_MAP(BOOL toggle) // 0x5E1460624D194A38
--[[
Toggles the Cayo Perico map.
--]]
function HUD.SET_USE_ISLAND_MAP(toggle)
  native.invoke(
    Type.Void, 1688, false,
    arg(Type.Bool, toggle)
  )
end

-- void _SET_PAUSE_EXTERIOR_RENDERING_WHILE_IN_INTERIOR() // 0x35CCE12EAECB4A51
function HUD._SET_PAUSE_EXTERIOR_RENDERING_WHILE_IN_INTERIOR()
  native.invoke(
    Type.Void, 1689, false
  )
end

-- void DONT_TILT_MINIMAP_THIS_FRAME() // 0x6D14BFDC33B34F55
--[[
When calling this, the current frame will have the players "arrow icon" be focused on the dead center of the radar.
--]]
function HUD.DONT_TILT_MINIMAP_THIS_FRAME()
  native.invoke(
    Type.Void, 1690, false
  )
end

-- void DONT_ZOOM_MINIMAP_WHEN_RUNNING_THIS_FRAME() // 0x89DA85D949CE57A0
function HUD.DONT_ZOOM_MINIMAP_WHEN_RUNNING_THIS_FRAME()
  native.invoke(
    Type.Void, 1691, false
  )
end

-- void DONT_ZOOM_MINIMAP_WHEN_SNIPING_THIS_FRAME() // 0x55F5A5F07134DE60
function HUD.DONT_ZOOM_MINIMAP_WHEN_SNIPING_THIS_FRAME()
  native.invoke(
    Type.Void, 1692, false
  )
end

-- void SET_WIDESCREEN_FORMAT(Any p0) // 0xC3B07BA00A83B0F1
function HUD.SET_WIDESCREEN_FORMAT(p0)
  native.invoke(
    Type.Void, 1693, false,
    arg(Type.Any, p0)
  )
end

-- void DISPLAY_AREA_NAME(BOOL toggle) // 0x276B6CE369C33678
function HUD.DISPLAY_AREA_NAME(toggle)
  native.invoke(
    Type.Void, 1694, false,
    arg(Type.Bool, toggle)
  )
end

-- void DISPLAY_CASH(BOOL toggle) // 0x96DEC8D5430208B7
--[[
"DISPLAY_CASH(false);" makes the cash amount render on the screen when appropriate
"DISPLAY_CASH(true);" disables cash amount rendering
--]]
function HUD.DISPLAY_CASH(toggle)
  native.invoke(
    Type.Void, 1695, false,
    arg(Type.Bool, toggle)
  )
end

-- void USE_FAKE_MP_CASH(BOOL toggle) // 0x170F541E1CADD1DE
--[[
Related to displaying cash on the HUD
Always called before HUD::CHANGE_FAKE_MP_CASH in decompiled scripts
--]]
function HUD.USE_FAKE_MP_CASH(toggle)
  native.invoke(
    Type.Void, 1696, false,
    arg(Type.Bool, toggle)
  )
end

-- void CHANGE_FAKE_MP_CASH(int cash, int bank) // 0x0772DF77852C2E30
--[[
Displays cash change notifications on HUD.
--]]
function HUD.CHANGE_FAKE_MP_CASH(cash, bank)
  native.invoke(
    Type.Void, 1697, false,
    arg(Type.Int, cash),
    arg(Type.Int, bank)
  )
end

-- void DISPLAY_AMMO_THIS_FRAME(BOOL display) // 0xA5E78BA2B1331C55
function HUD.DISPLAY_AMMO_THIS_FRAME(display)
  native.invoke(
    Type.Void, 1698, false,
    arg(Type.Bool, display)
  )
end

-- void DISPLAY_SNIPER_SCOPE_THIS_FRAME() // 0x73115226F4814E62
--[[
Displays the crosshair for this frame.
--]]
function HUD.DISPLAY_SNIPER_SCOPE_THIS_FRAME()
  native.invoke(
    Type.Void, 1699, false
  )
end

-- void HIDE_HUD_AND_RADAR_THIS_FRAME() // 0x719FF505F097FD20
--[[
Hides HUD and radar this frame and prohibits switching to other weapons (or accessing the weapon wheel)
--]]
function HUD.HIDE_HUD_AND_RADAR_THIS_FRAME()
  native.invoke(
    Type.Void, 1700, false
  )
end

-- void ALLOW_DISPLAY_OF_MULTIPLAYER_CASH_TEXT(BOOL allow) // 0xE67C6DFD386EA5E7
--[[
Controls whether to display 'Cash'/'Bank' next to the money balance HUD in Multiplayer (https://i.imgur.com/MiYUtNl.png)
--]]
function HUD.ALLOW_DISPLAY_OF_MULTIPLAYER_CASH_TEXT(allow)
  native.invoke(
    Type.Void, 1701, false,
    arg(Type.Bool, allow)
  )
end

-- void SET_MULTIPLAYER_WALLET_CASH() // 0xC2D15BEF167E27BC
function HUD.SET_MULTIPLAYER_WALLET_CASH()
  native.invoke(
    Type.Void, 1702, false
  )
end

-- void REMOVE_MULTIPLAYER_WALLET_CASH() // 0x95CF81BD06EE1887
function HUD.REMOVE_MULTIPLAYER_WALLET_CASH()
  native.invoke(
    Type.Void, 1703, false
  )
end

-- void SET_MULTIPLAYER_BANK_CASH() // 0xDD21B55DF695CD0A
function HUD.SET_MULTIPLAYER_BANK_CASH()
  native.invoke(
    Type.Void, 1704, false
  )
end

-- void REMOVE_MULTIPLAYER_BANK_CASH() // 0xC7C6789AA1CFEDD0
function HUD.REMOVE_MULTIPLAYER_BANK_CASH()
  native.invoke(
    Type.Void, 1705, false
  )
end

-- void SET_MULTIPLAYER_HUD_CASH(int p0, BOOL p1) // 0xFD1D220394BCB824
--[[
This native does absolutely nothing, just a nullsub
--]]
function HUD.SET_MULTIPLAYER_HUD_CASH(p0, p1)
  native.invoke(
    Type.Void, 1706, false,
    arg(Type.Int, p0),
    arg(Type.Bool, p1)
  )
end

-- void REMOVE_MULTIPLAYER_HUD_CASH() // 0x968F270E39141ECA
--[[
Removes multiplayer cash hud each frame
--]]
function HUD.REMOVE_MULTIPLAYER_HUD_CASH()
  native.invoke(
    Type.Void, 1707, false
  )
end

-- void HIDE_HELP_TEXT_THIS_FRAME() // 0xD46923FC481CA285
function HUD.HIDE_HELP_TEXT_THIS_FRAME()
  native.invoke(
    Type.Void, 1708, false
  )
end

-- BOOL IS_IME_IN_PROGRESS() // 0x801879A9B4F4B2FB
function HUD.IS_IME_IN_PROGRESS()
  return native.invoke(
    Type.Bool, 1709, false
  )
end

-- void DISPLAY_HELP_TEXT_THIS_FRAME(const char* message, BOOL p1) // 0x960C9FF8F616E41C
--[[
The messages are localized strings.
Examples:
"No_bus_money"
"Enter_bus"
"Tour_help"
"LETTERS_HELP2"
"Dummy"

**The bool appears to always be false (if it even is a bool, as it's represented by a zero)**
--------
p1 doesn't seem to make a difference, regardless of the state it's in. 


picture of where on the screen this is displayed? 
--]]
function HUD.DISPLAY_HELP_TEXT_THIS_FRAME(message, p1)
  native.invoke(
    Type.Void, 1710, false,
    arg(Type.String, message),
    arg(Type.Bool, p1)
  )
end

-- void HUD_FORCE_WEAPON_WHEEL(BOOL show) // 0xEB354E5376BC81A7
--[[
Forces the weapon wheel to show/hide.
--]]
function HUD.HUD_FORCE_WEAPON_WHEEL(show)
  native.invoke(
    Type.Void, 1711, false,
    arg(Type.Bool, show)
  )
end

-- void HUD_FORCE_SPECIAL_VEHICLE_WEAPON_WHEEL() // 0x488043841BBE156F
--[[
Displays "blazer_wheels_up" and "blazer_wheels_down" "weapon" icons when switching between jetski and quadbike modes. Works only on vehicles using "VEHICLE_TYPE_AMPHIBIOUS_QUADBIKE" vehicle type. Needs to be called every time prior to switching modes, otherwise the icon will only appear when switching modes once.
--]]
function HUD.HUD_FORCE_SPECIAL_VEHICLE_WEAPON_WHEEL()
  native.invoke(
    Type.Void, 1712, false
  )
end

-- void HUD_SUPPRESS_WEAPON_WHEEL_RESULTS_THIS_FRAME() // 0x0AFC4AF510774B47
--[[
Calling this each frame, stops the player from receiving a weapon via the weapon wheel.
--]]
function HUD.HUD_SUPPRESS_WEAPON_WHEEL_RESULTS_THIS_FRAME()
  native.invoke(
    Type.Void, 1713, false
  )
end

-- Hash HUD_GET_WEAPON_WHEEL_CURRENTLY_HIGHLIGHTED() // 0xA48931185F0536FE
--[[
Returns the weapon hash to the selected/highlighted weapon in the wheel
--]]
function HUD.HUD_GET_WEAPON_WHEEL_CURRENTLY_HIGHLIGHTED()
  return native.invoke(
    Type.Hash, 1714, false
  )
end

-- void HUD_SET_WEAPON_WHEEL_TOP_SLOT(Hash weaponHash) // 0x72C1056D678BB7D8
--[[
Set the active slotIndex in the wheel weapon to the slot associated with the provided Weapon hash
--]]
function HUD.HUD_SET_WEAPON_WHEEL_TOP_SLOT(weaponHash)
  native.invoke(
    Type.Void, 1715, false,
    arg(Type.Hash, weaponHash)
  )
end

-- Hash HUD_GET_WEAPON_WHEEL_TOP_SLOT(int weaponTypeIndex) // 0xA13E93403F26C812
--[[
Returns the weapon hash active in a specific weapon wheel slotList
--]]
function HUD.HUD_GET_WEAPON_WHEEL_TOP_SLOT(weaponTypeIndex)
  return native.invoke(
    Type.Hash, 1716, false,
    arg(Type.Int, weaponTypeIndex)
  )
end

-- void HUD_SHOWING_CHARACTER_SWITCH_SELECTION(BOOL toggle) // 0x14C9FDCC41F81F63
--[[
Sets a global that disables many weapon input tasks (shooting, aiming, etc.). Does not work with vehicle weapons, only used in selector.ysc
--]]
function HUD.HUD_SHOWING_CHARACTER_SWITCH_SELECTION(toggle)
  native.invoke(
    Type.Void, 1717, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_GPS_FLAGS(int p0, float p1) // 0x5B440763A4C8D15B
--[[
Only the script that originally called SET_GPS_FLAGS can set them again. Another script cannot set the flags, until the first script that called it has called CLEAR_GPS_FLAGS.

Doesn't seem like the flags are actually read by the game at all.
--]]
function HUD.SET_GPS_FLAGS(p0, p1)
  native.invoke(
    Type.Void, 1718, false,
    arg(Type.Int, p0),
    arg(Type.Float, p1)
  )
end

-- void CLEAR_GPS_FLAGS() // 0x21986729D6A3A830
--[[
Clears the GPS flags. Only the script that originally called SET_GPS_FLAGS can clear them.

Doesn't seem like the flags are actually read by the game at all.
--]]
function HUD.CLEAR_GPS_FLAGS()
  native.invoke(
    Type.Void, 1719, false
  )
end

-- void SET_RACE_TRACK_RENDER(BOOL toggle) // 0x1EAC5F91BCBC5073
function HUD.SET_RACE_TRACK_RENDER(toggle)
  native.invoke(
    Type.Void, 1720, false,
    arg(Type.Bool, toggle)
  )
end

-- void CLEAR_GPS_RACE_TRACK() // 0x7AA5B4CE533C858B
--[[
Does the same as SET_RACE_TRACK_RENDER(false);
--]]
function HUD.CLEAR_GPS_RACE_TRACK()
  native.invoke(
    Type.Void, 1721, false
  )
end

-- void START_GPS_CUSTOM_ROUTE(int hudColor, BOOL displayOnFoot, BOOL followPlayer) // 0xDB34E8D56FC13B08
--[[
Starts a new GPS custom-route, allowing you to plot lines on the map.
Lines are drawn directly between points.
The GPS custom route works like the GPS multi route, except it does not follow roads.
Example result: https://i.imgur.com/BDm5pzt.png
hudColor: The HUD color of the GPS path.
displayOnFoot: Draws the path regardless if the player is in a vehicle or not.
followPlayer: Draw the path partially between the previous and next point based on the players position between them. When false, the GPS appears to not disappear after the last leg is completed.
--]]
function HUD.START_GPS_CUSTOM_ROUTE(hudColor, displayOnFoot, followPlayer)
  native.invoke(
    Type.Void, 1722, false,
    arg(Type.Int, hudColor),
    arg(Type.Bool, displayOnFoot),
    arg(Type.Bool, followPlayer)
  )
end

-- void ADD_POINT_TO_GPS_CUSTOM_ROUTE(float x, float y, float z) // 0x311438A071DD9B1A
function HUD.ADD_POINT_TO_GPS_CUSTOM_ROUTE(x, y, z)
  native.invoke(
    Type.Void, 1723, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void SET_GPS_CUSTOM_ROUTE_RENDER(BOOL toggle, int radarThickness, int mapThickness) // 0x900086F371220B6F
--[[
radarThickness: The width of the GPS route on the radar
mapThickness: The width of the GPS route on the map
--]]
function HUD.SET_GPS_CUSTOM_ROUTE_RENDER(toggle, radarThickness, mapThickness)
  native.invoke(
    Type.Void, 1724, false,
    arg(Type.Bool, toggle),
    arg(Type.Int, radarThickness),
    arg(Type.Int, mapThickness)
  )
end

-- void CLEAR_GPS_CUSTOM_ROUTE() // 0xE6DE0561D9232A64
function HUD.CLEAR_GPS_CUSTOM_ROUTE()
  native.invoke(
    Type.Void, 1725, false
  )
end

-- void START_GPS_MULTI_ROUTE(int hudColor, BOOL routeFromPlayer, BOOL displayOnFoot) // 0x3D3D15AF7BCAAF83
--[[
Starts a new GPS multi-route, allowing you to create custom GPS paths.
GPS functions like the waypoint, except it can contain multiple points it's forced to go through.
Once the player has passed a point, the GPS will no longer force its path through it.

Works independently from the player-placed waypoint and blip routes.
Example result: https://i.imgur.com/ZZHQatX.png
hudColor: The HUD color of the GPS path.
routeFromPlayer: Makes the GPS draw a path from the player to the next point, rather than the original path from the previous point.
displayOnFoot: Draws the GPS path regardless if the player is in a vehicle or not.
--]]
function HUD.START_GPS_MULTI_ROUTE(hudColor, routeFromPlayer, displayOnFoot)
  native.invoke(
    Type.Void, 1726, false,
    arg(Type.Int, hudColor),
    arg(Type.Bool, routeFromPlayer),
    arg(Type.Bool, displayOnFoot)
  )
end

-- void ADD_POINT_TO_GPS_MULTI_ROUTE(float x, float y, float z) // 0xA905192A6781C41B
function HUD.ADD_POINT_TO_GPS_MULTI_ROUTE(x, y, z)
  native.invoke(
    Type.Void, 1727, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void SET_GPS_MULTI_ROUTE_RENDER(BOOL toggle) // 0x3DDA37128DD1ACA8
function HUD.SET_GPS_MULTI_ROUTE_RENDER(toggle)
  native.invoke(
    Type.Void, 1728, false,
    arg(Type.Bool, toggle)
  )
end

-- void CLEAR_GPS_MULTI_ROUTE() // 0x67EEDEA1B9BAFD94
--[[
Does the same as SET_GPS_MULTI_ROUTE_RENDER(false);
--]]
function HUD.CLEAR_GPS_MULTI_ROUTE()
  native.invoke(
    Type.Void, 1729, false
  )
end

-- void CLEAR_GPS_PLAYER_WAYPOINT() // 0xFF4FB7C8CDFA3DA7
function HUD.CLEAR_GPS_PLAYER_WAYPOINT()
  native.invoke(
    Type.Void, 1730, false
  )
end

-- void SET_GPS_FLASHES(BOOL toggle) // 0x320D0E0D936A0E9B
function HUD.SET_GPS_FLASHES(toggle)
  native.invoke(
    Type.Void, 1731, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_PLAYER_ICON_COLOUR(int color) // 0x7B21E0BB01E8224A
function HUD.SET_PLAYER_ICON_COLOUR(color)
  native.invoke(
    Type.Void, 1732, false,
    arg(Type.Int, color)
  )
end

-- void FLASH_MINIMAP_DISPLAY() // 0xF2DD778C22B15BDA
--[[
adds a short flash to the Radar/Minimap
Usage: UI.FLASH_MINIMAP_DISPLAY
--]]
function HUD.FLASH_MINIMAP_DISPLAY()
  native.invoke(
    Type.Void, 1733, false
  )
end

-- void FLASH_MINIMAP_DISPLAY_WITH_COLOR(int hudColorIndex) // 0x6B1DE27EE78E6A19
function HUD.FLASH_MINIMAP_DISPLAY_WITH_COLOR(hudColorIndex)
  native.invoke(
    Type.Void, 1734, false,
    arg(Type.Int, hudColorIndex)
  )
end

-- void TOGGLE_STEALTH_RADAR(BOOL toggle) // 0x6AFDFB93754950C7
function HUD.TOGGLE_STEALTH_RADAR(toggle)
  native.invoke(
    Type.Void, 1735, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_MINIMAP_IN_SPECTATOR_MODE(BOOL toggle, Ped ped) // 0x1A5CD7752DD28CD3
function HUD.SET_MINIMAP_IN_SPECTATOR_MODE(toggle, ped)
  native.invoke(
    Type.Void, 1736, false,
    arg(Type.Bool, toggle),
    arg(Type.Ped, ped)
  )
end

-- void SET_MISSION_NAME(BOOL p0, const char* name) // 0x5F28ECF5FC84772F
function HUD.SET_MISSION_NAME(p0, name)
  native.invoke(
    Type.Void, 1737, false,
    arg(Type.Bool, p0),
    arg(Type.String, name)
  )
end

-- void SET_MISSION_NAME_FOR_UGC_MISSION(BOOL p0, const char* name) // 0xE45087D85F468BC2
function HUD.SET_MISSION_NAME_FOR_UGC_MISSION(p0, name)
  native.invoke(
    Type.Void, 1738, false,
    arg(Type.Bool, p0),
    arg(Type.String, name)
  )
end

-- void SET_DESCRIPTION_FOR_UGC_MISSION_EIGHT_STRINGS(BOOL p0, const char* p1, const char* p2, const char* p3, const char* p4, const char* p5, const char* p6, const char* p7, const char* p8) // 0x817B86108EB94E51
function HUD.SET_DESCRIPTION_FOR_UGC_MISSION_EIGHT_STRINGS(p0, p1, p2, p3, p4, p5, p6, p7, p8)
  native.invoke(
    Type.Void, 1739, false,
    arg(Type.Bool, p0),
    arg(Type.String, p1),
    arg(Type.String, p2),
    arg(Type.String, p3),
    arg(Type.String, p4),
    arg(Type.String, p5),
    arg(Type.String, p6),
    arg(Type.String, p7),
    arg(Type.String, p8)
  )
end

-- void SET_MINIMAP_BLOCK_WAYPOINT(BOOL toggle) // 0x58FADDED207897DC
function HUD.SET_MINIMAP_BLOCK_WAYPOINT(toggle)
  native.invoke(
    Type.Void, 1740, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_MINIMAP_IN_PROLOGUE(BOOL toggle) // 0x9133955F1A2DA957
--[[
Toggles the North Yankton map
--]]
function HUD.SET_MINIMAP_IN_PROLOGUE(toggle)
  native.invoke(
    Type.Void, 1741, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_MINIMAP_HIDE_FOW(BOOL toggle) // 0xF8DEE0A5600CBB93
--[[
If true, the entire map will be revealed.

FOW = Fog of War
--]]
function HUD.SET_MINIMAP_HIDE_FOW(toggle)
  native.invoke(
    Type.Void, 1742, false,
    arg(Type.Bool, toggle)
  )
end

-- float GET_MINIMAP_FOW_DISCOVERY_RATIO() // 0xE0130B41D3CF4574
function HUD.GET_MINIMAP_FOW_DISCOVERY_RATIO()
  return native.invoke(
    Type.Float, 1743, false
  )
end

-- BOOL GET_MINIMAP_FOW_COORDINATE_IS_REVEALED(float x, float y, float z) // 0x6E31B91145873922
function HUD.GET_MINIMAP_FOW_COORDINATE_IS_REVEALED(x, y, z)
  return native.invoke(
    Type.Bool, 1744, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void SET_MINIMAP_FOW_DO_NOT_UPDATE(BOOL p0) // 0x62E849B7EB28E770
function HUD.SET_MINIMAP_FOW_DO_NOT_UPDATE(p0)
  native.invoke(
    Type.Void, 1745, false,
    arg(Type.Bool, p0)
  )
end

-- void SET_MINIMAP_FOW_REVEAL_COORDINATE(float x, float y, float z) // 0x0923DBF87DFF735E
--[[
Up to eight coordinates may be revealed per frame
--]]
function HUD.SET_MINIMAP_FOW_REVEAL_COORDINATE(x, y, z)
  native.invoke(
    Type.Void, 1746, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void SET_MINIMAP_GOLF_COURSE(int hole) // 0x71BDB63DBAF8DA59
--[[
Not much is known so far on what it does _exactly_.
All I know for sure is that it draws the specified hole ID on the pause menu map as well as on the mini-map/radar. This native also seems to change some other things related to the pause menu map's behaviour, for example: you can no longer set waypoints, the pause menu map starts up in a 'zoomed in' state. This native does not need to be executed every tick.
You need to center the minimap manually as well as change/lock it's zoom and angle in order for it to appear correctly on the minimap.
You'll also need to use the `GOLF` scaleform in order to get the correct minmap border to show up.
Use `0x35edd5b2e3ff01c0` to reset the map when you no longer want to display any golf holes (you still need to unlock zoom, position and angle of the radar manually after calling this).
--]]
function HUD.SET_MINIMAP_GOLF_COURSE(hole)
  native.invoke(
    Type.Void, 1747, false,
    arg(Type.Int, hole)
  )
end

-- void SET_MINIMAP_GOLF_COURSE_OFF() // 0x35EDD5B2E3FF01C0
function HUD.SET_MINIMAP_GOLF_COURSE_OFF()
  native.invoke(
    Type.Void, 1748, false
  )
end

-- void LOCK_MINIMAP_ANGLE(int angle) // 0x299FAEBB108AE05B
--[[
Locks the minimap to the specified angle in integer degrees.

angle: The angle in whole degrees. If less than 0 or greater than 360, unlocks the angle.
--]]
function HUD.LOCK_MINIMAP_ANGLE(angle)
  native.invoke(
    Type.Void, 1749, false,
    arg(Type.Int, angle)
  )
end

-- void UNLOCK_MINIMAP_ANGLE() // 0x8183455E16C42E3A
function HUD.UNLOCK_MINIMAP_ANGLE()
  native.invoke(
    Type.Void, 1750, false
  )
end

-- void LOCK_MINIMAP_POSITION(float x, float y) // 0x1279E861A329E73F
--[[
Locks the minimap to the specified world position.
--]]
function HUD.LOCK_MINIMAP_POSITION(x, y)
  native.invoke(
    Type.Void, 1751, false,
    arg(Type.Float, x),
    arg(Type.Float, y)
  )
end

-- void UNLOCK_MINIMAP_POSITION() // 0x3E93E06DB8EF1F30
function HUD.UNLOCK_MINIMAP_POSITION()
  native.invoke(
    Type.Void, 1752, false
  )
end

-- void SET_FAKE_MINIMAP_MAX_ALTIMETER_HEIGHT(float altitude, BOOL p1, Any p2) // 0xD201F3FF917A506D
--[[
Argument must be 0.0f or above 38.0f, or it will be ignored.
--]]
function HUD.SET_FAKE_MINIMAP_MAX_ALTIMETER_HEIGHT(altitude, p1, p2)
  native.invoke(
    Type.Void, 1753, false,
    arg(Type.Float, altitude),
    arg(Type.Bool, p1),
    arg(Type.Any, p2)
  )
end

-- void SET_HEALTH_HUD_DISPLAY_VALUES(int health, int capacity, BOOL wasAdded) // 0x3F5CC444DCAAA8F2
function HUD.SET_HEALTH_HUD_DISPLAY_VALUES(health, capacity, wasAdded)
  native.invoke(
    Type.Void, 1754, false,
    arg(Type.Int, health),
    arg(Type.Int, capacity),
    arg(Type.Bool, wasAdded)
  )
end

-- void SET_MAX_HEALTH_HUD_DISPLAY(int maximumValue) // 0x975D66A0BC17064C
function HUD.SET_MAX_HEALTH_HUD_DISPLAY(maximumValue)
  native.invoke(
    Type.Void, 1755, false,
    arg(Type.Int, maximumValue)
  )
end

-- void SET_MAX_ARMOUR_HUD_DISPLAY(int maximumValue) // 0x06A320535F5F0248
function HUD.SET_MAX_ARMOUR_HUD_DISPLAY(maximumValue)
  native.invoke(
    Type.Void, 1756, false,
    arg(Type.Int, maximumValue)
  )
end

-- void SET_BIGMAP_ACTIVE(BOOL toggleBigMap, BOOL showFullMap) // 0x231C8F89D0539D8F
--[[
Toggles the big minimap state like in GTA:Online.
--]]
function HUD.SET_BIGMAP_ACTIVE(toggleBigMap, showFullMap)
  native.invoke(
    Type.Void, 1757, false,
    arg(Type.Bool, toggleBigMap),
    arg(Type.Bool, showFullMap)
  )
end

-- BOOL IS_HUD_COMPONENT_ACTIVE(int id) // 0xBC4C9EA5391ECC0D
--[[
Full list of components below

HUD = 0;
HUD_WANTED_STARS = 1;
HUD_WEAPON_ICON = 2;
HUD_CASH = 3;
HUD_MP_CASH = 4;
HUD_MP_MESSAGE = 5;
HUD_VEHICLE_NAME = 6;
HUD_AREA_NAME = 7;
HUD_VEHICLE_CLASS = 8;
HUD_STREET_NAME = 9;
HUD_HELP_TEXT = 10;
HUD_FLOATING_HELP_TEXT_1 = 11;
HUD_FLOATING_HELP_TEXT_2 = 12;
HUD_CASH_CHANGE = 13;
HUD_RETICLE = 14;
HUD_SUBTITLE_TEXT = 15;
HUD_RADIO_STATIONS = 16;
HUD_SAVING_GAME = 17;
HUD_GAME_STREAM = 18;
HUD_WEAPON_WHEEL = 19;
HUD_WEAPON_WHEEL_STATS = 20;
MAX_HUD_COMPONENTS = 21;
MAX_HUD_WEAPONS = 22;
MAX_SCRIPTED_HUD_COMPONENTS = 141;
--]]
function HUD.IS_HUD_COMPONENT_ACTIVE(id)
  return native.invoke(
    Type.Bool, 1758, false,
    arg(Type.Int, id)
  )
end

-- BOOL IS_SCRIPTED_HUD_COMPONENT_ACTIVE(int id) // 0xDD100EB17A94FF65
function HUD.IS_SCRIPTED_HUD_COMPONENT_ACTIVE(id)
  return native.invoke(
    Type.Bool, 1759, false,
    arg(Type.Int, id)
  )
end

-- void HIDE_SCRIPTED_HUD_COMPONENT_THIS_FRAME(int id) // 0xE374C498D8BADC14
function HUD.HIDE_SCRIPTED_HUD_COMPONENT_THIS_FRAME(id)
  native.invoke(
    Type.Void, 1760, false,
    arg(Type.Int, id)
  )
end

-- void SHOW_SCRIPTED_HUD_COMPONENT_THIS_FRAME(int id) // 0x4F38DCA127DAAEA2
function HUD.SHOW_SCRIPTED_HUD_COMPONENT_THIS_FRAME(id)
  native.invoke(
    Type.Void, 1761, false,
    arg(Type.Int, id)
  )
end

-- BOOL IS_SCRIPTED_HUD_COMPONENT_HIDDEN_THIS_FRAME(int id) // 0x09C0403ED9A751C2
function HUD.IS_SCRIPTED_HUD_COMPONENT_HIDDEN_THIS_FRAME(id)
  return native.invoke(
    Type.Bool, 1762, false,
    arg(Type.Int, id)
  )
end

-- void HIDE_HUD_COMPONENT_THIS_FRAME(int id) // 0x6806C51AD12B83B8
--[[
This function hides various HUD (Heads-up Display) components.
Listed below are the integers and the corresponding HUD component.
- 1 : WANTED_STARS
- 2 : WEAPON_ICON
- 3 : CASH
- 4 : MP_CASH
- 5 : MP_MESSAGE
- 6 : VEHICLE_NAME
- 7 : AREA_NAME
- 8 : VEHICLE_CLASS
- 9 : STREET_NAME
- 10 : HELP_TEXT
- 11 : FLOATING_HELP_TEXT_1
- 12 : FLOATING_HELP_TEXT_2
- 13 : CASH_CHANGE
- 14 : RETICLE
- 15 : SUBTITLE_TEXT
- 16 : RADIO_STATIONS
- 17 : SAVING_GAME
- 18 : GAME_STREAM
- 19 : WEAPON_WHEEL
- 20 : WEAPON_WHEEL_STATS
- 21 : HUD_COMPONENTS
- 22 : HUD_WEAPONS

These integers also work for the `SHOW_HUD_COMPONENT_THIS_FRAME` native, but instead shows the HUD Component.
--]]
function HUD.HIDE_HUD_COMPONENT_THIS_FRAME(id)
  native.invoke(
    Type.Void, 1763, false,
    arg(Type.Int, id)
  )
end

-- void SHOW_HUD_COMPONENT_THIS_FRAME(int id) // 0x0B4DF1FA60C0E664
--[[
This function hides various HUD (Heads-up Display) components.
Listed below are the integers and the corresponding HUD component.
- 1 : WANTED_STARS
- 2 : WEAPON_ICON
- 3 : CASH
- 4 : MP_CASH
- 5 : MP_MESSAGE
- 6 : VEHICLE_NAME
- 7 : AREA_NAME
- 8 : VEHICLE_CLASS
- 9 : STREET_NAME
- 10 : HELP_TEXT
- 11 : FLOATING_HELP_TEXT_1
- 12 : FLOATING_HELP_TEXT_2
- 13 : CASH_CHANGE
- 14 : RETICLE
- 15 : SUBTITLE_TEXT
- 16 : RADIO_STATIONS
- 17 : SAVING_GAME
- 18 : GAME_STREAM
- 19 : WEAPON_WHEEL
- 20 : WEAPON_WHEEL_STATS
- 21 : HUD_COMPONENTS
- 22 : HUD_WEAPONS

These integers also work for the `HIDE_HUD_COMPONENT_THIS_FRAME` native, but instead hides the HUD Component.
--]]
function HUD.SHOW_HUD_COMPONENT_THIS_FRAME(id)
  native.invoke(
    Type.Void, 1764, false,
    arg(Type.Int, id)
  )
end

-- void HIDE_STREET_AND_CAR_NAMES_THIS_FRAME() // 0xA4DEDE28B1814289
--[[
Hides area and vehicle name HUD components for one frame.
--]]
function HUD.HIDE_STREET_AND_CAR_NAMES_THIS_FRAME()
  native.invoke(
    Type.Void, 1765, false
  )
end

-- void RESET_RETICULE_VALUES() // 0x12782CE0A636E9F0
function HUD.RESET_RETICULE_VALUES()
  native.invoke(
    Type.Void, 1766, false
  )
end

-- void RESET_HUD_COMPONENT_VALUES(int id) // 0x450930E616475D0D
function HUD.RESET_HUD_COMPONENT_VALUES(id)
  native.invoke(
    Type.Void, 1767, false,
    arg(Type.Int, id)
  )
end

-- void SET_HUD_COMPONENT_POSITION(int id, float x, float y) // 0xAABB1F56E2A17CED
function HUD.SET_HUD_COMPONENT_POSITION(id, x, y)
  native.invoke(
    Type.Void, 1768, false,
    arg(Type.Int, id),
    arg(Type.Float, x),
    arg(Type.Float, y)
  )
end

-- Vector3 GET_HUD_COMPONENT_POSITION(int id) // 0x223CA69A8C4417FD
function HUD.GET_HUD_COMPONENT_POSITION(id)
  return native.invoke(
    Type.Vector3, 1769, false,
    arg(Type.Int, id)
  )
end

-- void CLEAR_REMINDER_MESSAGE() // 0xB57D8DD645CFA2CF
--[[
This native does absolutely nothing, just a nullsub
--]]
function HUD.CLEAR_REMINDER_MESSAGE()
  native.invoke(
    Type.Void, 1770, false
  )
end

-- int GET_HUD_SCREEN_POSITION_FROM_WORLD_POSITION(float worldX, float worldY, float worldZ, float* screenX, float* screenY) // 0xF9904D11F1ACBEC3
--[[
World to relative screen coords, this world to screen will keep the text on screen. Was named _GET_SCREEN_COORD_FROM_WORLD_COORD, but this conflicts with 0x34E82F05DF2974F5. As that hash actually matches GET_SCREEN_COORD_FROM_WORLD_COORD that one supercedes and this one was renamed to _GET_2D_COORD_FROM_3D_COORD
--]]
function HUD.GET_HUD_SCREEN_POSITION_FROM_WORLD_POSITION(worldX, worldY, worldZ, screenX, screenY)
  return native.invoke(
    Type.Int, 1771, false,
    arg(Type.Float, worldX),
    arg(Type.Float, worldY),
    arg(Type.Float, worldZ),
    arg(Type.Float, screenX),
    arg(Type.Float, screenY)
  )
end

-- void OPEN_REPORTUGC_MENU() // 0x523A590C1A3CC0D3
--[[
Shows a menu for reporting UGC content.
--]]
function HUD.OPEN_REPORTUGC_MENU()
  native.invoke(
    Type.Void, 1772, false
  )
end

-- void FORCE_CLOSE_REPORTUGC_MENU() // 0xEE4C0E6DBC6F2C6F
function HUD.FORCE_CLOSE_REPORTUGC_MENU()
  native.invoke(
    Type.Void, 1773, false
  )
end

-- BOOL IS_REPORTUGC_MENU_OPEN() // 0x9135584D09A3437E
function HUD.IS_REPORTUGC_MENU_OPEN()
  return native.invoke(
    Type.Bool, 1774, false
  )
end

-- BOOL IS_FLOATING_HELP_TEXT_ON_SCREEN(int hudIndex) // 0x2432784ACA090DA4
function HUD.IS_FLOATING_HELP_TEXT_ON_SCREEN(hudIndex)
  return native.invoke(
    Type.Bool, 1775, false,
    arg(Type.Int, hudIndex)
  )
end

-- void SET_FLOATING_HELP_TEXT_SCREEN_POSITION(int hudIndex, float x, float y) // 0x7679CC1BCEBE3D4C
function HUD.SET_FLOATING_HELP_TEXT_SCREEN_POSITION(hudIndex, x, y)
  native.invoke(
    Type.Void, 1776, false,
    arg(Type.Int, hudIndex),
    arg(Type.Float, x),
    arg(Type.Float, y)
  )
end

-- void SET_FLOATING_HELP_TEXT_WORLD_POSITION(int hudIndex, float x, float y, float z) // 0x784BA7E0ECEB4178
function HUD.SET_FLOATING_HELP_TEXT_WORLD_POSITION(hudIndex, x, y, z)
  native.invoke(
    Type.Void, 1777, false,
    arg(Type.Int, hudIndex),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void SET_FLOATING_HELP_TEXT_TO_ENTITY(int hudIndex, Entity entity, float offsetX, float offsetY) // 0xB094BC1DB4018240
function HUD.SET_FLOATING_HELP_TEXT_TO_ENTITY(hudIndex, entity, offsetX, offsetY)
  native.invoke(
    Type.Void, 1778, false,
    arg(Type.Int, hudIndex),
    arg(Type.Entity, entity),
    arg(Type.Float, offsetX),
    arg(Type.Float, offsetY)
  )
end

-- void SET_FLOATING_HELP_TEXT_STYLE(int hudIndex, int p1, int p2, int p3, int p4, int p5) // 0x788E7FD431BD67F1
function HUD.SET_FLOATING_HELP_TEXT_STYLE(hudIndex, p1, p2, p3, p4, p5)
  native.invoke(
    Type.Void, 1779, false,
    arg(Type.Int, hudIndex),
    arg(Type.Int, p1),
    arg(Type.Int, p2),
    arg(Type.Int, p3),
    arg(Type.Int, p4),
    arg(Type.Int, p5)
  )
end

-- void CLEAR_FLOATING_HELP(int hudIndex, BOOL p1) // 0x50085246ABD3FEFA
function HUD.CLEAR_FLOATING_HELP(hudIndex, p1)
  native.invoke(
    Type.Void, 1780, false,
    arg(Type.Int, hudIndex),
    arg(Type.Bool, p1)
  )
end

-- void CREATE_MP_GAMER_TAG_WITH_CREW_COLOR(Player player, const char* username, BOOL pointedClanTag, BOOL isRockstarClan, const char* clanTag, int clanFlag, int r, int g, int b) // 0x6DD05E9D83EFA4C9
--[[
clanFlag: takes a number 0-5
--]]
function HUD.CREATE_MP_GAMER_TAG_WITH_CREW_COLOR(player, username, pointedClanTag, isRockstarClan, clanTag, clanFlag, r, g, b)
  native.invoke(
    Type.Void, 1781, false,
    arg(Type.Player, player),
    arg(Type.String, username),
    arg(Type.Bool, pointedClanTag),
    arg(Type.Bool, isRockstarClan),
    arg(Type.String, clanTag),
    arg(Type.Int, clanFlag),
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b)
  )
end

-- BOOL IS_MP_GAMER_TAG_MOVIE_ACTIVE() // 0x6E0EB3EB47C8D7AA
function HUD.IS_MP_GAMER_TAG_MOVIE_ACTIVE()
  return native.invoke(
    Type.Bool, 1782, false
  )
end

-- int CREATE_FAKE_MP_GAMER_TAG(Ped ped, const char* username, BOOL pointedClanTag, BOOL isRockstarClan, const char* clanTag, int clanFlag) // 0xBFEFE3321A3F5015
--[[
clanFlag: takes a number 0-5
--]]
function HUD.CREATE_FAKE_MP_GAMER_TAG(ped, username, pointedClanTag, isRockstarClan, clanTag, clanFlag)
  return native.invoke(
    Type.Int, 1783, false,
    arg(Type.Ped, ped),
    arg(Type.String, username),
    arg(Type.Bool, pointedClanTag),
    arg(Type.Bool, isRockstarClan),
    arg(Type.String, clanTag),
    arg(Type.Int, clanFlag)
  )
end

-- void REMOVE_MP_GAMER_TAG(int gamerTagId) // 0x31698AA80E0223F8
function HUD.REMOVE_MP_GAMER_TAG(gamerTagId)
  native.invoke(
    Type.Void, 1784, false,
    arg(Type.Int, gamerTagId)
  )
end

-- BOOL IS_MP_GAMER_TAG_ACTIVE(int gamerTagId) // 0x4E929E7A5796FD26
function HUD.IS_MP_GAMER_TAG_ACTIVE(gamerTagId)
  return native.invoke(
    Type.Bool, 1785, false,
    arg(Type.Int, gamerTagId)
  )
end

-- BOOL IS_MP_GAMER_TAG_FREE(int gamerTagId) // 0x595B5178E412E199
function HUD.IS_MP_GAMER_TAG_FREE(gamerTagId)
  return native.invoke(
    Type.Bool, 1786, false,
    arg(Type.Int, gamerTagId)
  )
end

-- void SET_MP_GAMER_TAG_VISIBILITY(int gamerTagId, int component, BOOL toggle, Any p3) // 0x63BB75ABEDC1F6A0
--[[
enum eMpGamerTagComponent
{
	MP_TAG_GAMER_NAME,
	MP_TAG_CREW_TAG,
	MP_TAG_HEALTH_ARMOUR,
	MP_TAG_BIG_TEXT,
	MP_TAG_AUDIO_ICON,
	MP_TAG_USING_MENU,
	MP_TAG_PASSIVE_MODE,
	MP_TAG_WANTED_STARS,
	MP_TAG_DRIVER,
	MP_TAG_CO_DRIVER,
	MP_TAG_TAGGED,
	MP_TAG_GAMER_NAME_NEARBY,
	MP_TAG_ARROW,
	MP_TAG_PACKAGES,
	MP_TAG_INV_IF_PED_FOLLOWING,
	MP_TAG_RANK_TEXT,
	MP_TAG_TYPING,
	MP_TAG_BAG_LARGE,
	MP_TAG_ARROW,
	MP_TAG_GANG_CEO,
	MP_TAG_GANG_BIKER,
	MP_TAG_BIKER_ARROW,
	MP_TAG_MC_ROLE_PRESIDENT,
	MP_TAG_MC_ROLE_VICE_PRESIDENT,
	MP_TAG_MC_ROLE_ROAD_CAPTAIN,
	MP_TAG_MC_ROLE_SARGEANT,
	MP_TAG_MC_ROLE_ENFORCER,
	MP_TAG_MC_ROLE_PROSPECT,
	MP_TAG_TRANSMITTER,
	MP_TAG_BOMB
};
--]]
function HUD.SET_MP_GAMER_TAG_VISIBILITY(gamerTagId, component, toggle, p3)
  native.invoke(
    Type.Void, 1787, false,
    arg(Type.Int, gamerTagId),
    arg(Type.Int, component),
    arg(Type.Bool, toggle),
    arg(Type.Any, p3)
  )
end

-- void SET_ALL_MP_GAMER_TAGS_VISIBILITY(int gamerTagId, BOOL toggle) // 0xEE76FF7E6A0166B0
function HUD.SET_ALL_MP_GAMER_TAGS_VISIBILITY(gamerTagId, toggle)
  native.invoke(
    Type.Void, 1788, false,
    arg(Type.Int, gamerTagId),
    arg(Type.Bool, toggle)
  )
end

-- void SET_MP_GAMER_TAGS_SHOULD_USE_VEHICLE_HEALTH(int gamerTagId, BOOL toggle) // 0xA67F9C46D612B6F1
--[[
Displays a bunch of icons above the players name, and level, and their name twice
--]]
function HUD.SET_MP_GAMER_TAGS_SHOULD_USE_VEHICLE_HEALTH(gamerTagId, toggle)
  native.invoke(
    Type.Void, 1789, false,
    arg(Type.Int, gamerTagId),
    arg(Type.Bool, toggle)
  )
end

-- void SET_MP_GAMER_TAGS_SHOULD_USE_POINTS_HEALTH(int gamerTagId, BOOL toggle) // 0xD29EC58C2F6B5014
function HUD.SET_MP_GAMER_TAGS_SHOULD_USE_POINTS_HEALTH(gamerTagId, toggle)
  native.invoke(
    Type.Void, 1790, false,
    arg(Type.Int, gamerTagId),
    arg(Type.Bool, toggle)
  )
end

-- void SET_MP_GAMER_TAGS_POINT_HEALTH(int gamerTagId, int value, int maximumValue) // 0x1563FE35E9928E67
function HUD.SET_MP_GAMER_TAGS_POINT_HEALTH(gamerTagId, value, maximumValue)
  native.invoke(
    Type.Void, 1791, false,
    arg(Type.Int, gamerTagId),
    arg(Type.Int, value),
    arg(Type.Int, maximumValue)
  )
end

-- void SET_MP_GAMER_TAG_COLOUR(int gamerTagId, int component, int hudColorIndex) // 0x613ED644950626AE
--[[
Sets a gamer tag's component colour

gamerTagId is obtained using for example CREATE_FAKE_MP_GAMER_TAG
Ranges from 0 to 255. 0 is grey health bar, ~50 yellow, 200 purple.
--]]
function HUD.SET_MP_GAMER_TAG_COLOUR(gamerTagId, component, hudColorIndex)
  native.invoke(
    Type.Void, 1792, false,
    arg(Type.Int, gamerTagId),
    arg(Type.Int, component),
    arg(Type.Int, hudColorIndex)
  )
end

-- void SET_MP_GAMER_TAG_HEALTH_BAR_COLOUR(int gamerTagId, int hudColorIndex) // 0x3158C77A7E888AB4
--[[
Ranges from 0 to 255. 0 is grey health bar, ~50 yellow, 200 purple.
Should be enabled as flag (2). Has 0 opacity by default.

- This was _SET_MP_GAMER_TAG_HEALTH_BAR_COLOR,
-> Rockstar use the EU spelling of 'color' so I hashed the same name with COLOUR and it came back as the correct hash, so it has been corrected above.
--]]
function HUD.SET_MP_GAMER_TAG_HEALTH_BAR_COLOUR(gamerTagId, hudColorIndex)
  native.invoke(
    Type.Void, 1793, false,
    arg(Type.Int, gamerTagId),
    arg(Type.Int, hudColorIndex)
  )
end

-- void SET_MP_GAMER_TAG_ALPHA(int gamerTagId, int component, int alpha) // 0xD48FE545CD46F857
--[[
Sets flag's sprite transparency. 0-255.
--]]
function HUD.SET_MP_GAMER_TAG_ALPHA(gamerTagId, component, alpha)
  native.invoke(
    Type.Void, 1794, false,
    arg(Type.Int, gamerTagId),
    arg(Type.Int, component),
    arg(Type.Int, alpha)
  )
end

-- void SET_MP_GAMER_TAG_WANTED_LEVEL(int gamerTagId, int wantedlvl) // 0xCF228E2AA03099C3
--[[
displays wanted star above head
--]]
function HUD.SET_MP_GAMER_TAG_WANTED_LEVEL(gamerTagId, wantedlvl)
  native.invoke(
    Type.Void, 1795, false,
    arg(Type.Int, gamerTagId),
    arg(Type.Int, wantedlvl)
  )
end

-- void SET_MP_GAMER_TAG_NUM_PACKAGES(int gamerTagId, int p1) // 0x9C16459B2324B2CF
function HUD.SET_MP_GAMER_TAG_NUM_PACKAGES(gamerTagId, p1)
  native.invoke(
    Type.Void, 1796, false,
    arg(Type.Int, gamerTagId),
    arg(Type.Int, p1)
  )
end

-- void SET_MP_GAMER_TAG_NAME(int gamerTagId, const char* string) // 0xDEA2B8283BAA3944
function HUD.SET_MP_GAMER_TAG_NAME(gamerTagId, string)
  native.invoke(
    Type.Void, 1797, false,
    arg(Type.Int, gamerTagId),
    arg(Type.String, string)
  )
end

-- BOOL IS_UPDATING_MP_GAMER_TAG_NAME_AND_CREW_DETAILS(int gamerTagId) // 0xEB709A36958ABE0D
function HUD.IS_UPDATING_MP_GAMER_TAG_NAME_AND_CREW_DETAILS(gamerTagId)
  return native.invoke(
    Type.Bool, 1798, false,
    arg(Type.Int, gamerTagId)
  )
end

-- void SET_MP_GAMER_TAG_BIG_TEXT(int gamerTagId, const char* string) // 0x7B7723747CCB55B6
function HUD.SET_MP_GAMER_TAG_BIG_TEXT(gamerTagId, string)
  native.invoke(
    Type.Void, 1799, false,
    arg(Type.Int, gamerTagId),
    arg(Type.String, string)
  )
end

-- int GET_CURRENT_WEBPAGE_ID() // 0x01A358D9128B7A86
function HUD.GET_CURRENT_WEBPAGE_ID()
  return native.invoke(
    Type.Int, 1800, false
  )
end

-- int GET_CURRENT_WEBSITE_ID() // 0x97D47996FC48CBAD
function HUD.GET_CURRENT_WEBSITE_ID()
  return native.invoke(
    Type.Int, 1801, false
  )
end

-- int GET_GLOBAL_ACTIONSCRIPT_FLAG(int flagIndex) // 0xE3B05614DCE1D014
--[[
Returns the ActionScript flagValue.
ActionScript flags are global flags that scaleforms use
Flags found during testing
0: Returns 1 if the web_browser keyboard is open, otherwise 0
1: Returns 1 if the player has clicked back twice on the opening page, otherwise 0 (web_browser)
2: Returns how many links the player has clicked in the web_browser scaleform, returns 0 when the browser gets closed
9: Returns the current selection on the mobile phone scaleform

There are 20 flags in total.
--]]
function HUD.GET_GLOBAL_ACTIONSCRIPT_FLAG(flagIndex)
  return native.invoke(
    Type.Int, 1802, false,
    arg(Type.Int, flagIndex)
  )
end

-- void RESET_GLOBAL_ACTIONSCRIPT_FLAG(int flagIndex) // 0xB99C4E4D9499DF29
function HUD.RESET_GLOBAL_ACTIONSCRIPT_FLAG(flagIndex)
  native.invoke(
    Type.Void, 1803, false,
    arg(Type.Int, flagIndex)
  )
end

-- BOOL IS_WARNING_MESSAGE_READY_FOR_CONTROL() // 0xAF42195A42C63BBA
function HUD.IS_WARNING_MESSAGE_READY_FOR_CONTROL()
  return native.invoke(
    Type.Bool, 1804, false
  )
end

-- void SET_WARNING_MESSAGE(const char* titleMsg, int flags, const char* promptMsg, BOOL p3, int p4, const char* p5, const char* p6, BOOL showBackground, int errorCode) // 0x7B1776B3B53F8D74
--[[
You can only use text entries. No custom text.

Example: SET_WARNING_MESSAGE("t20", 3, "adder", false, -1, 0, 0, true);
errorCode: shows an error code at the bottom left if nonzero
--]]
function HUD.SET_WARNING_MESSAGE(titleMsg, flags, promptMsg, p3, p4, p5, p6, showBackground, errorCode)
  native.invoke(
    Type.Void, 1805, false,
    arg(Type.String, titleMsg),
    arg(Type.Int, flags),
    arg(Type.String, promptMsg),
    arg(Type.Bool, p3),
    arg(Type.Int, p4),
    arg(Type.String, p5),
    arg(Type.String, p6),
    arg(Type.Bool, showBackground),
    arg(Type.Int, errorCode)
  )
end

-- void SET_WARNING_MESSAGE_WITH_HEADER(const char* entryHeader, const char* entryLine1, int instructionalKey, const char* entryLine2, BOOL p4, Any p5, Any* showBackground, Any* p7, BOOL p8, Any p9) // 0xDC38CC1E35B6A5D7
--[[
Shows a warning message on screen with a header.
Note: You can only use text entries. No custom text. You can recreate this easily with scaleforms.
Example: https://i.imgur.com/ITJt8bJ.png
--]]
function HUD.SET_WARNING_MESSAGE_WITH_HEADER(entryHeader, entryLine1, instructionalKey, entryLine2, p4, p5, showBackground, p7, p8, p9)
  native.invoke(
    Type.Void, 1806, false,
    arg(Type.String, entryHeader),
    arg(Type.String, entryLine1),
    arg(Type.Int, instructionalKey),
    arg(Type.String, entryLine2),
    arg(Type.Bool, p4),
    arg(Type.Any, p5),
    arg(Type.Any, showBackground),
    arg(Type.Any, p7),
    arg(Type.Bool, p8),
    arg(Type.Any, p9)
  )
end

-- void SET_WARNING_MESSAGE_WITH_HEADER_AND_SUBSTRING_FLAGS(const char* entryHeader, const char* entryLine1, int instructionalKey, const char* entryLine2, BOOL p4, Any p5, Any additionalIntInfo, const char* additionalTextInfoLine1, const char* additionalTextInfoLine2, BOOL showBackground, int errorCode) // 0x701919482C74B5AB
--[[
You can use this native for custom input, without having to use any scaleform-related natives.
The native must be called on tick.
The entryHeader must be a valid label.
For Single lines use JL_INVITE_N as entryLine1, JL_INVITE_ND for multiple.
Notes:
- additionalIntInfo: replaces first occurrence of ~1~ in provided label with an integer
- additionalTextInfoLine1: replaces first occurrence of ~a~ in provided label, with your custom text
- additionalTextInfoLine2: replaces second occurrence of ~a~ in provided label, with your custom text
- showBackground: shows black background of the warning screen
- errorCode: shows an error code at the bottom left if nonzero
Example of usage:
SET_WARNING_MESSAGE_WITH_HEADER_AND_SUBSTRING_FLAGS("ALERT", "JL_INVITE_ND", 66, "", true, -1, -1, "Testing line 1", "Testing line 2", true, 0);
Screenshot:
https://imgur.com/a/IYA7vJ8
--]]
function HUD.SET_WARNING_MESSAGE_WITH_HEADER_AND_SUBSTRING_FLAGS(entryHeader, entryLine1, instructionalKey, entryLine2, p4, p5, additionalIntInfo, additionalTextInfoLine1, additionalTextInfoLine2, showBackground, errorCode)
  native.invoke(
    Type.Void, 1807, false,
    arg(Type.String, entryHeader),
    arg(Type.String, entryLine1),
    arg(Type.Int, instructionalKey),
    arg(Type.String, entryLine2),
    arg(Type.Bool, p4),
    arg(Type.Any, p5),
    arg(Type.Any, additionalIntInfo),
    arg(Type.String, additionalTextInfoLine1),
    arg(Type.String, additionalTextInfoLine2),
    arg(Type.Bool, showBackground),
    arg(Type.Int, errorCode)
  )
end

-- void SET_WARNING_MESSAGE_WITH_HEADER_EXTENDED(const char* entryHeader, const char* entryLine1, int flags, const char* entryLine2, BOOL p4, Any p5, Any* p6, Any* p7, BOOL showBg, Any p9, Any p10) // 0x38B55259C2E078ED
function HUD.SET_WARNING_MESSAGE_WITH_HEADER_EXTENDED(entryHeader, entryLine1, flags, entryLine2, p4, p5, p6, p7, showBg, p9, p10)
  native.invoke(
    Type.Void, 1808, false,
    arg(Type.String, entryHeader),
    arg(Type.String, entryLine1),
    arg(Type.Int, flags),
    arg(Type.String, entryLine2),
    arg(Type.Bool, p4),
    arg(Type.Any, p5),
    arg(Type.Any, p6),
    arg(Type.Any, p7),
    arg(Type.Bool, showBg),
    arg(Type.Any, p9),
    arg(Type.Any, p10)
  )
end

-- void SET_WARNING_MESSAGE_WITH_HEADER_AND_SUBSTRING_FLAGS_EXTENDED(const char* labelTitle, const char* labelMessage, int p2, int p3, const char* labelMessage2, BOOL p5, int p6, int p7, const char* p8, const char* p9, BOOL background, int errorCode) // 0x15803FEC3B9A872B
--[[
labelTitle: Label of the alert's title.
labelMsg: Label of the alert's message.
p2: This is an enum, check the description for a list.
p3: This is an enum, check the description for a list.
labelMsg2: Label of another message line
p5: usually 0
p6: usually -1
p7: usually 0
p8: unknown label
p9: unknown label
background: Set to anything other than 0 or false (even any string) and it will draw a background. Setting it to 0 or false will draw no background.
errorCode: Error code, shown at the bottom left if set to value other than 0.

instructionalKey enum list:
Buttons = {
      Empty = 0,
      Select = 1, -- (RETURN)
      Ok = 2, -- (RETURN)
      Yes = 4, -- (RETURN)
      Back = 8, -- (ESC)
      Cancel = 16, -- (ESC)
      No = 32, -- (ESC)
      RetrySpace = 64, -- (SPACE)
      Restart = 128, -- (SPACE)
      Skip = 256, -- (SPACE)
      Quit = 512, -- (ESC)
      Adjust = 1024, -- (ARROWS)
      SpaceKey = 2048, -- (SPACE)
      Share = 4096, -- (SPACE)
      SignIn = 8192, -- (SPACE)
      Continue = 16384, -- (RETURN)
      AdjustLeftRight = 32768, -- (SCROLL L/R)
      AdjustUpDown = 65536, -- (SCROLL U/D)
      Overwrite = 131072, -- (SPACE)
      SocialClubSignup = 262144, -- (RETURN)
      Confirm = 524288, -- (RETURN)
      Queue = 1048576, -- (RETURN)
      RetryReturn = 2097152, -- (RETURN)
      BackEsc = 4194304, -- (ESC)
      SocialClub = 8388608, -- (RETURN)
      Spectate = 16777216, -- (SPACE)
      OkEsc = 33554432, -- (ESC)
      CancelTransfer = 67108864, -- (ESC)
      LoadingSpinner = 134217728,
      NoReturnToGTA = 268435456, -- (ESC)
      CancelEsc = 536870912, -- (ESC)
}

Alt = {
      Empty = 0,
      No = 1, -- (SPACE)
      Host = 2, -- (ESC)
      SearchForJob = 4, -- (RETURN)
      ReturnKey = 8, -- (TURN)
      Freemode = 16, -- (ESC)
}

Example: https://i.imgur.com/TvmNF4k.png
--]]
function HUD.SET_WARNING_MESSAGE_WITH_HEADER_AND_SUBSTRING_FLAGS_EXTENDED(labelTitle, labelMessage, p2, p3, labelMessage2, p5, p6, p7, p8, p9, background, errorCode)
  native.invoke(
    Type.Void, 1809, false,
    arg(Type.String, labelTitle),
    arg(Type.String, labelMessage),
    arg(Type.Int, p2),
    arg(Type.Int, p3),
    arg(Type.String, labelMessage2),
    arg(Type.Bool, p5),
    arg(Type.Int, p6),
    arg(Type.Int, p7),
    arg(Type.String, p8),
    arg(Type.String, p9),
    arg(Type.Bool, background),
    arg(Type.Int, errorCode)
  )
end

-- Hash GET_WARNING_SCREEN_MESSAGE_HASH() // 0x81DF9ABA6C83DFF9
--[[
Has to do with the confirmation overlay (E.g. confirm exit)
--]]
function HUD.GET_WARNING_SCREEN_MESSAGE_HASH()
  return native.invoke(
    Type.Hash, 1810, false
  )
end

-- BOOL SET_WARNING_MESSAGE_OPTION_ITEMS(int index, const char* name, int cash, int rp, int lvl, int colour) // 0x0C5A80A9E096D529
--[[
Some sort of list displayed in a warning message. Yet unknown how to prevent repeating.
Param names copied from the corresponding scaleform function "SET_LIST_ROW".
Example: https://i.imgur.com/arKvOYx.png
--]]
function HUD.SET_WARNING_MESSAGE_OPTION_ITEMS(index, name, cash, rp, lvl, colour)
  return native.invoke(
    Type.Bool, 1811, false,
    arg(Type.Int, index),
    arg(Type.String, name),
    arg(Type.Int, cash),
    arg(Type.Int, rp),
    arg(Type.Int, lvl),
    arg(Type.Int, colour)
  )
end

-- BOOL SET_WARNING_MESSAGE_OPTION_HIGHLIGHT(Any p0) // 0xDAF87174BE7454FF
function HUD.SET_WARNING_MESSAGE_OPTION_HIGHLIGHT(p0)
  return native.invoke(
    Type.Bool, 1812, false,
    arg(Type.Any, p0)
  )
end

-- void REMOVE_WARNING_MESSAGE_OPTION_ITEMS() // 0x6EF54AB721DC6242
function HUD.REMOVE_WARNING_MESSAGE_OPTION_ITEMS()
  native.invoke(
    Type.Void, 1813, false
  )
end

-- BOOL IS_WARNING_MESSAGE_ACTIVE() // 0xE18B138FABC53103
function HUD.IS_WARNING_MESSAGE_ACTIVE()
  return native.invoke(
    Type.Bool, 1814, false
  )
end

-- void CLEAR_DYNAMIC_PAUSE_MENU_ERROR_MESSAGE() // 0x7792424AA0EAC32E
function HUD.CLEAR_DYNAMIC_PAUSE_MENU_ERROR_MESSAGE()
  native.invoke(
    Type.Void, 1815, false
  )
end

-- void CUSTOM_MINIMAP_SET_ACTIVE(BOOL toggle) // 0x5354C5BA2EA868A4
--[[
If toggle is true, the map is shown in full screen
If toggle is false, the map is shown in normal mode
--]]
function HUD.CUSTOM_MINIMAP_SET_ACTIVE(toggle)
  native.invoke(
    Type.Void, 1816, false,
    arg(Type.Bool, toggle)
  )
end

-- void CUSTOM_MINIMAP_SET_BLIP_OBJECT(int spriteId) // 0x1EAE6DD17B7A5EFA
--[[
Sets the sprite of the next BLIP_GALLERY blip, values used in the native scripts: 143 (ObjectiveBlue), 144 (ObjectiveGreen), 145 (ObjectiveRed), 146 (ObjectiveYellow).
--]]
function HUD.CUSTOM_MINIMAP_SET_BLIP_OBJECT(spriteId)
  native.invoke(
    Type.Void, 1817, false,
    arg(Type.Int, spriteId)
  )
end

-- int CUSTOM_MINIMAP_CREATE_BLIP(float x, float y, float z) // 0x551DF99658DB6EE8
--[[
Add a BLIP_GALLERY at the specific coordinate. Used in fm_maintain_transition_players to display race track points.
--]]
function HUD.CUSTOM_MINIMAP_CREATE_BLIP(x, y, z)
  return native.invoke(
    Type.Int, 1818, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void CUSTOM_MINIMAP_CLEAR_BLIPS() // 0x2708FC083123F9FF
function HUD.CUSTOM_MINIMAP_CLEAR_BLIPS()
  native.invoke(
    Type.Void, 1819, false
  )
end

-- BOOL FORCE_SONAR_BLIPS_THIS_FRAME() // 0x1121BFA1A1A522A8
--[[
Doesn't actually return anything.
--]]
function HUD.FORCE_SONAR_BLIPS_THIS_FRAME()
  return native.invoke(
    Type.Bool, 1820, false
  )
end

-- Blip GET_NORTH_BLID_INDEX() // 0x3F0CF9CB7E589B88
function HUD.GET_NORTH_BLID_INDEX()
  return native.invoke(
    Type.Blip, 1821, false
  )
end

-- void DISPLAY_PLAYER_NAME_TAGS_ON_BLIPS(BOOL toggle) // 0x82CEDC33687E1F50
--[[
Toggles whether or not name labels are shown on the expanded minimap next to player blips, like in GTA:O.
Doesn't need to be called every frame.
Preview: https://i.imgur.com/DfqKWfJ.png

Make sure to call SET_BLIP_CATEGORY with index 7 for this to work on the desired blip.
--]]
function HUD.DISPLAY_PLAYER_NAME_TAGS_ON_BLIPS(toggle)
  native.invoke(
    Type.Void, 1822, false,
    arg(Type.Bool, toggle)
  )
end

-- void DRAW_FRONTEND_BACKGROUND_THIS_FRAME() // 0x211C4EF450086857
--[[
This native does absolutely nothing, just a nullsub
--]]
function HUD.DRAW_FRONTEND_BACKGROUND_THIS_FRAME()
  native.invoke(
    Type.Void, 1823, false
  )
end

-- void DRAW_HUD_OVER_FADE_THIS_FRAME() // 0xBF4F34A85CA2970C
function HUD.DRAW_HUD_OVER_FADE_THIS_FRAME()
  native.invoke(
    Type.Void, 1824, false
  )
end

-- void ACTIVATE_FRONTEND_MENU(Hash menuhash, BOOL togglePause, int component) // 0xEF01D36B9C9D0C7B
--[[
Does stuff like this:
gyazo.com/7fcb78ea3520e3dbc5b2c0c0f3712617

Example:
int GetHash = GET_HASH_KEY("fe_menu_version_corona_lobby");
ACTIVATE_FRONTEND_MENU(GetHash, 0, -1);

BOOL p1 is a toggle to define the game in pause.
int p2 is unknown but -1 always works, not sure why though.

[30/03/2017] ins1de :

the int p2 is actually a component variable. When the pause menu is visible, it opens the tab related to it.

Example : Function.Call(Hash.ACTIVATE_FRONTEND_MENU,-1171018317, 0, 42);
Result : Opens the "Online" tab without pausing the menu, with -1 it opens the map.Below is a list of all known Frontend Menu Hashes.
- FE_MENU_VERSION_SP_PAUSE
- FE_MENU_VERSION_MP_PAUSE
- FE_MENU_VERSION_CREATOR_PAUSE
- FE_MENU_VERSION_CUTSCENE_PAUSE
- FE_MENU_VERSION_SAVEGAME
- FE_MENU_VERSION_PRE_LOBBY
- FE_MENU_VERSION_LOBBY
- FE_MENU_VERSION_MP_CHARACTER_SELECT
- FE_MENU_VERSION_MP_CHARACTER_CREATION
- FE_MENU_VERSION_EMPTY
- FE_MENU_VERSION_EMPTY_NO_BACKGROUND
- FE_MENU_VERSION_TEXT_SELECTION
- FE_MENU_VERSION_CORONA
- FE_MENU_VERSION_CORONA_LOBBY
- FE_MENU_VERSION_CORONA_JOINED_PLAYERS
- FE_MENU_VERSION_CORONA_INVITE_PLAYERS
- FE_MENU_VERSION_CORONA_INVITE_FRIENDS
- FE_MENU_VERSION_CORONA_INVITE_CREWS
- FE_MENU_VERSION_CORONA_INVITE_MATCHED_PLAYERS
- FE_MENU_VERSION_CORONA_INVITE_LAST_JOB_PLAYERS
- FE_MENU_VERSION_CORONA_RACE
- FE_MENU_VERSION_CORONA_BETTING
- FE_MENU_VERSION_JOINING_SCREEN
- FE_MENU_VERSION_LANDING_MENU
- FE_MENU_VERSION_LANDING_KEYMAPPING_MENU
--]]
function HUD.ACTIVATE_FRONTEND_MENU(menuhash, togglePause, component)
  native.invoke(
    Type.Void, 1825, false,
    arg(Type.Hash, menuhash),
    arg(Type.Bool, togglePause),
    arg(Type.Int, component)
  )
end

-- void RESTART_FRONTEND_MENU(Hash menuHash, int p1) // 0x10706DC6AD2D49C0
--[[
Before using this native click the native above and look at the decription.

Example:
int GetHash = Function.Call<int>(Hash.GET_HASH_KEY, "fe_menu_version_corona_lobby");
Function.Call(Hash.ACTIVATE_FRONTEND_MENU, GetHash, 0, -1);
Function.Call(Hash.RESTART_FRONTEND_MENU(GetHash, -1);

This native refreshes the frontend menu.

p1 = Hash of Menu
p2 = Unknown but always works with -1.
--]]
function HUD.RESTART_FRONTEND_MENU(menuHash, p1)
  native.invoke(
    Type.Void, 1826, false,
    arg(Type.Hash, menuHash),
    arg(Type.Int, p1)
  )
end

-- Hash GET_CURRENT_FRONTEND_MENU_VERSION() // 0x2309595AD6145265
--[[
if (HUD::GET_CURRENT_FRONTEND_MENU_VERSION() == joaat("fe_menu_version_empty_no_background"))
--]]
function HUD.GET_CURRENT_FRONTEND_MENU_VERSION()
  return native.invoke(
    Type.Hash, 1827, false
  )
end

-- void SET_PAUSE_MENU_ACTIVE(BOOL toggle) // 0xDF47FC56C71569CF
function HUD.SET_PAUSE_MENU_ACTIVE(toggle)
  native.invoke(
    Type.Void, 1828, false,
    arg(Type.Bool, toggle)
  )
end

-- void DISABLE_FRONTEND_THIS_FRAME() // 0x6D3465A73092F0E6
function HUD.DISABLE_FRONTEND_THIS_FRAME()
  native.invoke(
    Type.Void, 1829, false
  )
end

-- void SUPPRESS_FRONTEND_RENDERING_THIS_FRAME() // 0xBA751764F0821256
function HUD.SUPPRESS_FRONTEND_RENDERING_THIS_FRAME()
  native.invoke(
    Type.Void, 1830, false
  )
end

-- void ALLOW_PAUSE_WHEN_NOT_IN_STATE_OF_PLAY_THIS_FRAME() // 0xCC3FDDED67BCFC63
--[[
Allows opening the pause menu this frame, when the player is dead.
--]]
function HUD.ALLOW_PAUSE_WHEN_NOT_IN_STATE_OF_PLAY_THIS_FRAME()
  native.invoke(
    Type.Void, 1831, false
  )
end

-- void SET_FRONTEND_ACTIVE(BOOL active) // 0x745711A75AB09277
function HUD.SET_FRONTEND_ACTIVE(active)
  native.invoke(
    Type.Void, 1832, false,
    arg(Type.Bool, active)
  )
end

-- BOOL IS_PAUSE_MENU_ACTIVE() // 0xB0034A223497FFCB
function HUD.IS_PAUSE_MENU_ACTIVE()
  return native.invoke(
    Type.Bool, 1833, false
  )
end

-- BOOL IS_STORE_PENDING_NETWORK_SHUTDOWN_TO_OPEN() // 0x2F057596F2BD0061
function HUD.IS_STORE_PENDING_NETWORK_SHUTDOWN_TO_OPEN()
  return native.invoke(
    Type.Bool, 1834, false
  )
end

-- int GET_PAUSE_MENU_STATE() // 0x272ACD84970869C5
--[[
Returns:

0
5
10
15
20
25
30
35

--]]
function HUD.GET_PAUSE_MENU_STATE()
  return native.invoke(
    Type.Int, 1835, false
  )
end

-- Vector3 GET_PAUSE_MENU_POSITION() // 0x5BFF36D6ED83E0AE
function HUD.GET_PAUSE_MENU_POSITION()
  return native.invoke(
    Type.Vector3, 1836, false
  )
end

-- BOOL IS_PAUSE_MENU_RESTARTING() // 0x1C491717107431C7
function HUD.IS_PAUSE_MENU_RESTARTING()
  return native.invoke(
    Type.Bool, 1837, false
  )
end

-- void FORCE_SCRIPTED_GFX_WHEN_FRONTEND_ACTIVE(const char* p0) // 0x2162C446DFDF38FD
--[[
Not present in retail version of the game, actual definiton seems to be
_LOG_DEBUG_INFO(const char* category, const char* debugText);
--]]
function HUD.FORCE_SCRIPTED_GFX_WHEN_FRONTEND_ACTIVE(p0)
  native.invoke(
    Type.Void, 1838, false,
    arg(Type.String, p0)
  )
end

-- void PAUSE_MENUCEPTION_GO_DEEPER(int page) // 0x77F16B447824DA6C
function HUD.PAUSE_MENUCEPTION_GO_DEEPER(page)
  native.invoke(
    Type.Void, 1839, false,
    arg(Type.Int, page)
  )
end

-- void PAUSE_MENUCEPTION_THE_KICK() // 0xCDCA26E80FAECB8F
function HUD.PAUSE_MENUCEPTION_THE_KICK()
  native.invoke(
    Type.Void, 1840, false
  )
end

-- void PAUSE_TOGGLE_FULLSCREEN_MAP(Any p0) // 0x2DE6C5E2E996F178
function HUD.PAUSE_TOGGLE_FULLSCREEN_MAP(p0)
  native.invoke(
    Type.Void, 1841, false,
    arg(Type.Any, p0)
  )
end

-- void PAUSE_MENU_ACTIVATE_CONTEXT(Hash contextHash) // 0xDD564BDD0472C936
--[[
Activates the specified frontend menu context.
pausemenu.xml defines some specific menu options using 'context'. Context is basically a 'condition'. 
The `*ALL*` part of the context means that whatever is being defined, will be active when any or all of those conditions after `*ALL*` are met.
The `*NONE*` part of the context section means that whatever is being defined, will NOT be active if any or all of the conditions after `*NONE*` are met.
This basically allows you to hide certain menu sections, or things like instructional buttons.
--]]
function HUD.PAUSE_MENU_ACTIVATE_CONTEXT(contextHash)
  native.invoke(
    Type.Void, 1842, false,
    arg(Type.Hash, contextHash)
  )
end

-- void PAUSE_MENU_DEACTIVATE_CONTEXT(Hash contextHash) // 0x444D8CF241EC25C5
function HUD.PAUSE_MENU_DEACTIVATE_CONTEXT(contextHash)
  native.invoke(
    Type.Void, 1843, false,
    arg(Type.Hash, contextHash)
  )
end

-- BOOL PAUSE_MENU_IS_CONTEXT_ACTIVE(Hash contextHash) // 0x84698AB38D0C6636
function HUD.PAUSE_MENU_IS_CONTEXT_ACTIVE(contextHash)
  return native.invoke(
    Type.Bool, 1844, false,
    arg(Type.Hash, contextHash)
  )
end

-- BOOL PAUSE_MENU_IS_CONTEXT_MENU_ACTIVE() // 0x2A25ADC48F87841F
function HUD.PAUSE_MENU_IS_CONTEXT_MENU_ACTIVE()
  return native.invoke(
    Type.Bool, 1845, false
  )
end

-- int PAUSE_MENU_GET_HAIR_COLOUR_INDEX() // 0xDE03620F8703A9DF
function HUD.PAUSE_MENU_GET_HAIR_COLOUR_INDEX()
  return native.invoke(
    Type.Int, 1846, false
  )
end

-- int PAUSE_MENU_GET_MOUSE_HOVER_INDEX() // 0x359AF31A4B52F5ED
function HUD.PAUSE_MENU_GET_MOUSE_HOVER_INDEX()
  return native.invoke(
    Type.Int, 1847, false
  )
end

-- int PAUSE_MENU_GET_MOUSE_HOVER_UNIQUE_ID() // 0x13C4B962653A5280
function HUD.PAUSE_MENU_GET_MOUSE_HOVER_UNIQUE_ID()
  return native.invoke(
    Type.Int, 1848, false
  )
end

-- BOOL PAUSE_MENU_GET_MOUSE_CLICK_EVENT(Any* p0, Any* p1, Any* p2) // 0xC8E1071177A23BE5
function HUD.PAUSE_MENU_GET_MOUSE_CLICK_EVENT(p0, p1, p2)
  return native.invoke(
    Type.Bool, 1849, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void PAUSE_MENU_REDRAW_INSTRUCTIONAL_BUTTONS(int p0) // 0x4895BDEA16E7C080
function HUD.PAUSE_MENU_REDRAW_INSTRUCTIONAL_BUTTONS(p0)
  native.invoke(
    Type.Void, 1850, false,
    arg(Type.Int, p0)
  )
end

-- void PAUSE_MENU_SET_BUSY_SPINNER(BOOL p0, int position, int spinnerIndex) // 0xC78E239AC5B2DDB9
function HUD.PAUSE_MENU_SET_BUSY_SPINNER(p0, position, spinnerIndex)
  native.invoke(
    Type.Void, 1851, false,
    arg(Type.Bool, p0),
    arg(Type.Int, position),
    arg(Type.Int, spinnerIndex)
  )
end

-- void PAUSE_MENU_SET_WARN_ON_TAB_CHANGE(BOOL p0) // 0xF06EBB91A81E09E3
function HUD.PAUSE_MENU_SET_WARN_ON_TAB_CHANGE(p0)
  native.invoke(
    Type.Void, 1852, false,
    arg(Type.Bool, p0)
  )
end

-- BOOL IS_FRONTEND_READY_FOR_CONTROL() // 0x3BAB9A4E4F2FF5C7
function HUD.IS_FRONTEND_READY_FOR_CONTROL()
  return native.invoke(
    Type.Bool, 1853, false
  )
end

-- void TAKE_CONTROL_OF_FRONTEND() // 0xEC9264727EEC0F28
--[[
Disables frontend (works in custom frontends, not sure about regular pause menu) navigation keys on keyboard. Not sure about controller. Does not disable mouse controls. No need to call this every tick.

To enable the keys again, use `0x14621BB1DF14E2B2`.
--]]
function HUD.TAKE_CONTROL_OF_FRONTEND()
  native.invoke(
    Type.Void, 1854, false
  )
end

-- void RELEASE_CONTROL_OF_FRONTEND() // 0x14621BB1DF14E2B2
--[[
Enables frontend (works in custom frontends, not sure about regular pause menu) navigation keys on keyboard if they were disabled using the native below.
To disable the keys, use `0xEC9264727EEC0F28`
--]]
function HUD.RELEASE_CONTROL_OF_FRONTEND()
  native.invoke(
    Type.Void, 1855, false
  )
end

-- BOOL CODE_WANTS_SCRIPT_TO_TAKE_CONTROL() // 0x66E7CB63C97B7D20
function HUD.CODE_WANTS_SCRIPT_TO_TAKE_CONTROL()
  return native.invoke(
    Type.Bool, 1856, false
  )
end

-- int GET_SCREEN_CODE_WANTS_SCRIPT_TO_CONTROL() // 0x593FEAE1F73392D4
function HUD.GET_SCREEN_CODE_WANTS_SCRIPT_TO_CONTROL()
  return native.invoke(
    Type.Int, 1857, false
  )
end

-- BOOL IS_NAVIGATING_MENU_CONTENT() // 0x4E3CD0EF8A489541
function HUD.IS_NAVIGATING_MENU_CONTENT()
  return native.invoke(
    Type.Bool, 1858, false
  )
end

-- BOOL HAS_MENU_TRIGGER_EVENT_OCCURRED() // 0xF284AC67940C6812
function HUD.HAS_MENU_TRIGGER_EVENT_OCCURRED()
  return native.invoke(
    Type.Bool, 1859, false
  )
end

-- BOOL HAS_MENU_LAYOUT_CHANGED_EVENT_OCCURRED() // 0x2E22FEFA0100275E
function HUD.HAS_MENU_LAYOUT_CHANGED_EVENT_OCCURRED()
  return native.invoke(
    Type.Bool, 1860, false
  )
end

-- void SET_SAVEGAME_LIST_UNIQUE_ID(Any p0) // 0x0CF54F20DE43879C
function HUD.SET_SAVEGAME_LIST_UNIQUE_ID(p0)
  native.invoke(
    Type.Void, 1861, false,
    arg(Type.Any, p0)
  )
end

-- void GET_MENU_TRIGGER_EVENT_DETAILS(int* lastItemMenuId, int* selectedItemUniqueId) // 0x36C1451A88A09630
function HUD.GET_MENU_TRIGGER_EVENT_DETAILS(lastItemMenuId, selectedItemUniqueId)
  native.invoke(
    Type.Void, 1862, false,
    arg(Type.Int, lastItemMenuId),
    arg(Type.Int, selectedItemUniqueId)
  )
end

-- void GET_MENU_LAYOUT_CHANGED_EVENT_DETAILS(int* lastItemMenuId, int* selectedItemMenuId, int* selectedItemUniqueId) // 0x7E17BE53E1AAABAF
--[[
lastItemMenuId: this is the menuID of the last selected item minus 1000 (lastItem.menuID - 1000)
selectedItemMenuId: same as lastItemMenuId except for the currently selected menu item
selectedItemUniqueId: this is uniqueID of the currently selected menu item

when the pausemenu is closed:
lastItemMenuId = -1
selectedItemMenuId = -1
selectedItemUniqueId = 0

when the header gains focus:
lastItemMenuId updates as normal or 0 if the pausemenu was just opened
selectedItemMenuId becomes a unique id for the pausemenu page that focus was taken from (?) or 0 if the pausemenu was just opened
selectedItemUniqueId = -1

when focus is moved from the header to a pausemenu page:
lastItemMenuId becomes a unique id for the pausemenu page that focus was moved to (?)
selectedItemMenuId = -1
selectedItemUniqueId updates as normal
--]]
function HUD.GET_MENU_LAYOUT_CHANGED_EVENT_DETAILS(lastItemMenuId, selectedItemMenuId, selectedItemUniqueId)
  native.invoke(
    Type.Void, 1863, false,
    arg(Type.Int, lastItemMenuId),
    arg(Type.Int, selectedItemMenuId),
    arg(Type.Int, selectedItemUniqueId)
  )
end

-- BOOL GET_PM_PLAYER_CREW_COLOR(int* r, int* g, int* b) // 0xA238192F33110615
function HUD.GET_PM_PLAYER_CREW_COLOR(r, g, b)
  return native.invoke(
    Type.Bool, 1864, false,
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b)
  )
end

-- BOOL GET_MENU_PED_INT_STAT(Any p0, Any* p1) // 0xEF4CED81CEBEDC6D
function HUD.GET_MENU_PED_INT_STAT(p0, p1)
  return native.invoke(
    Type.Bool, 1865, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL GET_CHARACTER_MENU_PED_INT_STAT(Any p0, Any* p1, Any p2) // 0xCA6B2F7CE32AB653
function HUD.GET_CHARACTER_MENU_PED_INT_STAT(p0, p1, p2)
  return native.invoke(
    Type.Bool, 1866, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- BOOL GET_MENU_PED_MASKED_INT_STAT(Hash statHash, int* outValue, int mask, BOOL p3) // 0x90A6526CF0381030
function HUD.GET_MENU_PED_MASKED_INT_STAT(statHash, outValue, mask, p3)
  return native.invoke(
    Type.Bool, 1867, false,
    arg(Type.Hash, statHash),
    arg(Type.Int, outValue),
    arg(Type.Int, mask),
    arg(Type.Bool, p3)
  )
end

-- BOOL GET_CHARACTER_MENU_PED_MASKED_INT_STAT(Hash statHash, Any* outValue, int p2, int mask, BOOL p4) // 0x24A49BEAF468DC90
function HUD.GET_CHARACTER_MENU_PED_MASKED_INT_STAT(statHash, outValue, p2, mask, p4)
  return native.invoke(
    Type.Bool, 1868, false,
    arg(Type.Hash, statHash),
    arg(Type.Any, outValue),
    arg(Type.Int, p2),
    arg(Type.Int, mask),
    arg(Type.Bool, p4)
  )
end

-- BOOL GET_MENU_PED_FLOAT_STAT(Hash statHash, float* outValue) // 0x5FBD7095FE7AE57F
function HUD.GET_MENU_PED_FLOAT_STAT(statHash, outValue)
  return native.invoke(
    Type.Bool, 1869, false,
    arg(Type.Hash, statHash),
    arg(Type.Float, outValue)
  )
end

-- BOOL GET_CHARACTER_MENU_PED_FLOAT_STAT(float statHash, float* outValue, BOOL p2) // 0x8F08017F9D7C47BD
function HUD.GET_CHARACTER_MENU_PED_FLOAT_STAT(statHash, outValue, p2)
  return native.invoke(
    Type.Bool, 1870, false,
    arg(Type.Float, statHash),
    arg(Type.Float, outValue),
    arg(Type.Bool, p2)
  )
end

-- BOOL GET_MENU_PED_BOOL_STAT(Hash statHash, BOOL* outValue) // 0x052991E59076E4E4
--[[
p0 was always 0xAE2602A3.
--]]
function HUD.GET_MENU_PED_BOOL_STAT(statHash, outValue)
  return native.invoke(
    Type.Bool, 1871, false,
    arg(Type.Hash, statHash),
    arg(Type.Bool, outValue)
  )
end

-- void CLEAR_PED_IN_PAUSE_MENU() // 0x5E62BE5DC58E9E06
function HUD.CLEAR_PED_IN_PAUSE_MENU()
  native.invoke(
    Type.Void, 1872, false
  )
end

-- void GIVE_PED_TO_PAUSE_MENU(Ped ped, int p1) // 0xAC0BFBDC3BE00E14
--[[
p1 is either 1 or 2 in the PC scripts.
--]]
function HUD.GIVE_PED_TO_PAUSE_MENU(ped, p1)
  native.invoke(
    Type.Void, 1873, false,
    arg(Type.Ped, ped),
    arg(Type.Int, p1)
  )
end

-- void SET_PAUSE_MENU_PED_LIGHTING(BOOL state) // 0x3CA6050692BC61B0
--[[
Toggles the light state for the pause menu ped in frontend menus.

This is used by R* in combination with `SET_PAUSE_MENU_PED_SLEEP_STATE` to toggle the "offline" or "online" state in the "friends" tab of the pause menu in GTA Online.


Example:
Lights On: https://vespura.com/hi/i/2019-04-01_16-09_540ee_1015.png
Lights Off: https://vespura.com/hi/i/2019-04-01_16-10_8b5e7_1016.png
--]]
function HUD.SET_PAUSE_MENU_PED_LIGHTING(state)
  native.invoke(
    Type.Void, 1874, false,
    arg(Type.Bool, state)
  )
end

-- void SET_PAUSE_MENU_PED_SLEEP_STATE(BOOL state) // 0xECF128344E9FF9F1
--[[
Toggles the pause menu ped sleep state for frontend menus.

Example: https://vespura.com/hi/i/2019-04-01_15-51_8ed38_1014.gif

`state` 0 will make the ped slowly fall asleep, 1 will slowly wake the ped up.
--]]
function HUD.SET_PAUSE_MENU_PED_SLEEP_STATE(state)
  native.invoke(
    Type.Void, 1875, false,
    arg(Type.Bool, state)
  )
end

-- void OPEN_ONLINE_POLICIES_MENU() // 0x805D7CBB36FD6C4C
function HUD.OPEN_ONLINE_POLICIES_MENU()
  native.invoke(
    Type.Void, 1876, false
  )
end

-- BOOL ARE_ONLINE_POLICIES_UP_TO_DATE() // 0xF13FE2A80C05C561
function HUD.ARE_ONLINE_POLICIES_UP_TO_DATE()
  return native.invoke(
    Type.Bool, 1877, false
  )
end

-- BOOL IS_ONLINE_POLICIES_MENU_ACTIVE() // 0x6F72CD94F7B5B68C
--[[
Returns the same as IS_SOCIAL_CLUB_ACTIVE
--]]
function HUD.IS_ONLINE_POLICIES_MENU_ACTIVE()
  return native.invoke(
    Type.Bool, 1878, false
  )
end

-- void OPEN_SOCIAL_CLUB_MENU(Hash menu) // 0x75D3691713C3B05A
--[[
Uses the `SOCIAL_CLUB2` scaleform.
menu: GALLERY, MISSIONS, CREWS, MIGRATE, PLAYLISTS, JOBS
--]]
function HUD.OPEN_SOCIAL_CLUB_MENU(menu)
  native.invoke(
    Type.Void, 1879, false,
    arg(Type.Hash, menu)
  )
end

-- void CLOSE_SOCIAL_CLUB_MENU() // 0xD2B32BE3FC1626C6
function HUD.CLOSE_SOCIAL_CLUB_MENU()
  native.invoke(
    Type.Void, 1880, false
  )
end

-- void SET_SOCIAL_CLUB_TOUR(const char* name) // 0x9E778248D6685FE0
--[[
HUD::SET_SOCIAL_CLUB_TOUR("Gallery");
HUD::SET_SOCIAL_CLUB_TOUR("Missions");
HUD::SET_SOCIAL_CLUB_TOUR("General");
HUD::SET_SOCIAL_CLUB_TOUR("Playlists");
--]]
function HUD.SET_SOCIAL_CLUB_TOUR(name)
  native.invoke(
    Type.Void, 1881, false,
    arg(Type.String, name)
  )
end

-- BOOL IS_SOCIAL_CLUB_ACTIVE() // 0xC406BE343FC4B9AF
function HUD.IS_SOCIAL_CLUB_ACTIVE()
  return native.invoke(
    Type.Bool, 1882, false
  )
end

-- void SET_TEXT_INPUT_BOX_ENABLED(BOOL p0) // 0x1185A8087587322C
function HUD.SET_TEXT_INPUT_BOX_ENABLED(p0)
  native.invoke(
    Type.Void, 1883, false,
    arg(Type.Bool, p0)
  )
end

-- void FORCE_CLOSE_TEXT_INPUT_BOX() // 0x8817605C2BA76200
function HUD.FORCE_CLOSE_TEXT_INPUT_BOX()
  native.invoke(
    Type.Void, 1884, false
  )
end

-- void SET_ALLOW_COMMA_ON_TEXT_INPUT(Any p0) // 0x577599CCED639CA2
function HUD.SET_ALLOW_COMMA_ON_TEXT_INPUT(p0)
  native.invoke(
    Type.Void, 1885, false,
    arg(Type.Any, p0)
  )
end

-- void OVERRIDE_MP_TEXT_CHAT_TEAM_STRING(Hash gxtEntryHash) // 0x6A1738B4323FE2D9
function HUD.OVERRIDE_MP_TEXT_CHAT_TEAM_STRING(gxtEntryHash)
  native.invoke(
    Type.Void, 1886, false,
    arg(Type.Hash, gxtEntryHash)
  )
end

-- BOOL IS_MP_TEXT_CHAT_TYPING() // 0xB118AF58B5F332A1
--[[
Returns whether or not the text chat (MULTIPLAYER_CHAT Scaleform component) is active.
--]]
function HUD.IS_MP_TEXT_CHAT_TYPING()
  return native.invoke(
    Type.Bool, 1887, false
  )
end

-- void CLOSE_MP_TEXT_CHAT() // 0x1AC8F4AD40E22127
function HUD.CLOSE_MP_TEXT_CHAT()
  native.invoke(
    Type.Void, 1888, false
  )
end

-- void MP_TEXT_CHAT_IS_TEAM_JOB(Any p0) // 0x7C226D5346D4D10A
function HUD.MP_TEXT_CHAT_IS_TEAM_JOB(p0)
  native.invoke(
    Type.Void, 1889, false,
    arg(Type.Any, p0)
  )
end

-- void OVERRIDE_MP_TEXT_CHAT_COLOR(int p0, int hudColor) // 0xF47E567B3630DD12
function HUD.OVERRIDE_MP_TEXT_CHAT_COLOR(p0, hudColor)
  native.invoke(
    Type.Void, 1890, false,
    arg(Type.Int, p0),
    arg(Type.Int, hudColor)
  )
end

-- void MP_TEXT_CHAT_DISABLE(BOOL toggle) // 0x1DB21A44B09E8BA3
--[[
Hides the chat history, closes the input box and makes it unable to be opened unless called again with FALSE.
--]]
function HUD.MP_TEXT_CHAT_DISABLE(toggle)
  native.invoke(
    Type.Void, 1891, false,
    arg(Type.Bool, toggle)
  )
end

-- void FLAG_PLAYER_CONTEXT_IN_TOURNAMENT(BOOL toggle) // 0xCEF214315D276FD1
function HUD.FLAG_PLAYER_CONTEXT_IN_TOURNAMENT(toggle)
  native.invoke(
    Type.Void, 1892, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_HAS_AI_BLIP(Ped ped, BOOL hasCone) // 0xD30C50DF888D58B5
--[[
This native turns on the AI blip on the specified ped. It also disappears automatically when the ped is too far or if the ped is dead. You don't need to control it with other natives.

See gtaforums.com/topic/884370-native-research-ai-blips for further information.
--]]
function HUD.SET_PED_HAS_AI_BLIP(ped, hasCone)
  native.invoke(
    Type.Void, 1893, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, hasCone)
  )
end

-- void SET_PED_HAS_AI_BLIP_WITH_COLOUR(Ped ped, BOOL hasCone, int color) // 0xB13DCB4C6FAAD238
--[[
color: see SET_BLIP_COLOUR
--]]
function HUD.SET_PED_HAS_AI_BLIP_WITH_COLOUR(ped, hasCone, color)
  native.invoke(
    Type.Void, 1894, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, hasCone),
    arg(Type.Int, color)
  )
end

-- BOOL DOES_PED_HAVE_AI_BLIP(Ped ped) // 0x15B8ECF844EE67ED
function HUD.DOES_PED_HAVE_AI_BLIP(ped)
  return native.invoke(
    Type.Bool, 1895, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_AI_BLIP_GANG_ID(Ped ped, int gangId) // 0xE52B8E7F85D39A08
function HUD.SET_PED_AI_BLIP_GANG_ID(ped, gangId)
  native.invoke(
    Type.Void, 1896, false,
    arg(Type.Ped, ped),
    arg(Type.Int, gangId)
  )
end

-- void SET_PED_AI_BLIP_HAS_CONE(Ped ped, BOOL toggle) // 0x3EED80DFF7325CAA
function HUD.SET_PED_AI_BLIP_HAS_CONE(ped, toggle)
  native.invoke(
    Type.Void, 1897, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_AI_BLIP_FORCED_ON(Ped ped, BOOL toggle) // 0x0C4BBF625CA98C4E
function HUD.SET_PED_AI_BLIP_FORCED_ON(ped, toggle)
  native.invoke(
    Type.Void, 1898, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_AI_BLIP_NOTICE_RANGE(Ped ped, float range) // 0x97C65887D4B37FA9
function HUD.SET_PED_AI_BLIP_NOTICE_RANGE(ped, range)
  native.invoke(
    Type.Void, 1899, false,
    arg(Type.Ped, ped),
    arg(Type.Float, range)
  )
end

-- void SET_PED_AI_BLIP_SPRITE(Ped ped, int spriteId) // 0xFCFACD0DB9D7A57D
function HUD.SET_PED_AI_BLIP_SPRITE(ped, spriteId)
  native.invoke(
    Type.Void, 1900, false,
    arg(Type.Ped, ped),
    arg(Type.Int, spriteId)
  )
end

-- Blip GET_AI_PED_PED_BLIP_INDEX(Ped ped) // 0x7CD934010E115C2C
function HUD.GET_AI_PED_PED_BLIP_INDEX(ped)
  return native.invoke(
    Type.Blip, 1901, false,
    arg(Type.Ped, ped)
  )
end

-- Blip GET_AI_PED_VEHICLE_BLIP_INDEX(Ped ped) // 0x56176892826A4FE8
--[[
Returns the current AI BLIP for the specified ped
--]]
function HUD.GET_AI_PED_VEHICLE_BLIP_INDEX(ped)
  return native.invoke(
    Type.Blip, 1902, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL HAS_DIRECTOR_MODE_BEEN_LAUNCHED_BY_CODE() // 0xA277800A9EAE340E
function HUD.HAS_DIRECTOR_MODE_BEEN_LAUNCHED_BY_CODE()
  return native.invoke(
    Type.Bool, 1903, false
  )
end

-- void SET_DIRECTOR_MODE_LAUNCHED_BY_SCRIPT() // 0x2632482FD6B9AB87
function HUD.SET_DIRECTOR_MODE_LAUNCHED_BY_SCRIPT()
  native.invoke(
    Type.Void, 1904, false
  )
end

-- void SET_PLAYER_IS_IN_DIRECTOR_MODE(BOOL toggle) // 0x808519373FD336A3
--[[
If toggle is true, hides special ability bar / character name in the pause menu
If toggle is false, shows special ability bar / character name in the pause menu
--]]
function HUD.SET_PLAYER_IS_IN_DIRECTOR_MODE(toggle)
  native.invoke(
    Type.Void, 1905, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_DIRECTOR_MODE_AVAILABLE(BOOL toggle) // 0x04655F9D075D0AE5
function HUD.SET_DIRECTOR_MODE_AVAILABLE(toggle)
  native.invoke(
    Type.Void, 1906, false,
    arg(Type.Bool, toggle)
  )
end

-- void HIDE_HUDMARKERS_THIS_FRAME() // 0x243296A510B562B6
function HUD.HIDE_HUDMARKERS_THIS_FRAME()
  native.invoke(
    Type.Void, 1907, false
  )
end


INTERIOR = {}

-- float GET_INTERIOR_HEADING(Interior interior) // 0xF49B58631D9E22D9
function INTERIOR.GET_INTERIOR_HEADING(interior)
  return native.invoke(
    Type.Float, 1908, false,
    arg(Type.Interior, interior)
  )
end

-- void GET_INTERIOR_LOCATION_AND_NAMEHASH(Interior interior, Vector3* position, Hash* nameHash) // 0x252BDC06B73FA6EA
function INTERIOR.GET_INTERIOR_LOCATION_AND_NAMEHASH(interior, position, nameHash)
  native.invoke(
    Type.Void, 1909, true,
    arg(Type.Interior, interior),
    arg(Type.Vector3, position),
    arg(Type.Hash, nameHash)
  )
end

-- int GET_INTERIOR_GROUP_ID(Interior interior) // 0xE4A84ABF135EF91A
--[[
Returns the group ID of the specified interior.
0 = default
1 = subway station, subway tracks, sewers
3 = train tunnel under mirror park
5 = tunnel near del perro
6 = train tunnel near chilliad
7 = train tunnel near josiah
8 = train tunnel in sandy shores
9 = braddock tunnel (near chilliad)
12 = tunnel under fort zancudo
14 = train tunnel under cypress flats
18 = rockford plaza parking garage
19 = arcadius parking garage
20 = union depository parking garage
21 = fib parking garage
--]]
function INTERIOR.GET_INTERIOR_GROUP_ID(interior)
  return native.invoke(
    Type.Int, 1910, false,
    arg(Type.Interior, interior)
  )
end

-- Vector3 GET_OFFSET_FROM_INTERIOR_IN_WORLD_COORDS(Interior interior, float x, float y, float z) // 0x9E3B3E6D66F6E22F
function INTERIOR.GET_OFFSET_FROM_INTERIOR_IN_WORLD_COORDS(interior, x, y, z)
  return native.invoke(
    Type.Vector3, 1911, false,
    arg(Type.Interior, interior),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- BOOL IS_INTERIOR_SCENE() // 0xBC72B5D7A1CBD54D
function INTERIOR.IS_INTERIOR_SCENE()
  return native.invoke(
    Type.Bool, 1912, false
  )
end

-- BOOL IS_VALID_INTERIOR(Interior interior) // 0x26B0E73D7EAAF4D3
function INTERIOR.IS_VALID_INTERIOR(interior)
  return native.invoke(
    Type.Bool, 1913, false,
    arg(Type.Interior, interior)
  )
end

-- void CLEAR_ROOM_FOR_ENTITY(Entity entity) // 0xB365FC0C4E27FFA7
function INTERIOR.CLEAR_ROOM_FOR_ENTITY(entity)
  native.invoke(
    Type.Void, 1914, false,
    arg(Type.Entity, entity)
  )
end

-- void FORCE_ROOM_FOR_ENTITY(Entity entity, Interior interior, Hash roomHashKey) // 0x52923C4710DD9907
function INTERIOR.FORCE_ROOM_FOR_ENTITY(entity, interior, roomHashKey)
  native.invoke(
    Type.Void, 1915, false,
    arg(Type.Entity, entity),
    arg(Type.Interior, interior),
    arg(Type.Hash, roomHashKey)
  )
end

-- Hash GET_ROOM_KEY_FROM_ENTITY(Entity entity) // 0x47C2A06D4F5F424B
--[[
Gets the room hash key from the room that the specified entity is in. Each room in every interior has a unique key. Returns 0 if the entity is outside.
--]]
function INTERIOR.GET_ROOM_KEY_FROM_ENTITY(entity)
  return native.invoke(
    Type.Hash, 1916, false,
    arg(Type.Entity, entity)
  )
end

-- Hash GET_KEY_FOR_ENTITY_IN_ROOM(Entity entity) // 0x399685DB942336BC
--[[
Seems to do the exact same as INTERIOR::GET_ROOM_KEY_FROM_ENTITY
--]]
function INTERIOR.GET_KEY_FOR_ENTITY_IN_ROOM(entity)
  return native.invoke(
    Type.Hash, 1917, false,
    arg(Type.Entity, entity)
  )
end

-- Interior GET_INTERIOR_FROM_ENTITY(Entity entity) // 0x2107BA504071A6BB
--[[
Returns the handle of the interior that the entity is in. Returns 0 if outside.
--]]
function INTERIOR.GET_INTERIOR_FROM_ENTITY(entity)
  return native.invoke(
    Type.Interior, 1918, false,
    arg(Type.Entity, entity)
  )
end

-- void RETAIN_ENTITY_IN_INTERIOR(Entity entity, Interior interior) // 0x82EBB79E258FA2B7
function INTERIOR.RETAIN_ENTITY_IN_INTERIOR(entity, interior)
  native.invoke(
    Type.Void, 1919, false,
    arg(Type.Entity, entity),
    arg(Type.Interior, interior)
  )
end

-- void CLEAR_INTERIOR_STATE_OF_ENTITY(Entity entity) // 0x85D5422B2039A70D
--[[
Immediately removes entity from an interior. Like sets entity to `limbo` room.
--]]
function INTERIOR.CLEAR_INTERIOR_STATE_OF_ENTITY(entity)
  native.invoke(
    Type.Void, 1920, false,
    arg(Type.Entity, entity)
  )
end

-- void FORCE_ACTIVATING_TRACKING_ON_ENTITY(Any p0, Any p1) // 0x38C1CB1CB119A016
function INTERIOR.FORCE_ACTIVATING_TRACKING_ON_ENTITY(p0, p1)
  native.invoke(
    Type.Void, 1921, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void FORCE_ROOM_FOR_GAME_VIEWPORT(int interiorID, Hash roomHashKey) // 0x920D853F3E17F1DA
function INTERIOR.FORCE_ROOM_FOR_GAME_VIEWPORT(interiorID, roomHashKey)
  native.invoke(
    Type.Void, 1922, false,
    arg(Type.Int, interiorID),
    arg(Type.Hash, roomHashKey)
  )
end

-- void SET_ROOM_FOR_GAME_VIEWPORT_BY_NAME(const char* roomName) // 0xAF348AFCB575A441
--[[
Example of use (carmod_shop)
INTERIOR::SET_ROOM_FOR_GAME_VIEWPORT_BY_NAME("V_CarModRoom");
--]]
function INTERIOR.SET_ROOM_FOR_GAME_VIEWPORT_BY_NAME(roomName)
  native.invoke(
    Type.Void, 1923, false,
    arg(Type.String, roomName)
  )
end

-- void SET_ROOM_FOR_GAME_VIEWPORT_BY_KEY(Hash roomHashKey) // 0x405DC2AEF6AF95B9
--[[
Usage: INTERIOR::SET_ROOM_FOR_GAME_VIEWPORT_BY_KEY(INTERIOR::GET_KEY_FOR_ENTITY_IN_ROOM(PLAYER::PLAYER_PED_ID()));
--]]
function INTERIOR.SET_ROOM_FOR_GAME_VIEWPORT_BY_KEY(roomHashKey)
  native.invoke(
    Type.Void, 1924, false,
    arg(Type.Hash, roomHashKey)
  )
end

-- Hash GET_ROOM_KEY_FOR_GAME_VIEWPORT() // 0xA6575914D2A0B450
function INTERIOR.GET_ROOM_KEY_FOR_GAME_VIEWPORT()
  return native.invoke(
    Type.Hash, 1925, false
  )
end

-- void CLEAR_ROOM_FOR_GAME_VIEWPORT() // 0x23B59D8912F94246
function INTERIOR.CLEAR_ROOM_FOR_GAME_VIEWPORT()
  native.invoke(
    Type.Void, 1926, false
  )
end

-- Interior GET_INTERIOR_FROM_PRIMARY_VIEW() // 0xE7D267EC6CA966C3
--[[
Returns the current interior id from gameplay camera
--]]
function INTERIOR.GET_INTERIOR_FROM_PRIMARY_VIEW()
  return native.invoke(
    Type.Interior, 1927, false
  )
end

-- Interior GET_INTERIOR_AT_COORDS(float x, float y, float z) // 0xB0F7F8663821D9C3
--[[
Returns interior ID from specified coordinates. If coordinates are outside, then it returns 0.

Example for VB.NET
Dim interiorID As Integer = Native.Function.Call(Of Integer)(Hash.GET_INTERIOR_AT_COORDS, X, Y, Z)
--]]
function INTERIOR.GET_INTERIOR_AT_COORDS(x, y, z)
  return native.invoke(
    Type.Interior, 1928, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void ADD_PICKUP_TO_INTERIOR_ROOM_BY_NAME(Pickup pickup, const char* roomName) // 0x3F6167F351168730
function INTERIOR.ADD_PICKUP_TO_INTERIOR_ROOM_BY_NAME(pickup, roomName)
  native.invoke(
    Type.Void, 1929, false,
    arg(Type.Pickup, pickup),
    arg(Type.String, roomName)
  )
end

-- void PIN_INTERIOR_IN_MEMORY(Interior interior) // 0x2CA429C029CCF247
function INTERIOR.PIN_INTERIOR_IN_MEMORY(interior)
  native.invoke(
    Type.Void, 1930, false,
    arg(Type.Interior, interior)
  )
end

-- void UNPIN_INTERIOR(Interior interior) // 0x261CCE7EED010641
--[[
Does something similar to INTERIOR::DISABLE_INTERIOR.

You don't fall through the floor but everything is invisible inside and looks the same as when INTERIOR::DISABLE_INTERIOR is used. Peds behaves normally inside. 
--]]
function INTERIOR.UNPIN_INTERIOR(interior)
  native.invoke(
    Type.Void, 1931, false,
    arg(Type.Interior, interior)
  )
end

-- BOOL IS_INTERIOR_READY(Interior interior) // 0x6726BDCCC1932F0E
function INTERIOR.IS_INTERIOR_READY(interior)
  return native.invoke(
    Type.Bool, 1932, false,
    arg(Type.Interior, interior)
  )
end

-- BOOL SET_INTERIOR_IN_USE(Interior interior) // 0x4C2330E61D3DEB56
--[[
Only used once in the entire game scripts.
Does not actually return anything.
--]]
function INTERIOR.SET_INTERIOR_IN_USE(interior)
  return native.invoke(
    Type.Bool, 1933, false,
    arg(Type.Interior, interior)
  )
end

-- Interior GET_INTERIOR_AT_COORDS_WITH_TYPE(float x, float y, float z, const char* interiorType) // 0x05B7A89BD78797FC
--[[
Returns the interior ID representing the requested interior at that location (if found?). The supplied interior string is not the same as the one used to load the interior.

Use: INTERIOR::UNPIN_INTERIOR(INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(x, y, z, interior))

Interior types include: "V_Michael", "V_Franklins", "V_Franklinshouse", etc.. you can find them in the scripts.

Not a very useful native as you could just use GET_INTERIOR_AT_COORDS instead and get the same result, without even having to specify the interior type.
--]]
function INTERIOR.GET_INTERIOR_AT_COORDS_WITH_TYPE(x, y, z, interiorType)
  return native.invoke(
    Type.Interior, 1934, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.String, interiorType)
  )
end

-- Interior GET_INTERIOR_AT_COORDS_WITH_TYPEHASH(float x, float y, float z, Hash typeHash) // 0xF0F77ADB9F67E79D
--[[
Hashed version of GET_INTERIOR_AT_COORDS_WITH_TYPE
--]]
function INTERIOR.GET_INTERIOR_AT_COORDS_WITH_TYPEHASH(x, y, z, typeHash)
  return native.invoke(
    Type.Interior, 1935, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Hash, typeHash)
  )
end

-- void ACTIVATE_INTERIOR_GROUPS_USING_CAMERA() // 0x483ACA1176CA93F1
function INTERIOR.ACTIVATE_INTERIOR_GROUPS_USING_CAMERA()
  native.invoke(
    Type.Void, 1936, false
  )
end

-- BOOL IS_COLLISION_MARKED_OUTSIDE(float x, float y, float z) // 0xEEA5AC2EDA7C33E8
--[[
Returns true if the collision at the specified coords is marked as being outside (false if there's an interior)
--]]
function INTERIOR.IS_COLLISION_MARKED_OUTSIDE(x, y, z)
  return native.invoke(
    Type.Bool, 1937, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- Interior GET_INTERIOR_FROM_COLLISION(float x, float y, float z) // 0xEC4CF9FCB29A4424
function INTERIOR.GET_INTERIOR_FROM_COLLISION(x, y, z)
  return native.invoke(
    Type.Interior, 1938, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void ENABLE_STADIUM_PROBES_THIS_FRAME(BOOL toggle) // 0x7ECDF98587E92DEC
function INTERIOR.ENABLE_STADIUM_PROBES_THIS_FRAME(toggle)
  native.invoke(
    Type.Void, 1939, false,
    arg(Type.Bool, toggle)
  )
end

-- void ACTIVATE_INTERIOR_ENTITY_SET(Interior interior, const char* entitySetName) // 0x55E86AF2712B36A1
--[[
More info: http://gtaforums.com/topic/836367-adding-props-to-interiors/

Full list of IPLs and interior entity sets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ipls.json
--]]
function INTERIOR.ACTIVATE_INTERIOR_ENTITY_SET(interior, entitySetName)
  native.invoke(
    Type.Void, 1940, false,
    arg(Type.Interior, interior),
    arg(Type.String, entitySetName)
  )
end

-- void DEACTIVATE_INTERIOR_ENTITY_SET(Interior interior, const char* entitySetName) // 0x420BD37289EEE162
--[[
Full list of IPLs and interior entity sets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ipls.json
--]]
function INTERIOR.DEACTIVATE_INTERIOR_ENTITY_SET(interior, entitySetName)
  native.invoke(
    Type.Void, 1941, false,
    arg(Type.Interior, interior),
    arg(Type.String, entitySetName)
  )
end

-- BOOL IS_INTERIOR_ENTITY_SET_ACTIVE(Interior interior, const char* entitySetName) // 0x35F7DD45E8C0A16D
--[[
Full list of IPLs and interior entity sets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ipls.json
--]]
function INTERIOR.IS_INTERIOR_ENTITY_SET_ACTIVE(interior, entitySetName)
  return native.invoke(
    Type.Bool, 1942, false,
    arg(Type.Interior, interior),
    arg(Type.String, entitySetName)
  )
end

-- void SET_INTERIOR_ENTITY_SET_TINT_INDEX(Interior interior, const char* entitySetName, int color) // 0xC1F1920BAF281317
--[[
Full list of IPLs and interior entity sets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ipls.json
--]]
function INTERIOR.SET_INTERIOR_ENTITY_SET_TINT_INDEX(interior, entitySetName, color)
  native.invoke(
    Type.Void, 1943, false,
    arg(Type.Interior, interior),
    arg(Type.String, entitySetName),
    arg(Type.Int, color)
  )
end

-- void REFRESH_INTERIOR(Interior interior) // 0x41F37C3427C75AE0
function INTERIOR.REFRESH_INTERIOR(interior)
  native.invoke(
    Type.Void, 1944, false,
    arg(Type.Interior, interior)
  )
end

-- void ENABLE_EXTERIOR_CULL_MODEL_THIS_FRAME(Hash mapObjectHash) // 0xA97F257D0151A6AB
--[[
This is the native that is used to hide the exterior of GTA Online apartment buildings when you are inside an apartment.

More info: http://gtaforums.com/topic/836301-hiding-gta-online-apartment-exteriors/
--]]
function INTERIOR.ENABLE_EXTERIOR_CULL_MODEL_THIS_FRAME(mapObjectHash)
  native.invoke(
    Type.Void, 1945, false,
    arg(Type.Hash, mapObjectHash)
  )
end

-- void ENABLE_SHADOW_CULL_MODEL_THIS_FRAME(Hash mapObjectHash) // 0x50C375537449F369
function INTERIOR.ENABLE_SHADOW_CULL_MODEL_THIS_FRAME(mapObjectHash)
  native.invoke(
    Type.Void, 1946, false,
    arg(Type.Hash, mapObjectHash)
  )
end

-- void DISABLE_INTERIOR(Interior interior, BOOL toggle) // 0x6170941419D7D8EC
--[[
Example: 
This removes the interior from the strip club and when trying to walk inside the player just falls:

INTERIOR::DISABLE_INTERIOR(118018, true);
--]]
function INTERIOR.DISABLE_INTERIOR(interior, toggle)
  native.invoke(
    Type.Void, 1947, false,
    arg(Type.Interior, interior),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_INTERIOR_DISABLED(Interior interior) // 0xBC5115A5A939DD15
function INTERIOR.IS_INTERIOR_DISABLED(interior)
  return native.invoke(
    Type.Bool, 1948, false,
    arg(Type.Interior, interior)
  )
end

-- void CAP_INTERIOR(Interior interior, BOOL toggle) // 0xD9175F941610DB54
--[[
Does something similar to INTERIOR::DISABLE_INTERIOR
--]]
function INTERIOR.CAP_INTERIOR(interior, toggle)
  native.invoke(
    Type.Void, 1949, false,
    arg(Type.Interior, interior),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_INTERIOR_CAPPED(Interior interior) // 0x92BAC8ACF88CEC26
function INTERIOR.IS_INTERIOR_CAPPED(interior)
  return native.invoke(
    Type.Bool, 1950, false,
    arg(Type.Interior, interior)
  )
end

-- void DISABLE_METRO_SYSTEM(BOOL toggle) // 0x9E6542F0CE8E70A3
function INTERIOR.DISABLE_METRO_SYSTEM(toggle)
  native.invoke(
    Type.Void, 1951, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_IS_EXTERIOR_ONLY(Entity entity, BOOL toggle) // 0x7241CCB7D020DB69
--[[
Jenkins hash _might_ be 0xFC227584.
--]]
function INTERIOR.SET_IS_EXTERIOR_ONLY(entity, toggle)
  native.invoke(
    Type.Void, 1952, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end


ITEMSET = {}

-- ScrHandle CREATE_ITEMSET(BOOL p0) // 0x35AD299F50D91B24
function ITEMSET.CREATE_ITEMSET(p0)
  return native.invoke(
    Type.Scrhandle, 1953, false,
    arg(Type.Bool, p0)
  )
end

-- void DESTROY_ITEMSET(ScrHandle itemset) // 0xDE18220B1C183EDA
function ITEMSET.DESTROY_ITEMSET(itemset)
  native.invoke(
    Type.Void, 1954, false,
    arg(Type.Scrhandle, itemset)
  )
end

-- BOOL IS_ITEMSET_VALID(ScrHandle itemset) // 0xB1B1EA596344DFAB
function ITEMSET.IS_ITEMSET_VALID(itemset)
  return native.invoke(
    Type.Bool, 1955, false,
    arg(Type.Scrhandle, itemset)
  )
end

-- BOOL ADD_TO_ITEMSET(ScrHandle item, ScrHandle itemset) // 0xE3945201F14637DD
function ITEMSET.ADD_TO_ITEMSET(item, itemset)
  return native.invoke(
    Type.Bool, 1956, false,
    arg(Type.Scrhandle, item),
    arg(Type.Scrhandle, itemset)
  )
end

-- void REMOVE_FROM_ITEMSET(ScrHandle item, ScrHandle itemset) // 0x25E68244B0177686
function ITEMSET.REMOVE_FROM_ITEMSET(item, itemset)
  native.invoke(
    Type.Void, 1957, false,
    arg(Type.Scrhandle, item),
    arg(Type.Scrhandle, itemset)
  )
end

-- int GET_ITEMSET_SIZE(ScrHandle itemset) // 0xD9127E83ABF7C631
function ITEMSET.GET_ITEMSET_SIZE(itemset)
  return native.invoke(
    Type.Int, 1958, false,
    arg(Type.Scrhandle, itemset)
  )
end

-- ScrHandle GET_INDEXED_ITEM_IN_ITEMSET(int index, ScrHandle itemset) // 0x7A197E2521EE2BAB
function ITEMSET.GET_INDEXED_ITEM_IN_ITEMSET(index, itemset)
  return native.invoke(
    Type.Scrhandle, 1959, false,
    arg(Type.Int, index),
    arg(Type.Scrhandle, itemset)
  )
end

-- BOOL IS_IN_ITEMSET(ScrHandle item, ScrHandle itemset) // 0x2D0FC594D1E9C107
function ITEMSET.IS_IN_ITEMSET(item, itemset)
  return native.invoke(
    Type.Bool, 1960, false,
    arg(Type.Scrhandle, item),
    arg(Type.Scrhandle, itemset)
  )
end

-- void CLEAN_ITEMSET(ScrHandle itemset) // 0x41BC0D722FC04221
function ITEMSET.CLEAN_ITEMSET(itemset)
  native.invoke(
    Type.Void, 1961, false,
    arg(Type.Scrhandle, itemset)
  )
end


LOADINGSCREEN = {}

-- BOOL LOBBY_AUTO_MULTIPLAYER_MENU() // 0xF2CA003F167E21D2
--[[
This function is hard-coded to always return 0.
--]]
function LOADINGSCREEN.LOBBY_AUTO_MULTIPLAYER_MENU()
  return native.invoke(
    Type.Bool, 1962, false
  )
end

-- BOOL LOBBY_AUTO_MULTIPLAYER_FREEMODE() // 0xEF7D17BC6C85264C
function LOADINGSCREEN.LOBBY_AUTO_MULTIPLAYER_FREEMODE()
  return native.invoke(
    Type.Bool, 1963, false
  )
end

-- void LOBBY_SET_AUTO_MULTIPLAYER(BOOL toggle) // 0xB0C56BD3D808D863
function LOADINGSCREEN.LOBBY_SET_AUTO_MULTIPLAYER(toggle)
  native.invoke(
    Type.Void, 1964, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL LOBBY_AUTO_MULTIPLAYER_EVENT() // 0x8AA464D4E0F6ACCD
function LOADINGSCREEN.LOBBY_AUTO_MULTIPLAYER_EVENT()
  return native.invoke(
    Type.Bool, 1965, false
  )
end

-- void LOBBY_SET_AUTO_MULTIPLAYER_EVENT(BOOL toggle) // 0xFC309E94546FCDB5
function LOADINGSCREEN.LOBBY_SET_AUTO_MULTIPLAYER_EVENT(toggle)
  native.invoke(
    Type.Void, 1966, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL LOBBY_AUTO_MULTIPLAYER_RANDOM_JOB() // 0xC6DC823253FBB366
function LOADINGSCREEN.LOBBY_AUTO_MULTIPLAYER_RANDOM_JOB()
  return native.invoke(
    Type.Bool, 1967, false
  )
end

-- void LOBBY_SET_AUTO_MP_RANDOM_JOB(BOOL toggle) // 0xC7E7181C09F33B69
function LOADINGSCREEN.LOBBY_SET_AUTO_MP_RANDOM_JOB(toggle)
  native.invoke(
    Type.Void, 1968, false,
    arg(Type.Bool, toggle)
  )
end

-- void SHUTDOWN_SESSION_CLEARS_AUTO_MULTIPLAYER(BOOL toggle) // 0xFA1E0E893D915215
function LOADINGSCREEN.SHUTDOWN_SESSION_CLEARS_AUTO_MULTIPLAYER(toggle)
  native.invoke(
    Type.Void, 1969, false,
    arg(Type.Bool, toggle)
  )
end


LOCALIZATION = {}

-- int LOCALIZATION_GET_SYSTEM_LANGUAGE() // 0x497420E022796B3F
--[[
Same return values as GET_CURRENT_LANGUAGE
--]]
function LOCALIZATION.LOCALIZATION_GET_SYSTEM_LANGUAGE()
  return native.invoke(
    Type.Int, 1970, false
  )
end

-- int GET_CURRENT_LANGUAGE() // 0x2BDD44CC428A7EAE
--[[
0 = american (en-US)
1 = french (fr-FR)
2 = german (de-DE)
3 = italian (it-IT)
4 = spanish (es-ES)
5 = brazilian (pt-BR)
6 = polish (pl-PL)
7 = russian (ru-RU)
8 = korean (ko-KR)
9 = chinesetrad (zh-TW)
10 = japanese (ja-JP)
11 = mexican (es-MX)
12 = chinesesimp (zh-CN)
--]]
function LOCALIZATION.GET_CURRENT_LANGUAGE()
  return native.invoke(
    Type.Int, 1971, false
  )
end

-- int LOCALIZATION_GET_SYSTEM_DATE_TYPE() // 0xA8AE43AEC1A61314
--[[
Possible return values: 0, 1, 2
--]]
function LOCALIZATION.LOCALIZATION_GET_SYSTEM_DATE_TYPE()
  return native.invoke(
    Type.Int, 1972, false
  )
end


MISC = {}

-- int GET_ALLOCATED_STACK_SIZE() // 0x8B3CA62B1EF19B62
function MISC.GET_ALLOCATED_STACK_SIZE()
  return native.invoke(
    Type.Int, 1973, false
  )
end

-- int GET_NUMBER_OF_FREE_STACKS_OF_THIS_SIZE(int stackSize) // 0xFEAD16FC8F9DFC0F
function MISC.GET_NUMBER_OF_FREE_STACKS_OF_THIS_SIZE(stackSize)
  return native.invoke(
    Type.Int, 1974, false,
    arg(Type.Int, stackSize)
  )
end

-- void SET_RANDOM_SEED(int seed) // 0x444D98F98C11F3EC
function MISC.SET_RANDOM_SEED(seed)
  native.invoke(
    Type.Void, 1975, false,
    arg(Type.Int, seed)
  )
end

-- void SET_TIME_SCALE(float timeScale) // 0x1D408577D440E81E
--[[
Maximum value is 1.
At a value of 0 the game will still run at a minimum time scale.

Slow Motion 1: 0.6
Slow Motion 2: 0.4
Slow Motion 3: 0.2
--]]
function MISC.SET_TIME_SCALE(timeScale)
  native.invoke(
    Type.Void, 1976, false,
    arg(Type.Float, timeScale)
  )
end

-- void SET_MISSION_FLAG(BOOL toggle) // 0xC4301E5121A0ED73
--[[
If true, the player can't save the game. 


If the parameter is true, sets the mission flag to true, if the parameter is false, the function does nothing at all.

^ also, if the mission flag is already set, the function does nothing at all
--]]
function MISC.SET_MISSION_FLAG(toggle)
  native.invoke(
    Type.Void, 1977, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL GET_MISSION_FLAG() // 0xA33CDCCDA663159E
function MISC.GET_MISSION_FLAG()
  return native.invoke(
    Type.Bool, 1978, false
  )
end

-- void SET_RANDOM_EVENT_FLAG(BOOL toggle) // 0x971927086CFD2158
--[[
If the parameter is true, sets the random event flag to true, if the parameter is false, the function does nothing at all.
Does nothing if the mission flag is set.
--]]
function MISC.SET_RANDOM_EVENT_FLAG(toggle)
  native.invoke(
    Type.Void, 1979, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL GET_RANDOM_EVENT_FLAG() // 0xD2D57F1D764117B1
function MISC.GET_RANDOM_EVENT_FLAG()
  return native.invoke(
    Type.Bool, 1980, false
  )
end

-- const char* GET_CONTENT_TO_LOAD() // 0x24DA7D7667FD7B09
--[[
Returns pointer to an empty string.
--]]
function MISC.GET_CONTENT_TO_LOAD()
  return native.invoke(
    Type.Const char, 1981, false
  )
end

-- void ACTIVITY_FEED_CREATE(const char* p0, const char* p1) // 0x4DCDF92BF64236CD
--[[
Does nothing (it's a nullsub). Seems to be PS4 specific.
--]]
function MISC.ACTIVITY_FEED_CREATE(p0, p1)
  native.invoke(
    Type.Void, 1982, false,
    arg(Type.String, p0),
    arg(Type.String, p1)
  )
end

-- void ACTIVITY_FEED_ADD_SUBSTRING_TO_CAPTION(const char* p0) // 0x31125FD509D9043F
--[[
Does nothing (it's a nullsub). Seems to be PS4 specific.
--]]
function MISC.ACTIVITY_FEED_ADD_SUBSTRING_TO_CAPTION(p0)
  native.invoke(
    Type.Void, 1983, false,
    arg(Type.String, p0)
  )
end

-- void ACTIVITY_FEED_ADD_LITERAL_SUBSTRING_TO_CAPTION(const char* p0) // 0xEBD3205A207939ED
--[[
Does nothing (it's a nullsub). Seems to be PS4 specific.
--]]
function MISC.ACTIVITY_FEED_ADD_LITERAL_SUBSTRING_TO_CAPTION(p0)
  native.invoke(
    Type.Void, 1984, false,
    arg(Type.String, p0)
  )
end

-- void ACTIVITY_FEED_ADD_INT_TO_CAPTION(Any p0) // 0x97E7E2C04245115B
--[[
Does nothing (it's a nullsub). Seems to be PS4 specific.
--]]
function MISC.ACTIVITY_FEED_ADD_INT_TO_CAPTION(p0)
  native.invoke(
    Type.Void, 1985, false,
    arg(Type.Any, p0)
  )
end

-- void ACTIVITY_FEED_LARGE_IMAGE_URL(const char* p0) // 0x916CA67D26FD1E37
--[[
Does nothing (it's a nullsub). Seems to be PS4 specific.
--]]
function MISC.ACTIVITY_FEED_LARGE_IMAGE_URL(p0)
  native.invoke(
    Type.Void, 1986, false,
    arg(Type.String, p0)
  )
end

-- void ACTIVITY_FEED_ACTION_START_WITH_COMMAND_LINE(const char* p0, const char* p1) // 0xEB078CA2B5E82ADD
--[[
Does nothing (it's a nullsub). Seems to be PS4 specific.
--]]
function MISC.ACTIVITY_FEED_ACTION_START_WITH_COMMAND_LINE(p0, p1)
  native.invoke(
    Type.Void, 1987, false,
    arg(Type.String, p0),
    arg(Type.String, p1)
  )
end

-- void ACTIVITY_FEED_ACTION_START_WITH_COMMAND_LINE_ADD(const char* p0) // 0x703CC7F60CBB2B57
--[[
Does nothing (it's a nullsub). Seems to be PS4 specific.
--]]
function MISC.ACTIVITY_FEED_ACTION_START_WITH_COMMAND_LINE_ADD(p0)
  native.invoke(
    Type.Void, 1988, false,
    arg(Type.String, p0)
  )
end

-- void ACTIVITY_FEED_POST() // 0x8951EB9C6906D3C8
--[[
Does nothing (it's a nullsub). Seems to be PS4 specific.
--]]
function MISC.ACTIVITY_FEED_POST()
  native.invoke(
    Type.Void, 1989, false
  )
end

-- void ACTIVITY_FEED_ONLINE_PLAYED_WITH_POST(const char* p0) // 0xBA4B8D83BDC75551
--[[
Does nothing (it's a nullsub). Seems to be PS4 specific.

Used only once in the scripts (ingamehud) with p0 = "AF_GAMEMODE"
--]]
function MISC.ACTIVITY_FEED_ONLINE_PLAYED_WITH_POST(p0)
  native.invoke(
    Type.Void, 1990, false,
    arg(Type.String, p0)
  )
end

-- BOOL HAS_RESUMED_FROM_SUSPEND() // 0xE8B9C0EC9E183F35
--[[
Hardcoded to return false.
--]]
function MISC.HAS_RESUMED_FROM_SUSPEND()
  return native.invoke(
    Type.Bool, 1991, false
  )
end

-- void SET_SCRIPT_HIGH_PRIO(BOOL toggle) // 0x65D2EBB47E1CEC21
--[[
Sets GtaThread+0x14A
--]]
function MISC.SET_SCRIPT_HIGH_PRIO(toggle)
  native.invoke(
    Type.Void, 1992, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_THIS_IS_A_TRIGGER_SCRIPT(BOOL toggle) // 0x6F2135B6129620C1
--[[
Sets bit 3 in GtaThread+0x150
--]]
function MISC.SET_THIS_IS_A_TRIGGER_SCRIPT(toggle)
  native.invoke(
    Type.Void, 1993, false,
    arg(Type.Bool, toggle)
  )
end

-- void INFORM_CODE_OF_CONTENT_ID_OF_CURRENT_UGC_MISSION(const char* p0) // 0x8D74E26F54B4E5C3
function MISC.INFORM_CODE_OF_CONTENT_ID_OF_CURRENT_UGC_MISSION(p0)
  native.invoke(
    Type.Void, 1994, false,
    arg(Type.String, p0)
  )
end

-- BOOL GET_BASE_ELEMENT_LOCATION_FROM_METADATA_BLOCK(Any* p0, Any* p1, Any p2, BOOL p3) // 0xB335F761606DB47C
function MISC.GET_BASE_ELEMENT_LOCATION_FROM_METADATA_BLOCK(p0, p1, p2, p3)
  return native.invoke(
    Type.Bool, 1995, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Bool, p3)
  )
end

-- Hash GET_PREV_WEATHER_TYPE_HASH_NAME() // 0x564B884A05EC45A3
--[[
Returns current weather name hash
--]]
function MISC.GET_PREV_WEATHER_TYPE_HASH_NAME()
  return native.invoke(
    Type.Hash, 1996, false
  )
end

-- Hash GET_NEXT_WEATHER_TYPE_HASH_NAME() // 0x711327CD09C8F162
--[[
Returns weather name hash
--]]
function MISC.GET_NEXT_WEATHER_TYPE_HASH_NAME()
  return native.invoke(
    Type.Hash, 1997, false
  )
end

-- BOOL IS_PREV_WEATHER_TYPE(const char* weatherType) // 0x44F28F86433B10A9
function MISC.IS_PREV_WEATHER_TYPE(weatherType)
  return native.invoke(
    Type.Bool, 1998, false,
    arg(Type.String, weatherType)
  )
end

-- BOOL IS_NEXT_WEATHER_TYPE(const char* weatherType) // 0x2FAA3A30BEC0F25D
function MISC.IS_NEXT_WEATHER_TYPE(weatherType)
  return native.invoke(
    Type.Bool, 1999, false,
    arg(Type.String, weatherType)
  )
end

-- void SET_WEATHER_TYPE_PERSIST(const char* weatherType) // 0x704983DF373B198F
--[[
The following weatherTypes are used in the scripts:
"CLEAR"
"EXTRASUNNY"
"CLOUDS"
"OVERCAST"
"RAIN"
"CLEARING"
"THUNDER"
"SMOG"
"FOGGY"
"XMAS"
"SNOW"
"SNOWLIGHT"
"BLIZZARD"
"HALLOWEEN"
"NEUTRAL"
--]]
function MISC.SET_WEATHER_TYPE_PERSIST(weatherType)
  native.invoke(
    Type.Void, 2000, false,
    arg(Type.String, weatherType)
  )
end

-- void SET_WEATHER_TYPE_NOW_PERSIST(const char* weatherType) // 0xED712CA327900C8A
--[[
The following weatherTypes are used in the scripts:
"CLEAR"
"EXTRASUNNY"
"CLOUDS"
"OVERCAST"
"RAIN"
"CLEARING"
"THUNDER"
"SMOG"
"FOGGY"
"XMAS"
"SNOW"
"SNOWLIGHT"
"BLIZZARD"
"HALLOWEEN"
"NEUTRAL"
--]]
function MISC.SET_WEATHER_TYPE_NOW_PERSIST(weatherType)
  native.invoke(
    Type.Void, 2001, false,
    arg(Type.String, weatherType)
  )
end

-- void SET_WEATHER_TYPE_NOW(const char* weatherType) // 0x29B487C359E19889
--[[
The following weatherTypes are used in the scripts:
"CLEAR"
"EXTRASUNNY"
"CLOUDS"
"OVERCAST"
"RAIN"
"CLEARING"
"THUNDER"
"SMOG"
"FOGGY"
"XMAS"
"SNOW"
"SNOWLIGHT"
"BLIZZARD"
"HALLOWEEN"
"NEUTRAL"
--]]
function MISC.SET_WEATHER_TYPE_NOW(weatherType)
  native.invoke(
    Type.Void, 2002, false,
    arg(Type.String, weatherType)
  )
end

-- void SET_WEATHER_TYPE_OVERTIME_PERSIST(const char* weatherType, float time) // 0xFB5045B7C42B75BF
function MISC.SET_WEATHER_TYPE_OVERTIME_PERSIST(weatherType, time)
  native.invoke(
    Type.Void, 2003, false,
    arg(Type.String, weatherType),
    arg(Type.Float, time)
  )
end

-- void SET_RANDOM_WEATHER_TYPE() // 0x8B05F884CF7E8020
function MISC.SET_RANDOM_WEATHER_TYPE()
  native.invoke(
    Type.Void, 2004, false
  )
end

-- void CLEAR_WEATHER_TYPE_PERSIST() // 0xCCC39339BEF76CF5
function MISC.CLEAR_WEATHER_TYPE_PERSIST()
  native.invoke(
    Type.Void, 2005, false
  )
end

-- void CLEAR_WEATHER_TYPE_NOW_PERSIST_NETWORK(int milliseconds) // 0x0CF97F497FE7D048
function MISC.CLEAR_WEATHER_TYPE_NOW_PERSIST_NETWORK(milliseconds)
  native.invoke(
    Type.Void, 2006, false,
    arg(Type.Int, milliseconds)
  )
end

-- void GET_CURR_WEATHER_STATE(Hash* weatherType1, Hash* weatherType2, float* percentWeather2) // 0xF3BBE884A14BB413
function MISC.GET_CURR_WEATHER_STATE(weatherType1, weatherType2, percentWeather2)
  native.invoke(
    Type.Void, 2007, false,
    arg(Type.Hash, weatherType1),
    arg(Type.Hash, weatherType2),
    arg(Type.Float, percentWeather2)
  )
end

-- void SET_CURR_WEATHER_STATE(Hash weatherType1, Hash weatherType2, float percentWeather2) // 0x578C752848ECFA0C
--[[
Mixes two weather types. If percentWeather2 is set to 0.0f, then the weather will be entirely of weatherType1, if it is set to 1.0f it will be entirely of weatherType2. If it's set somewhere in between, there will be a mixture of weather behaviors. To test, try this in the RPH console, and change the float to different values between 0 and 1:

execute "NativeFunction.Natives.x578C752848ECFA0C(Game.GetHashKey(""RAIN""), Game.GetHashKey(""SMOG""), 0.50f);

Note that unlike most of the other weather natives, this native takes the hash of the weather name, not the plain string. These are the weather names and their hashes:

CLEAR  0x36A83D84
EXTRASUNNY  0x97AA0A79
CLOUDS  0x30FDAF5C
OVERCAST    0xBB898D2D
RAIN    0x54A69840
CLEARING    0x6DB1A50D
THUNDER 0xB677829F
SMOG    0x10DCF4B5
FOGGY   0xAE737644
XMAS    0xAAC9C895
SNOWLIGHT   0x23FB812B
BLIZZARD    0x27EA2814





/* OLD INVALID INFO BELOW */
Not tested. Based purely on disassembly. Instantly sets the weather to sourceWeather, then transitions to targetWeather over the specified transitionTime in seconds.

If an invalid hash is specified for sourceWeather, the current weather type will be used.
If an invalid hash is specified for targetWeather, the next weather type will be used.
If an invalid hash is specified for both sourceWeather and targetWeather, the function just changes the transition time of the current transition.
--]]
function MISC.SET_CURR_WEATHER_STATE(weatherType1, weatherType2, percentWeather2)
  native.invoke(
    Type.Void, 2008, false,
    arg(Type.Hash, weatherType1),
    arg(Type.Hash, weatherType2),
    arg(Type.Float, percentWeather2)
  )
end

-- void SET_OVERRIDE_WEATHER(const char* weatherType) // 0xA43D5C6FE51ADBEF
--[[
Appears to have an optional bool parameter that is unused in the scripts.

If you pass true, something will be set to zero.
--]]
function MISC.SET_OVERRIDE_WEATHER(weatherType)
  native.invoke(
    Type.Void, 2009, false,
    arg(Type.String, weatherType)
  )
end

-- void SET_OVERRIDE_WEATHEREX(const char* weatherType, BOOL p1) // 0x1178E104409FE58C
--[[
Identical to SET_OVERRIDE_WEATHER but has an additional BOOL param that sets some weather var to 0 if true
--]]
function MISC.SET_OVERRIDE_WEATHEREX(weatherType, p1)
  native.invoke(
    Type.Void, 2010, false,
    arg(Type.String, weatherType),
    arg(Type.Bool, p1)
  )
end

-- void CLEAR_OVERRIDE_WEATHER() // 0x338D2E3477711050
function MISC.CLEAR_OVERRIDE_WEATHER()
  native.invoke(
    Type.Void, 2011, false
  )
end

-- void WATER_OVERRIDE_SET_SHOREWAVEAMPLITUDE(float amplitude) // 0xB8F87EAD7533B176
function MISC.WATER_OVERRIDE_SET_SHOREWAVEAMPLITUDE(amplitude)
  native.invoke(
    Type.Void, 2012, false,
    arg(Type.Float, amplitude)
  )
end

-- void WATER_OVERRIDE_SET_SHOREWAVEMINAMPLITUDE(float minAmplitude) // 0xC3EAD29AB273ECE8
function MISC.WATER_OVERRIDE_SET_SHOREWAVEMINAMPLITUDE(minAmplitude)
  native.invoke(
    Type.Void, 2013, false,
    arg(Type.Float, minAmplitude)
  )
end

-- void WATER_OVERRIDE_SET_SHOREWAVEMAXAMPLITUDE(float maxAmplitude) // 0xA7A1127490312C36
function MISC.WATER_OVERRIDE_SET_SHOREWAVEMAXAMPLITUDE(maxAmplitude)
  native.invoke(
    Type.Void, 2014, false,
    arg(Type.Float, maxAmplitude)
  )
end

-- void WATER_OVERRIDE_SET_OCEANNOISEMINAMPLITUDE(float minAmplitude) // 0x31727907B2C43C55
function MISC.WATER_OVERRIDE_SET_OCEANNOISEMINAMPLITUDE(minAmplitude)
  native.invoke(
    Type.Void, 2015, false,
    arg(Type.Float, minAmplitude)
  )
end

-- void WATER_OVERRIDE_SET_OCEANWAVEAMPLITUDE(float amplitude) // 0x405591EC8FD9096D
function MISC.WATER_OVERRIDE_SET_OCEANWAVEAMPLITUDE(amplitude)
  native.invoke(
    Type.Void, 2016, false,
    arg(Type.Float, amplitude)
  )
end

-- void WATER_OVERRIDE_SET_OCEANWAVEMINAMPLITUDE(float minAmplitude) // 0xF751B16FB32ABC1D
function MISC.WATER_OVERRIDE_SET_OCEANWAVEMINAMPLITUDE(minAmplitude)
  native.invoke(
    Type.Void, 2017, false,
    arg(Type.Float, minAmplitude)
  )
end

-- void WATER_OVERRIDE_SET_OCEANWAVEMAXAMPLITUDE(float maxAmplitude) // 0xB3E6360DDE733E82
function MISC.WATER_OVERRIDE_SET_OCEANWAVEMAXAMPLITUDE(maxAmplitude)
  native.invoke(
    Type.Void, 2018, false,
    arg(Type.Float, maxAmplitude)
  )
end

-- void WATER_OVERRIDE_SET_RIPPLEBUMPINESS(float bumpiness) // 0x7C9C0B1EEB1F9072
function MISC.WATER_OVERRIDE_SET_RIPPLEBUMPINESS(bumpiness)
  native.invoke(
    Type.Void, 2019, false,
    arg(Type.Float, bumpiness)
  )
end

-- void WATER_OVERRIDE_SET_RIPPLEMINBUMPINESS(float minBumpiness) // 0x6216B116083A7CB4
function MISC.WATER_OVERRIDE_SET_RIPPLEMINBUMPINESS(minBumpiness)
  native.invoke(
    Type.Void, 2020, false,
    arg(Type.Float, minBumpiness)
  )
end

-- void WATER_OVERRIDE_SET_RIPPLEMAXBUMPINESS(float maxBumpiness) // 0x9F5E6BB6B34540DA
function MISC.WATER_OVERRIDE_SET_RIPPLEMAXBUMPINESS(maxBumpiness)
  native.invoke(
    Type.Void, 2021, false,
    arg(Type.Float, maxBumpiness)
  )
end

-- void WATER_OVERRIDE_SET_RIPPLEDISTURB(float disturb) // 0xB9854DFDE0D833D6
function MISC.WATER_OVERRIDE_SET_RIPPLEDISTURB(disturb)
  native.invoke(
    Type.Void, 2022, false,
    arg(Type.Float, disturb)
  )
end

-- void WATER_OVERRIDE_SET_STRENGTH(float strength) // 0xC54A08C85AE4D410
--[[
This seems to edit the water wave, intensity around your current location.

0.0f = Normal
1.0f = So Calm and Smooth, a boat will stay still.
3.0f = Really Intense.
--]]
function MISC.WATER_OVERRIDE_SET_STRENGTH(strength)
  native.invoke(
    Type.Void, 2023, false,
    arg(Type.Float, strength)
  )
end

-- void WATER_OVERRIDE_FADE_IN(float p0) // 0xA8434F1DFF41D6E7
function MISC.WATER_OVERRIDE_FADE_IN(p0)
  native.invoke(
    Type.Void, 2024, false,
    arg(Type.Float, p0)
  )
end

-- void WATER_OVERRIDE_FADE_OUT(float p0) // 0xC3C221ADDDE31A11
function MISC.WATER_OVERRIDE_FADE_OUT(p0)
  native.invoke(
    Type.Void, 2025, false,
    arg(Type.Float, p0)
  )
end

-- void SET_WIND(float speed) // 0xAC3A74E8384A9919
--[[
Sets the the normalized wind speed value. The wind speed clamps always at 12.0, SET_WIND sets the wind in a percentage, 0.0 is 0 and 1.0 is 12.0. Setting this value to a negative number resumes the random wind speed changes provided by the game.
--]]
function MISC.SET_WIND(speed)
  native.invoke(
    Type.Void, 2026, false,
    arg(Type.Float, speed)
  )
end

-- void SET_WIND_SPEED(float speed) // 0xEE09ECEDBABE47FC
--[[
Using this native will set the absolute wind speed value. The wind speed clamps to a range of 0.0- 12.0. Setting this value to a negative number resumes the random wind speed changes provided by the game.
--]]
function MISC.SET_WIND_SPEED(speed)
  native.invoke(
    Type.Void, 2027, false,
    arg(Type.Float, speed)
  )
end

-- float GET_WIND_SPEED() // 0xA8CF1CC0AFCD3F12
function MISC.GET_WIND_SPEED()
  return native.invoke(
    Type.Float, 2028, false
  )
end

-- void SET_WIND_DIRECTION(float direction) // 0xEB0F4468467B4528
--[[
The wind direction in radians
180 degrees (PI), wind will blow from the south. Setting this value to a negative number resumes the random wind direction changes provided by the game.
--]]
function MISC.SET_WIND_DIRECTION(direction)
  native.invoke(
    Type.Void, 2029, false,
    arg(Type.Float, direction)
  )
end

-- Vector3 GET_WIND_DIRECTION() // 0x1F400FEF721170DA
function MISC.GET_WIND_DIRECTION()
  return native.invoke(
    Type.Vector3, 2030, false
  )
end

-- void SET_RAIN(float intensity) // 0x643E26EA6E024D92
--[[
With an `intensity` higher than `0.5f`, only the creation of puddles gets faster, rain and rain sound won't increase after that.
With an `intensity` of `0.0f` rain and rain sounds are disabled and there won't be any new puddles.
To use the rain intensity of the current weather, call this native with `-1f` as `intensity`.
--]]
function MISC.SET_RAIN(intensity)
  native.invoke(
    Type.Void, 2031, false,
    arg(Type.Float, intensity)
  )
end

-- float GET_RAIN_LEVEL() // 0x96695E368AD855F3
function MISC.GET_RAIN_LEVEL()
  return native.invoke(
    Type.Float, 2032, false
  )
end

-- void SET_SNOW(float level) // 0x7F06937B0CDCBC1A
function MISC.SET_SNOW(level)
  native.invoke(
    Type.Void, 2033, false,
    arg(Type.Float, level)
  )
end

-- float GET_SNOW_LEVEL() // 0xC5868A966E5BE3AE
function MISC.GET_SNOW_LEVEL()
  return native.invoke(
    Type.Float, 2034, false
  )
end

-- void FORCE_LIGHTNING_FLASH() // 0xF6062E089251C898
--[[
creates single lightning+thunder at random position
--]]
function MISC.FORCE_LIGHTNING_FLASH()
  native.invoke(
    Type.Void, 2035, false
  )
end

-- void SET_CLOUD_SETTINGS_OVERRIDE(const char* p0) // 0x02DEAAC8F8EA7FE7
function MISC.SET_CLOUD_SETTINGS_OVERRIDE(p0)
  native.invoke(
    Type.Void, 2036, false,
    arg(Type.String, p0)
  )
end

-- void PRELOAD_CLOUD_HAT(const char* name) // 0x11B56FBBF7224868
function MISC.PRELOAD_CLOUD_HAT(name)
  native.invoke(
    Type.Void, 2037, false,
    arg(Type.String, name)
  )
end

-- void LOAD_CLOUD_HAT(const char* name, float transitionTime) // 0xFC4842A34657BFCB
--[[
The following cloudhats are useable:
altostratus
Cirrus
cirrocumulus
Clear 01
Cloudy 01
Contrails
Horizon
horizonband1
horizonband2
horizonband3
horsey
Nimbus
Puffs
RAIN
Snowy 01
Stormy 01
stratoscumulus
Stripey
shower
Wispy

--]]
function MISC.LOAD_CLOUD_HAT(name, transitionTime)
  native.invoke(
    Type.Void, 2038, false,
    arg(Type.String, name),
    arg(Type.Float, transitionTime)
  )
end

-- void UNLOAD_CLOUD_HAT(const char* name, float p1) // 0xA74802FB8D0B7814
function MISC.UNLOAD_CLOUD_HAT(name, p1)
  native.invoke(
    Type.Void, 2039, false,
    arg(Type.String, name),
    arg(Type.Float, p1)
  )
end

-- void UNLOAD_ALL_CLOUD_HATS() // 0x957E790EA1727B64
function MISC.UNLOAD_ALL_CLOUD_HATS()
  native.invoke(
    Type.Void, 2040, false
  )
end

-- void SET_CLOUDS_ALPHA(float opacity) // 0xF36199225D6D8C86
function MISC.SET_CLOUDS_ALPHA(opacity)
  native.invoke(
    Type.Void, 2041, false,
    arg(Type.Float, opacity)
  )
end

-- float GET_CLOUDS_ALPHA() // 0x20AC25E781AE4A84
function MISC.GET_CLOUDS_ALPHA()
  return native.invoke(
    Type.Float, 2042, false
  )
end

-- int GET_GAME_TIMER() // 0x9CD27B0045628463
function MISC.GET_GAME_TIMER()
  return native.invoke(
    Type.Int, 2043, false
  )
end

-- float GET_FRAME_TIME() // 0x15C40837039FFAF7
function MISC.GET_FRAME_TIME()
  return native.invoke(
    Type.Float, 2044, false
  )
end

-- float GET_SYSTEM_TIME_STEP() // 0xE599A503B3837E1B
function MISC.GET_SYSTEM_TIME_STEP()
  return native.invoke(
    Type.Float, 2045, false
  )
end

-- int GET_FRAME_COUNT() // 0xFC8202EFC642E6F2
function MISC.GET_FRAME_COUNT()
  return native.invoke(
    Type.Int, 2046, false
  )
end

-- float GET_RANDOM_FLOAT_IN_RANGE(float startRange, float endRange) // 0x313CE5879CEB6FCD
function MISC.GET_RANDOM_FLOAT_IN_RANGE(startRange, endRange)
  return native.invoke(
    Type.Float, 2047, false,
    arg(Type.Float, startRange),
    arg(Type.Float, endRange)
  )
end

-- int GET_RANDOM_INT_IN_RANGE(int startRange, int endRange) // 0xD53343AA4FB7DD28
function MISC.GET_RANDOM_INT_IN_RANGE(startRange, endRange)
  return native.invoke(
    Type.Int, 2048, false,
    arg(Type.Int, startRange),
    arg(Type.Int, endRange)
  )
end

-- int GET_RANDOM_MWC_INT_IN_RANGE(int startRange, int endRange) // 0xF2D49816A804D134
function MISC.GET_RANDOM_MWC_INT_IN_RANGE(startRange, endRange)
  return native.invoke(
    Type.Int, 2049, false,
    arg(Type.Int, startRange),
    arg(Type.Int, endRange)
  )
end

-- BOOL GET_GROUND_Z_FOR_3D_COORD(float x, float y, float z, float* groundZ, BOOL ignoreWater, BOOL p5) // 0xC906A7DAB05C8D2B
--[[
Gets the ground elevation at the specified position. Note that if the specified position is below ground level, the function will output zero!

x: Position on the X-axis to get ground elevation at.
y: Position on the Y-axis to get ground elevation at.
z: Position on the Z-axis to get ground elevation at.
groundZ: The ground elevation at the specified position.
ignoreWater: Nearly always 0, very rarely 1 in the scripts: https://gfycat.com/NiftyTatteredCricket

Bear in mind this native can only calculate the elevation when the coordinates are within the client's render distance.
--]]
function MISC.GET_GROUND_Z_FOR_3D_COORD(x, y, z, groundZ, ignoreWater, p5)
  return native.invoke(
    Type.Bool, 2050, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, groundZ),
    arg(Type.Bool, ignoreWater),
    arg(Type.Bool, p5)
  )
end

-- BOOL GET_GROUND_Z_AND_NORMAL_FOR_3D_COORD(float x, float y, float z, float* groundZ, Vector3* normal) // 0x8BDC7BFC57A81E76
function MISC.GET_GROUND_Z_AND_NORMAL_FOR_3D_COORD(x, y, z, groundZ, normal)
  return native.invoke(
    Type.Bool, 2051, true,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, groundZ),
    arg(Type.Vector3, normal)
  )
end

-- BOOL GET_GROUND_Z_EXCLUDING_OBJECTS_FOR_3D_COORD(float x, float y, float z, float* groundZ, BOOL p4, BOOL p5) // 0x9E82F0F362881B29
function MISC.GET_GROUND_Z_EXCLUDING_OBJECTS_FOR_3D_COORD(x, y, z, groundZ, p4, p5)
  return native.invoke(
    Type.Bool, 2052, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, groundZ),
    arg(Type.Bool, p4),
    arg(Type.Bool, p5)
  )
end

-- float ASIN(float p0) // 0xC843060B5765DCE7
function MISC.ASIN(p0)
  return native.invoke(
    Type.Float, 2053, false,
    arg(Type.Float, p0)
  )
end

-- float ACOS(float p0) // 0x1D08B970013C34B6
function MISC.ACOS(p0)
  return native.invoke(
    Type.Float, 2054, false,
    arg(Type.Float, p0)
  )
end

-- float TAN(float p0) // 0x632106CC96E82E91
function MISC.TAN(p0)
  return native.invoke(
    Type.Float, 2055, false,
    arg(Type.Float, p0)
  )
end

-- float ATAN(float p0) // 0xA9D1795CD5043663
function MISC.ATAN(p0)
  return native.invoke(
    Type.Float, 2056, false,
    arg(Type.Float, p0)
  )
end

-- float ATAN2(float p0, float p1) // 0x8927CBF9D22261A4
function MISC.ATAN2(p0, p1)
  return native.invoke(
    Type.Float, 2057, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1)
  )
end

-- float GET_DISTANCE_BETWEEN_COORDS(float x1, float y1, float z1, float x2, float y2, float z2, BOOL useZ) // 0xF1B760881820C952
--[[
Returns the distance between two three-dimensional points, optionally ignoring the Z values.
If useZ is false, only the 2D plane (X-Y) will be considered for calculating the distance.

Consider using this faster native instead: SYSTEM::VDIST - DVIST always takes in consideration the 3D coordinates.
--]]
function MISC.GET_DISTANCE_BETWEEN_COORDS(x1, y1, z1, x2, y2, z2, useZ)
  return native.invoke(
    Type.Float, 2058, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Bool, useZ)
  )
end

-- float GET_ANGLE_BETWEEN_2D_VECTORS(float x1, float y1, float x2, float y2) // 0x186FC4BE848E1C92
function MISC.GET_ANGLE_BETWEEN_2D_VECTORS(x1, y1, x2, y2)
  return native.invoke(
    Type.Float, 2059, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, x2),
    arg(Type.Float, y2)
  )
end

-- float GET_HEADING_FROM_VECTOR_2D(float dx, float dy) // 0x2FFB6B224F4B2926
--[[
dx = x1 - x2
dy = y1 - y2
--]]
function MISC.GET_HEADING_FROM_VECTOR_2D(dx, dy)
  return native.invoke(
    Type.Float, 2060, false,
    arg(Type.Float, dx),
    arg(Type.Float, dy)
  )
end

-- float GET_RATIO_OF_CLOSEST_POINT_ON_LINE(float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3, BOOL clamp) // 0x7F8F6405F4777AF6
--[[
returns a float between 0.0 and 1.0, clamp: sets whether the product should be clamped between the given coordinates
--]]
function MISC.GET_RATIO_OF_CLOSEST_POINT_ON_LINE(x1, y1, z1, x2, y2, z2, x3, y3, z3, clamp)
  return native.invoke(
    Type.Float, 2061, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Float, x3),
    arg(Type.Float, y3),
    arg(Type.Float, z3),
    arg(Type.Bool, clamp)
  )
end

-- Vector3 GET_CLOSEST_POINT_ON_LINE(float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3, BOOL clamp) // 0x21C235BC64831E5A
--[[
clamp: sets whether the product should be clamped between the given coordinates
--]]
function MISC.GET_CLOSEST_POINT_ON_LINE(x1, y1, z1, x2, y2, z2, x3, y3, z3, clamp)
  return native.invoke(
    Type.Vector3, 2062, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Float, x3),
    arg(Type.Float, y3),
    arg(Type.Float, z3),
    arg(Type.Bool, clamp)
  )
end

-- BOOL GET_LINE_PLANE_INTERSECTION(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, float p11, float* p12) // 0xF56DFB7B61BE7276
function MISC.GET_LINE_PLANE_INTERSECTION(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12)
  return native.invoke(
    Type.Bool, 2063, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Float, p6),
    arg(Type.Float, p7),
    arg(Type.Float, p8),
    arg(Type.Float, p9),
    arg(Type.Float, p10),
    arg(Type.Float, p11),
    arg(Type.Float, p12)
  )
end

-- BOOL GET_POINT_AREA_OVERLAP(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9, Any p10, Any p11, Any p12, Any p13) // 0xA0AD167E4B39D9A2
function MISC.GET_POINT_AREA_OVERLAP(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13)
  return native.invoke(
    Type.Bool, 2064, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5),
    arg(Type.Any, p6),
    arg(Type.Any, p7),
    arg(Type.Any, p8),
    arg(Type.Any, p9),
    arg(Type.Any, p10),
    arg(Type.Any, p11),
    arg(Type.Any, p12),
    arg(Type.Any, p13)
  )
end

-- void SET_BIT(int* address, int offset) // 0x933D6A9EEC1BACD0
--[[
This sets bit [offset] of [address] to on.

The offsets used are different bits to be toggled on and off, typically there is only one address used in a script.

Example:
MISC::SET_BIT(&bitAddress, 1);

To check if this bit has been enabled:
MISC::IS_BIT_SET(bitAddress, 1); // will return 1 afterwards

Please note, this method may assign a value to [address] when used.
--]]
function MISC.SET_BIT(address, offset)
  native.invoke(
    Type.Void, 2065, false,
    arg(Type.Int, address),
    arg(Type.Int, offset)
  )
end

-- void CLEAR_BIT(int* address, int offset) // 0xE80492A9AC099A93
--[[
This sets bit [offset] of [address] to off.

Example:
MISC::CLEAR_BIT(&bitAddress, 1);

To check if this bit has been enabled:
MISC::IS_BIT_SET(bitAddress, 1); // will return 0 afterwards
--]]
function MISC.CLEAR_BIT(address, offset)
  native.invoke(
    Type.Void, 2066, false,
    arg(Type.Int, address),
    arg(Type.Int, offset)
  )
end

-- Hash GET_HASH_KEY(const char* string) // 0xD24D37CC275948CC
--[[
This native converts its past string to hash. It is hashed using jenkins one at a time method.
--]]
function MISC.GET_HASH_KEY(string)
  return native.invoke(
    Type.Hash, 2067, false,
    arg(Type.String, string)
  )
end

-- void SLERP_NEAR_QUATERNION(float t, float x, float y, float z, float w, float x1, float y1, float z1, float w1, float* outX, float* outY, float* outZ, float* outW) // 0xF2F6A2FA49278625
--[[
This native always come right before SET_ENTITY_QUATERNION where its final 4 parameters are SLERP_NEAR_QUATERNION p9 to p12
--]]
function MISC.SLERP_NEAR_QUATERNION(t, x, y, z, w, x1, y1, z1, w1, outX, outY, outZ, outW)
  native.invoke(
    Type.Void, 2068, false,
    arg(Type.Float, t),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, w),
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, w1),
    arg(Type.Float, outX),
    arg(Type.Float, outY),
    arg(Type.Float, outZ),
    arg(Type.Float, outW)
  )
end

-- BOOL IS_AREA_OCCUPIED(float p0, float p1, float p2, float p3, float p4, float p5, BOOL p6, BOOL p7, BOOL p8, BOOL p9, BOOL p10, Any p11, BOOL p12) // 0xA61B4DF533DCB56E
function MISC.IS_AREA_OCCUPIED(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12)
  return native.invoke(
    Type.Bool, 2069, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Bool, p6),
    arg(Type.Bool, p7),
    arg(Type.Bool, p8),
    arg(Type.Bool, p9),
    arg(Type.Bool, p10),
    arg(Type.Any, p11),
    arg(Type.Bool, p12)
  )
end

-- BOOL IS_AREA_OCCUPIED_SLOW(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9, Any p10, Any p11, Any p12) // 0x39455BF4F4F55186
function MISC.IS_AREA_OCCUPIED_SLOW(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12)
  return native.invoke(
    Type.Bool, 2070, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5),
    arg(Type.Any, p6),
    arg(Type.Any, p7),
    arg(Type.Any, p8),
    arg(Type.Any, p9),
    arg(Type.Any, p10),
    arg(Type.Any, p11),
    arg(Type.Any, p12)
  )
end

-- BOOL IS_POSITION_OCCUPIED(float x, float y, float z, float range, BOOL p4, BOOL checkVehicles, BOOL checkPeds, BOOL p7, BOOL p8, Entity ignoreEntity, BOOL p10) // 0xADCDE75E1C60F32D
--[[
`range`: The range, seems to not be very accurate during testing.
`p4`: Unknown, when set to true it seems to always return true no matter what I try.
`checkVehicle`: Check for any vehicles in that area.
`checkPeds`: Check for any peds in that area.
`ignoreEntity`: This entity will be ignored if it's in the area. Set to 0 if you don't want to exclude any entities.
The BOOL parameters that are documented have not been confirmed. They are just documented from what I've found during testing. They may not work as expected in all cases.

Returns true if there is anything in that location matching the provided parameters.
--]]
function MISC.IS_POSITION_OCCUPIED(x, y, z, range, p4, checkVehicles, checkPeds, p7, p8, ignoreEntity, p10)
  return native.invoke(
    Type.Bool, 2071, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, range),
    arg(Type.Bool, p4),
    arg(Type.Bool, checkVehicles),
    arg(Type.Bool, checkPeds),
    arg(Type.Bool, p7),
    arg(Type.Bool, p8),
    arg(Type.Entity, ignoreEntity),
    arg(Type.Bool, p10)
  )
end

-- BOOL IS_POINT_OBSCURED_BY_A_MISSION_ENTITY(float p0, float p1, float p2, float p3, float p4, float p5, Any p6) // 0xE54E209C35FFA18D
function MISC.IS_POINT_OBSCURED_BY_A_MISSION_ENTITY(p0, p1, p2, p3, p4, p5, p6)
  return native.invoke(
    Type.Bool, 2072, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Any, p6)
  )
end

-- void CLEAR_AREA(float X, float Y, float Z, float radius, BOOL p4, BOOL ignoreCopCars, BOOL ignoreObjects, BOOL p7) // 0xA56F01F3765B93A0
--[[
Example: CLEAR_AREA(0, 0, 0, 30, true, false, false, false);
--]]
function MISC.CLEAR_AREA(X, Y, Z, radius, p4, ignoreCopCars, ignoreObjects, p7)
  native.invoke(
    Type.Void, 2073, false,
    arg(Type.Float, X),
    arg(Type.Float, Y),
    arg(Type.Float, Z),
    arg(Type.Float, radius),
    arg(Type.Bool, p4),
    arg(Type.Bool, ignoreCopCars),
    arg(Type.Bool, ignoreObjects),
    arg(Type.Bool, p7)
  )
end

-- void CLEAR_AREA_LEAVE_VEHICLE_HEALTH(float x, float y, float z, float radius, BOOL p4, BOOL p5, BOOL p6, BOOL p7) // 0x957838AAF91BD12D
--[[
MISC::CLEAR_AREA_LEAVE_VEHICLE_HEALTH(x, y, z, radius, false, false, false, false); seem to make all objects go away, peds, vehicles etc. All booleans set to true doesn't seem to change anything. 
--]]
function MISC.CLEAR_AREA_LEAVE_VEHICLE_HEALTH(x, y, z, radius, p4, p5, p6, p7)
  native.invoke(
    Type.Void, 2074, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Bool, p4),
    arg(Type.Bool, p5),
    arg(Type.Bool, p6),
    arg(Type.Bool, p7)
  )
end

-- void CLEAR_AREA_OF_VEHICLES(float x, float y, float z, float radius, BOOL p4, BOOL p5, BOOL p6, BOOL p7, BOOL p8, BOOL p9, Any p10) // 0x01C7B9B38428AEB6
--[[
Example:
CLEAR_AREA_OF_VEHICLES(0.0f, 0.0f, 0.0f, 10000.0f, false, false, false, false, false, false);
--]]
function MISC.CLEAR_AREA_OF_VEHICLES(x, y, z, radius, p4, p5, p6, p7, p8, p9, p10)
  native.invoke(
    Type.Void, 2075, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Bool, p4),
    arg(Type.Bool, p5),
    arg(Type.Bool, p6),
    arg(Type.Bool, p7),
    arg(Type.Bool, p8),
    arg(Type.Bool, p9),
    arg(Type.Any, p10)
  )
end

-- void CLEAR_ANGLED_AREA_OF_VEHICLES(float x1, float y1, float z1, float x2, float y2, float z2, float width, BOOL p7, BOOL p8, BOOL p9, BOOL p10, BOOL p11, Any p12, Any p13) // 0x11DB3500F042A8AA
function MISC.CLEAR_ANGLED_AREA_OF_VEHICLES(x1, y1, z1, x2, y2, z2, width, p7, p8, p9, p10, p11, p12, p13)
  native.invoke(
    Type.Void, 2076, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Float, width),
    arg(Type.Bool, p7),
    arg(Type.Bool, p8),
    arg(Type.Bool, p9),
    arg(Type.Bool, p10),
    arg(Type.Bool, p11),
    arg(Type.Any, p12),
    arg(Type.Any, p13)
  )
end

-- void CLEAR_AREA_OF_OBJECTS(float x, float y, float z, float radius, int flags) // 0xDD9B9B385AAC7F5B
--[[
I looked through the PC scripts that this site provides you with a link to find. It shows the last param mainly uses, (0, 2, 6, 16, and 17) so I am going to assume it is a type of flag. 
--]]
function MISC.CLEAR_AREA_OF_OBJECTS(x, y, z, radius, flags)
  native.invoke(
    Type.Void, 2077, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Int, flags)
  )
end

-- void CLEAR_AREA_OF_PEDS(float x, float y, float z, float radius, int flags) // 0xBE31FD6CE464AC59
--[[
Example:       CLEAR_AREA_OF_PEDS(0, 0, 0, 10000, 1);
--]]
function MISC.CLEAR_AREA_OF_PEDS(x, y, z, radius, flags)
  native.invoke(
    Type.Void, 2078, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Int, flags)
  )
end

-- void CLEAR_AREA_OF_COPS(float x, float y, float z, float radius, int flags) // 0x04F8FC8FCF58F88D
--[[
flags appears to always be 0
--]]
function MISC.CLEAR_AREA_OF_COPS(x, y, z, radius, flags)
  native.invoke(
    Type.Void, 2079, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Int, flags)
  )
end

-- void CLEAR_AREA_OF_PROJECTILES(float x, float y, float z, float radius, int flags) // 0x0A1CB9094635D1A6
--[[
flags is usually 0 in the scripts.
--]]
function MISC.CLEAR_AREA_OF_PROJECTILES(x, y, z, radius, flags)
  native.invoke(
    Type.Void, 2080, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Int, flags)
  )
end

-- void CLEAR_SCENARIO_SPAWN_HISTORY() // 0x7EC6F9A478A6A512
--[[
Possibly used to clear scenario points.
--]]
function MISC.CLEAR_SCENARIO_SPAWN_HISTORY()
  native.invoke(
    Type.Void, 2081, false
  )
end

-- void SET_SAVE_MENU_ACTIVE(BOOL ignoreVehicle) // 0xC9BF75D28165FF77
--[[
ignoreVehicle - bypasses vehicle check of the local player (it will not open if you are in a vehicle and this is set to false)
--]]
function MISC.SET_SAVE_MENU_ACTIVE(ignoreVehicle)
  native.invoke(
    Type.Void, 2082, false,
    arg(Type.Bool, ignoreVehicle)
  )
end

-- int GET_STATUS_OF_MANUAL_SAVE() // 0x397BAA01068BAA96
function MISC.GET_STATUS_OF_MANUAL_SAVE()
  return native.invoke(
    Type.Int, 2083, false
  )
end

-- void SET_CREDITS_ACTIVE(BOOL toggle) // 0xB938B7E6D3C0620C
function MISC.SET_CREDITS_ACTIVE(toggle)
  native.invoke(
    Type.Void, 2084, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_CREDITS_FADE_OUT_WITH_SCREEN(BOOL toggle) // 0xB51B9AB9EF81868C
function MISC.SET_CREDITS_FADE_OUT_WITH_SCREEN(toggle)
  native.invoke(
    Type.Void, 2085, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL HAVE_CREDITS_REACHED_END() // 0x075F1D57402C93BA
function MISC.HAVE_CREDITS_REACHED_END()
  return native.invoke(
    Type.Bool, 2086, false
  )
end

-- BOOL ARE_CREDITS_RUNNING() // 0xD19C0826DC20CF1C
function MISC.ARE_CREDITS_RUNNING()
  return native.invoke(
    Type.Bool, 2087, false
  )
end

-- void TERMINATE_ALL_SCRIPTS_WITH_THIS_NAME(const char* scriptName) // 0x9DC711BC69C548DF
function MISC.TERMINATE_ALL_SCRIPTS_WITH_THIS_NAME(scriptName)
  native.invoke(
    Type.Void, 2088, false,
    arg(Type.String, scriptName)
  )
end

-- void NETWORK_SET_SCRIPT_IS_SAFE_FOR_NETWORK_GAME() // 0x9243BAC96D64C050
function MISC.NETWORK_SET_SCRIPT_IS_SAFE_FOR_NETWORK_GAME()
  native.invoke(
    Type.Void, 2089, false
  )
end

-- int ADD_HOSPITAL_RESTART(float x, float y, float z, float p3, Any p4) // 0x1F464EF988465A81
--[[
Returns the index of the newly created hospital spawn point.

p3 might be radius?
--]]
function MISC.ADD_HOSPITAL_RESTART(x, y, z, p3, p4)
  return native.invoke(
    Type.Int, 2090, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, p3),
    arg(Type.Any, p4)
  )
end

-- void DISABLE_HOSPITAL_RESTART(int hospitalIndex, BOOL toggle) // 0xC8535819C450EBA8
--[[
The game by default has 5 hospital respawn points. Disabling them all will cause the player to respawn at the last position they were.
--]]
function MISC.DISABLE_HOSPITAL_RESTART(hospitalIndex, toggle)
  native.invoke(
    Type.Void, 2091, false,
    arg(Type.Int, hospitalIndex),
    arg(Type.Bool, toggle)
  )
end

-- int ADD_POLICE_RESTART(float p0, float p1, float p2, float p3, Any p4) // 0x452736765B31FC4B
function MISC.ADD_POLICE_RESTART(p0, p1, p2, p3, p4)
  return native.invoke(
    Type.Int, 2092, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Any, p4)
  )
end

-- void DISABLE_POLICE_RESTART(int policeIndex, BOOL toggle) // 0x23285DED6EBD7EA3
--[[
Disables the spawn point at the police house on the specified index.

policeIndex: The police house index.
toggle: true to enable the spawn point, false to disable.

- Nacorpio
--]]
function MISC.DISABLE_POLICE_RESTART(policeIndex, toggle)
  native.invoke(
    Type.Void, 2093, false,
    arg(Type.Int, policeIndex),
    arg(Type.Bool, toggle)
  )
end

-- void SET_RESTART_COORD_OVERRIDE(float x, float y, float z, float heading) // 0x706B5EDCAA7FA663
function MISC.SET_RESTART_COORD_OVERRIDE(x, y, z, heading)
  native.invoke(
    Type.Void, 2094, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, heading)
  )
end

-- void CLEAR_RESTART_COORD_OVERRIDE() // 0xA2716D40842EAF79
function MISC.CLEAR_RESTART_COORD_OVERRIDE()
  native.invoke(
    Type.Void, 2095, false
  )
end

-- void PAUSE_DEATH_ARREST_RESTART(BOOL toggle) // 0x2C2B3493FBF51C71
function MISC.PAUSE_DEATH_ARREST_RESTART(toggle)
  native.invoke(
    Type.Void, 2096, false,
    arg(Type.Bool, toggle)
  )
end

-- void IGNORE_NEXT_RESTART(BOOL toggle) // 0x21FFB63D8C615361
function MISC.IGNORE_NEXT_RESTART(toggle)
  native.invoke(
    Type.Void, 2097, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_FADE_OUT_AFTER_DEATH(BOOL toggle) // 0x4A18E01DF2C87B86
--[[
Sets whether the game should fade out after the player dies.
--]]
function MISC.SET_FADE_OUT_AFTER_DEATH(toggle)
  native.invoke(
    Type.Void, 2098, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_FADE_OUT_AFTER_ARREST(BOOL toggle) // 0x1E0B4DC0D990A4E7
--[[
Sets whether the game should fade out after the player is arrested.
--]]
function MISC.SET_FADE_OUT_AFTER_ARREST(toggle)
  native.invoke(
    Type.Void, 2099, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_FADE_IN_AFTER_DEATH_ARREST(BOOL toggle) // 0xDA66D2796BA33F12
--[[
Sets whether the game should fade in after the player dies or is arrested.
--]]
function MISC.SET_FADE_IN_AFTER_DEATH_ARREST(toggle)
  native.invoke(
    Type.Void, 2100, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_FADE_IN_AFTER_LOAD(BOOL toggle) // 0xF3D78F59DFE18D79
function MISC.SET_FADE_IN_AFTER_LOAD(toggle)
  native.invoke(
    Type.Void, 2101, false,
    arg(Type.Bool, toggle)
  )
end

-- int REGISTER_SAVE_HOUSE(float x, float y, float z, float p3, const char* p4, Any p5, Any p6) // 0xC0714D0A7EEECA54
--[[
returns savehouseHandle
--]]
function MISC.REGISTER_SAVE_HOUSE(x, y, z, p3, p4, p5, p6)
  return native.invoke(
    Type.Int, 2102, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, p3),
    arg(Type.String, p4),
    arg(Type.Any, p5),
    arg(Type.Any, p6)
  )
end

-- void SET_SAVE_HOUSE(int savehouseHandle, BOOL p1, BOOL p2) // 0x4F548CABEAE553BC
function MISC.SET_SAVE_HOUSE(savehouseHandle, p1, p2)
  native.invoke(
    Type.Void, 2103, false,
    arg(Type.Int, savehouseHandle),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- BOOL OVERRIDE_SAVE_HOUSE(BOOL p0, float p1, float p2, float p3, float p4, BOOL p5, float p6, float p7) // 0x1162EA8AE9D24EEA
function MISC.OVERRIDE_SAVE_HOUSE(p0, p1, p2, p3, p4, p5, p6, p7)
  return native.invoke(
    Type.Bool, 2104, false,
    arg(Type.Bool, p0),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Bool, p5),
    arg(Type.Float, p6),
    arg(Type.Float, p7)
  )
end

-- BOOL GET_SAVE_HOUSE_DETAILS_AFTER_SUCCESSFUL_LOAD(Vector3* p0, float* p1, BOOL* fadeInAfterLoad, BOOL* p3) // 0xA4A0065E39C9F25C
function MISC.GET_SAVE_HOUSE_DETAILS_AFTER_SUCCESSFUL_LOAD(p0, p1, fadeInAfterLoad, p3)
  return native.invoke(
    Type.Bool, 2105, true,
    arg(Type.Vector3, p0),
    arg(Type.Float, p1),
    arg(Type.Bool, fadeInAfterLoad),
    arg(Type.Bool, p3)
  )
end

-- void DO_AUTO_SAVE() // 0x50EEAAD86232EE55
function MISC.DO_AUTO_SAVE()
  native.invoke(
    Type.Void, 2106, false
  )
end

-- BOOL GET_IS_AUTO_SAVE_OFF() // 0x6E04F06094C87047
--[[
Returns true if profile setting 208 is equal to 0.
--]]
function MISC.GET_IS_AUTO_SAVE_OFF()
  return native.invoke(
    Type.Bool, 2107, false
  )
end

-- BOOL IS_AUTO_SAVE_IN_PROGRESS() // 0x69240733738C19A0
function MISC.IS_AUTO_SAVE_IN_PROGRESS()
  return native.invoke(
    Type.Bool, 2108, false
  )
end

-- BOOL HAS_CODE_REQUESTED_AUTOSAVE() // 0x2107A3773771186D
function MISC.HAS_CODE_REQUESTED_AUTOSAVE()
  return native.invoke(
    Type.Bool, 2109, false
  )
end

-- void CLEAR_CODE_REQUESTED_AUTOSAVE() // 0x06462A961E94B67C
function MISC.CLEAR_CODE_REQUESTED_AUTOSAVE()
  native.invoke(
    Type.Void, 2110, false
  )
end

-- void BEGIN_REPLAY_STATS(Any p0, Any p1) // 0xE0E500246FF73D66
function MISC.BEGIN_REPLAY_STATS(p0, p1)
  native.invoke(
    Type.Void, 2111, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void ADD_REPLAY_STAT_VALUE(Any value) // 0x69FE6DC87BD2A5E9
function MISC.ADD_REPLAY_STAT_VALUE(value)
  native.invoke(
    Type.Void, 2112, false,
    arg(Type.Any, value)
  )
end

-- void END_REPLAY_STATS() // 0xA23E821FBDF8A5F2
function MISC.END_REPLAY_STATS()
  native.invoke(
    Type.Void, 2113, false
  )
end

-- BOOL HAVE_REPLAY_STATS_BEEN_STORED() // 0xD642319C54AADEB6
function MISC.HAVE_REPLAY_STATS_BEEN_STORED()
  return native.invoke(
    Type.Bool, 2114, false
  )
end

-- int GET_REPLAY_STAT_MISSION_ID() // 0x5B1F2E327B6B6FE1
function MISC.GET_REPLAY_STAT_MISSION_ID()
  return native.invoke(
    Type.Int, 2115, false
  )
end

-- int GET_REPLAY_STAT_MISSION_TYPE() // 0x2B626A0150E4D449
function MISC.GET_REPLAY_STAT_MISSION_TYPE()
  return native.invoke(
    Type.Int, 2116, false
  )
end

-- int GET_REPLAY_STAT_COUNT() // 0xDC9274A7EF6B2867
function MISC.GET_REPLAY_STAT_COUNT()
  return native.invoke(
    Type.Int, 2117, false
  )
end

-- int GET_REPLAY_STAT_AT_INDEX(int index) // 0x8098C8D6597AAE18
function MISC.GET_REPLAY_STAT_AT_INDEX(index)
  return native.invoke(
    Type.Int, 2118, false,
    arg(Type.Int, index)
  )
end

-- void CLEAR_REPLAY_STATS() // 0x1B1AB132A16FDA55
function MISC.CLEAR_REPLAY_STATS()
  native.invoke(
    Type.Void, 2119, false
  )
end

-- BOOL QUEUE_MISSION_REPEAT_LOAD() // 0x72DE52178C291CB5
function MISC.QUEUE_MISSION_REPEAT_LOAD()
  return native.invoke(
    Type.Bool, 2120, false
  )
end

-- BOOL QUEUE_MISSION_REPEAT_SAVE() // 0x44A0BDC559B35F6E
--[[
Shows the screen which is visible before you redo a mission? The game will make a restoration point where you will cameback when the mission is over.
Returns 1 if the message isn't currently on screen
--]]
function MISC.QUEUE_MISSION_REPEAT_SAVE()
  return native.invoke(
    Type.Bool, 2121, false
  )
end

-- BOOL QUEUE_MISSION_REPEAT_SAVE_FOR_BENCHMARK_TEST() // 0xEB2104E905C6F2E9
function MISC.QUEUE_MISSION_REPEAT_SAVE_FOR_BENCHMARK_TEST()
  return native.invoke(
    Type.Bool, 2122, false
  )
end

-- int GET_STATUS_OF_MISSION_REPEAT_SAVE() // 0x2B5E102E4A42F2BF
function MISC.GET_STATUS_OF_MISSION_REPEAT_SAVE()
  return native.invoke(
    Type.Int, 2123, false
  )
end

-- BOOL IS_MEMORY_CARD_IN_USE() // 0x8A75CE2956274ADD
function MISC.IS_MEMORY_CARD_IN_USE()
  return native.invoke(
    Type.Bool, 2124, false
  )
end

-- void SHOOT_SINGLE_BULLET_BETWEEN_COORDS(float x1, float y1, float z1, float x2, float y2, float z2, int damage, BOOL p7, Hash weaponHash, Ped ownerPed, BOOL isAudible, BOOL isInvisible, float speed) // 0x867654CBC7606F2C
function MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(x1, y1, z1, x2, y2, z2, damage, p7, weaponHash, ownerPed, isAudible, isInvisible, speed)
  native.invoke(
    Type.Void, 2125, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Int, damage),
    arg(Type.Bool, p7),
    arg(Type.Hash, weaponHash),
    arg(Type.Ped, ownerPed),
    arg(Type.Bool, isAudible),
    arg(Type.Bool, isInvisible),
    arg(Type.Float, speed)
  )
end

-- void SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY(float x1, float y1, float z1, float x2, float y2, float z2, int damage, BOOL p7, Hash weaponHash, Ped ownerPed, BOOL isAudible, BOOL isInvisible, float speed, Entity entity, Any p14) // 0xE3A7742E0B7A2F8B
--[[
entity - entity to ignore
--]]
function MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY(x1, y1, z1, x2, y2, z2, damage, p7, weaponHash, ownerPed, isAudible, isInvisible, speed, entity, p14)
  native.invoke(
    Type.Void, 2126, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Int, damage),
    arg(Type.Bool, p7),
    arg(Type.Hash, weaponHash),
    arg(Type.Ped, ownerPed),
    arg(Type.Bool, isAudible),
    arg(Type.Bool, isInvisible),
    arg(Type.Float, speed),
    arg(Type.Entity, entity),
    arg(Type.Any, p14)
  )
end

-- void SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY_NEW(float x1, float y1, float z1, float x2, float y2, float z2, int damage, BOOL p7, Hash weaponHash, Ped ownerPed, BOOL isAudible, BOOL isInvisible, float speed, Entity entity, BOOL p14, BOOL p15, Entity targetEntity, BOOL p17, Any p18, Any p19, Any p20) // 0xBFE5756E7407064A
--[[
entity - entity to ignore
targetEntity - entity to home in on, if the weapon hash provided supports homing
--]]
function MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY_NEW(x1, y1, z1, x2, y2, z2, damage, p7, weaponHash, ownerPed, isAudible, isInvisible, speed, entity, p14, p15, targetEntity, p17, p18, p19, p20)
  native.invoke(
    Type.Void, 2127, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Int, damage),
    arg(Type.Bool, p7),
    arg(Type.Hash, weaponHash),
    arg(Type.Ped, ownerPed),
    arg(Type.Bool, isAudible),
    arg(Type.Bool, isInvisible),
    arg(Type.Float, speed),
    arg(Type.Entity, entity),
    arg(Type.Bool, p14),
    arg(Type.Bool, p15),
    arg(Type.Entity, targetEntity),
    arg(Type.Bool, p17),
    arg(Type.Any, p18),
    arg(Type.Any, p19),
    arg(Type.Any, p20)
  )
end

-- void GET_MODEL_DIMENSIONS(Hash modelHash, Vector3* minimum, Vector3* maximum) // 0x03E8D3D5F549087A
--[[
Gets the dimensions of a model.

Calculate (maximum - minimum) to get the size, in which case, Y will be how long the model is.

Example from the scripts: MISC::GET_MODEL_DIMENSIONS(ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()), &v_1A, &v_17);
--]]
function MISC.GET_MODEL_DIMENSIONS(modelHash, minimum, maximum)
  native.invoke(
    Type.Void, 2128, true,
    arg(Type.Hash, modelHash),
    arg(Type.Vector3, minimum),
    arg(Type.Vector3, maximum)
  )
end

-- void SET_FAKE_WANTED_LEVEL(int fakeWantedLevel) // 0x1454F2448DE30163
--[[
Sets a visually fake wanted level on the user interface. Used by Rockstar's scripts to "override" regular wanted levels and make custom ones while the real wanted level and multipliers are still in effect.

Max is 6, anything above this makes it just 6. Also the mini-map gets the red & blue flashing effect.
--]]
function MISC.SET_FAKE_WANTED_LEVEL(fakeWantedLevel)
  native.invoke(
    Type.Void, 2129, false,
    arg(Type.Int, fakeWantedLevel)
  )
end

-- int GET_FAKE_WANTED_LEVEL() // 0x4C9296CBCD1B971E
function MISC.GET_FAKE_WANTED_LEVEL()
  return native.invoke(
    Type.Int, 2130, false
  )
end

-- void USING_MISSION_CREATOR(BOOL toggle) // 0xF14878FC50BEC6EE
function MISC.USING_MISSION_CREATOR(toggle)
  native.invoke(
    Type.Void, 2131, false,
    arg(Type.Bool, toggle)
  )
end

-- void ALLOW_MISSION_CREATOR_WARP(BOOL toggle) // 0xDEA36202FC3382DF
function MISC.ALLOW_MISSION_CREATOR_WARP(toggle)
  native.invoke(
    Type.Void, 2132, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_MINIGAME_IN_PROGRESS(BOOL toggle) // 0x19E00D7322C6F85B
function MISC.SET_MINIGAME_IN_PROGRESS(toggle)
  native.invoke(
    Type.Void, 2133, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_MINIGAME_IN_PROGRESS() // 0x2B4A15E44DE0F478
function MISC.IS_MINIGAME_IN_PROGRESS()
  return native.invoke(
    Type.Bool, 2134, false
  )
end

-- BOOL IS_THIS_A_MINIGAME_SCRIPT() // 0x7B30F65D7B710098
function MISC.IS_THIS_A_MINIGAME_SCRIPT()
  return native.invoke(
    Type.Bool, 2135, false
  )
end

-- BOOL IS_SNIPER_INVERTED() // 0x61A23B7EDA9BDA24
--[[
This function is hard-coded to always return 0.
--]]
function MISC.IS_SNIPER_INVERTED()
  return native.invoke(
    Type.Bool, 2136, false
  )
end

-- BOOL SHOULD_USE_METRIC_MEASUREMENTS() // 0xD3D15555431AB793
--[[
Returns true if the game is using the metric measurement system (profile setting 227), false if imperial is used.
--]]
function MISC.SHOULD_USE_METRIC_MEASUREMENTS()
  return native.invoke(
    Type.Bool, 2137, false
  )
end

-- int GET_PROFILE_SETTING(int profileSetting) // 0xC488FF2356EA7791
function MISC.GET_PROFILE_SETTING(profileSetting)
  return native.invoke(
    Type.Int, 2138, false,
    arg(Type.Int, profileSetting)
  )
end

-- BOOL ARE_STRINGS_EQUAL(const char* string1, const char* string2) // 0x0C515FAB3FF9EA92
function MISC.ARE_STRINGS_EQUAL(string1, string2)
  return native.invoke(
    Type.Bool, 2139, false,
    arg(Type.String, string1),
    arg(Type.String, string2)
  )
end

-- int COMPARE_STRINGS(const char* str1, const char* str2, BOOL matchCase, int maxLength) // 0x1E34710ECD4AB0EB
--[[
Compares two strings up to a specified number of characters.

Parameters:
str1 - String to be compared.
str2 - String to be compared.
matchCase - Comparison will be case-sensitive.
maxLength - Maximum number of characters to compare. A value of -1 indicates an infinite length.

Returns:
A value indicating the relationship between the strings:
<0 - The first non-matching character in 'str1' is less than the one in 'str2'. (e.g. 'A' < 'B', so result = -1)
0 - The contents of both strings are equal.
>0 - The first non-matching character in 'str1' is less than the one in 'str2'. (e.g. 'B' > 'A', so result = 1)

Examples:
MISC::COMPARE_STRINGS("STRING", "string", false, -1); // 0; equal
MISC::COMPARE_STRINGS("TESTING", "test", false, 4); // 0; equal
MISC::COMPARE_STRINGS("R2D2", "R2xx", false, 2); // 0; equal
MISC::COMPARE_STRINGS("foo", "bar", false, -1); // 4; 'f' > 'b'
MISC::COMPARE_STRINGS("A", "A", true, 1); // 0; equal

When comparing case-sensitive strings, lower-case characters are greater than upper-case characters:
MISC::COMPARE_STRINGS("A", "a", true, 1); // -1; 'A' < 'a'
MISC::COMPARE_STRINGS("a", "A", true, 1); // 1; 'a' > 'A'
--]]
function MISC.COMPARE_STRINGS(str1, str2, matchCase, maxLength)
  return native.invoke(
    Type.Int, 2140, false,
    arg(Type.String, str1),
    arg(Type.String, str2),
    arg(Type.Bool, matchCase),
    arg(Type.Int, maxLength)
  )
end

-- int ABSI(int value) // 0xF0D31AD191A74F87
function MISC.ABSI(value)
  return native.invoke(
    Type.Int, 2141, false,
    arg(Type.Int, value)
  )
end

-- float ABSF(float value) // 0x73D57CFFDD12C355
function MISC.ABSF(value)
  return native.invoke(
    Type.Float, 2142, false,
    arg(Type.Float, value)
  )
end

-- BOOL IS_SNIPER_BULLET_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2) // 0xFEFCF11B01287125
--[[
Determines whether there is a sniper bullet within the specified coordinates. The coordinates form an axis-aligned bounding box.
--]]
function MISC.IS_SNIPER_BULLET_IN_AREA(x1, y1, z1, x2, y2, z2)
  return native.invoke(
    Type.Bool, 2143, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2)
  )
end

-- BOOL IS_PROJECTILE_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, BOOL ownedByPlayer) // 0x5270A8FBC098C3F8
--[[
Determines whether there is a projectile within the specified coordinates. The coordinates form a rectangle.

- Nacorpio


ownedByPlayer = only projectiles fired by the player will be detected.
--]]
function MISC.IS_PROJECTILE_IN_AREA(x1, y1, z1, x2, y2, z2, ownedByPlayer)
  return native.invoke(
    Type.Bool, 2144, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Bool, ownedByPlayer)
  )
end

-- BOOL IS_PROJECTILE_TYPE_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, int type, BOOL ownedByPlayer) // 0x2E0DC353342C4A6D
--[[
Determines whether there is a projectile of a specific type within the specified coordinates. The coordinates form a axis-aligned bounding box.
--]]
function MISC.IS_PROJECTILE_TYPE_IN_AREA(x1, y1, z1, x2, y2, z2, type, ownedByPlayer)
  return native.invoke(
    Type.Bool, 2145, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Int, type),
    arg(Type.Bool, ownedByPlayer)
  )
end

-- BOOL IS_PROJECTILE_TYPE_IN_ANGLED_AREA(float x1, float y1, float z1, float x2, float y2, float z2, float width, Any p7, BOOL ownedByPlayer) // 0xF0BC12401061DEA0
--[[
See IS_POINT_IN_ANGLED_AREA for the definition of an angled area.
--]]
function MISC.IS_PROJECTILE_TYPE_IN_ANGLED_AREA(x1, y1, z1, x2, y2, z2, width, p7, ownedByPlayer)
  return native.invoke(
    Type.Bool, 2146, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Float, width),
    arg(Type.Any, p7),
    arg(Type.Bool, ownedByPlayer)
  )
end

-- BOOL IS_PROJECTILE_TYPE_WITHIN_DISTANCE(float x, float y, float z, Hash projectileHash, float radius, BOOL ownedByPlayer) // 0x34318593248C8FB2
function MISC.IS_PROJECTILE_TYPE_WITHIN_DISTANCE(x, y, z, projectileHash, radius, ownedByPlayer)
  return native.invoke(
    Type.Bool, 2147, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Hash, projectileHash),
    arg(Type.Float, radius),
    arg(Type.Bool, ownedByPlayer)
  )
end

-- BOOL GET_COORDS_OF_PROJECTILE_TYPE_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, Hash projectileHash, Vector3* projectilePos, BOOL ownedByPlayer) // 0x8D7A43EC6A5FEA45
function MISC.GET_COORDS_OF_PROJECTILE_TYPE_IN_AREA(x1, y1, z1, x2, y2, z2, projectileHash, projectilePos, ownedByPlayer)
  return native.invoke(
    Type.Bool, 2148, true,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Hash, projectileHash),
    arg(Type.Vector3, projectilePos),
    arg(Type.Bool, ownedByPlayer)
  )
end

-- BOOL GET_COORDS_OF_PROJECTILE_TYPE_IN_ANGLED_AREA(float vecAngledAreaPoint1X, float vecAngledAreaPoint1Y, float vecAngledAreaPoint1Z, float vecAngledAreaPoint2X, float vecAngledAreaPoint2Y, float vecAngledAreaPoint2Z, float distanceOfOppositeFace, Hash weaponType, Vector3* positionOut, BOOL bIsPlayer) // 0x3DA8C28346B62CED
function MISC.GET_COORDS_OF_PROJECTILE_TYPE_IN_ANGLED_AREA(vecAngledAreaPoint1X, vecAngledAreaPoint1Y, vecAngledAreaPoint1Z, vecAngledAreaPoint2X, vecAngledAreaPoint2Y, vecAngledAreaPoint2Z, distanceOfOppositeFace, weaponType, positionOut, bIsPlayer)
  return native.invoke(
    Type.Bool, 2149, true,
    arg(Type.Float, vecAngledAreaPoint1X),
    arg(Type.Float, vecAngledAreaPoint1Y),
    arg(Type.Float, vecAngledAreaPoint1Z),
    arg(Type.Float, vecAngledAreaPoint2X),
    arg(Type.Float, vecAngledAreaPoint2Y),
    arg(Type.Float, vecAngledAreaPoint2Z),
    arg(Type.Float, distanceOfOppositeFace),
    arg(Type.Hash, weaponType),
    arg(Type.Vector3, positionOut),
    arg(Type.Bool, bIsPlayer)
  )
end

-- BOOL GET_COORDS_OF_PROJECTILE_TYPE_WITHIN_DISTANCE(Ped ped, Hash weaponHash, float distance, Vector3* outCoords, BOOL p4) // 0xDFB4138EEFED7B81
function MISC.GET_COORDS_OF_PROJECTILE_TYPE_WITHIN_DISTANCE(ped, weaponHash, distance, outCoords, p4)
  return native.invoke(
    Type.Bool, 2150, true,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash),
    arg(Type.Float, distance),
    arg(Type.Vector3, outCoords),
    arg(Type.Bool, p4)
  )
end

-- BOOL GET_PROJECTILE_OF_PROJECTILE_TYPE_WITHIN_DISTANCE(Ped ped, Hash weaponHash, float distance, Vector3* outCoords, Object* outProjectile, BOOL p5) // 0x82FDE6A57EE4EE44
function MISC.GET_PROJECTILE_OF_PROJECTILE_TYPE_WITHIN_DISTANCE(ped, weaponHash, distance, outCoords, outProjectile, p5)
  return native.invoke(
    Type.Bool, 2151, true,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash),
    arg(Type.Float, distance),
    arg(Type.Vector3, outCoords),
    arg(Type.Object, outProjectile),
    arg(Type.Bool, p5)
  )
end

-- BOOL IS_BULLET_IN_ANGLED_AREA(float x1, float y1, float z1, float x2, float y2, float z2, float width, BOOL ownedByPlayer) // 0x1A8B5F3C01E2B477
--[[
For projectiles, see: IS_PROJECTILE_TYPE_IN_ANGLED_AREA
See IS_POINT_IN_ANGLED_AREA for the definition of an angled area.
Returns True if a bullet, as maintained by a pool within CWeaponManager, has been fired into the defined angled area.
--]]
function MISC.IS_BULLET_IN_ANGLED_AREA(x1, y1, z1, x2, y2, z2, width, ownedByPlayer)
  return native.invoke(
    Type.Bool, 2152, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Float, width),
    arg(Type.Bool, ownedByPlayer)
  )
end

-- BOOL IS_BULLET_IN_AREA(float x, float y, float z, float radius, BOOL ownedByPlayer) // 0x3F2023999AD51C1F
function MISC.IS_BULLET_IN_AREA(x, y, z, radius, ownedByPlayer)
  return native.invoke(
    Type.Bool, 2153, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Bool, ownedByPlayer)
  )
end

-- BOOL IS_BULLET_IN_BOX(float x1, float y1, float z1, float x2, float y2, float z2, BOOL ownedByPlayer) // 0xDE0F6D7450D37351
function MISC.IS_BULLET_IN_BOX(x1, y1, z1, x2, y2, z2, ownedByPlayer)
  return native.invoke(
    Type.Bool, 2154, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Bool, ownedByPlayer)
  )
end

-- BOOL HAS_BULLET_IMPACTED_IN_AREA(float x, float y, float z, float p3, BOOL p4, BOOL p5) // 0x9870ACFB89A90995
--[[
p3 - possibly radius?
--]]
function MISC.HAS_BULLET_IMPACTED_IN_AREA(x, y, z, p3, p4, p5)
  return native.invoke(
    Type.Bool, 2155, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, p3),
    arg(Type.Bool, p4),
    arg(Type.Bool, p5)
  )
end

-- BOOL HAS_BULLET_IMPACTED_IN_BOX(float p0, float p1, float p2, float p3, float p4, float p5, BOOL p6, BOOL p7) // 0xDC8C5D7CFEAB8394
function MISC.HAS_BULLET_IMPACTED_IN_BOX(p0, p1, p2, p3, p4, p5, p6, p7)
  return native.invoke(
    Type.Bool, 2156, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Bool, p6),
    arg(Type.Bool, p7)
  )
end

-- BOOL IS_ORBIS_VERSION() // 0xA72BC0B675B1519E
--[[
PS4
--]]
function MISC.IS_ORBIS_VERSION()
  return native.invoke(
    Type.Bool, 2157, false
  )
end

-- BOOL IS_DURANGO_VERSION() // 0x4D982ADB1978442D
--[[
XBOX ONE
--]]
function MISC.IS_DURANGO_VERSION()
  return native.invoke(
    Type.Bool, 2158, false
  )
end

-- BOOL IS_XBOX360_VERSION() // 0xF6201B4DAF662A9D
function MISC.IS_XBOX360_VERSION()
  return native.invoke(
    Type.Bool, 2159, false
  )
end

-- BOOL IS_PS3_VERSION() // 0xCCA1072C29D096C2
function MISC.IS_PS3_VERSION()
  return native.invoke(
    Type.Bool, 2160, false
  )
end

-- BOOL IS_PC_VERSION() // 0x48AF36444B965238
function MISC.IS_PC_VERSION()
  return native.invoke(
    Type.Bool, 2161, false
  )
end

-- BOOL IS_STEAM_VERSION() // 0x0A27B2B6282F7169
function MISC.IS_STEAM_VERSION()
  return native.invoke(
    Type.Bool, 2162, false
  )
end

-- BOOL IS_AUSSIE_VERSION() // 0x9F1935CA1F724008
--[[
Used to block some of the prostitute stuff due to laws in Australia.
--]]
function MISC.IS_AUSSIE_VERSION()
  return native.invoke(
    Type.Bool, 2163, false
  )
end

-- BOOL IS_JAPANESE_VERSION() // 0xB8C0BB75D8A77DB3
function MISC.IS_JAPANESE_VERSION()
  return native.invoke(
    Type.Bool, 2164, false
  )
end

-- BOOL IS_XBOX_PLATFORM() // 0x138679CA01E21F53
function MISC.IS_XBOX_PLATFORM()
  return native.invoke(
    Type.Bool, 2165, false
  )
end

-- BOOL IS_SCARLETT_VERSION() // 0xC545AB1CF97ABB34
--[[
Xbox Series (Scarlett) version...
--]]
function MISC.IS_SCARLETT_VERSION()
  return native.invoke(
    Type.Bool, 2166, false
  )
end

-- BOOL IS_SCE_PLATFORM() // 0xF911E695C1EB8518
function MISC.IS_SCE_PLATFORM()
  return native.invoke(
    Type.Bool, 2167, false
  )
end

-- BOOL IS_PROSPERO_VERSION() // 0x807ABE1AB65C24D2
--[[
PS5 (Prospero) version...
--]]
function MISC.IS_PROSPERO_VERSION()
  return native.invoke(
    Type.Bool, 2168, false
  )
end

-- BOOL IS_STRING_NULL(const char* string) // 0xF22B6C47C6EAB066
function MISC.IS_STRING_NULL(string)
  return native.invoke(
    Type.Bool, 2169, false,
    arg(Type.String, string)
  )
end

-- BOOL IS_STRING_NULL_OR_EMPTY(const char* string) // 0xCA042B6957743895
function MISC.IS_STRING_NULL_OR_EMPTY(string)
  return native.invoke(
    Type.Bool, 2170, false,
    arg(Type.String, string)
  )
end

-- BOOL STRING_TO_INT(const char* string, int* outInteger) // 0x5A5F40FE637EB584
--[[
Returns false if it's a null or empty string or if the string is too long. outInteger will be set to -999 in that case.

If all checks have passed successfully, the return value will be set to whatever strtol(string, 0i64, 10); returns.
--]]
function MISC.STRING_TO_INT(string, outInteger)
  return native.invoke(
    Type.Bool, 2171, false,
    arg(Type.String, string),
    arg(Type.Int, outInteger)
  )
end

-- void SET_BITS_IN_RANGE(int* var, int rangeStart, int rangeEnd, int p3) // 0x8EF07E15701D61ED
function MISC.SET_BITS_IN_RANGE(var, rangeStart, rangeEnd, p3)
  native.invoke(
    Type.Void, 2172, false,
    arg(Type.Int, var),
    arg(Type.Int, rangeStart),
    arg(Type.Int, rangeEnd),
    arg(Type.Int, p3)
  )
end

-- int GET_BITS_IN_RANGE(int var, int rangeStart, int rangeEnd) // 0x53158863FCC0893A
function MISC.GET_BITS_IN_RANGE(var, rangeStart, rangeEnd)
  return native.invoke(
    Type.Int, 2173, false,
    arg(Type.Int, var),
    arg(Type.Int, rangeStart),
    arg(Type.Int, rangeEnd)
  )
end

-- int ADD_STUNT_JUMP(float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3, float x4, float y4, float z4, float camX, float camY, float camZ, int p15, int p16, int p17) // 0x1A992DA297A4630C
--[[
See description of `ADD_STUNT_JUMP_ANGLED` for detailed info. The only difference really is this one does not have the radius (or angle, not sure) floats parameters for entry and landing zones.
--]]
function MISC.ADD_STUNT_JUMP(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, camX, camY, camZ, p15, p16, p17)
  return native.invoke(
    Type.Int, 2174, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Float, x3),
    arg(Type.Float, y3),
    arg(Type.Float, z3),
    arg(Type.Float, x4),
    arg(Type.Float, y4),
    arg(Type.Float, z4),
    arg(Type.Float, camX),
    arg(Type.Float, camY),
    arg(Type.Float, camZ),
    arg(Type.Int, p15),
    arg(Type.Int, p16),
    arg(Type.Int, p17)
  )
end

-- int ADD_STUNT_JUMP_ANGLED(float x1, float y1, float z1, float x2, float y2, float z2, float radius1, float x3, float y3, float z3, float x4, float y4, float z4, float radius2, float camX, float camY, float camZ, int p17, int p18, int p19) // 0xBBE5D803A5360CBF
--[[
Creates a new stunt jump.

The radius1 and radius2 might actually not be a radius at all, but that's what it seems to me testing them in-game. But they may be 'angle' floats instead, considering this native is named ADD_STUNT_JUMP_**ANGLED**.

Info about the specific 'parameter sections':


**x1, y1, z1, x2, y2, z2 and radius1:**

First coordinates are for the jump entry area, and the radius that will be checked around that area. So if you're not exactly within the coordinates, but you are within the outter radius limit then it will still register as entering the stunt jump. Note as mentioned above, the radius is just a guess, I'm not really sure about it's exact purpose.


**x3, y3, z3, x4, y4, z4 and radius2:**

Next part is the landing area, again starting with the left bottom (nearest to the stunt jump entry zone) coordinate, and the second one being the top right furthest away part of the landing area. Followed by another (most likely) radius float, this is usually slightly larger than the entry zone 'radius' float value, just because you have quite a lot of places where you can land (I'm guessing).


**camX, camY and camZ:**

The final coordinate in this native is the Camera position. Rotation and zoom/FOV is managed by the game itself, you just need to provide the camera location.


**unk1, unk2 and unk3:**

Not sure what these are for, but they're always `150, 0, 0` in decompiled scripts.

Here is a list of almost all of the stunt jumps from GTA V (taken from decompiled scripts): https://pastebin.com/EW1jBPkY
--]]
function MISC.ADD_STUNT_JUMP_ANGLED(x1, y1, z1, x2, y2, z2, radius1, x3, y3, z3, x4, y4, z4, radius2, camX, camY, camZ, p17, p18, p19)
  return native.invoke(
    Type.Int, 2175, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Float, radius1),
    arg(Type.Float, x3),
    arg(Type.Float, y3),
    arg(Type.Float, z3),
    arg(Type.Float, x4),
    arg(Type.Float, y4),
    arg(Type.Float, z4),
    arg(Type.Float, radius2),
    arg(Type.Float, camX),
    arg(Type.Float, camY),
    arg(Type.Float, camZ),
    arg(Type.Int, p17),
    arg(Type.Int, p18),
    arg(Type.Int, p19)
  )
end

-- void TOGGLE_SHOW_OPTIONAL_STUNT_JUMP_CAMERA(BOOL toggle) // 0xFB80AB299D2EE1BD
--[[
Toggles some stunt jump stuff.
--]]
function MISC.TOGGLE_SHOW_OPTIONAL_STUNT_JUMP_CAMERA(toggle)
  native.invoke(
    Type.Void, 2176, false,
    arg(Type.Bool, toggle)
  )
end

-- void DELETE_STUNT_JUMP(int p0) // 0xDC518000E39DAE1F
function MISC.DELETE_STUNT_JUMP(p0)
  native.invoke(
    Type.Void, 2177, false,
    arg(Type.Int, p0)
  )
end

-- void ENABLE_STUNT_JUMP_SET(int p0) // 0xE369A5783B866016
function MISC.ENABLE_STUNT_JUMP_SET(p0)
  native.invoke(
    Type.Void, 2178, false,
    arg(Type.Int, p0)
  )
end

-- void DISABLE_STUNT_JUMP_SET(int p0) // 0xA5272EBEDD4747F6
function MISC.DISABLE_STUNT_JUMP_SET(p0)
  native.invoke(
    Type.Void, 2179, false,
    arg(Type.Int, p0)
  )
end

-- void SET_STUNT_JUMPS_CAN_TRIGGER(BOOL toggle) // 0xD79185689F8FD5DF
function MISC.SET_STUNT_JUMPS_CAN_TRIGGER(toggle)
  native.invoke(
    Type.Void, 2180, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_STUNT_JUMP_IN_PROGRESS() // 0x7A3F19700A4D0525
function MISC.IS_STUNT_JUMP_IN_PROGRESS()
  return native.invoke(
    Type.Bool, 2181, false
  )
end

-- BOOL IS_STUNT_JUMP_MESSAGE_SHOWING() // 0x2272B0A1343129F4
function MISC.IS_STUNT_JUMP_MESSAGE_SHOWING()
  return native.invoke(
    Type.Bool, 2182, false
  )
end

-- int GET_NUM_SUCCESSFUL_STUNT_JUMPS() // 0x996DD1E1E02F1008
function MISC.GET_NUM_SUCCESSFUL_STUNT_JUMPS()
  return native.invoke(
    Type.Int, 2183, false
  )
end

-- int GET_TOTAL_SUCCESSFUL_STUNT_JUMPS() // 0x6856EC3D35C81EA4
function MISC.GET_TOTAL_SUCCESSFUL_STUNT_JUMPS()
  return native.invoke(
    Type.Int, 2184, false
  )
end

-- void CANCEL_STUNT_JUMP() // 0xE6B7B0ACD4E4B75E
function MISC.CANCEL_STUNT_JUMP()
  native.invoke(
    Type.Void, 2185, false
  )
end

-- void SET_GAME_PAUSED(BOOL toggle) // 0x577D1284D6873711
--[[
Make sure to call this from the correct thread if you're using multiple threads because all other threads except the one which is calling SET_GAME_PAUSED will be paused which means you will lose control and the game remains in paused mode until you exit GTA5.exe
--]]
function MISC.SET_GAME_PAUSED(toggle)
  native.invoke(
    Type.Void, 2186, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_THIS_SCRIPT_CAN_BE_PAUSED(BOOL toggle) // 0xAA391C728106F7AF
function MISC.SET_THIS_SCRIPT_CAN_BE_PAUSED(toggle)
  native.invoke(
    Type.Void, 2187, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_THIS_SCRIPT_CAN_REMOVE_BLIPS_CREATED_BY_ANY_SCRIPT(BOOL toggle) // 0xB98236CAAECEF897
function MISC.SET_THIS_SCRIPT_CAN_REMOVE_BLIPS_CREATED_BY_ANY_SCRIPT(toggle)
  native.invoke(
    Type.Void, 2188, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL HAS_CHEAT_WITH_HASH_BEEN_ACTIVATED(Hash hash, int amount) // 0x071E2A839DE82D90
--[[
This native appears on the cheat_controller script and tracks a combination of buttons, which may be used to toggle cheats in-game. Credits to ThreeSocks for the info. The hash contains the combination, while the "amount" represents the amount of buttons used in a combination. The following page can be used to make a button combination: gta5offset.com/ts/hash/

INT_SCORES_SCORTED was a hash collision
--]]
function MISC.HAS_CHEAT_WITH_HASH_BEEN_ACTIVATED(hash, amount)
  return native.invoke(
    Type.Bool, 2189, false,
    arg(Type.Hash, hash),
    arg(Type.Int, amount)
  )
end

-- BOOL HAS_PC_CHEAT_WITH_HASH_BEEN_ACTIVATED(Hash hash) // 0x557E43C447E700A8
--[[
Get inputted "Cheat code", for example:

while (TRUE)
{
    if (MISC::HAS_PC_CHEAT_WITH_HASH_BEEN_ACTIVATED(${fugitive}))
    {
       // Do something.
    }
    SYSTEM::WAIT(0);
}

Calling this will also set the last saved string hash to zero.

--]]
function MISC.HAS_PC_CHEAT_WITH_HASH_BEEN_ACTIVATED(hash)
  return native.invoke(
    Type.Bool, 2190, false,
    arg(Type.Hash, hash)
  )
end

-- void OVERRIDE_FREEZE_FLAGS(BOOL p0) // 0xFA3FFB0EEBC288A3
function MISC.OVERRIDE_FREEZE_FLAGS(p0)
  native.invoke(
    Type.Void, 2191, false,
    arg(Type.Bool, p0)
  )
end

-- void SET_INSTANCE_PRIORITY_MODE(int p0) // 0x9BAE5AD2508DF078
--[[
Formerly known as _LOWER_MAP_PROP_DENSITY and wrongly due to idiots as _ENABLE_MP_DLC_MAPS.
Sets the maximum prop density and changes a loading screen flag from 'loading story mode' to 'loading GTA Online'. Does not touch DLC map data at all.

In fact, I doubt this changes the flag whatsoever, that's the OTHER native idiots use together with this that does so, this one only causes a loading screen to show as it reloads map data.
--]]
function MISC.SET_INSTANCE_PRIORITY_MODE(p0)
  native.invoke(
    Type.Void, 2192, false,
    arg(Type.Int, p0)
  )
end

-- void SET_INSTANCE_PRIORITY_HINT(int flag) // 0xC5F0A8EBD3F361CE
--[[
Sets an unknown flag used by CScene in determining which entities from CMapData scene nodes to draw, similar to SET_INSTANCE_PRIORITY_MODE.
--]]
function MISC.SET_INSTANCE_PRIORITY_HINT(flag)
  native.invoke(
    Type.Void, 2193, false,
    arg(Type.Int, flag)
  )
end

-- BOOL IS_FRONTEND_FADING() // 0x7EA2B6AF97ECA6ED
--[[
This function is hard-coded to always return 0.
--]]
function MISC.IS_FRONTEND_FADING()
  return native.invoke(
    Type.Bool, 2194, false
  )
end

-- void POPULATE_NOW() // 0x7472BB270D7B4F3E
--[[
spawns a few distant/out-of-sight peds, vehicles, animals etc each time it is called
--]]
function MISC.POPULATE_NOW()
  native.invoke(
    Type.Void, 2195, false
  )
end

-- int GET_INDEX_OF_CURRENT_LEVEL() // 0xCBAD6729F7B1F4FC
function MISC.GET_INDEX_OF_CURRENT_LEVEL()
  return native.invoke(
    Type.Int, 2196, false
  )
end

-- void SET_GRAVITY_LEVEL(int level) // 0x740E14FAD5842351
--[[
level can be from 0 to 3
0: 9.8 - normal
1: 2.4 - low
2: 0.1 - very low
3: 0.0 - off
--]]
function MISC.SET_GRAVITY_LEVEL(level)
  native.invoke(
    Type.Void, 2197, false,
    arg(Type.Int, level)
  )
end

-- void START_SAVE_DATA(Any* p0, Any p1, BOOL p2) // 0xA9575F812C6A7997
function MISC.START_SAVE_DATA(p0, p1, p2)
  native.invoke(
    Type.Void, 2198, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Bool, p2)
  )
end

-- void STOP_SAVE_DATA() // 0x74E20C9145FB66FD
function MISC.STOP_SAVE_DATA()
  native.invoke(
    Type.Void, 2199, false
  )
end

-- int GET_SIZE_OF_SAVE_DATA(BOOL p0) // 0xA09F896CE912481F
function MISC.GET_SIZE_OF_SAVE_DATA(p0)
  return native.invoke(
    Type.Int, 2200, false,
    arg(Type.Bool, p0)
  )
end

-- void REGISTER_INT_TO_SAVE(Any* p0, const char* name) // 0x34C9EE5986258415
function MISC.REGISTER_INT_TO_SAVE(p0, name)
  native.invoke(
    Type.Void, 2201, false,
    arg(Type.Any, p0),
    arg(Type.String, name)
  )
end

-- void REGISTER_INT64_TO_SAVE(Any* p0, const char* name) // 0xA735353C77334EA0
function MISC.REGISTER_INT64_TO_SAVE(p0, name)
  native.invoke(
    Type.Void, 2202, false,
    arg(Type.Any, p0),
    arg(Type.String, name)
  )
end

-- void REGISTER_ENUM_TO_SAVE(Any* p0, const char* name) // 0x10C2FA78D0E128A1
function MISC.REGISTER_ENUM_TO_SAVE(p0, name)
  native.invoke(
    Type.Void, 2203, false,
    arg(Type.Any, p0),
    arg(Type.String, name)
  )
end

-- void REGISTER_FLOAT_TO_SAVE(Any* p0, const char* name) // 0x7CAEC29ECB5DFEBB
function MISC.REGISTER_FLOAT_TO_SAVE(p0, name)
  native.invoke(
    Type.Void, 2204, false,
    arg(Type.Any, p0),
    arg(Type.String, name)
  )
end

-- void REGISTER_BOOL_TO_SAVE(Any* p0, const char* name) // 0xC8F4131414C835A1
function MISC.REGISTER_BOOL_TO_SAVE(p0, name)
  native.invoke(
    Type.Void, 2205, false,
    arg(Type.Any, p0),
    arg(Type.String, name)
  )
end

-- void REGISTER_TEXT_LABEL_TO_SAVE(Any* p0, const char* name) // 0xEDB1232C5BEAE62F
function MISC.REGISTER_TEXT_LABEL_TO_SAVE(p0, name)
  native.invoke(
    Type.Void, 2206, false,
    arg(Type.Any, p0),
    arg(Type.String, name)
  )
end

-- void REGISTER_TEXT_LABEL_15_TO_SAVE(Any* p0, const char* name) // 0x6F7794F28C6B2535
--[[
MISC::REGISTER_TEXT_LABEL_15_TO_SAVE(&a_0._f1, "tlPlateText");
MISC::REGISTER_TEXT_LABEL_15_TO_SAVE(&a_0._f1C, "tlPlateText_pending");
MISC::REGISTER_TEXT_LABEL_15_TO_SAVE(&a_0._f10B, "tlCarAppPlateText");
--]]
function MISC.REGISTER_TEXT_LABEL_15_TO_SAVE(p0, name)
  native.invoke(
    Type.Void, 2207, false,
    arg(Type.Any, p0),
    arg(Type.String, name)
  )
end

-- void REGISTER_TEXT_LABEL_23_TO_SAVE(Any* p0, const char* name) // 0x48F069265A0E4BEC
--[[
Only found 3 times in decompiled scripts.

MISC::REGISTER_TEXT_LABEL_23_TO_SAVE(a_0, "Movie_Name_For_This_Player");
MISC::REGISTER_TEXT_LABEL_23_TO_SAVE(&a_0._fB, "Ringtone_For_This_Player");
MISC::REGISTER_TEXT_LABEL_23_TO_SAVE(&a_0._f1EC4._f12[v_A/*6*/], &v_13); // where v_13 is "MPATMLOGSCRS0" thru "MPATMLOGSCRS15"
--]]
function MISC.REGISTER_TEXT_LABEL_23_TO_SAVE(p0, name)
  native.invoke(
    Type.Void, 2208, false,
    arg(Type.Any, p0),
    arg(Type.String, name)
  )
end

-- void REGISTER_TEXT_LABEL_31_TO_SAVE(Any* p0, const char* name) // 0x8269816F6CFD40F8
--[[
Only found 2 times in decompiled scripts.

MISC::REGISTER_TEXT_LABEL_31_TO_SAVE(&a_0._f1F5A._f6[0/*8*/], "TEMPSTAT_LABEL"); // gets saved in a struct called "g_SaveData_STRING_ScriptSaves"
MISC::REGISTER_TEXT_LABEL_31_TO_SAVE(&a_0._f4B4[v_1A/*8*/], &v_5); // where v_5 is "Name0" thru "Name9", gets saved in a struct called "OUTFIT_Name"
--]]
function MISC.REGISTER_TEXT_LABEL_31_TO_SAVE(p0, name)
  native.invoke(
    Type.Void, 2209, false,
    arg(Type.Any, p0),
    arg(Type.String, name)
  )
end

-- void REGISTER_TEXT_LABEL_63_TO_SAVE(Any* p0, const char* name) // 0xFAA457EF263E8763
--[[
MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(a_0, "Thumb_label");
MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(&a_0._f10, "Photo_label");
MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(a_0, "GXTlabel");
MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(&a_0._f21, "StringComp");
MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(&a_0._f43, "SecondStringComp");
MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(&a_0._f53, "ThirdStringComp");
MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(&a_0._f32, "SenderStringComp");
MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(&a_0._f726[v_1A/*16*/], &v_20); // where v_20 is "LastJobTL_0_1" thru "LastJobTL_2_1", gets saved in a struct called "LAST_JobGamer_TL"
MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(&a_0._f4B, "PAID_PLAYER");
MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(&a_0._f5B, "RADIO_STATION");
--]]
function MISC.REGISTER_TEXT_LABEL_63_TO_SAVE(p0, name)
  native.invoke(
    Type.Void, 2210, false,
    arg(Type.Any, p0),
    arg(Type.String, name)
  )
end

-- void START_SAVE_STRUCT_WITH_SIZE(Any* p0, int size, const char* structName) // 0xBF737600CDDBEADD
function MISC.START_SAVE_STRUCT_WITH_SIZE(p0, size, structName)
  native.invoke(
    Type.Void, 2211, false,
    arg(Type.Any, p0),
    arg(Type.Int, size),
    arg(Type.String, structName)
  )
end

-- void STOP_SAVE_STRUCT() // 0xEB1774DF12BB9F12
function MISC.STOP_SAVE_STRUCT()
  native.invoke(
    Type.Void, 2212, false
  )
end

-- void START_SAVE_ARRAY_WITH_SIZE(Any* p0, int size, const char* arrayName) // 0x60FE567DF1B1AF9D
function MISC.START_SAVE_ARRAY_WITH_SIZE(p0, size, arrayName)
  native.invoke(
    Type.Void, 2213, false,
    arg(Type.Any, p0),
    arg(Type.Int, size),
    arg(Type.String, arrayName)
  )
end

-- void STOP_SAVE_ARRAY() // 0x04456F95153C6BE4
function MISC.STOP_SAVE_ARRAY()
  native.invoke(
    Type.Void, 2214, false
  )
end

-- void COPY_SCRIPT_STRUCT(Any* dst, Any* src, int size) // 0x213AEB2B90CBA7AC
function MISC.COPY_SCRIPT_STRUCT(dst, src, size)
  native.invoke(
    Type.Void, 2215, false,
    arg(Type.Any, dst),
    arg(Type.Any, src),
    arg(Type.Int, size)
  )
end

-- void ENABLE_DISPATCH_SERVICE(int dispatchService, BOOL toggle) // 0xDC0F817884CDD856
--[[
https://alloc8or.re/gta5/doc/enums/DispatchType.txt
--]]
function MISC.ENABLE_DISPATCH_SERVICE(dispatchService, toggle)
  native.invoke(
    Type.Void, 2216, false,
    arg(Type.Int, dispatchService),
    arg(Type.Bool, toggle)
  )
end

-- void BLOCK_DISPATCH_SERVICE_RESOURCE_CREATION(int dispatchService, BOOL toggle) // 0x9B2BD3773123EA2F
function MISC.BLOCK_DISPATCH_SERVICE_RESOURCE_CREATION(dispatchService, toggle)
  native.invoke(
    Type.Void, 2217, false,
    arg(Type.Int, dispatchService),
    arg(Type.Bool, toggle)
  )
end

-- int GET_NUMBER_RESOURCES_ALLOCATED_TO_WANTED_LEVEL(int dispatchService) // 0xEB4A0C2D56441717
function MISC.GET_NUMBER_RESOURCES_ALLOCATED_TO_WANTED_LEVEL(dispatchService)
  return native.invoke(
    Type.Int, 2218, false,
    arg(Type.Int, dispatchService)
  )
end

-- BOOL CREATE_INCIDENT(int dispatchService, float x, float y, float z, int numUnits, float radius, int* outIncidentID, Any p7, Any p8) // 0x3F892CAF67444AE7
--[[
As for the 'police' incident, it will call police cars to you, but unlike PedsInCavalcades & Merryweather they won't start shooting at you unless you shoot first or shoot at them. The top 2 however seem to cancel theirselves if there is noone dead around you or a fire. I only figured them out as I found out the 3rd param is definately the amountOfPeople and they called incident 3 in scripts with 4 people (which the firetruck has) and incident 5 with 2 people (which the ambulence has). The 4 param I cant say is radius, but for the pedsInCavalcades and Merryweather R* uses 0.0f and for the top 3 (Emergency Services) they use 3.0f. 

Side Note: It seems calling the pedsInCavalcades or Merryweather then removing it seems to break you from calling the EmergencyEvents and I also believe pedsInCavalcades. (The V cavalcades of course not IV).

Side Note 2: I say it breaks as if you call this proper,
if(CREATE_INCIDENT) etc it will return false if you do as I said above.
=====================================================
--]]
function MISC.CREATE_INCIDENT(dispatchService, x, y, z, numUnits, radius, outIncidentID, p7, p8)
  return native.invoke(
    Type.Bool, 2219, false,
    arg(Type.Int, dispatchService),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, numUnits),
    arg(Type.Float, radius),
    arg(Type.Int, outIncidentID),
    arg(Type.Any, p7),
    arg(Type.Any, p8)
  )
end

-- BOOL CREATE_INCIDENT_WITH_ENTITY(int dispatchService, Ped ped, int numUnits, float radius, int* outIncidentID, Any p5, Any p6) // 0x05983472F0494E60
--[[
As for the 'police' incident, it will call police cars to you, but unlike PedsInCavalcades & Merryweather they won't start shooting at you unless you shoot first or shoot at them. The top 2 however seem to cancel theirselves if there is noone dead around you or a fire. I only figured them out as I found out the 3rd param is definately the amountOfPeople and they called incident 3 in scripts with 4 people (which the firetruck has) and incident 5 with 2 people (which the ambulence has). The 4 param I cant say is radius, but for the pedsInCavalcades and Merryweather R* uses 0.0f and for the top 3 (Emergency Services) they use 3.0f. 

Side Note: It seems calling the pedsInCavalcades or Merryweather then removing it seems to break you from calling the EmergencyEvents and I also believe pedsInCavalcades. (The V cavalcades of course not IV).

Side Note 2: I say it breaks as if you call this proper,
if(CREATE_INCIDENT) etc it will return false if you do as I said above.
=====================================================
--]]
function MISC.CREATE_INCIDENT_WITH_ENTITY(dispatchService, ped, numUnits, radius, outIncidentID, p5, p6)
  return native.invoke(
    Type.Bool, 2220, false,
    arg(Type.Int, dispatchService),
    arg(Type.Ped, ped),
    arg(Type.Int, numUnits),
    arg(Type.Float, radius),
    arg(Type.Int, outIncidentID),
    arg(Type.Any, p5),
    arg(Type.Any, p6)
  )
end

-- void DELETE_INCIDENT(int incidentId) // 0x556C1AA270D5A207
--[[
Delete an incident with a given id.

=======================================================
Correction, I have change this to int, instead of int*
as it doesn't use a pointer to the createdIncident.
If you try it you will crash (or) freeze.
=======================================================
--]]
function MISC.DELETE_INCIDENT(incidentId)
  native.invoke(
    Type.Void, 2221, false,
    arg(Type.Int, incidentId)
  )
end

-- BOOL IS_INCIDENT_VALID(int incidentId) // 0xC8BC6461E629BEAA
--[[
=======================================================
Correction, I have change this to int, instead of int*
as it doesn't use a pointer to the createdIncident.
If you try it you will crash (or) freeze.
=======================================================
--]]
function MISC.IS_INCIDENT_VALID(incidentId)
  return native.invoke(
    Type.Bool, 2222, false,
    arg(Type.Int, incidentId)
  )
end

-- void SET_INCIDENT_REQUESTED_UNITS(int incidentId, int dispatchService, int numUnits) // 0xB08B85D860E7BA3C
function MISC.SET_INCIDENT_REQUESTED_UNITS(incidentId, dispatchService, numUnits)
  native.invoke(
    Type.Void, 2223, false,
    arg(Type.Int, incidentId),
    arg(Type.Int, dispatchService),
    arg(Type.Int, numUnits)
  )
end

-- void SET_IDEAL_SPAWN_DISTANCE_FOR_INCIDENT(int incidentId, float p1) // 0xD261BA3E7E998072
function MISC.SET_IDEAL_SPAWN_DISTANCE_FOR_INCIDENT(incidentId, p1)
  native.invoke(
    Type.Void, 2224, false,
    arg(Type.Int, incidentId),
    arg(Type.Float, p1)
  )
end

-- BOOL FIND_SPAWN_POINT_IN_DIRECTION(float posX, float posY, float posZ, float fwdVecX, float fwdVecY, float fwdVecZ, float distance, Vector3* spawnPoint) // 0x6874E2190B0C1972
--[[
Finds a position ahead of the player by predicting the players next actions.
The positions match path finding node positions.
When roads diverge, the position may rapidly change between two or more positions. This is due to the engine not being certain of which path the player will take.
--]]
function MISC.FIND_SPAWN_POINT_IN_DIRECTION(posX, posY, posZ, fwdVecX, fwdVecY, fwdVecZ, distance, spawnPoint)
  return native.invoke(
    Type.Bool, 2225, true,
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ),
    arg(Type.Float, fwdVecX),
    arg(Type.Float, fwdVecY),
    arg(Type.Float, fwdVecZ),
    arg(Type.Float, distance),
    arg(Type.Vector3, spawnPoint)
  )
end

-- int ADD_POP_MULTIPLIER_AREA(float x1, float y1, float z1, float x2, float y2, float z2, float p6, float p7, BOOL p8, BOOL p9) // 0x67F6413D3220E18D
function MISC.ADD_POP_MULTIPLIER_AREA(x1, y1, z1, x2, y2, z2, p6, p7, p8, p9)
  return native.invoke(
    Type.Int, 2226, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Float, p6),
    arg(Type.Float, p7),
    arg(Type.Bool, p8),
    arg(Type.Bool, p9)
  )
end

-- BOOL DOES_POP_MULTIPLIER_AREA_EXIST(int id) // 0x1327E2FE9746BAEE
function MISC.DOES_POP_MULTIPLIER_AREA_EXIST(id)
  return native.invoke(
    Type.Bool, 2227, false,
    arg(Type.Int, id)
  )
end

-- void REMOVE_POP_MULTIPLIER_AREA(int id, BOOL p1) // 0xB129E447A2EDA4BF
function MISC.REMOVE_POP_MULTIPLIER_AREA(id, p1)
  native.invoke(
    Type.Void, 2228, false,
    arg(Type.Int, id),
    arg(Type.Bool, p1)
  )
end

-- BOOL IS_POP_MULTIPLIER_AREA_NETWORKED(int id) // 0x1312F4B242609CE3
function MISC.IS_POP_MULTIPLIER_AREA_NETWORKED(id)
  return native.invoke(
    Type.Bool, 2229, false,
    arg(Type.Int, id)
  )
end

-- int ADD_POP_MULTIPLIER_SPHERE(float x, float y, float z, float radius, float pedMultiplier, float vehicleMultiplier, BOOL p6, BOOL p7) // 0x32C7A7E8C43A1F80
--[[
This native is adding a zone, where you can change density settings. For example, you can add a zone on 0.0, 0.0, 0.0 with radius 900.0 and vehicleMultiplier 0.0, and you will not see any new population vehicle spawned in a radius of 900.0 from 0.0, 0.0, 0.0. Returns the id. You can have only 15 zones at the same time. You can remove zone using REMOVE_POP_MULTIPLIER_SPHERE
--]]
function MISC.ADD_POP_MULTIPLIER_SPHERE(x, y, z, radius, pedMultiplier, vehicleMultiplier, p6, p7)
  return native.invoke(
    Type.Int, 2230, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Float, pedMultiplier),
    arg(Type.Float, vehicleMultiplier),
    arg(Type.Bool, p6),
    arg(Type.Bool, p7)
  )
end

-- BOOL DOES_POP_MULTIPLIER_SPHERE_EXIST(int id) // 0x171BAFB3C60389F4
function MISC.DOES_POP_MULTIPLIER_SPHERE_EXIST(id)
  return native.invoke(
    Type.Bool, 2231, false,
    arg(Type.Int, id)
  )
end

-- void REMOVE_POP_MULTIPLIER_SPHERE(int id, BOOL p1) // 0xE6869BECDD8F2403
--[[
Removes population multiplier sphere
--]]
function MISC.REMOVE_POP_MULTIPLIER_SPHERE(id, p1)
  native.invoke(
    Type.Void, 2232, false,
    arg(Type.Int, id),
    arg(Type.Bool, p1)
  )
end

-- void ENABLE_TENNIS_MODE(Ped ped, BOOL toggle, BOOL p2) // 0x28A04B411933F8A6
--[[
Makes the ped jump around like they're in a tennis match
--]]
function MISC.ENABLE_TENNIS_MODE(ped, toggle, p2)
  native.invoke(
    Type.Void, 2233, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle),
    arg(Type.Bool, p2)
  )
end

-- BOOL IS_TENNIS_MODE(Ped ped) // 0x5D5479D115290C3F
function MISC.IS_TENNIS_MODE(ped)
  return native.invoke(
    Type.Bool, 2234, false,
    arg(Type.Ped, ped)
  )
end

-- void PLAY_TENNIS_SWING_ANIM(Ped ped, const char* animDict, const char* animName, float p3, float p4, BOOL p5) // 0xE266ED23311F24D4
--[[
Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
--]]
function MISC.PLAY_TENNIS_SWING_ANIM(ped, animDict, animName, p3, p4, p5)
  native.invoke(
    Type.Void, 2235, false,
    arg(Type.Ped, ped),
    arg(Type.String, animDict),
    arg(Type.String, animName),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Bool, p5)
  )
end

-- BOOL GET_TENNIS_SWING_ANIM_COMPLETE(Ped ped) // 0x17DF68D720AA77F8
function MISC.GET_TENNIS_SWING_ANIM_COMPLETE(ped)
  return native.invoke(
    Type.Bool, 2236, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL GET_TENNIS_SWING_ANIM_CAN_BE_INTERRUPTED(Ped ped) // 0x19BFED045C647C49
function MISC.GET_TENNIS_SWING_ANIM_CAN_BE_INTERRUPTED(ped)
  return native.invoke(
    Type.Bool, 2237, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL GET_TENNIS_SWING_ANIM_SWUNG(Ped ped) // 0xE95B0C7D5BA3B96B
function MISC.GET_TENNIS_SWING_ANIM_SWUNG(ped)
  return native.invoke(
    Type.Bool, 2238, false,
    arg(Type.Ped, ped)
  )
end

-- void PLAY_TENNIS_DIVE_ANIM(Ped ped, int p1, float p2, float p3, float p4, BOOL p5) // 0x8FA9C42FC5D7C64B
function MISC.PLAY_TENNIS_DIVE_ANIM(ped, p1, p2, p3, p4, p5)
  native.invoke(
    Type.Void, 2239, false,
    arg(Type.Ped, ped),
    arg(Type.Int, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Bool, p5)
  )
end

-- void SET_TENNIS_MOVE_NETWORK_SIGNAL_FLOAT(Ped ped, const char* p1, float p2) // 0x54F157E0336A3822
--[[
From the scripts:

MISC::SET_TENNIS_MOVE_NETWORK_SIGNAL_FLOAT(sub_aa49(a_0), "ForcedStopDirection", v_E);

Related to tennis mode.
--]]
function MISC.SET_TENNIS_MOVE_NETWORK_SIGNAL_FLOAT(ped, p1, p2)
  native.invoke(
    Type.Void, 2240, false,
    arg(Type.Ped, ped),
    arg(Type.String, p1),
    arg(Type.Float, p2)
  )
end

-- void RESET_DISPATCH_SPAWN_LOCATION() // 0x5896F2BD5683A4E1
function MISC.RESET_DISPATCH_SPAWN_LOCATION()
  native.invoke(
    Type.Void, 2241, false
  )
end

-- void SET_DISPATCH_SPAWN_LOCATION(float x, float y, float z) // 0xD10F442036302D50
function MISC.SET_DISPATCH_SPAWN_LOCATION(x, y, z)
  native.invoke(
    Type.Void, 2242, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void RESET_DISPATCH_IDEAL_SPAWN_DISTANCE() // 0x77A84429DD9F0A15
function MISC.RESET_DISPATCH_IDEAL_SPAWN_DISTANCE()
  native.invoke(
    Type.Void, 2243, false
  )
end

-- void SET_DISPATCH_IDEAL_SPAWN_DISTANCE(float distance) // 0x6FE601A64180D423
function MISC.SET_DISPATCH_IDEAL_SPAWN_DISTANCE(distance)
  native.invoke(
    Type.Void, 2244, false,
    arg(Type.Float, distance)
  )
end

-- void RESET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS(Any p0) // 0xEB2DB0CAD13154B3
function MISC.RESET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS(p0)
  native.invoke(
    Type.Void, 2245, false,
    arg(Type.Any, p0)
  )
end

-- void SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS(Any p0, float p1) // 0x44F7CBC1BEB3327D
function MISC.SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS(p0, p1)
  native.invoke(
    Type.Void, 2246, false,
    arg(Type.Any, p0),
    arg(Type.Float, p1)
  )
end

-- void SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS_MULTIPLIER(Any p0, float p1) // 0x48838ED9937A15D1
function MISC.SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS_MULTIPLIER(p0, p1)
  native.invoke(
    Type.Void, 2247, false,
    arg(Type.Any, p0),
    arg(Type.Float, p1)
  )
end

-- int ADD_DISPATCH_SPAWN_ANGLED_BLOCKING_AREA(float x1, float y1, float z1, float x2, float y2, float z2, float width) // 0x918C7B2D2FF3928B
--[[
To remove, see: REMOVE_DISPATCH_SPAWN_BLOCKING_AREA
See IS_POINT_IN_ANGLED_AREA for the definition of an angled area.
--]]
function MISC.ADD_DISPATCH_SPAWN_ANGLED_BLOCKING_AREA(x1, y1, z1, x2, y2, z2, width)
  return native.invoke(
    Type.Int, 2248, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Float, width)
  )
end

-- int ADD_DISPATCH_SPAWN_SPHERE_BLOCKING_AREA(float x1, float y1, float x2, float y2) // 0x2D4259F1FEB81DA9
function MISC.ADD_DISPATCH_SPAWN_SPHERE_BLOCKING_AREA(x1, y1, x2, y2)
  return native.invoke(
    Type.Int, 2249, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, x2),
    arg(Type.Float, y2)
  )
end

-- void REMOVE_DISPATCH_SPAWN_BLOCKING_AREA(int p0) // 0x264AC28B01B353A5
function MISC.REMOVE_DISPATCH_SPAWN_BLOCKING_AREA(p0)
  native.invoke(
    Type.Void, 2250, false,
    arg(Type.Int, p0)
  )
end

-- void RESET_DISPATCH_SPAWN_BLOCKING_AREAS() // 0xAC7BFD5C1D83EA75
function MISC.RESET_DISPATCH_SPAWN_BLOCKING_AREAS()
  native.invoke(
    Type.Void, 2251, false
  )
end

-- void RESET_WANTED_RESPONSE_NUM_PEDS_TO_SPAWN() // 0xD9F692D349249528
function MISC.RESET_WANTED_RESPONSE_NUM_PEDS_TO_SPAWN()
  native.invoke(
    Type.Void, 2252, false
  )
end

-- void SET_WANTED_RESPONSE_NUM_PEDS_TO_SPAWN(int p0, int p1) // 0xE532EC1A63231B4F
function MISC.SET_WANTED_RESPONSE_NUM_PEDS_TO_SPAWN(p0, p1)
  native.invoke(
    Type.Void, 2253, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1)
  )
end

-- void ADD_TACTICAL_NAV_MESH_POINT(float x, float y, float z) // 0xB8721407EE9C3FF6
function MISC.ADD_TACTICAL_NAV_MESH_POINT(x, y, z)
  native.invoke(
    Type.Void, 2254, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void CLEAR_TACTICAL_NAV_MESH_POINTS() // 0xB3CD58CCA6CDA852
function MISC.CLEAR_TACTICAL_NAV_MESH_POINTS()
  native.invoke(
    Type.Void, 2255, false
  )
end

-- void SET_RIOT_MODE_ENABLED(BOOL toggle) // 0x2587A48BC88DFADF
--[[
Activates (usused?) riot mode. All NPCs are being hostile to each other (including player). Also the game will give weapons (pistols, smgs) to random NPCs.
--]]
function MISC.SET_RIOT_MODE_ENABLED(toggle)
  native.invoke(
    Type.Void, 2256, false,
    arg(Type.Bool, toggle)
  )
end

-- void DISPLAY_ONSCREEN_KEYBOARD_WITH_LONGER_INITIAL_STRING(int p0, const char* windowTitle, Any* p2, const char* defaultText, const char* defaultConcat1, const char* defaultConcat2, const char* defaultConcat3, const char* defaultConcat4, const char* defaultConcat5, const char* defaultConcat6, const char* defaultConcat7, int maxInputLength) // 0xCA78CFA0366592FE
function MISC.DISPLAY_ONSCREEN_KEYBOARD_WITH_LONGER_INITIAL_STRING(p0, windowTitle, p2, defaultText, defaultConcat1, defaultConcat2, defaultConcat3, defaultConcat4, defaultConcat5, defaultConcat6, defaultConcat7, maxInputLength)
  native.invoke(
    Type.Void, 2257, false,
    arg(Type.Int, p0),
    arg(Type.String, windowTitle),
    arg(Type.Any, p2),
    arg(Type.String, defaultText),
    arg(Type.String, defaultConcat1),
    arg(Type.String, defaultConcat2),
    arg(Type.String, defaultConcat3),
    arg(Type.String, defaultConcat4),
    arg(Type.String, defaultConcat5),
    arg(Type.String, defaultConcat6),
    arg(Type.String, defaultConcat7),
    arg(Type.Int, maxInputLength)
  )
end

-- void DISPLAY_ONSCREEN_KEYBOARD(int p0, const char* windowTitle, const char* p2, const char* defaultText, const char* defaultConcat1, const char* defaultConcat2, const char* defaultConcat3, int maxInputLength) // 0x00DC833F2568DBF6
--[[
sfink: note, p0 is set to 6 for PC platform in at least 1 script, or to `unk::_get_ui_language_id() == 0` otherwise.

NOTE: windowTitle uses text labels, and an invalid value will display nothing.

www.gtaforums.com/topic/788343-vrel-script-hook-v/?p=1067380474

windowTitle's
-----------------
CELL_EMAIL_BOD  =   "Enter your Eyefind message"
CELL_EMAIL_BODE =   "Message too long. Try again"
CELL_EMAIL_BODF    =   "Forbidden message. Try again"
CELL_EMAIL_SOD    =   "Enter your Eyefind subject"
CELL_EMAIL_SODE =   "Subject too long. Try again"
CELL_EMAIL_SODF    =   "Forbidden text. Try again"
CELL_EMASH_BOD   =   "Enter your Eyefind message"
CELL_EMASH_BODE =   "Message too long. Try again"
CELL_EMASH_BODF    =   "Forbidden message. Try again"
CELL_EMASH_SOD    =   "Enter your Eyefind subject"
CELL_EMASH_SODE =   "Subject too long. Try again"
CELL_EMASH_SODF    =   "Forbidden Text. Try again"
FMMC_KEY_TIP10   =   "Enter Synopsis"
FMMC_KEY_TIP12  =   "Enter Custom Team Name"
FMMC_KEY_TIP12F =   "Forbidden Text. Try again"
FMMC_KEY_TIP12N  =   "Custom Team Name"
FMMC_KEY_TIP8 =   "Enter Message"
FMMC_KEY_TIP8F   =   "Forbidden Text. Try again"
FMMC_KEY_TIP8FS  =   "Invalid Message. Try again"
FMMC_KEY_TIP8S  =   "Enter Message"
FMMC_KEY_TIP9    =   "Enter Outfit Name"
FMMC_KEY_TIP9F   =   "Invalid Outfit Name. Try again"
FMMC_KEY_TIP9N  =   "Outfit Name"
PM_NAME_CHALL  =   "Enter Challenge Name"
--]]
function MISC.DISPLAY_ONSCREEN_KEYBOARD(p0, windowTitle, p2, defaultText, defaultConcat1, defaultConcat2, defaultConcat3, maxInputLength)
  native.invoke(
    Type.Void, 2258, false,
    arg(Type.Int, p0),
    arg(Type.String, windowTitle),
    arg(Type.String, p2),
    arg(Type.String, defaultText),
    arg(Type.String, defaultConcat1),
    arg(Type.String, defaultConcat2),
    arg(Type.String, defaultConcat3),
    arg(Type.Int, maxInputLength)
  )
end

-- int UPDATE_ONSCREEN_KEYBOARD() // 0x0CF2B696BBF945AE
--[[
Returns the current status of the onscreen keyboard, and updates the output.

Status Codes:

-1: Keyboard isn't active
0: User still editing
1: User has finished editing
2: User has canceled editing
--]]
function MISC.UPDATE_ONSCREEN_KEYBOARD()
  return native.invoke(
    Type.Int, 2259, false
  )
end

-- const char* GET_ONSCREEN_KEYBOARD_RESULT() // 0x8362B09B91893647
--[[
Returns NULL unless UPDATE_ONSCREEN_KEYBOARD() returns 1 in the same tick.
--]]
function MISC.GET_ONSCREEN_KEYBOARD_RESULT()
  return native.invoke(
    Type.Const char, 2260, false
  )
end

-- void CANCEL_ONSCREEN_KEYBOARD() // 0x58A39BE597CE99CD
--[[
DO NOT use this as it doesn't clean up the text input box properly and your script will get stuck in the UPDATE_ONSCREEN_KEYBOARD() loop.
Use FORCE_CLOSE_TEXT_INPUT_BOX instead.
--]]
function MISC.CANCEL_ONSCREEN_KEYBOARD()
  native.invoke(
    Type.Void, 2261, false
  )
end

-- void NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(int p0) // 0x3ED1438C1F5C6612
--[[
p0 was always 2 in R* scripts.
Called before calling DISPLAY_ONSCREEN_KEYBOARD if the input needs to be saved.
--]]
function MISC.NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(p0)
  native.invoke(
    Type.Void, 2262, false,
    arg(Type.Int, p0)
  )
end

-- void ACTION_MANAGER_ENABLE_ACTION(Hash hash, BOOL enable) // 0xA6A12939F16D85BE
--[[
Appears to remove stealth kill action from memory
--]]
function MISC.ACTION_MANAGER_ENABLE_ACTION(hash, enable)
  native.invoke(
    Type.Void, 2263, false,
    arg(Type.Hash, hash),
    arg(Type.Bool, enable)
  )
end

-- int GET_REAL_WORLD_TIME() // 0x3F60413F5DF65748
--[[
GET_GAME_TIMER() / 1000
--]]
function MISC.GET_REAL_WORLD_TIME()
  return native.invoke(
    Type.Int, 2264, false
  )
end

-- void SUPRESS_RANDOM_EVENT_THIS_FRAME(int eventType, BOOL suppress) // 0x1EAE0A6E978894A2
function MISC.SUPRESS_RANDOM_EVENT_THIS_FRAME(eventType, suppress)
  native.invoke(
    Type.Void, 2265, false,
    arg(Type.Int, eventType),
    arg(Type.Bool, suppress)
  )
end

-- void SET_EXPLOSIVE_AMMO_THIS_FRAME(Player player) // 0xA66C71C98D5F2CFB
function MISC.SET_EXPLOSIVE_AMMO_THIS_FRAME(player)
  native.invoke(
    Type.Void, 2266, false,
    arg(Type.Player, player)
  )
end

-- void SET_FIRE_AMMO_THIS_FRAME(Player player) // 0x11879CDD803D30F4
function MISC.SET_FIRE_AMMO_THIS_FRAME(player)
  native.invoke(
    Type.Void, 2267, false,
    arg(Type.Player, player)
  )
end

-- void SET_EXPLOSIVE_MELEE_THIS_FRAME(Player player) // 0xFF1BED81BFDC0FE0
function MISC.SET_EXPLOSIVE_MELEE_THIS_FRAME(player)
  native.invoke(
    Type.Void, 2268, false,
    arg(Type.Player, player)
  )
end

-- void SET_SUPER_JUMP_THIS_FRAME(Player player) // 0x57FFF03E423A4C0B
function MISC.SET_SUPER_JUMP_THIS_FRAME(player)
  native.invoke(
    Type.Void, 2269, false,
    arg(Type.Player, player)
  )
end

-- void SET_BEAST_JUMP_THIS_FRAME(Player player) // 0x438822C279B73B93
function MISC.SET_BEAST_JUMP_THIS_FRAME(player)
  native.invoke(
    Type.Void, 2270, false,
    arg(Type.Player, player)
  )
end

-- void SET_FORCED_JUMP_THIS_FRAME(Player player) // 0xA1183BCFEE0F93D1
function MISC.SET_FORCED_JUMP_THIS_FRAME(player)
  native.invoke(
    Type.Void, 2271, false,
    arg(Type.Player, player)
  )
end

-- BOOL HAS_GAME_INSTALLED_THIS_SESSION() // 0x6FDDF453C0C756EC
function MISC.HAS_GAME_INSTALLED_THIS_SESSION()
  return native.invoke(
    Type.Bool, 2272, false
  )
end

-- void SET_TICKER_JOHNMARSTON_IS_DONE() // 0xFB00CA71DA386228
function MISC.SET_TICKER_JOHNMARSTON_IS_DONE()
  native.invoke(
    Type.Void, 2273, false
  )
end

-- BOOL ARE_PROFILE_SETTINGS_VALID() // 0x5AA3BEFA29F03AD4
function MISC.ARE_PROFILE_SETTINGS_VALID()
  return native.invoke(
    Type.Bool, 2274, false
  )
end

-- void PREVENT_ARREST_STATE_THIS_FRAME() // 0xE3D969D2785FFB5E
function MISC.PREVENT_ARREST_STATE_THIS_FRAME()
  native.invoke(
    Type.Void, 2275, false
  )
end

-- void FORCE_GAME_STATE_PLAYING() // 0xC0AA53F866B3134D
--[[
Sets the localplayer playerinfo state back to playing (State 0)

States are:
-1: "Invalid"
0: "Playing"
1: "Died"
2: "Arrested"
3: "Failed Mission"
4: "Left Game"
5: "Respawn"
6: "In MP Cutscene"
--]]
function MISC.FORCE_GAME_STATE_PLAYING()
  native.invoke(
    Type.Void, 2276, false
  )
end

-- void SCRIPT_RACE_INIT(int p0, int p1, Any p2, Any p3) // 0x0A60017F841A54F2
function MISC.SCRIPT_RACE_INIT(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2277, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void SCRIPT_RACE_SHUTDOWN() // 0x1FF6BF9A63E5757F
function MISC.SCRIPT_RACE_SHUTDOWN()
  native.invoke(
    Type.Void, 2278, false
  )
end

-- void SCRIPT_RACE_PLAYER_HIT_CHECKPOINT(Player player, Any p1, Any p2, Any p3) // 0x1BB299305C3E8C13
function MISC.SCRIPT_RACE_PLAYER_HIT_CHECKPOINT(player, p1, p2, p3)
  native.invoke(
    Type.Void, 2279, false,
    arg(Type.Player, player),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- BOOL SCRIPT_RACE_GET_PLAYER_SPLIT_TIME(Player player, int* p1, int* p2) // 0x8EF5573A1F801A5C
function MISC.SCRIPT_RACE_GET_PLAYER_SPLIT_TIME(player, p1, p2)
  return native.invoke(
    Type.Bool, 2280, false,
    arg(Type.Player, player),
    arg(Type.Int, p1),
    arg(Type.Int, p2)
  )
end

-- void START_END_USER_BENCHMARK() // 0x92790862E36C2ADA
function MISC.START_END_USER_BENCHMARK()
  native.invoke(
    Type.Void, 2281, false
  )
end

-- void STOP_END_USER_BENCHMARK() // 0xC7DB36C24634F52B
function MISC.STOP_END_USER_BENCHMARK()
  native.invoke(
    Type.Void, 2282, false
  )
end

-- void RESET_END_USER_BENCHMARK() // 0x437138B6A830166A
function MISC.RESET_END_USER_BENCHMARK()
  native.invoke(
    Type.Void, 2283, false
  )
end

-- void SAVE_END_USER_BENCHMARK() // 0x37DEB0AA183FB6D8
--[[
Saves the benchmark recording to %USERPROFILE%\Documents\Rockstar Games\GTA V\Benchmarks and submits some metrics.
--]]
function MISC.SAVE_END_USER_BENCHMARK()
  native.invoke(
    Type.Void, 2284, false
  )
end

-- BOOL UI_STARTED_END_USER_BENCHMARK() // 0xEA2F2061875EED90
--[[
Returns true if the current frontend menu is FE_MENU_VERSION_SP_PAUSE
--]]
function MISC.UI_STARTED_END_USER_BENCHMARK()
  return native.invoke(
    Type.Bool, 2285, false
  )
end

-- BOOL LANDING_SCREEN_STARTED_END_USER_BENCHMARK() // 0x3BBBD13E5041A79E
--[[
Returns true if the current frontend menu is FE_MENU_VERSION_LANDING_MENU
--]]
function MISC.LANDING_SCREEN_STARTED_END_USER_BENCHMARK()
  return native.invoke(
    Type.Bool, 2286, false
  )
end

-- BOOL IS_COMMANDLINE_END_USER_BENCHMARK() // 0xA049A5BE0F04F2F8
--[[
Returns true if command line option '-benchmark' is set.
--]]
function MISC.IS_COMMANDLINE_END_USER_BENCHMARK()
  return native.invoke(
    Type.Bool, 2287, false
  )
end

-- int GET_BENCHMARK_ITERATIONS() // 0x4750FC27570311EC
--[[
Returns value of the '-benchmarkIterations' command line option.
--]]
function MISC.GET_BENCHMARK_ITERATIONS()
  return native.invoke(
    Type.Int, 2288, false
  )
end

-- int GET_BENCHMARK_PASS() // 0x1B2366C3F2A5C8DF
--[[
Returns value of the '-benchmarkPass' command line option.
--]]
function MISC.GET_BENCHMARK_PASS()
  return native.invoke(
    Type.Int, 2289, false
  )
end

-- void RESTART_GAME() // 0xE574A662ACAEFBB1
--[[
In singleplayer it does exactly what the name implies. In FiveM / GTA:Online it shows `Disconnecting from GTA Online` HUD and then quits the game.
--]]
function MISC.RESTART_GAME()
  native.invoke(
    Type.Void, 2290, false
  )
end

-- void QUIT_GAME() // 0xEB6891F03362FB12
--[[
Exits the game and downloads a fresh social club update on next restart.
--]]
function MISC.QUIT_GAME()
  native.invoke(
    Type.Void, 2291, false
  )
end

-- BOOL HAS_ASYNC_INSTALL_FINISHED() // 0x14832BF2ABA53FC5
--[[
Hardcoded to always return true.
--]]
function MISC.HAS_ASYNC_INSTALL_FINISHED()
  return native.invoke(
    Type.Bool, 2292, false
  )
end

-- void CLEANUP_ASYNC_INSTALL() // 0xC79AE21974B01FB2
function MISC.CLEANUP_ASYNC_INSTALL()
  native.invoke(
    Type.Void, 2293, false
  )
end

-- BOOL PLM_IS_IN_CONSTRAINED_MODE() // 0x684A41975F077262
--[[
aka "constrained"
--]]
function MISC.PLM_IS_IN_CONSTRAINED_MODE()
  return native.invoke(
    Type.Bool, 2294, false
  )
end

-- int PLM_GET_CONSTRAINED_DURATION_MS() // 0xABB2FA71C83A1B72
--[[
Returns duration of how long the game has been in power-saving mode (aka "constrained") in milliseconds.
--]]
function MISC.PLM_GET_CONSTRAINED_DURATION_MS()
  return native.invoke(
    Type.Int, 2295, false
  )
end

-- void SET_PLAYER_IS_IN_ANIMAL_FORM(BOOL toggle) // 0x4EBB7E87AA0DBED4
--[[
If toggle is true, the ped's head is shown in the pause menu
If toggle is false, the ped's head is not shown in the pause menu
--]]
function MISC.SET_PLAYER_IS_IN_ANIMAL_FORM(toggle)
  native.invoke(
    Type.Void, 2296, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL GET_IS_PLAYER_IN_ANIMAL_FORM() // 0x9689123E3F213AA5
--[[
Although we don't have a jenkins hash for this one, the name is 100% confirmed.
--]]
function MISC.GET_IS_PLAYER_IN_ANIMAL_FORM()
  return native.invoke(
    Type.Bool, 2297, false
  )
end

-- void SET_PLAYER_IS_REPEATING_A_MISSION(BOOL toggle) // 0x9D8D44ADBBA61EF2
function MISC.SET_PLAYER_IS_REPEATING_A_MISSION(toggle)
  native.invoke(
    Type.Void, 2298, false,
    arg(Type.Bool, toggle)
  )
end

-- void DISABLE_SCREEN_DIMMING_THIS_FRAME() // 0x23227DF0B2115469
--[[
Does nothing (it's a nullsub).
--]]
function MISC.DISABLE_SCREEN_DIMMING_THIS_FRAME()
  native.invoke(
    Type.Void, 2299, false
  )
end

-- float GET_CITY_DENSITY() // 0xD10282B6E3751BA0
function MISC.GET_CITY_DENSITY()
  return native.invoke(
    Type.Float, 2300, false
  )
end

-- void USE_ACTIVE_CAMERA_FOR_TIMESLICING_CENTRE() // 0x693478ACBD7F18E7
function MISC.USE_ACTIVE_CAMERA_FOR_TIMESLICING_CENTRE()
  native.invoke(
    Type.Void, 2301, false
  )
end

-- void SET_CONTENT_ID_INDEX(Hash contentId, int index) // 0x4B82FA6F2D624634
function MISC.SET_CONTENT_ID_INDEX(contentId, index)
  native.invoke(
    Type.Void, 2302, false,
    arg(Type.Hash, contentId),
    arg(Type.Int, index)
  )
end

-- int GET_CONTENT_ID_INDEX(Hash contentId) // 0xECF041186C5A94DC
function MISC.GET_CONTENT_ID_INDEX(contentId)
  return native.invoke(
    Type.Int, 2303, false,
    arg(Type.Hash, contentId)
  )
end

-- void _SET_CONTENT_PROP_TYPE(Hash model, int type) // 0xBA4583AF4C678A9B
function MISC._SET_CONTENT_PROP_TYPE(model, type)
  native.invoke(
    Type.Void, 2304, false,
    arg(Type.Hash, model),
    arg(Type.Int, type)
  )
end

-- int _GET_CONTENT_PROP_TYPE(Hash model) // 0x8BAF8AD59F47AAFC
--[[
Returns prop type for given model hash
--]]
function MISC._GET_CONTENT_PROP_TYPE(model)
  return native.invoke(
    Type.Int, 2305, false,
    arg(Type.Hash, model)
  )
end


MOBILE = {}

-- void CREATE_MOBILE_PHONE(int phoneType) // 0xA4E8E696C532FBC7
--[[
Creates a mobile phone of the specified type.

Possible phone types:

0 - Default phone / Michael's phone
1 - Trevor's phone
2 - Franklin's phone
3 - Unused police phone
4 - Prologue phone

Higher values may crash your game.
--]]
function MOBILE.CREATE_MOBILE_PHONE(phoneType)
  native.invoke(
    Type.Void, 2306, false,
    arg(Type.Int, phoneType)
  )
end

-- void DESTROY_MOBILE_PHONE() // 0x3BC861DF703E5097
--[[
Destroys the currently active mobile phone.
--]]
function MOBILE.DESTROY_MOBILE_PHONE()
  native.invoke(
    Type.Void, 2307, false
  )
end

-- void SET_MOBILE_PHONE_SCALE(float scale) // 0xCBDD322A73D6D932
--[[
The minimum/default is 500.0f. If you plan to make it bigger set it's position as well. Also this seems to need to be called in a loop as when you close the phone the scale is reset. If not in a loop you'd need to call it everytime before you re-open the phone.
--]]
function MOBILE.SET_MOBILE_PHONE_SCALE(scale)
  native.invoke(
    Type.Void, 2308, false,
    arg(Type.Float, scale)
  )
end

-- void SET_MOBILE_PHONE_ROTATION(float rotX, float rotY, float rotZ, Any p3) // 0xBB779C0CA917E865
--[[
Last parameter is unknown and always zero.
--]]
function MOBILE.SET_MOBILE_PHONE_ROTATION(rotX, rotY, rotZ, p3)
  native.invoke(
    Type.Void, 2309, false,
    arg(Type.Float, rotX),
    arg(Type.Float, rotY),
    arg(Type.Float, rotZ),
    arg(Type.Any, p3)
  )
end

-- void GET_MOBILE_PHONE_ROTATION(Vector3* rotation, Vehicle p1) // 0x1CEFB61F193070AE
function MOBILE.GET_MOBILE_PHONE_ROTATION(rotation, p1)
  native.invoke(
    Type.Void, 2310, true,
    arg(Type.Vector3, rotation),
    arg(Type.Vehicle, p1)
  )
end

-- void SET_MOBILE_PHONE_POSITION(float posX, float posY, float posZ) // 0x693A5C6D6734085B
function MOBILE.SET_MOBILE_PHONE_POSITION(posX, posY, posZ)
  native.invoke(
    Type.Void, 2311, false,
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ)
  )
end

-- void GET_MOBILE_PHONE_POSITION(Vector3* position) // 0x584FDFDA48805B86
function MOBILE.GET_MOBILE_PHONE_POSITION(position)
  native.invoke(
    Type.Void, 2312, true,
    arg(Type.Vector3, position)
  )
end

-- void SCRIPT_IS_MOVING_MOBILE_PHONE_OFFSCREEN(BOOL toggle) // 0xF511F759238A5122
--[[
If bool Toggle = true so the mobile is hide to screen.
If bool Toggle = false so the mobile is show to screen.
--]]
function MOBILE.SCRIPT_IS_MOVING_MOBILE_PHONE_OFFSCREEN(toggle)
  native.invoke(
    Type.Void, 2313, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL CAN_PHONE_BE_SEEN_ON_SCREEN() // 0xC4E2813898C97A4B
--[[
This one is weird and seems to return a TRUE state regardless of whether the phone is visible on screen or tucked away.


I can confirm the above. This function is hard-coded to always return 1.
--]]
function MOBILE.CAN_PHONE_BE_SEEN_ON_SCREEN()
  return native.invoke(
    Type.Bool, 2314, false
  )
end

-- void SET_MOBILE_PHONE_DOF_STATE(BOOL toggle) // 0x375A706A5C2FD084
function MOBILE.SET_MOBILE_PHONE_DOF_STATE(toggle)
  native.invoke(
    Type.Void, 2315, false,
    arg(Type.Bool, toggle)
  )
end

-- void CELL_SET_INPUT(int direction) // 0x95C9E72F3D7DEC9B
--[[
For move the finger of player, the value of int goes 1 at 5.
--]]
function MOBILE.CELL_SET_INPUT(direction)
  native.invoke(
    Type.Void, 2316, false,
    arg(Type.Int, direction)
  )
end

-- void CELL_HORIZONTAL_MODE_TOGGLE(BOOL toggle) // 0x44E44169EF70138E
--[[
if the bool "Toggle" is "true" so the phone is lean.
if the bool "Toggle" is "false" so the phone is not lean.
--]]
function MOBILE.CELL_HORIZONTAL_MODE_TOGGLE(toggle)
  native.invoke(
    Type.Void, 2317, false,
    arg(Type.Bool, toggle)
  )
end

-- void CELL_CAM_ACTIVATE(BOOL p0, BOOL p1) // 0xFDE8F069C542D126
function MOBILE.CELL_CAM_ACTIVATE(p0, p1)
  native.invoke(
    Type.Void, 2318, false,
    arg(Type.Bool, p0),
    arg(Type.Bool, p1)
  )
end

-- void CELL_CAM_ACTIVATE_SELFIE_MODE(BOOL toggle) // 0x015C49A93E3E086E
function MOBILE.CELL_CAM_ACTIVATE_SELFIE_MODE(toggle)
  native.invoke(
    Type.Void, 2319, false,
    arg(Type.Bool, toggle)
  )
end

-- void CELL_CAM_ACTIVATE_SHALLOW_DOF_MODE(BOOL toggle) // 0xA2CCBE62CD4C91A4
function MOBILE.CELL_CAM_ACTIVATE_SHALLOW_DOF_MODE(toggle)
  native.invoke(
    Type.Void, 2320, false,
    arg(Type.Bool, toggle)
  )
end

-- void CELL_CAM_SET_SELFIE_MODE_SIDE_OFFSET_SCALING(float p0) // 0x1B0B4AEED5B9B41C
function MOBILE.CELL_CAM_SET_SELFIE_MODE_SIDE_OFFSET_SCALING(p0)
  native.invoke(
    Type.Void, 2321, false,
    arg(Type.Float, p0)
  )
end

-- void CELL_CAM_SET_SELFIE_MODE_HORZ_PAN_OFFSET(float horizontalPan) // 0x53F4892D18EC90A4
function MOBILE.CELL_CAM_SET_SELFIE_MODE_HORZ_PAN_OFFSET(horizontalPan)
  native.invoke(
    Type.Void, 2322, false,
    arg(Type.Float, horizontalPan)
  )
end

-- void CELL_CAM_SET_SELFIE_MODE_VERT_PAN_OFFSET(float vertPan) // 0x3117D84EFA60F77B
function MOBILE.CELL_CAM_SET_SELFIE_MODE_VERT_PAN_OFFSET(vertPan)
  native.invoke(
    Type.Void, 2323, false,
    arg(Type.Float, vertPan)
  )
end

-- void CELL_CAM_SET_SELFIE_MODE_ROLL_OFFSET(float roll) // 0x15E69E2802C24B8D
function MOBILE.CELL_CAM_SET_SELFIE_MODE_ROLL_OFFSET(roll)
  native.invoke(
    Type.Void, 2324, false,
    arg(Type.Float, roll)
  )
end

-- void CELL_CAM_SET_SELFIE_MODE_DISTANCE_SCALING(float distanceScaling) // 0xAC2890471901861C
function MOBILE.CELL_CAM_SET_SELFIE_MODE_DISTANCE_SCALING(distanceScaling)
  native.invoke(
    Type.Void, 2325, false,
    arg(Type.Float, distanceScaling)
  )
end

-- void CELL_CAM_SET_SELFIE_MODE_HEAD_YAW_OFFSET(float yaw) // 0xD6ADE981781FCA09
function MOBILE.CELL_CAM_SET_SELFIE_MODE_HEAD_YAW_OFFSET(yaw)
  native.invoke(
    Type.Void, 2326, false,
    arg(Type.Float, yaw)
  )
end

-- void CELL_CAM_SET_SELFIE_MODE_HEAD_ROLL_OFFSET(float roll) // 0xF1E22DC13F5EEBAD
function MOBILE.CELL_CAM_SET_SELFIE_MODE_HEAD_ROLL_OFFSET(roll)
  native.invoke(
    Type.Void, 2327, false,
    arg(Type.Float, roll)
  )
end

-- void CELL_CAM_SET_SELFIE_MODE_HEAD_PITCH_OFFSET(float pitch) // 0x466DA42C89865553
function MOBILE.CELL_CAM_SET_SELFIE_MODE_HEAD_PITCH_OFFSET(pitch)
  native.invoke(
    Type.Void, 2328, false,
    arg(Type.Float, pitch)
  )
end

-- BOOL CELL_CAM_IS_CHAR_VISIBLE_NO_FACE_CHECK(Entity entity) // 0x439E9BC95B7E7FBE
function MOBILE.CELL_CAM_IS_CHAR_VISIBLE_NO_FACE_CHECK(entity)
  return native.invoke(
    Type.Bool, 2329, false,
    arg(Type.Entity, entity)
  )
end

-- void GET_MOBILE_PHONE_RENDER_ID(int* renderId) // 0xB4A53E05F68B6FA1
function MOBILE.GET_MOBILE_PHONE_RENDER_ID(renderId)
  native.invoke(
    Type.Void, 2330, false,
    arg(Type.Int, renderId)
  )
end


MONEY = {}

-- void NETWORK_INITIALIZE_CASH(int wallet, int bank) // 0x3DA5ECD1A56CBA6D
function MONEY.NETWORK_INITIALIZE_CASH(wallet, bank)
  native.invoke(
    Type.Void, 2331, false,
    arg(Type.Int, wallet),
    arg(Type.Int, bank)
  )
end

-- void NETWORK_DELETE_CHARACTER(int characterSlot, BOOL p1, BOOL p2) // 0x05A50AF38947EB8D
--[[
Note the 2nd parameters are always 1, 0. I have a feeling it deals with your money, wallet, bank. So when you delete the character it of course wipes the wallet cash at that time. So if that was the case, it would be eg, NETWORK_DELETE_CHARACTER(characterIndex, deleteWalletCash, deleteBankCash);
--]]
function MONEY.NETWORK_DELETE_CHARACTER(characterSlot, p1, p2)
  native.invoke(
    Type.Void, 2332, false,
    arg(Type.Int, characterSlot),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void NETWORK_MANUAL_DELETE_CHARACTER(int characterSlot) // 0x821418C727FCACD7
function MONEY.NETWORK_MANUAL_DELETE_CHARACTER(characterSlot)
  native.invoke(
    Type.Void, 2333, false,
    arg(Type.Int, characterSlot)
  )
end

-- BOOL NETWORK_GET_PLAYER_IS_HIGH_EARNER() // 0xFB2456B2040A6A67
function MONEY.NETWORK_GET_PLAYER_IS_HIGH_EARNER()
  return native.invoke(
    Type.Bool, 2334, false
  )
end

-- void NETWORK_CLEAR_CHARACTER_WALLET(int characterSlot) // 0xA921DED15FDF28F5
function MONEY.NETWORK_CLEAR_CHARACTER_WALLET(characterSlot)
  native.invoke(
    Type.Void, 2335, false,
    arg(Type.Int, characterSlot)
  )
end

-- void NETWORK_GIVE_PLAYER_JOBSHARE_CASH(int amount, Any* gamerHandle) // 0xFB18DF9CB95E0105
function MONEY.NETWORK_GIVE_PLAYER_JOBSHARE_CASH(amount, gamerHandle)
  native.invoke(
    Type.Void, 2336, false,
    arg(Type.Int, amount),
    arg(Type.Any, gamerHandle)
  )
end

-- void NETWORK_RECEIVE_PLAYER_JOBSHARE_CASH(int value, Any* gamerHandle) // 0x56A3B51944C50598
function MONEY.NETWORK_RECEIVE_PLAYER_JOBSHARE_CASH(value, gamerHandle)
  native.invoke(
    Type.Void, 2337, false,
    arg(Type.Int, value),
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_CAN_SHARE_JOB_CASH() // 0x1C2473301B1C66BA
function MONEY.NETWORK_CAN_SHARE_JOB_CASH()
  return native.invoke(
    Type.Bool, 2338, false
  )
end

-- void NETWORK_REFUND_CASH(int index, const char* context, const char* reason, BOOL p3) // 0xF9C812CD7C46E817
--[[
index
-------
See function sub_1005 in am_boat_taxi.ysc

context
----------
"BACKUP_VAGOS"
"BACKUP_LOST"
"BACKUP_FAMILIES"
"HIRE_MUGGER"
"HIRE_MERCENARY"
"BUY_CARDROPOFF"
"HELI_PICKUP"
"BOAT_PICKUP"
"CLEAR_WANTED"
"HEAD_2_HEAD"
"CHALLENGE"
"SHARE_LAST_JOB"
"DEFAULT"

reason
---------
"NOTREACHTARGET"
"TARGET_ESCAPE"
"DELIVERY_FAIL"
"NOT_USED"
"TEAM_QUIT"
"SERVER_ERROR"
"RECEIVE_LJ_L"
"CHALLENGE_PLAYER_LEFT"
"DEFAULT"

unk
-----
Unknown bool value


--]]
function MONEY.NETWORK_REFUND_CASH(index, context, reason, p3)
  native.invoke(
    Type.Void, 2339, false,
    arg(Type.Int, index),
    arg(Type.String, context),
    arg(Type.String, reason),
    arg(Type.Bool, p3)
  )
end

-- void NETWORK_DEDUCT_CASH(int amount, const char* p1, const char* p2, BOOL p3, BOOL p4, BOOL p5) // 0x18B7AE224B087E26
function MONEY.NETWORK_DEDUCT_CASH(amount, p1, p2, p3, p4, p5)
  native.invoke(
    Type.Void, 2340, false,
    arg(Type.Int, amount),
    arg(Type.String, p1),
    arg(Type.String, p2),
    arg(Type.Bool, p3),
    arg(Type.Bool, p4),
    arg(Type.Bool, p5)
  )
end

-- BOOL NETWORK_MONEY_CAN_BET(int amount, BOOL p1, BOOL p2) // 0x81404F3DC124FE5B
function MONEY.NETWORK_MONEY_CAN_BET(amount, p1, p2)
  return native.invoke(
    Type.Bool, 2341, false,
    arg(Type.Int, amount),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- BOOL NETWORK_CAN_BET(int amount) // 0x3A54E33660DED67F
function MONEY.NETWORK_CAN_BET(amount)
  return native.invoke(
    Type.Bool, 2342, false,
    arg(Type.Int, amount)
  )
end

-- BOOL NETWORK_CASINO_CAN_BET(Hash hash) // 0x158C16F5E4CF41F8
--[[
GTAO_CASINO_HOUSE
GTAO_CASINO_INSIDETRACK
GTAO_CASINO_LUCKYWHEEL
GTAO_CASINO_BLACKJACK
GTAO_CASINO_ROULETTE
GTAO_CASINO_SLOTS
GTAO_CASINO_PURCHASE_CHIPS

NETWORK_C*
--]]
function MONEY.NETWORK_CASINO_CAN_BET(hash)
  return native.invoke(
    Type.Bool, 2343, false,
    arg(Type.Hash, hash)
  )
end

-- BOOL NETWORK_CASINO_CAN_BET_PVC() // 0x394DCDB9E836B7A9
function MONEY.NETWORK_CASINO_CAN_BET_PVC()
  return native.invoke(
    Type.Bool, 2344, false
  )
end

-- BOOL NETWORK_CASINO_CAN_BET_AMOUNT(Any p0) // 0xF62F6D9528358FE4
function MONEY.NETWORK_CASINO_CAN_BET_AMOUNT(p0)
  return native.invoke(
    Type.Bool, 2345, false,
    arg(Type.Any, p0)
  )
end

-- BOOL NETWORK_CASINO_CAN_BUY_CHIPS_PVC() // 0x8968D4D8C6C40C11
function MONEY.NETWORK_CASINO_CAN_BUY_CHIPS_PVC()
  return native.invoke(
    Type.Bool, 2346, false
  )
end

-- BOOL NETWORK_CASINO_BUY_CHIPS(int p0, int p1) // 0x3BD101471C7F9EEC
function MONEY.NETWORK_CASINO_BUY_CHIPS(p0, p1)
  return native.invoke(
    Type.Bool, 2347, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1)
  )
end

-- BOOL NETWORK_CASINO_SELL_CHIPS(int p0, int p1) // 0xED44897CB336F480
function MONEY.NETWORK_CASINO_SELL_CHIPS(p0, p1)
  return native.invoke(
    Type.Bool, 2348, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1)
  )
end

-- void NETWORK_DEFER_CASH_TRANSACTIONS_UNTIL_SHOP_SAVE() // 0xCD0F5B5D932AE473
--[[
Does nothing (it's a nullsub).
--]]
function MONEY.NETWORK_DEFER_CASH_TRANSACTIONS_UNTIL_SHOP_SAVE()
  native.invoke(
    Type.Void, 2349, false
  )
end

-- BOOL CAN_PAY_AMOUNT_TO_BOSS(int p0, int p1, int amount, int* p3) // 0x9777734DAD16992F
function MONEY.CAN_PAY_AMOUNT_TO_BOSS(p0, p1, amount, p3)
  return native.invoke(
    Type.Bool, 2350, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1),
    arg(Type.Int, amount),
    arg(Type.Int, p3)
  )
end

-- void NETWORK_EARN_FROM_PICKUP(int amount) // 0xED1517D3AF17C698
function MONEY.NETWORK_EARN_FROM_PICKUP(amount)
  native.invoke(
    Type.Void, 2351, false,
    arg(Type.Int, amount)
  )
end

-- void NETWORK_EARN_FROM_CASHING_OUT(int amount) // 0x718FBBF67414FA36
function MONEY.NETWORK_EARN_FROM_CASHING_OUT(amount)
  native.invoke(
    Type.Void, 2352, false,
    arg(Type.Int, amount)
  )
end

-- void NETWORK_EARN_FROM_GANGATTACK_PICKUP(int amount) // 0xA03D4ACE0A3284CE
function MONEY.NETWORK_EARN_FROM_GANGATTACK_PICKUP(amount)
  native.invoke(
    Type.Void, 2353, false,
    arg(Type.Int, amount)
  )
end

-- void NETWORK_EARN_ASSASSINATE_TARGET_KILLED(int amount) // 0xFA700D8A9905F78A
function MONEY.NETWORK_EARN_ASSASSINATE_TARGET_KILLED(amount)
  native.invoke(
    Type.Void, 2354, false,
    arg(Type.Int, amount)
  )
end

-- void NETWORK_EARN_FROM_ROB_ARMORED_CARS(int amount) // 0xF514621E8EA463D0
--[[
For the money bags that drop a max of $40,000. Often called 40k bags.

Most likely NETWORK_EARN_FROM_ROB***
--]]
function MONEY.NETWORK_EARN_FROM_ROB_ARMORED_CARS(amount)
  native.invoke(
    Type.Void, 2355, false,
    arg(Type.Int, amount)
  )
end

-- void NETWORK_EARN_FROM_CRATE_DROP(int amount) // 0xB1CC1B9EC3007A2A
function MONEY.NETWORK_EARN_FROM_CRATE_DROP(amount)
  native.invoke(
    Type.Void, 2356, false,
    arg(Type.Int, amount)
  )
end

-- void NETWORK_EARN_FROM_BETTING(int amount, const char* p1) // 0x827A5BA1A44ACA6D
function MONEY.NETWORK_EARN_FROM_BETTING(amount, p1)
  native.invoke(
    Type.Void, 2357, false,
    arg(Type.Int, amount),
    arg(Type.String, p1)
  )
end

-- void NETWORK_EARN_FROM_JOB(int amount, const char* p1) // 0xB2CC4836834E8A98
function MONEY.NETWORK_EARN_FROM_JOB(amount, p1)
  native.invoke(
    Type.Void, 2358, false,
    arg(Type.Int, amount),
    arg(Type.String, p1)
  )
end

-- void NETWORK_EARN_FROM_JOBX2(int amount, const char* p1) // 0xDEBBF584665411D0
function MONEY.NETWORK_EARN_FROM_JOBX2(amount, p1)
  native.invoke(
    Type.Void, 2359, false,
    arg(Type.Int, amount),
    arg(Type.String, p1)
  )
end

-- void NETWORK_EARN_FROM_PREMIUM_JOB(int amount, const char* p1) // 0xC8407624CEF2354B
function MONEY.NETWORK_EARN_FROM_PREMIUM_JOB(amount, p1)
  native.invoke(
    Type.Void, 2360, false,
    arg(Type.Int, amount),
    arg(Type.String, p1)
  )
end

-- void NETWORK_EARN_FROM_BEND_JOB(int amount, const char* heistHash) // 0x61326EE6DF15B0CA
function MONEY.NETWORK_EARN_FROM_BEND_JOB(amount, heistHash)
  native.invoke(
    Type.Void, 2361, false,
    arg(Type.Int, amount),
    arg(Type.String, heistHash)
  )
end

-- void NETWORK_EARN_FROM_CHALLENGE_WIN(Any p0, Any* p1, BOOL p2) // 0x2B171E6B2F64D8DF
function MONEY.NETWORK_EARN_FROM_CHALLENGE_WIN(p0, p1, p2)
  native.invoke(
    Type.Void, 2362, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Bool, p2)
  )
end

-- void NETWORK_EARN_FROM_BOUNTY(int amount, Any* gamerHandle, Any* p2, Any p3) // 0x131BB5DA15453ACF
function MONEY.NETWORK_EARN_FROM_BOUNTY(amount, gamerHandle, p2, p3)
  native.invoke(
    Type.Void, 2363, false,
    arg(Type.Int, amount),
    arg(Type.Any, gamerHandle),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_EARN_FROM_IMPORT_EXPORT(int amount, Hash modelHash) // 0xF92A014A634442D6
function MONEY.NETWORK_EARN_FROM_IMPORT_EXPORT(amount, modelHash)
  native.invoke(
    Type.Void, 2364, false,
    arg(Type.Int, amount),
    arg(Type.Hash, modelHash)
  )
end

-- void NETWORK_EARN_FROM_HOLDUPS(int amount) // 0x45B8154E077D9E4D
function MONEY.NETWORK_EARN_FROM_HOLDUPS(amount)
  native.invoke(
    Type.Void, 2365, false,
    arg(Type.Int, amount)
  )
end

-- void NETWORK_EARN_FROM_PROPERTY(int amount, Hash propertyName) // 0x849648349D77F5C5
function MONEY.NETWORK_EARN_FROM_PROPERTY(amount, propertyName)
  native.invoke(
    Type.Void, 2366, false,
    arg(Type.Int, amount),
    arg(Type.Hash, propertyName)
  )
end

-- void NETWORK_EARN_FROM_AI_TARGET_KILL(Any p0, Any p1) // 0x515B4A22E4D3C6D7
--[[
DSPORT
--]]
function MONEY.NETWORK_EARN_FROM_AI_TARGET_KILL(p0, p1)
  native.invoke(
    Type.Void, 2367, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_EARN_FROM_NOT_BADSPORT(int amount) // 0x4337511FA8221D36
function MONEY.NETWORK_EARN_FROM_NOT_BADSPORT(amount)
  native.invoke(
    Type.Void, 2368, false,
    arg(Type.Int, amount)
  )
end

-- void NETWORK_EARN_FROM_VEHICLE(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7) // 0xB539BD8A4C1EECF8
function MONEY.NETWORK_EARN_FROM_VEHICLE(p0, p1, p2, p3, p4, p5, p6, p7)
  native.invoke(
    Type.Void, 2369, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5),
    arg(Type.Any, p6),
    arg(Type.Any, p7)
  )
end

-- void NETWORK_EARN_FROM_PERSONAL_VEHICLE(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8) // 0x3F4D00167E41E0AD
function MONEY.NETWORK_EARN_FROM_PERSONAL_VEHICLE(p0, p1, p2, p3, p4, p5, p6, p7, p8)
  native.invoke(
    Type.Void, 2370, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5),
    arg(Type.Any, p6),
    arg(Type.Any, p7),
    arg(Type.Any, p8)
  )
end

-- void NETWORK_EARN_FROM_DAILY_OBJECTIVES(int amount, const char* type, int characterSlot) // 0x6EA318C91C1A8786
--[[
type either Monthly,Weekly,Daily
--]]
function MONEY.NETWORK_EARN_FROM_DAILY_OBJECTIVES(amount, type, characterSlot)
  native.invoke(
    Type.Void, 2371, false,
    arg(Type.Int, amount),
    arg(Type.String, type),
    arg(Type.Int, characterSlot)
  )
end

-- void NETWORK_EARN_FROM_AMBIENT_JOB(int p0, const char* p1, Any* p2) // 0xFB6DB092FBAE29E6
--[[
Example for p1: "AM_DISTRACT_COPS"
--]]
function MONEY.NETWORK_EARN_FROM_AMBIENT_JOB(p0, p1, p2)
  native.invoke(
    Type.Void, 2372, false,
    arg(Type.Int, p0),
    arg(Type.String, p1),
    arg(Type.Any, p2)
  )
end

-- void NETWORK_EARN_FROM_JOB_BONUS(Any p0, Any* p1, Any* p2) // 0x6816FB4416760775
function MONEY.NETWORK_EARN_FROM_JOB_BONUS(p0, p1, p2)
  native.invoke(
    Type.Void, 2373, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void NETWORK_EARN_FROM_CRIMINAL_MASTERMIND(Any p0, Any p1, Any p2) // 0xFA009A62990671D4
function MONEY.NETWORK_EARN_FROM_CRIMINAL_MASTERMIND(p0, p1, p2)
  native.invoke(
    Type.Void, 2374, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void NETWORK_EARN_HEIST_AWARD(Any p0, Any p1, Any p2) // 0x9D4FDBB035229669
function MONEY.NETWORK_EARN_HEIST_AWARD(p0, p1, p2)
  native.invoke(
    Type.Void, 2375, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void NETWORK_EARN_FIRST_TIME_BONUS(Any p0, Any p1, Any p2) // 0x11B0A20C493F7E36
function MONEY.NETWORK_EARN_FIRST_TIME_BONUS(p0, p1, p2)
  native.invoke(
    Type.Void, 2376, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void NETWORK_EARN_GOON(Any p0, Any p1, Any p2) // 0xCDA1C62BE2777802
function MONEY.NETWORK_EARN_GOON(p0, p1, p2)
  native.invoke(
    Type.Void, 2377, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void NETWORK_EARN_BOSS(Any p0, Any p1, Any p2) // 0x08B0CA7A6AB3AC32
function MONEY.NETWORK_EARN_BOSS(p0, p1, p2)
  native.invoke(
    Type.Void, 2378, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void NETWORK_EARN_AGENCY(Any p0, Any p1, Any p2, Any p3) // 0x0CB1BE0633C024A8
function MONEY.NETWORK_EARN_AGENCY(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2379, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_EARN_FROM_WAREHOUSE(int amount, int id) // 0x3E4ADAFF1830F146
function MONEY.NETWORK_EARN_FROM_WAREHOUSE(amount, id)
  native.invoke(
    Type.Void, 2380, false,
    arg(Type.Int, amount),
    arg(Type.Int, id)
  )
end

-- void NETWORK_EARN_FROM_CONTRABAND(int amount, Any p1) // 0xECA658CE2A4E5A72
function MONEY.NETWORK_EARN_FROM_CONTRABAND(amount, p1)
  native.invoke(
    Type.Void, 2381, false,
    arg(Type.Int, amount),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_EARN_FROM_DESTROYING_CONTRABAND(Any p0, Any p1, Any p2) // 0x84C0116D012E8FC2
function MONEY.NETWORK_EARN_FROM_DESTROYING_CONTRABAND(p0, p1, p2)
  native.invoke(
    Type.Void, 2382, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void NETWORK_EARN_FROM_SMUGGLER_WORK(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) // 0x6B7E4FB50D5F3D65
function MONEY.NETWORK_EARN_FROM_SMUGGLER_WORK(p0, p1, p2, p3, p4, p5)
  native.invoke(
    Type.Void, 2383, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5)
  )
end

-- void NETWORK_EARN_FROM_HANGAR_TRADE(Any p0, Any p1) // 0x31BA138F6304FB9F
function MONEY.NETWORK_EARN_FROM_HANGAR_TRADE(p0, p1)
  native.invoke(
    Type.Void, 2384, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_EARN_PURCHASE_CLUB_HOUSE(Any p0, Any p1) // 0x55A1E095DB052FA5
function MONEY.NETWORK_EARN_PURCHASE_CLUB_HOUSE(p0, p1)
  native.invoke(
    Type.Void, 2385, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_EARN_FROM_BUSINESS_PRODUCT(int amount, Any p1, Any p2, Any p3) // 0x8586789730B10CAF
function MONEY.NETWORK_EARN_FROM_BUSINESS_PRODUCT(amount, p1, p2, p3)
  native.invoke(
    Type.Void, 2386, false,
    arg(Type.Int, amount),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_EARN_FROM_VEHICLE_EXPORT(int amount, Any p1, Any p2) // 0xEDEAD9A91EC768B3
function MONEY.NETWORK_EARN_FROM_VEHICLE_EXPORT(amount, p1, p2)
  native.invoke(
    Type.Void, 2387, false,
    arg(Type.Int, amount),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void NETWORK_EARN_SMUGGLER_AGENCY(int amount, Any p1, Any p2, Any p3) // 0xDEE612F2D71B0308
function MONEY.NETWORK_EARN_SMUGGLER_AGENCY(amount, p1, p2, p3)
  native.invoke(
    Type.Void, 2388, false,
    arg(Type.Int, amount),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_EARN_BOUNTY_HUNTER_REWARD(Any p0) // 0xF6B170F9A02E9E87
function MONEY.NETWORK_EARN_BOUNTY_HUNTER_REWARD(p0)
  native.invoke(
    Type.Void, 2389, false,
    arg(Type.Any, p0)
  )
end

-- void NETWORK_EARN_FROM_BUSINESS_BATTLE(Any p0) // 0x42FCE14F50F27291
function MONEY.NETWORK_EARN_FROM_BUSINESS_BATTLE(p0)
  native.invoke(
    Type.Void, 2390, false,
    arg(Type.Any, p0)
  )
end

-- void NETWORK_EARN_FROM_CLUB_MANAGEMENT_PARTICIPATION(Any p0, int p1) // 0xA75EAC69F59E96E7
function MONEY.NETWORK_EARN_FROM_CLUB_MANAGEMENT_PARTICIPATION(p0, p1)
  native.invoke(
    Type.Void, 2391, false,
    arg(Type.Any, p0),
    arg(Type.Int, p1)
  )
end

-- void NETWORK_EARN_FROM_FMBB_PHONECALL_MISSION(Any p0) // 0xC5156361F26E2212
function MONEY.NETWORK_EARN_FROM_FMBB_PHONECALL_MISSION(p0)
  native.invoke(
    Type.Void, 2392, false,
    arg(Type.Any, p0)
  )
end

-- void NETWORK_EARN_FROM_BUSINESS_HUB_SELL(Any p0, Any p1, Any p2) // 0x0B39CF0D53F1C883
function MONEY.NETWORK_EARN_FROM_BUSINESS_HUB_SELL(p0, p1, p2)
  native.invoke(
    Type.Void, 2393, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void NETWORK_EARN_FROM_FMBB_BOSS_WORK(Any p0) // 0x1FDA0AA679C9919B
function MONEY.NETWORK_EARN_FROM_FMBB_BOSS_WORK(p0)
  native.invoke(
    Type.Void, 2394, false,
    arg(Type.Any, p0)
  )
end

-- void NETWORK_EARN_FMBB_WAGE_BONUS(Any p0) // 0xFFFBA1B1F7C0B6F4
function MONEY.NETWORK_EARN_FMBB_WAGE_BONUS(p0)
  native.invoke(
    Type.Void, 2395, false,
    arg(Type.Any, p0)
  )
end

-- BOOL NETWORK_CAN_SPEND_MONEY(Any p0, BOOL p1, BOOL p2, BOOL p3, Any p4, Any p5) // 0xAB3CAA6B422164DA
function MONEY.NETWORK_CAN_SPEND_MONEY(p0, p1, p2, p3, p4, p5)
  return native.invoke(
    Type.Bool, 2396, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5)
  )
end

-- BOOL NETWORK_CAN_SPEND_MONEY2(Any p0, BOOL p1, BOOL p2, BOOL p3, Any* p4, Any p5, Any p6) // 0x7303E27CC6532080
function MONEY.NETWORK_CAN_SPEND_MONEY2(p0, p1, p2, p3, p4, p5, p6)
  return native.invoke(
    Type.Bool, 2397, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5),
    arg(Type.Any, p6)
  )
end

-- void NETWORK_BUY_ITEM(int amount, Hash item, Any p2, Any p3, BOOL p4, const char* item_name, Any p6, Any p7, Any p8, BOOL p9) // 0xF0077C797F66A355
function MONEY.NETWORK_BUY_ITEM(amount, item, p2, p3, p4, item_name, p6, p7, p8, p9)
  native.invoke(
    Type.Void, 2398, false,
    arg(Type.Int, amount),
    arg(Type.Hash, item),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Bool, p4),
    arg(Type.String, item_name),
    arg(Type.Any, p6),
    arg(Type.Any, p7),
    arg(Type.Any, p8),
    arg(Type.Bool, p9)
  )
end

-- void NETWORK_SPENT_TAXI(int amount, BOOL p1, BOOL p2, Any p3, Any p4) // 0x17C3A7D31EAE39F9
function MONEY.NETWORK_SPENT_TAXI(amount, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 2399, false,
    arg(Type.Int, amount),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4)
  )
end

-- void NETWORK_PAY_EMPLOYEE_WAGE(Any p0, BOOL p1, BOOL p2) // 0x5FD5ED82CBBE9989
function MONEY.NETWORK_PAY_EMPLOYEE_WAGE(p0, p1, p2)
  native.invoke(
    Type.Void, 2400, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void NETWORK_PAY_MATCH_ENTRY_FEE(int amount, const char* matchId, BOOL p2, BOOL p3) // 0x9346E14F2AF74D46
function MONEY.NETWORK_PAY_MATCH_ENTRY_FEE(amount, matchId, p2, p3)
  native.invoke(
    Type.Void, 2401, false,
    arg(Type.Int, amount),
    arg(Type.String, matchId),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3)
  )
end

-- void NETWORK_SPENT_BETTING(int amount, int p1, const char* matchId, BOOL p3, BOOL p4) // 0x1C436FD11FFA692F
function MONEY.NETWORK_SPENT_BETTING(amount, p1, matchId, p3, p4)
  native.invoke(
    Type.Void, 2402, false,
    arg(Type.Int, amount),
    arg(Type.Int, p1),
    arg(Type.String, matchId),
    arg(Type.Bool, p3),
    arg(Type.Bool, p4)
  )
end

-- void NETWORK_SPENT_WAGER(Any p0, Any p1, int amount) // 0xD99DB210089617FE
function MONEY.NETWORK_SPENT_WAGER(p0, p1, amount)
  native.invoke(
    Type.Void, 2403, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Int, amount)
  )
end

-- void NETWORK_SPENT_IN_STRIPCLUB(Any p0, BOOL p1, Any p2, BOOL p3) // 0xEE99784E4467689C
function MONEY.NETWORK_SPENT_IN_STRIPCLUB(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2404, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.Any, p2),
    arg(Type.Bool, p3)
  )
end

-- void NETWORK_BUY_HEALTHCARE(int cost, BOOL p1, BOOL p2) // 0xD9B067E55253E3DD
function MONEY.NETWORK_BUY_HEALTHCARE(cost, p1, p2)
  native.invoke(
    Type.Void, 2405, false,
    arg(Type.Int, cost),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void NETWORK_BUY_AIRSTRIKE(int cost, BOOL p1, BOOL p2, Any p3) // 0x763B4BD305338F19
--[[
p1 = 0 (always)
p2 = 1 (always)
--]]
function MONEY.NETWORK_BUY_AIRSTRIKE(cost, p1, p2, p3)
  native.invoke(
    Type.Void, 2406, false,
    arg(Type.Int, cost),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_BUY_BACKUP_GANG(int p0, int p1, BOOL p2, BOOL p3, int npcProvider) // 0xA3EDDAA42411D3B9
function MONEY.NETWORK_BUY_BACKUP_GANG(p0, p1, p2, p3, npcProvider)
  native.invoke(
    Type.Void, 2407, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3),
    arg(Type.Int, npcProvider)
  )
end

-- void NETWORK_BUY_HELI_STRIKE(int cost, BOOL p1, BOOL p2, Any p3) // 0x81AA4610E3FD3A69
--[[
p1 = 0 (always)
p2 = 1 (always)
--]]
function MONEY.NETWORK_BUY_HELI_STRIKE(cost, p1, p2, p3)
  native.invoke(
    Type.Void, 2408, false,
    arg(Type.Int, cost),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_AMMO_DROP(Any p0, BOOL p1, BOOL p2, Any p3) // 0xB162DC95C0A3317B
function MONEY.NETWORK_SPENT_AMMO_DROP(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2409, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_BUY_BOUNTY(int amount, Player victim, BOOL p2, BOOL p3, Any p4) // 0x7B718E197453F2D9
--[[
p1 is just an assumption. p2 was false and p3 was true.
--]]
function MONEY.NETWORK_BUY_BOUNTY(amount, victim, p2, p3, p4)
  native.invoke(
    Type.Void, 2410, false,
    arg(Type.Int, amount),
    arg(Type.Player, victim),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3),
    arg(Type.Any, p4)
  )
end

-- void NETWORK_BUY_PROPERTY(int cost, Hash propertyName, BOOL p2, BOOL p3) // 0x650A08A280870AF6
function MONEY.NETWORK_BUY_PROPERTY(cost, propertyName, p2, p3)
  native.invoke(
    Type.Void, 2411, false,
    arg(Type.Int, cost),
    arg(Type.Hash, propertyName),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3)
  )
end

-- void NETWORK_BUY_SMOKES(int p0, BOOL p1, BOOL p2) // 0x75AF80E61248EEBD
function MONEY.NETWORK_BUY_SMOKES(p0, p1, p2)
  native.invoke(
    Type.Void, 2412, false,
    arg(Type.Int, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void NETWORK_SPENT_HELI_PICKUP(Any p0, BOOL p1, BOOL p2, Any p3) // 0x7BF1D73DB2ECA492
function MONEY.NETWORK_SPENT_HELI_PICKUP(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2413, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_BOAT_PICKUP(Any p0, BOOL p1, BOOL p2, Any p3) // 0x524EE43A37232C00
function MONEY.NETWORK_SPENT_BOAT_PICKUP(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2414, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_BULL_SHARK(Any p0, BOOL p1, BOOL p2, Any p3) // 0xA6DD8458CE24012C
function MONEY.NETWORK_SPENT_BULL_SHARK(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2415, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_CASH_DROP(int amount, BOOL p1, BOOL p2) // 0x289016EC778D60E0
function MONEY.NETWORK_SPENT_CASH_DROP(amount, p1, p2)
  native.invoke(
    Type.Void, 2416, false,
    arg(Type.Int, amount),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void NETWORK_SPENT_HIRE_MUGGER(Any p0, BOOL p1, BOOL p2, Any p3) // 0xE404BFB981665BF0
--[[
Only used once in a script (am_contact_requests)
p1 = 0
p2 = 1
--]]
function MONEY.NETWORK_SPENT_HIRE_MUGGER(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2417, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_ROBBED_BY_MUGGER(int amount, BOOL p1, BOOL p2, Any p3) // 0x995A65F15F581359
function MONEY.NETWORK_SPENT_ROBBED_BY_MUGGER(amount, p1, p2, p3)
  native.invoke(
    Type.Void, 2418, false,
    arg(Type.Int, amount),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_HIRE_MERCENARY(Any p0, BOOL p1, BOOL p2, Any p3) // 0xE7B80E2BF9D80BD6
function MONEY.NETWORK_SPENT_HIRE_MERCENARY(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2419, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_BUY_WANTEDLEVEL(Any p0, Any* p1, BOOL p2, BOOL p3, Any p4) // 0xE1B13771A843C4F6
function MONEY.NETWORK_SPENT_BUY_WANTEDLEVEL(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 2420, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3),
    arg(Type.Any, p4)
  )
end

-- void NETWORK_SPENT_BUY_OFFTHERADAR(Any p0, BOOL p1, BOOL p2, Any p3) // 0xA628A745E2275C5D
function MONEY.NETWORK_SPENT_BUY_OFFTHERADAR(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2421, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_BUY_REVEAL_PLAYERS(Any p0, BOOL p1, BOOL p2, Any p3) // 0x6E176F1B18BC0637
function MONEY.NETWORK_SPENT_BUY_REVEAL_PLAYERS(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2422, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_CARWASH(Any p0, Any p1, Any p2, BOOL p3, BOOL p4) // 0xEC03C719DB2F4306
function MONEY.NETWORK_SPENT_CARWASH(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 2423, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Bool, p3),
    arg(Type.Bool, p4)
  )
end

-- void NETWORK_SPENT_CINEMA(Any p0, Any p1, BOOL p2, BOOL p3) // 0x6B38ECB05A63A685
function MONEY.NETWORK_SPENT_CINEMA(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2424, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3)
  )
end

-- void NETWORK_SPENT_TELESCOPE(Any p0, BOOL p1, BOOL p2) // 0x7FE61782AD94CC09
function MONEY.NETWORK_SPENT_TELESCOPE(p0, p1, p2)
  native.invoke(
    Type.Void, 2425, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void NETWORK_SPENT_HOLDUPS(Any p0, BOOL p1, BOOL p2) // 0xD9B86B9872039763
function MONEY.NETWORK_SPENT_HOLDUPS(p0, p1, p2)
  native.invoke(
    Type.Void, 2426, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void NETWORK_SPENT_BUY_PASSIVE_MODE(Any p0, BOOL p1, BOOL p2, Any p3) // 0x6D3A430D1A809179
function MONEY.NETWORK_SPENT_BUY_PASSIVE_MODE(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2427, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_BANK_INTEREST(int p0, BOOL p1, BOOL p2) // 0xCA230C9682556CF1
function MONEY.NETWORK_SPENT_BANK_INTEREST(p0, p1, p2)
  native.invoke(
    Type.Void, 2428, false,
    arg(Type.Int, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void NETWORK_SPENT_PROSTITUTES(Any p0, BOOL p1, BOOL p2) // 0xB21B89501CFAC79E
function MONEY.NETWORK_SPENT_PROSTITUTES(p0, p1, p2)
  native.invoke(
    Type.Void, 2429, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void NETWORK_SPENT_ARREST_BAIL(Any p0, BOOL p1, BOOL p2) // 0x812F5488B1B2A299
function MONEY.NETWORK_SPENT_ARREST_BAIL(p0, p1, p2)
  native.invoke(
    Type.Void, 2430, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void NETWORK_SPENT_PAY_VEHICLE_INSURANCE_PREMIUM(int amount, Hash vehicleModel, Any* gamerHandle, BOOL notBankrupt, BOOL hasTheMoney) // 0x9FF28D88C766E3E8
--[[
According to how I understood this in the freemode script alone,
The first parameter is determined by a function named, func_5749 within the freemode script which has a list of all the vehicles and a set price to return which some vehicles deals with globals as well. So the first parameter is basically the set in stone insurance cost it's gonna charge you for that specific vehicle model.

The second parameter whoever put it was right, they call GET_ENTITY_MODEL with the vehicle as the paremeter.

The third parameter is the network handle as they call their little struct<13> func or atleast how the script decompiled it to look which in lamens terms just returns the network handle of the previous owner based on DECOR_GET_INT(vehicle, "Previous_Owner").

The fourth parameter is a bool that returns true/false depending on if your bank balance is greater then 0.

The fifth and last parameter is a bool that returns true/false depending on if you have the money for the car based on the cost returned by func_5749. In the freemode script eg,
bool hasTheMoney = MONEY::_GET_BANK_BALANCE() < carCost.
--]]
function MONEY.NETWORK_SPENT_PAY_VEHICLE_INSURANCE_PREMIUM(amount, vehicleModel, gamerHandle, notBankrupt, hasTheMoney)
  native.invoke(
    Type.Void, 2431, false,
    arg(Type.Int, amount),
    arg(Type.Hash, vehicleModel),
    arg(Type.Any, gamerHandle),
    arg(Type.Bool, notBankrupt),
    arg(Type.Bool, hasTheMoney)
  )
end

-- void NETWORK_SPENT_CALL_PLAYER(Any p0, Any* p1, BOOL p2, BOOL p3) // 0xACDE7185B374177C
function MONEY.NETWORK_SPENT_CALL_PLAYER(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2432, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3)
  )
end

-- void NETWORK_SPENT_BOUNTY(Any p0, BOOL p1, BOOL p2) // 0x29B260B84947DFCC
function MONEY.NETWORK_SPENT_BOUNTY(p0, p1, p2)
  native.invoke(
    Type.Void, 2433, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void NETWORK_SPENT_FROM_ROCKSTAR(int p0, BOOL p1, BOOL p2) // 0x6A445B64ED7ABEB5
function MONEY.NETWORK_SPENT_FROM_ROCKSTAR(p0, p1, p2)
  native.invoke(
    Type.Void, 2434, false,
    arg(Type.Int, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- int NETWORK_SPEND_EARNED_FROM_BANK_AND_WALLETS(int amount) // 0x9B5016A6433A68C5
--[[
Hardcoded to return 0.
--]]
function MONEY.NETWORK_SPEND_EARNED_FROM_BANK_AND_WALLETS(amount)
  return native.invoke(
    Type.Int, 2435, false,
    arg(Type.Int, amount)
  )
end

-- const char* PROCESS_CASH_GIFT(int* p0, int* p1, const char* p2) // 0x20194D48EAEC9A41
--[[
This isn't a hash collision.
--]]
function MONEY.PROCESS_CASH_GIFT(p0, p1, p2)
  return native.invoke(
    Type.Const char, 2436, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1),
    arg(Type.String, p2)
  )
end

-- void NETWORK_SPENT_MOVE_SUBMARINE(Any p0, Any p1, Any p2) // 0xCD4D66B43B1DD28D
function MONEY.NETWORK_SPENT_MOVE_SUBMARINE(p0, p1, p2)
  native.invoke(
    Type.Void, 2437, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void NETWORK_SPENT_PLAYER_HEALTHCARE(int p0, int p1, BOOL p2, BOOL p3) // 0x7C99101F7FCE2EE5
function MONEY.NETWORK_SPENT_PLAYER_HEALTHCARE(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2438, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3)
  )
end

-- void NETWORK_SPENT_NO_COPS(Any p0, BOOL p1, BOOL p2, Any p3) // 0xD5BB406F4E04019F
function MONEY.NETWORK_SPENT_NO_COPS(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2439, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_CARGO_SOURCING(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) // 0x948705F6F9C50824
function MONEY.NETWORK_SPENT_CARGO_SOURCING(p0, p1, p2, p3, p4, p5)
  native.invoke(
    Type.Void, 2440, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5)
  )
end

-- void NETWORK_SPENT_REQUEST_JOB(Any p0, BOOL p1, BOOL p2, Any p3) // 0x8204DA7934DF3155
function MONEY.NETWORK_SPENT_REQUEST_JOB(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2441, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_REQUEST_HEIST(Any p0, BOOL p1, BOOL p2, Any p3) // 0x9D26502BB97BFE62
function MONEY.NETWORK_SPENT_REQUEST_HEIST(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2442, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_BUY_FAIRGROUND_RIDE(int amount, Any p1, BOOL p2, BOOL p3, Any p4) // 0x8A7B3952DD64D2B5
--[[
The first parameter is the amount spent which is store in a global when this native is called. The global returns 10. Which is the price for both rides.

The last 3 parameters are, 
2,0,1 in the am_ferriswheel.c
1,0,1 in the am_rollercoaster.c

--]]
function MONEY.NETWORK_BUY_FAIRGROUND_RIDE(amount, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 2443, false,
    arg(Type.Int, amount),
    arg(Type.Any, p1),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3),
    arg(Type.Any, p4)
  )
end

-- BOOL NETWORK_ECONOMY_HAS_FIXED_CRAZY_NUMBERS() // 0x7C4FCCD2E4DEB394
function MONEY.NETWORK_ECONOMY_HAS_FIXED_CRAZY_NUMBERS()
  return native.invoke(
    Type.Bool, 2444, false
  )
end

-- void NETWORK_SPENT_JOB_SKIP(int amount, const char* matchId, BOOL p2, BOOL p3) // 0x28F174A67B8D0C2F
function MONEY.NETWORK_SPENT_JOB_SKIP(amount, matchId, p2, p3)
  native.invoke(
    Type.Void, 2445, false,
    arg(Type.Int, amount),
    arg(Type.String, matchId),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3)
  )
end

-- BOOL NETWORK_SPENT_BOSS_GOON(int amount, BOOL p1, BOOL p2) // 0xFFBE02CD385356BD
function MONEY.NETWORK_SPENT_BOSS_GOON(amount, p1, p2)
  return native.invoke(
    Type.Bool, 2446, false,
    arg(Type.Int, amount),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void NETWORK_SPEND_GOON(int p0, int p1, int amount) // 0x08A1B82B91900682
function MONEY.NETWORK_SPEND_GOON(p0, p1, amount)
  native.invoke(
    Type.Void, 2447, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1),
    arg(Type.Int, amount)
  )
end

-- void NETWORK_SPEND_BOSS(Any p0, Any p1, Any p2) // 0xDBC966A01C02BCA7
function MONEY.NETWORK_SPEND_BOSS(p0, p1, p2)
  native.invoke(
    Type.Void, 2448, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void NETWORK_SPENT_MOVE_YACHT(int amount, BOOL p1, BOOL p2) // 0xE7DF4E0545DFB56E
function MONEY.NETWORK_SPENT_MOVE_YACHT(amount, p1, p2)
  native.invoke(
    Type.Void, 2449, false,
    arg(Type.Int, amount),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void NETWORK_SPENT_RENAME_ORGANIZATION(Any p0, Any p1, Any p2, Any p3) // 0xFC4EE00A7B3BFB76
function MONEY.NETWORK_SPENT_RENAME_ORGANIZATION(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2450, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_BUY_CONTRABAND_MISSION(int p0, int p1, Hash p2, BOOL p3, BOOL p4) // 0x30FD873ECE50E9F6
function MONEY.NETWORK_BUY_CONTRABAND_MISSION(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 2451, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1),
    arg(Type.Hash, p2),
    arg(Type.Bool, p3),
    arg(Type.Bool, p4)
  )
end

-- void NETWORK_SPENT_PA_SERVICE_HELI(Any p0, Any p1, Any p2, Any p3) // 0x112209CE0290C03A
function MONEY.NETWORK_SPENT_PA_SERVICE_HELI(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2452, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_PA_SERVICE_VEHICLE(Any p0, Any p1, Any p2, Any p3) // 0xED5FD7AF10F5E262
function MONEY.NETWORK_SPENT_PA_SERVICE_VEHICLE(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2453, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_PA_SERVICE_SNACK(Any p0, Any p1, Any p2, Any p3) // 0x0D30EB83668E63C5
function MONEY.NETWORK_SPENT_PA_SERVICE_SNACK(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2454, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_PA_SERVICE_DANCER(Any p0, Any p1, Any p2, Any p3) // 0xB49ECA122467D05F
function MONEY.NETWORK_SPENT_PA_SERVICE_DANCER(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2455, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_PA_SERVICE_IMPOUND(Any p0, Any p1, Any p2) // 0xE23ADC6FCB1F29AE
function MONEY.NETWORK_SPENT_PA_SERVICE_IMPOUND(p0, p1, p2)
  native.invoke(
    Type.Void, 2456, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void NETWORK_SPENT_PA_HELI_PICKUP(Any p0, Any p1, Any p2, Any p3) // 0x0FE8E1FCD2B86B33
function MONEY.NETWORK_SPENT_PA_HELI_PICKUP(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2457, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_PURCHASE_OFFICE_PROPERTY(Any p0, Any p1, Any p2, Any p3, Any p4) // 0x69EF772B192614C1
function MONEY.NETWORK_SPENT_PURCHASE_OFFICE_PROPERTY(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 2458, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4)
  )
end

-- void NETWORK_SPENT_UPGRADE_OFFICE_PROPERTY(Any p0, Any p1, Any p2, Any p3, Any p4) // 0x8E243837643D9583
function MONEY.NETWORK_SPENT_UPGRADE_OFFICE_PROPERTY(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 2459, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4)
  )
end

-- void NETWORK_SPENT_PURCHASE_WAREHOUSE_PROPERTY(Any p0, Any p1, Any p2, Any p3) // 0xBD0EFB25CCA8F97A
function MONEY.NETWORK_SPENT_PURCHASE_WAREHOUSE_PROPERTY(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2460, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_UPGRADE_WAREHOUSE_PROPERTY(Any p0, Any p1, Any p2, Any p3) // 0xA95F667A755725DA
function MONEY.NETWORK_SPENT_UPGRADE_WAREHOUSE_PROPERTY(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2461, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_PURCHASE_IMPEXP_WAREHOUSE_PROPERTY(int amount, Any* data, BOOL p2, BOOL p3) // 0x33981D6804E62F49
function MONEY.NETWORK_SPENT_PURCHASE_IMPEXP_WAREHOUSE_PROPERTY(amount, data, p2, p3)
  native.invoke(
    Type.Void, 2462, false,
    arg(Type.Int, amount),
    arg(Type.Any, data),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3)
  )
end

-- void NETWORK_SPENT_UPGRADE_IMPEXP_WAREHOUSE_PROPERTY(Any p0, Any p1, Any p2, Any p3) // 0x4128464231E3CA0B
function MONEY.NETWORK_SPENT_UPGRADE_IMPEXP_WAREHOUSE_PROPERTY(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2463, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_TRADE_IMPEXP_WAREHOUSE_PROPERTY(Any p0, Any p1, Any p2, Any p3) // 0x2FAB6614CE22E196
function MONEY.NETWORK_SPENT_TRADE_IMPEXP_WAREHOUSE_PROPERTY(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2464, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_ORDER_WAREHOUSE_VEHICLE(Any p0, Any p1, Any p2, Any p3) // 0x05F04155A226FBBF
function MONEY.NETWORK_SPENT_ORDER_WAREHOUSE_VEHICLE(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2465, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_ORDER_BODYGUARD_VEHICLE(Any p0, Any p1, Any p2, Any p3) // 0xE8B0B270B6E7C76E
function MONEY.NETWORK_SPENT_ORDER_BODYGUARD_VEHICLE(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2466, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_JUKEBOX(Any p0, Any p1, Any p2, Any p3) // 0x5BCDE0F640C773D2
function MONEY.NETWORK_SPENT_JUKEBOX(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2467, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_PURCHASE_CLUB_HOUSE(Any p0, Any p1, Any p2, Any p3) // 0x998E18CEB44487FC
function MONEY.NETWORK_SPENT_PURCHASE_CLUB_HOUSE(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2468, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_UPGRADE_CLUB_HOUSE(Any p0, Any p1, Any p2, Any p3) // 0xFA07759E6FDDD7CF
function MONEY.NETWORK_SPENT_UPGRADE_CLUB_HOUSE(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2469, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_PURCHASE_BUSINESS_PROPERTY(Any p0, Any p1, Any p2, Any p3) // 0x6FD97159FE3C971A
function MONEY.NETWORK_SPENT_PURCHASE_BUSINESS_PROPERTY(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2470, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_UPGRADE_BUSINESS_PROPERTY(Any p0, Any p1, Any p2, Any p3) // 0x675D19C6067CAE08
function MONEY.NETWORK_SPENT_UPGRADE_BUSINESS_PROPERTY(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2471, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_TRADE_BUSINESS_PROPERTY(Any p0, Any p1, Any p2, Any p3) // 0xA51B086B0B2C0F7A
function MONEY.NETWORK_SPENT_TRADE_BUSINESS_PROPERTY(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2472, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_MC_ABILITY(Any p0, Any p1, Any p2, Any p3, Any p4) // 0xD7CCCBA28C4ECAF0
function MONEY.NETWORK_SPENT_MC_ABILITY(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 2473, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4)
  )
end

-- void NETWORK_SPENT_PAY_BUSINESS_SUPPLIES(Any p0, Any p1, Any p2, Any p3) // 0x0035BB914316F1E3
function MONEY.NETWORK_SPENT_PAY_BUSINESS_SUPPLIES(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2474, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_CHANGE_APPEARANCE(Any p0, Any p1, Any p2) // 0x5F456788B05FAEAC
function MONEY.NETWORK_SPENT_CHANGE_APPEARANCE(p0, p1, p2)
  native.invoke(
    Type.Void, 2475, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void NETWORK_SPENT_VEHICLE_EXPORT_MODS(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9) // 0xA75CCF58A60A5FD1
function MONEY.NETWORK_SPENT_VEHICLE_EXPORT_MODS(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
  native.invoke(
    Type.Void, 2476, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5),
    arg(Type.Any, p6),
    arg(Type.Any, p7),
    arg(Type.Any, p8),
    arg(Type.Any, p9)
  )
end

-- void NETWORK_SPENT_PURCHASE_OFFICE_GARAGE(Any p0, Any p1, Any p2, Any p3) // 0xB4C2EC463672474E
function MONEY.NETWORK_SPENT_PURCHASE_OFFICE_GARAGE(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2477, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_UPGRADE_OFFICE_GARAGE(Any p0, Any p1, Any p2, Any p3) // 0x2AFC2D19B50797F2
function MONEY.NETWORK_SPENT_UPGRADE_OFFICE_GARAGE(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2478, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_IMPORT_EXPORT_REPAIR(Any p0, Any p1, Any p2) // 0xC1952F3773BA18FE
function MONEY.NETWORK_SPENT_IMPORT_EXPORT_REPAIR(p0, p1, p2)
  native.invoke(
    Type.Void, 2479, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void NETWORK_SPENT_PURCHASE_HANGAR(Any p0, Any p1, Any p2, Any p3) // 0xCCB339CC970452DA
function MONEY.NETWORK_SPENT_PURCHASE_HANGAR(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2480, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_UPGRADE_HANGAR(Any p0, Any p1, Any p2, Any p3) // 0x615EB504B0788DAF
function MONEY.NETWORK_SPENT_UPGRADE_HANGAR(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2481, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_HANGAR_UTILITY_CHARGES(int amount, BOOL p1, BOOL p2) // 0xB18AC2ECBB15CB6A
function MONEY.NETWORK_SPENT_HANGAR_UTILITY_CHARGES(amount, p1, p2)
  native.invoke(
    Type.Void, 2482, false,
    arg(Type.Int, amount),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void NETWORK_SPENT_HANGAR_STAFF_CHARGES(int amount, BOOL p1, BOOL p2) // 0xB1F1346FD57685D7
function MONEY.NETWORK_SPENT_HANGAR_STAFF_CHARGES(amount, p1, p2)
  native.invoke(
    Type.Void, 2483, false,
    arg(Type.Int, amount),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void NETWORK_SPENT_BUY_TRUCK(Any p0, Any p1, Any p2, Any p3) // 0xAC272C0AE01B4BD8
function MONEY.NETWORK_SPENT_BUY_TRUCK(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2484, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_UPGRADE_TRUCK(Any p0, Any p1, Any p2, Any p3) // 0x365E877C61D6988B
function MONEY.NETWORK_SPENT_UPGRADE_TRUCK(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2485, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_BUY_BUNKER(Any p0, Any p1, Any p2, Any p3) // 0x12D148D26538D0F9
function MONEY.NETWORK_SPENT_BUY_BUNKER(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2486, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_UPRADE_BUNKER(Any p0, Any p1, Any p2, Any p3) // 0x0C82D21A77C22D49
function MONEY.NETWORK_SPENT_UPRADE_BUNKER(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2487, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_EARN_FROM_SELL_BUNKER(int amount, Hash bunkerHash) // 0x9251B6ABF2D0A5B4
function MONEY.NETWORK_EARN_FROM_SELL_BUNKER(amount, bunkerHash)
  native.invoke(
    Type.Void, 2488, false,
    arg(Type.Int, amount),
    arg(Type.Hash, bunkerHash)
  )
end

-- void NETWORK_SPENT_BALLISTIC_EQUIPMENT(int amount, BOOL p1, BOOL p2) // 0x5D97630A8A0EF123
function MONEY.NETWORK_SPENT_BALLISTIC_EQUIPMENT(amount, p1, p2)
  native.invoke(
    Type.Void, 2489, false,
    arg(Type.Int, amount),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void NETWORK_EARN_RDR_BONUS(int amount, Any p1) // 0x7A5349B773584675
function MONEY.NETWORK_EARN_RDR_BONUS(amount, p1)
  native.invoke(
    Type.Void, 2490, false,
    arg(Type.Int, amount),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_EARN_WAGE_PAYMENT(int amount, Any p1) // 0x35F8DA0E8A31EF1B
function MONEY.NETWORK_EARN_WAGE_PAYMENT(amount, p1)
  native.invoke(
    Type.Void, 2491, false,
    arg(Type.Int, amount),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_EARN_WAGE_PAYMENT_BONUS(int amount) // 0x005ACA7100BD101D
function MONEY.NETWORK_EARN_WAGE_PAYMENT_BONUS(amount)
  native.invoke(
    Type.Void, 2492, false,
    arg(Type.Int, amount)
  )
end

-- void NETWORK_SPENT_BUY_BASE(Any p0, Any p1, Any p2, Any p3) // 0x4EA3F425C7744D21
function MONEY.NETWORK_SPENT_BUY_BASE(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2493, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_UPGRADE_BASE(Any p0, Any p1, Any p2, Any p3) // 0x3DD3F33A5D55EA6F
function MONEY.NETWORK_SPENT_UPGRADE_BASE(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2494, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_BUY_TILTROTOR(Any p0, Any p1, Any p2, Any p3) // 0x0CCE73BC7A11E885
function MONEY.NETWORK_SPENT_BUY_TILTROTOR(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2495, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_UPGRADE_TILTROTOR(Any p0, Any p1, Any p2, Any p3) // 0x165E135D6DFA2907
function MONEY.NETWORK_SPENT_UPGRADE_TILTROTOR(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2496, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_EMPLOY_ASSASSINS(Any p0, Any p1, Any p2, Any p3) // 0x5BBBD92186E1F1C5
function MONEY.NETWORK_SPENT_EMPLOY_ASSASSINS(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2497, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPEND_GANGOPS_CANNON(Any p0, Any p1, Any p2, Any p3) // 0x771ADB0E7635B7BF
function MONEY.NETWORK_SPEND_GANGOPS_CANNON(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2498, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPEND_GANGOPS_SKIP_MISSION(Any p0, Any p1, Any p2, Any p3) // 0xDA947AE8880D5C18
function MONEY.NETWORK_SPEND_GANGOPS_SKIP_MISSION(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2499, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPEND_CASINO_HEIST_SKIP_MISSION(Any p0, Any p1, Any p2, Any p3) // 0x487009DD91D93429
function MONEY.NETWORK_SPEND_CASINO_HEIST_SKIP_MISSION(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2500, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_EARN_SELL_BASE(int amount, Hash baseNameHash) // 0x0E1E2FF3F4EC11AA
function MONEY.NETWORK_EARN_SELL_BASE(amount, baseNameHash)
  native.invoke(
    Type.Void, 2501, false,
    arg(Type.Int, amount),
    arg(Type.Hash, baseNameHash)
  )
end

-- void NETWORK_EARN_TARGET_REFUND(int amount, int p1) // 0x5B669CF2299A271F
function MONEY.NETWORK_EARN_TARGET_REFUND(amount, p1)
  native.invoke(
    Type.Void, 2502, false,
    arg(Type.Int, amount),
    arg(Type.Int, p1)
  )
end

-- void NETWORK_EARN_GANGOPS_WAGES(int amount, int p1) // 0x2DCB19ABAB0380A8
function MONEY.NETWORK_EARN_GANGOPS_WAGES(amount, p1)
  native.invoke(
    Type.Void, 2503, false,
    arg(Type.Int, amount),
    arg(Type.Int, p1)
  )
end

-- void NETWORK_EARN_GANGOPS_WAGES_BONUS(int amount, int p1) // 0x15BB2A5C757EB91F
function MONEY.NETWORK_EARN_GANGOPS_WAGES_BONUS(amount, p1)
  native.invoke(
    Type.Void, 2504, false,
    arg(Type.Int, amount),
    arg(Type.Int, p1)
  )
end

-- void NETWORK_EARN_DAR_CHALLENGE(int amount, Any p1) // 0xCAC672087B4A24AB
function MONEY.NETWORK_EARN_DAR_CHALLENGE(amount, p1)
  native.invoke(
    Type.Void, 2505, false,
    arg(Type.Int, amount),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_EARN_DOOMSDAY_FINALE_BONUS(int amount, Hash vehicleHash) // 0x128A747F4A230952
function MONEY.NETWORK_EARN_DOOMSDAY_FINALE_BONUS(amount, vehicleHash)
  native.invoke(
    Type.Void, 2506, false,
    arg(Type.Int, amount),
    arg(Type.Hash, vehicleHash)
  )
end

-- void NETWORK_EARN_GANGOPS_AWARD(int amount, const char* p1, Any p2) // 0xA9A31475F530DFDA
function MONEY.NETWORK_EARN_GANGOPS_AWARD(amount, p1, p2)
  native.invoke(
    Type.Void, 2507, false,
    arg(Type.Int, amount),
    arg(Type.String, p1),
    arg(Type.Any, p2)
  )
end

-- void NETWORK_EARN_GANGOPS_ELITE(int amount, const char* p1, int actIndex) // 0x2597A0D4A4FC2C77
function MONEY.NETWORK_EARN_GANGOPS_ELITE(amount, p1, actIndex)
  native.invoke(
    Type.Void, 2508, false,
    arg(Type.Int, amount),
    arg(Type.String, p1),
    arg(Type.Int, actIndex)
  )
end

-- void NETWORK_SERVICE_EARN_GANGOPS_RIVAL_DELIVERY(int earnedMoney) // 0x1B882107C23A9022
function MONEY.NETWORK_SERVICE_EARN_GANGOPS_RIVAL_DELIVERY(earnedMoney)
  native.invoke(
    Type.Void, 2509, false,
    arg(Type.Int, earnedMoney)
  )
end

-- void NETWORK_SPEND_GANGOPS_START_STRAND(int type, int amount, BOOL p2, BOOL p3) // 0xA19EC0786E326E06
function MONEY.NETWORK_SPEND_GANGOPS_START_STRAND(type, amount, p2, p3)
  native.invoke(
    Type.Void, 2510, false,
    arg(Type.Int, type),
    arg(Type.Int, amount),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3)
  )
end

-- void NETWORK_SPEND_GANGOPS_TRIP_SKIP(int amount, BOOL p1, BOOL p2) // 0x5ECE6FD7B4EC8D6A
function MONEY.NETWORK_SPEND_GANGOPS_TRIP_SKIP(amount, p1, p2)
  native.invoke(
    Type.Void, 2511, false,
    arg(Type.Int, amount),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void NETWORK_EARN_GANGOPS_PREP_PARTICIPATION(int amount) // 0xED26584F6BDCBBFD
function MONEY.NETWORK_EARN_GANGOPS_PREP_PARTICIPATION(amount)
  native.invoke(
    Type.Void, 2512, false,
    arg(Type.Int, amount)
  )
end

-- void NETWORK_EARN_GANGOPS_SETUP(int amount, const char* p1) // 0xA9160796D47A2CF8
function MONEY.NETWORK_EARN_GANGOPS_SETUP(amount, p1)
  native.invoke(
    Type.Void, 2513, false,
    arg(Type.Int, amount),
    arg(Type.String, p1)
  )
end

-- void NETWORK_EARN_GANGOPS_FINALE(int amount, const char* p1) // 0x1C121FC9545E0D52
function MONEY.NETWORK_EARN_GANGOPS_FINALE(amount, p1)
  native.invoke(
    Type.Void, 2514, false,
    arg(Type.Int, amount),
    arg(Type.String, p1)
  )
end

-- void NETWORK_SPEND_GANGOPS_REPAIR_COST(Any p0, Any p1, Any p2) // 0x2A7CEC72C3443BCC
function MONEY.NETWORK_SPEND_GANGOPS_REPAIR_COST(p0, p1, p2)
  native.invoke(
    Type.Void, 2515, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void NETWORK_EARN_NIGHTCLUB(Any p0) // 0xE0F82D68C7039158
function MONEY.NETWORK_EARN_NIGHTCLUB(p0)
  native.invoke(
    Type.Void, 2516, false,
    arg(Type.Any, p0)
  )
end

-- void NETWORK_EARN_NIGHTCLUB_DANCING(Any p0) // 0xB4DEAE67F35E2ACD
function MONEY.NETWORK_EARN_NIGHTCLUB_DANCING(p0)
  native.invoke(
    Type.Void, 2517, false,
    arg(Type.Any, p0)
  )
end

-- void NETWORK_EARN_BB_EVENT_BONUS(int amount) // 0xFDD8D2440DAF1590
function MONEY.NETWORK_EARN_BB_EVENT_BONUS(amount)
  native.invoke(
    Type.Void, 2518, false,
    arg(Type.Int, amount)
  )
end

-- void NETWORK_SPENT_PURCHASE_HACKER_TRUCK(Any p0, Any p1, Any p2, Any p3) // 0x2A93C46AAB1EACC9
function MONEY.NETWORK_SPENT_PURCHASE_HACKER_TRUCK(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2519, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_UPGRADE_HACKER_TRUCK(Any p0, Any p1, Any p2, Any p3) // 0x226C284C830D0CA8
function MONEY.NETWORK_SPENT_UPGRADE_HACKER_TRUCK(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2520, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_EARN_HACKER_TRUCK(Any p0, int amount, Any p2, Any p3) // 0xE8815FE993896AD3
function MONEY.NETWORK_EARN_HACKER_TRUCK(p0, amount, p2, p3)
  native.invoke(
    Type.Void, 2521, false,
    arg(Type.Any, p0),
    arg(Type.Int, amount),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_PURCHASE_NIGHTCLUB_AND_WAREHOUSE(Any p0, Any p1, Any p2, Any p3) // 0xED76D195E6E3BF7F
function MONEY.NETWORK_SPENT_PURCHASE_NIGHTCLUB_AND_WAREHOUSE(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2522, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_UPGRADE_NIGHTCLUB_AND_WAREHOUSE(Any p0, Any p1, Any p2, Any p3) // 0x1DC9B749E7AE282B
function MONEY.NETWORK_SPENT_UPGRADE_NIGHTCLUB_AND_WAREHOUSE(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2523, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_EARN_NIGHTCLUB_AND_WAREHOUSE(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) // 0xC6E74CF8C884C880
function MONEY.NETWORK_EARN_NIGHTCLUB_AND_WAREHOUSE(p0, p1, p2, p3, p4, p5, p6)
  native.invoke(
    Type.Void, 2524, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5),
    arg(Type.Any, p6)
  )
end

-- void NETWORK_SPEND_NIGHTCLUB_AND_WAREHOUSE(Any p0, Any p1, Any p2, Any p3) // 0x65482BFD0923C8A1
function MONEY.NETWORK_SPEND_NIGHTCLUB_AND_WAREHOUSE(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2525, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPENT_RDR_HATCHET_BONUS(int amount, BOOL p1, BOOL p2) // 0xE284D46FFDB82E36
function MONEY.NETWORK_SPENT_RDR_HATCHET_BONUS(amount, p1, p2)
  native.invoke(
    Type.Void, 2526, false,
    arg(Type.Int, amount),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void NETWORK_SPENT_NIGHTCLUB_ENTRY_FEE(Player player, int amount, Any p1, BOOL p2, BOOL p3) // 0x876056684281655D
function MONEY.NETWORK_SPENT_NIGHTCLUB_ENTRY_FEE(player, amount, p1, p2, p3)
  native.invoke(
    Type.Void, 2527, false,
    arg(Type.Player, player),
    arg(Type.Int, amount),
    arg(Type.Any, p1),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3)
  )
end

-- void NETWORK_SPEND_NIGHTCLUB_BAR_DRINK(int amount, Any p1, BOOL p2, BOOL p3) // 0xDD21B016E4289465
function MONEY.NETWORK_SPEND_NIGHTCLUB_BAR_DRINK(amount, p1, p2, p3)
  native.invoke(
    Type.Void, 2528, false,
    arg(Type.Int, amount),
    arg(Type.Any, p1),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3)
  )
end

-- void NETWORK_SPEND_BOUNTY_HUNTER_MISSION(int amount, BOOL p1, BOOL p2) // 0x1BEA0CD93470BB1F
function MONEY.NETWORK_SPEND_BOUNTY_HUNTER_MISSION(amount, p1, p2)
  native.invoke(
    Type.Void, 2529, false,
    arg(Type.Int, amount),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void NETWORK_SPENT_REHIRE_DJ(int amount, Any p1, BOOL p2, BOOL p3) // 0xF6C8A544E4CF14FC
function MONEY.NETWORK_SPENT_REHIRE_DJ(amount, p1, p2, p3)
  native.invoke(
    Type.Void, 2530, false,
    arg(Type.Int, amount),
    arg(Type.Any, p1),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3)
  )
end

-- void NETWORK_SPENT_ARENA_JOIN_SPECTATOR(int amount, Any p1, BOOL p2, BOOL p3) // 0x14EAEA58F93B55AF
function MONEY.NETWORK_SPENT_ARENA_JOIN_SPECTATOR(amount, p1, p2, p3)
  native.invoke(
    Type.Void, 2531, false,
    arg(Type.Int, amount),
    arg(Type.Any, p1),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3)
  )
end

-- void NETWORK_EARN_ARENA_SKILL_LEVEL_PROGRESSION(int amount, Any p1) // 0xE08256F972C7BB2C
function MONEY.NETWORK_EARN_ARENA_SKILL_LEVEL_PROGRESSION(amount, p1)
  native.invoke(
    Type.Void, 2532, false,
    arg(Type.Int, amount),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_EARN_ARENA_CAREER_PROGRESSION(int amount, Any p1) // 0x0F99F70C61F14619
function MONEY.NETWORK_EARN_ARENA_CAREER_PROGRESSION(amount, p1)
  native.invoke(
    Type.Void, 2533, false,
    arg(Type.Int, amount),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_SPEND_MAKE_IT_RAIN(int amount, BOOL p1, BOOL p2) // 0xE5F5A060439C2F5D
function MONEY.NETWORK_SPEND_MAKE_IT_RAIN(amount, p1, p2)
  native.invoke(
    Type.Void, 2534, false,
    arg(Type.Int, amount),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void NETWORK_SPEND_BUY_ARENA(int amount, BOOL p1, BOOL p2, const char* p3) // 0x40D5DA9550B7CB46
function MONEY.NETWORK_SPEND_BUY_ARENA(amount, p1, p2, p3)
  native.invoke(
    Type.Void, 2535, false,
    arg(Type.Int, amount),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.String, p3)
  )
end

-- void NETWORK_SPEND_UPGRADE_ARENA(int amount, BOOL p1, BOOL p2, const char* p3) // 0x037ABB06825D7AB1
function MONEY.NETWORK_SPEND_UPGRADE_ARENA(amount, p1, p2, p3)
  native.invoke(
    Type.Void, 2536, false,
    arg(Type.Int, amount),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.String, p3)
  )
end

-- void NETWORK_SPEND_ARENA_SPECTATOR_BOX(int amount, int type, BOOL p2, BOOL p3) // 0x7049BF858601DC0F
--[[
type either, 1 for cam spectate, 2 for drone
--]]
function MONEY.NETWORK_SPEND_ARENA_SPECTATOR_BOX(amount, type, p2, p3)
  native.invoke(
    Type.Void, 2537, false,
    arg(Type.Int, amount),
    arg(Type.Int, type),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3)
  )
end

-- void NETWORK_SPEND_SPIN_THE_WHEEL_PAYMENT(int amount, Any p1, BOOL p2) // 0x9A5BD1D0000B339C
function MONEY.NETWORK_SPEND_SPIN_THE_WHEEL_PAYMENT(amount, p1, p2)
  native.invoke(
    Type.Void, 2538, false,
    arg(Type.Int, amount),
    arg(Type.Any, p1),
    arg(Type.Bool, p2)
  )
end

-- void NETWORK_EARN_SPIN_THE_WHEEL_CASH(int amount) // 0x676C48776CACBB5A
function MONEY.NETWORK_EARN_SPIN_THE_WHEEL_CASH(amount)
  native.invoke(
    Type.Void, 2539, false,
    arg(Type.Int, amount)
  )
end

-- void NETWORK_SPEND_ARENA_PREMIUM(int amount, BOOL p1, BOOL p2) // 0x619496D837EFD920
function MONEY.NETWORK_SPEND_ARENA_PREMIUM(amount, p1, p2)
  native.invoke(
    Type.Void, 2540, false,
    arg(Type.Int, amount),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void NETWORK_EARN_ARENA_WAR(int amount, Any p1, Any p2, Any p3) // 0x631F1CB8FB4130AA
function MONEY.NETWORK_EARN_ARENA_WAR(amount, p1, p2, p3)
  native.invoke(
    Type.Void, 2541, false,
    arg(Type.Int, amount),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_EARN_ARENA_WAR_ASSASSINATE_TARGET(int amount) // 0x5E7AE8AABE8B7C0D
function MONEY.NETWORK_EARN_ARENA_WAR_ASSASSINATE_TARGET(amount)
  native.invoke(
    Type.Void, 2542, false,
    arg(Type.Int, amount)
  )
end

-- void NETWORK_EARN_ARENA_WAR_EVENT_CARGO(int amount) // 0xA82959062361B259
function MONEY.NETWORK_EARN_ARENA_WAR_EVENT_CARGO(amount)
  native.invoke(
    Type.Void, 2543, false,
    arg(Type.Int, amount)
  )
end

-- void NETWORK_EARN_RC_TIME_TRIAL(int amount) // 0xDFF49EE984E7AAE8
function MONEY.NETWORK_EARN_RC_TIME_TRIAL(amount)
  native.invoke(
    Type.Void, 2544, false,
    arg(Type.Int, amount)
  )
end

-- void NETWORK_EARN_DAILY_OBJECTIVE_EVENT(int amount) // 0x5128DF14A5BB86FC
function MONEY.NETWORK_EARN_DAILY_OBJECTIVE_EVENT(amount)
  native.invoke(
    Type.Void, 2545, false,
    arg(Type.Int, amount)
  )
end

-- void NETWORK_SPEND_CASINO_MEMBERSHIP(int amount, BOOL p1, BOOL p2, int p3) // 0xFBBE0570EDF39D46
function MONEY.NETWORK_SPEND_CASINO_MEMBERSHIP(amount, p1, p2, p3)
  native.invoke(
    Type.Void, 2546, false,
    arg(Type.Int, amount),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Int, p3)
  )
end

-- void NETWORK_SPEND_BUY_CASINO(int amount, BOOL p1, BOOL p2, Any* data) // 0x34A6FC4D06C4DA0F
function MONEY.NETWORK_SPEND_BUY_CASINO(amount, p1, p2, data)
  native.invoke(
    Type.Void, 2547, false,
    arg(Type.Int, amount),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Any, data)
  )
end

-- void NETWORK_SPEND_UPGRADE_CASINO(int amount, BOOL p1, BOOL p2, Any* data) // 0x4740D62BC1B4EBEA
function MONEY.NETWORK_SPEND_UPGRADE_CASINO(amount, p1, p2, data)
  native.invoke(
    Type.Void, 2548, false,
    arg(Type.Int, amount),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Any, data)
  )
end

-- void NETWORK_SPEND_CASINO_GENERIC(int amount, Any p1, Any p2, Any p3, Any p4) // 0x88BF9B612B84D3C3
function MONEY.NETWORK_SPEND_CASINO_GENERIC(amount, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 2549, false,
    arg(Type.Int, amount),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4)
  )
end

-- void NETWORK_EARN_CASINO_TIME_TRIAL_WIN(int amount) // 0x0819DB99FD2FBBD8
function MONEY.NETWORK_EARN_CASINO_TIME_TRIAL_WIN(amount)
  native.invoke(
    Type.Void, 2550, false,
    arg(Type.Int, amount)
  )
end

-- void NETWORK_EARN_COLLECTABLES_ACTION_FIGURES(int amount) // 0x5517F90043466049
function MONEY.NETWORK_EARN_COLLECTABLES_ACTION_FIGURES(amount)
  native.invoke(
    Type.Void, 2551, false,
    arg(Type.Int, amount)
  )
end

-- void NETWORK_EARN_CASINO_COLLECTABLE_COMPLETED_COLLECTION(int amount) // 0x83AD64F53F4E9483
function MONEY.NETWORK_EARN_CASINO_COLLECTABLE_COMPLETED_COLLECTION(amount)
  native.invoke(
    Type.Void, 2552, false,
    arg(Type.Int, amount)
  )
end

-- void NETWORK_EARN_SELL_PRIZE_VEHICLE(int amount, Any p1, Any p2) // 0x8BCB27A057DF7B7F
function MONEY.NETWORK_EARN_SELL_PRIZE_VEHICLE(amount, p1, p2)
  native.invoke(
    Type.Void, 2553, false,
    arg(Type.Int, amount),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void NETWORK_EARN_CASINO_MISSION_REWARD(int amount) // 0x566FD402B25787DE
function MONEY.NETWORK_EARN_CASINO_MISSION_REWARD(amount)
  native.invoke(
    Type.Void, 2554, false,
    arg(Type.Int, amount)
  )
end

-- void NETWORK_EARN_CASINO_STORY_MISSION_REWARD(int amount) // 0xAC95ED552157E092
function MONEY.NETWORK_EARN_CASINO_STORY_MISSION_REWARD(amount)
  native.invoke(
    Type.Void, 2555, false,
    arg(Type.Int, amount)
  )
end

-- void NETWORK_EARN_CASINO_MISSION_PARTICIPATION(int amount) // 0x09E8F18641BE2575
function MONEY.NETWORK_EARN_CASINO_MISSION_PARTICIPATION(amount)
  native.invoke(
    Type.Void, 2556, false,
    arg(Type.Int, amount)
  )
end

-- void NETWORK_EARN_CASINO_AWARD(int amount, Hash hash) // 0x973A9781A34F8DEB
function MONEY.NETWORK_EARN_CASINO_AWARD(amount, hash)
  native.invoke(
    Type.Void, 2557, false,
    arg(Type.Int, amount),
    arg(Type.Hash, hash)
  )
end

-- void NETWORK_SPEND_BUY_ARCADE(Any p0, Any p1, Any p2, Any p3) // 0x870289A558348378
function MONEY.NETWORK_SPEND_BUY_ARCADE(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2558, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPEND_UPGRADE_ARCADE(Any p0, Any p1, Any p2, Any p3) // 0x5574637681911FDA
function MONEY.NETWORK_SPEND_UPGRADE_ARCADE(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2559, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPEND_CASINO_HEIST(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9, Any p10) // 0xD30E8392F407C328
function MONEY.NETWORK_SPEND_CASINO_HEIST(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10)
  native.invoke(
    Type.Void, 2560, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5),
    arg(Type.Any, p6),
    arg(Type.Any, p7),
    arg(Type.Any, p8),
    arg(Type.Any, p9),
    arg(Type.Any, p10)
  )
end

-- void NETWORK_SPEND_ARCADE_MGMT(Any p0, Any p1, Any p2, Any p3, Any p4) // 0xB5B58E24868CB09E
function MONEY.NETWORK_SPEND_ARCADE_MGMT(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 2561, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4)
  )
end

-- void NETWORK_SPEND_PLAY_ARCADE(Any p0, Any p1, Any p2, Any p3, Any p4) // 0xEAD3D81F2C3A1458
function MONEY.NETWORK_SPEND_PLAY_ARCADE(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 2562, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4)
  )
end

-- void NETWORK_SPEND_ARCADE(Any p0, Any p1, Any p2, Any p3, Any p4) // 0x43AA7FAC4E6D6687
function MONEY.NETWORK_SPEND_ARCADE(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 2563, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4)
  )
end

-- void NETWORK_EARN_CASINO_HEIST(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) // 0x72E7C7B9615FA3C3
function MONEY.NETWORK_EARN_CASINO_HEIST(p0, p1, p2, p3, p4, p5, p6)
  native.invoke(
    Type.Void, 2564, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5),
    arg(Type.Any, p6)
  )
end

-- void NETWORK_EARN_UPGRADE_ARCADE(Any p0, Any p1, Any p2) // 0x4C3B75694F7E0D9C
function MONEY.NETWORK_EARN_UPGRADE_ARCADE(p0, p1, p2)
  native.invoke(
    Type.Void, 2565, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void NETWORK_EARN_ARCADE(Any p0, Any p1, Any p2, Any p3, Any p4) // 0xD29334ED1A256DBF
function MONEY.NETWORK_EARN_ARCADE(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 2566, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4)
  )
end

-- void NETWORK_EARN_COLLECTABLES(Any p0, Any p1, Any p2) // 0xA95CFB4E02390842
function MONEY.NETWORK_EARN_COLLECTABLES(p0, p1, p2)
  native.invoke(
    Type.Void, 2567, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void NETWORK_EARN_CHALLENGE(int amount, Any p1, Any p2) // 0x0DD362F14F18942A
function MONEY.NETWORK_EARN_CHALLENGE(amount, p1, p2)
  native.invoke(
    Type.Void, 2568, false,
    arg(Type.Int, amount),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void NETWORK_EARN_CASINO_HEIST_AWARDS(Any p0, Any p1, Any p2, Any p3, Any p4) // 0x3EC7471E6909798A
function MONEY.NETWORK_EARN_CASINO_HEIST_AWARDS(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 2569, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4)
  )
end

-- void NETWORK_EARN_COLLECTABLE_ITEM(int amount, Any p1) // 0x84FF63BD4966F33D
function MONEY.NETWORK_EARN_COLLECTABLE_ITEM(amount, p1)
  native.invoke(
    Type.Void, 2570, false,
    arg(Type.Int, amount),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_EARN_COLLECTABLE_COMPLETED_COLLECTION(int amount, Any p1) // 0x5C9B198AF5A54FA6
function MONEY.NETWORK_EARN_COLLECTABLE_COMPLETED_COLLECTION(amount, p1)
  native.invoke(
    Type.Void, 2571, false,
    arg(Type.Int, amount),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_EARN_YATCH_MISSION(int amount, Any p1) // 0xDE68E30D89F97132
function MONEY.NETWORK_EARN_YATCH_MISSION(amount, p1)
  native.invoke(
    Type.Void, 2572, false,
    arg(Type.Int, amount),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_EARN_DISPATCH_CALL(int amount, Any p1) // 0xE2E244AB823B4483
function MONEY.NETWORK_EARN_DISPATCH_CALL(amount, p1)
  native.invoke(
    Type.Void, 2573, false,
    arg(Type.Int, amount),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_SPEND_BEACH_PARTY(Any p0) // 0x54ABA22FA6371249
function MONEY.NETWORK_SPEND_BEACH_PARTY(p0)
  native.invoke(
    Type.Void, 2574, false,
    arg(Type.Any, p0)
  )
end

-- void NETWORK_SPEND_SUBMARINE(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) // 0x6C8BC1488527AAAB
function MONEY.NETWORK_SPEND_SUBMARINE(p0, p1, p2, p3, p4, p5)
  native.invoke(
    Type.Void, 2575, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5)
  )
end

-- void NETWORK_SPEND_CASINO_CLUB(int amount1, Any p1, BOOL p2, Any p3, int p4, int p5, int p6, int amount2, Any p8) // 0xC991C255AA6D90B2
function MONEY.NETWORK_SPEND_CASINO_CLUB(amount1, p1, p2, p3, p4, p5, p6, amount2, p8)
  native.invoke(
    Type.Void, 2576, false,
    arg(Type.Int, amount1),
    arg(Type.Any, p1),
    arg(Type.Bool, p2),
    arg(Type.Any, p3),
    arg(Type.Int, p4),
    arg(Type.Int, p5),
    arg(Type.Int, p6),
    arg(Type.Int, amount2),
    arg(Type.Any, p8)
  )
end

-- void NETWORK_SPEND_BUY_SUB(Any p0, Any p1, Any p2, Any p3) // 0x90CD7C6871FBF1B4
function MONEY.NETWORK_SPEND_BUY_SUB(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2577, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPEND_UPGRADE_SUB(Any p0, Any p1, Any p2, Any p3) // 0x89049A84065CE68E
function MONEY.NETWORK_SPEND_UPGRADE_SUB(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2578, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPEND_ISLAND_HEIST(Any p0, Any p1, Any p2, Any p3) // 0xE86689E5F82DE429
function MONEY.NETWORK_SPEND_ISLAND_HEIST(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2579, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_EARN_ISLAND_HEIST(int amount1, Any p1, Any p2, Any p3, int amount2, int p5) // 0xD21D111C46BA9F15
function MONEY.NETWORK_EARN_ISLAND_HEIST(amount1, p1, p2, p3, amount2, p5)
  native.invoke(
    Type.Void, 2580, false,
    arg(Type.Int, amount1),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Int, amount2),
    arg(Type.Int, p5)
  )
end

-- void NETWORK_EARN_BEACH_PARTY_LOST_FOUND(Any p0, Any p1, Any p2) // 0xA51338E0DCCD4065
function MONEY.NETWORK_EARN_BEACH_PARTY_LOST_FOUND(p0, p1, p2)
  native.invoke(
    Type.Void, 2581, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void NETWORK_EARN_FROM_ISLAND_HEIST_DJ_MISSION(Any p0, Any p1) // 0xE2BB399D90942091
function MONEY.NETWORK_EARN_FROM_ISLAND_HEIST_DJ_MISSION(p0, p1)
  native.invoke(
    Type.Void, 2582, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_SPEND_CAR_CLUB_MEMBERSHIP(int amount1, Any p1, Any p2, int amount2, Any p4) // 0x1464E17207CD36E2
function MONEY.NETWORK_SPEND_CAR_CLUB_MEMBERSHIP(amount1, p1, p2, amount2, p4)
  native.invoke(
    Type.Void, 2583, false,
    arg(Type.Int, amount1),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Int, amount2),
    arg(Type.Any, p4)
  )
end

-- void NETWORK_SPEND_CAR_CLUB_BAR(Any p0, BOOL p1, BOOL p2, Any p3) // 0x925227803A0EAA1B
function MONEY.NETWORK_SPEND_CAR_CLUB_BAR(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2584, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPEND_AUTOSHOP_MODIFY(Any p0, Any p1, Any p2, Any p3, Any p4) // 0x9BEA350D7C48061B
function MONEY.NETWORK_SPEND_AUTOSHOP_MODIFY(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 2585, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4)
  )
end

-- void NETWORK_SPEND_CAR_CLUB_TAKEOVER(Any p0, Any p1, Any p2, Any p3) // 0xD1E46824E6FB92B5
function MONEY.NETWORK_SPEND_CAR_CLUB_TAKEOVER(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2586, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPEND_BUY_AUTOSHOP(Any p0, Any p1, Any p2, Any p3) // 0xEEB7E5D1FEB20869
function MONEY.NETWORK_SPEND_BUY_AUTOSHOP(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2587, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPEND_UPGRADE_AUTOSHOP(Any p0, Any p1, Any p2, Any p3) // 0xDD829AA198FDC46C
function MONEY.NETWORK_SPEND_UPGRADE_AUTOSHOP(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2588, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_EARN_AUTOSHOP_BUSINESS(Any p0, Any p1, Any p2) // 0x36A7FD5A7194B03E
function MONEY.NETWORK_EARN_AUTOSHOP_BUSINESS(p0, p1, p2)
  native.invoke(
    Type.Void, 2589, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void NETWORK_EARN_AUTOSHOP_INCOME(Any p0, int p1) // 0xC66D1CF99ED7FE25
function MONEY.NETWORK_EARN_AUTOSHOP_INCOME(p0, p1)
  native.invoke(
    Type.Void, 2590, false,
    arg(Type.Any, p0),
    arg(Type.Int, p1)
  )
end

-- void NETWORK_EARN_CARCLUB_MEMBERSHIP(Any p0) // 0xBC6227792A188E2E
function MONEY.NETWORK_EARN_CARCLUB_MEMBERSHIP(p0)
  native.invoke(
    Type.Void, 2591, false,
    arg(Type.Any, p0)
  )
end

-- void NETWORK_EARN_DAILY_VEHICLE(Any p0, Any p1) // 0x533073E8A596008C
function MONEY.NETWORK_EARN_DAILY_VEHICLE(p0, p1)
  native.invoke(
    Type.Void, 2592, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_EARN_DAILY_VEHICLE_BONUS(Any p0) // 0xFE65AFE7308E32B2
function MONEY.NETWORK_EARN_DAILY_VEHICLE_BONUS(p0)
  native.invoke(
    Type.Void, 2593, false,
    arg(Type.Any, p0)
  )
end

-- void NETWORK_EARN_TUNER_AWARD(Any p0, Any p1, Any p2) // 0xB846F547D3792DF6
function MONEY.NETWORK_EARN_TUNER_AWARD(p0, p1, p2)
  native.invoke(
    Type.Void, 2594, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void NETWORK_EARN_TUNER_ROBBERY(Any p0, Any p1, Any p2, Any p3, Any p4) // 0xBCB266247193AC61
function MONEY.NETWORK_EARN_TUNER_ROBBERY(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 2595, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4)
  )
end

-- void NETWORK_EARN_UPGRADE_AUTOSHOP(Any p0, Any p1) // 0xC10322A8D3E061EE
function MONEY.NETWORK_EARN_UPGRADE_AUTOSHOP(p0, p1)
  native.invoke(
    Type.Void, 2596, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_SPEND_INTERACTION_MENU_ABILITY(Any p0, Any p1, Any p2, Any p3) // 0x93AA4165CB67E925
function MONEY.NETWORK_SPEND_INTERACTION_MENU_ABILITY(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2597, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPEND_SET_COMMON_FIELDS(Any p0, Any p1, Any p2, BOOL p3) // 0xB9F7A469460E7A4A
function MONEY.NETWORK_SPEND_SET_COMMON_FIELDS(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2598, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Bool, p3)
  )
end

-- void NETWORK_SPEND_SET_DISCOUNT(BOOL p0) // 0x7E2F4E8F44CAF4E0
function MONEY.NETWORK_SPEND_SET_DISCOUNT(p0)
  native.invoke(
    Type.Void, 2599, false,
    arg(Type.Bool, p0)
  )
end

-- void NETWORK_SPEND_BUY_AGENCY(Any p0, Any p1, Any p2, Any p3) // 0xEA8CD3C9B3C35884
function MONEY.NETWORK_SPEND_BUY_AGENCY(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2600, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPEND_UPGRADE_AGENCY(Any p0, Any p1, Any p2, Any p3) // 0x6CCA64840589A3B6
function MONEY.NETWORK_SPEND_UPGRADE_AGENCY(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2601, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPEND_AGENCY(Any p0, Any p1, Any p2, Any p3, Any p4) // 0x1B2120405080125C
function MONEY.NETWORK_SPEND_AGENCY(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 2602, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4)
  )
end

-- void NETWORK_SPEND_HIDDEN(Any p0, Any p1, Any p2, Any p3) // 0xBF8793B91EA094A7
function MONEY.NETWORK_SPEND_HIDDEN(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2603, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPEND_SOURCE_BIKE(Any p0, Any p1, Any p2, Any p3) // 0xD9DF467CBE4398C8
function MONEY.NETWORK_SPEND_SOURCE_BIKE(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2604, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPEND_COMP_SUV(Any p0, Any p1, Any p2, Any p3) // 0xD86581F9E7CDA383
function MONEY.NETWORK_SPEND_COMP_SUV(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2605, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPEND_SUV_FST_TRVL(int p0, BOOL p1, BOOL p2, Any p3) // 0x61A2DF64ED2D396E
function MONEY.NETWORK_SPEND_SUV_FST_TRVL(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2606, false,
    arg(Type.Int, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPEND_SUPPLY(Any p0, Any p1, Any p2, Any p3) // 0xEBD482B82ACB8BAD
function MONEY.NETWORK_SPEND_SUPPLY(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2607, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPEND_BIKE_SHOP(Any p0, Any p1, Any p2, Any p3) // 0x923AEA8E78F8DF0B
function MONEY.NETWORK_SPEND_BIKE_SHOP(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2608, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SPEND_VEHICLE_REQUESTED(Any p0, Any p1, Any p2, Any p3, Any p4) // 0x02D24A35A9CC3503
function MONEY.NETWORK_SPEND_VEHICLE_REQUESTED(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 2609, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4)
  )
end

-- void NETWORK_SPEND_GUNRUNNING(Any p0, Any p1, Any p2, Any p3) // 0x2CEB0E0BC2A77C05
function MONEY.NETWORK_SPEND_GUNRUNNING(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2610, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_EARN_AGENCY_SAFE(Any p0) // 0x663B4B9D11742A12
function MONEY.NETWORK_EARN_AGENCY_SAFE(p0)
  native.invoke(
    Type.Void, 2611, false,
    arg(Type.Any, p0)
  )
end

-- void NETWORK_EARN_AWARD_CONTRACT(Any p0, Any p1) // 0x146D4EB6D22A403F
function MONEY.NETWORK_EARN_AWARD_CONTRACT(p0, p1)
  native.invoke(
    Type.Void, 2612, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_EARN_AGENCY_CONTRACT(Any p0, Any p1) // 0x38482AD49CB905C7
function MONEY.NETWORK_EARN_AGENCY_CONTRACT(p0, p1)
  native.invoke(
    Type.Void, 2613, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_EARN_AWARD_PHONE(Any p0, Any p1) // 0x7397A115030F1BE3
function MONEY.NETWORK_EARN_AWARD_PHONE(p0, p1)
  native.invoke(
    Type.Void, 2614, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_EARN_AGENCY_PHONE(Any p0, Any p1, Any p2) // 0xE29F3D5FA63B1B82
function MONEY.NETWORK_EARN_AGENCY_PHONE(p0, p1, p2)
  native.invoke(
    Type.Void, 2615, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void NETWORK_EARN_AWARD_FIXER_MISSION(Any p0, Any p1) // 0x88D6C327D6C57C45
function MONEY.NETWORK_EARN_AWARD_FIXER_MISSION(p0, p1)
  native.invoke(
    Type.Void, 2616, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_EARN_FIXER_PREP(Any p0, Any p1) // 0x6283E5DE4C4460C6
function MONEY.NETWORK_EARN_FIXER_PREP(p0, p1)
  native.invoke(
    Type.Void, 2617, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_EARN_FIXER_FINALE(Any p0, Any p1) // 0xBA154373C5FE51E8
function MONEY.NETWORK_EARN_FIXER_FINALE(p0, p1)
  native.invoke(
    Type.Void, 2618, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_EARN_FIXER_AGENCY_SHORT_TRIP(Any p0, Any p1) // 0xF4A8E57460BF2037
function MONEY.NETWORK_EARN_FIXER_AGENCY_SHORT_TRIP(p0, p1)
  native.invoke(
    Type.Void, 2619, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_EARN_AWARD_SHORT_TRIP(Any p0, Any p1) // 0x5B4DBDED84D6A420
function MONEY.NETWORK_EARN_AWARD_SHORT_TRIP(p0, p1)
  native.invoke(
    Type.Void, 2620, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_EARN_FIXER_RIVAL_DELIVERY(Any p0, Any p1) // 0x235D41210B3A1A5E
function MONEY.NETWORK_EARN_FIXER_RIVAL_DELIVERY(p0, p1)
  native.invoke(
    Type.Void, 2621, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_EARN_UPGRADE_AGENCY(Any p0, Any p1) // 0xD07C7C3F1995108C
function MONEY.NETWORK_EARN_UPGRADE_AGENCY(p0, p1)
  native.invoke(
    Type.Void, 2622, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_SPEND_APARTMENT_UTILITIES(int amount, BOOL p1, BOOL p2, Any* data) // 0x1254B5B3925EFD3D
function MONEY.NETWORK_SPEND_APARTMENT_UTILITIES(amount, p1, p2, data)
  native.invoke(
    Type.Void, 2623, false,
    arg(Type.Int, amount),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Any, data)
  )
end

-- void NETWORK_SPEND_BUSINESS_PROPERTY_FEES(Any p0, Any p1, Any p2, Any p3) // 0x92D1CFDA1227FF1C
function MONEY.NETWORK_SPEND_BUSINESS_PROPERTY_FEES(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2624, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_EARN_SIGHTSEEING_REWARD(Any p0, Any p1, Any p2, Any p3) // 0x45087AE480B233AC
function MONEY.NETWORK_EARN_SIGHTSEEING_REWARD(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2625, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_EARN_BIKER_SHOP(Any p0, Any p1) // 0x2C5809EB9DF57257
function MONEY.NETWORK_EARN_BIKER_SHOP(p0, p1)
  native.invoke(
    Type.Void, 2626, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_EARN_BIKER(Any p0) // 0x71BEC32FA466E105
function MONEY.NETWORK_EARN_BIKER(p0)
  native.invoke(
    Type.Void, 2627, false,
    arg(Type.Any, p0)
  )
end

-- void NETWORK_YOHAN_SOURCE_GOODS(Any p0, Any p1, Any p2, Any p3) // 0x59498BC8B1C8B15C
function MONEY.NETWORK_YOHAN_SOURCE_GOODS(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2628, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void _NETWORK_SPEND_BUY_MFGARAGE(Any p0, Any p1, Any p2, Any p3) // 0xA2ED36DCF0FCA413
function MONEY._NETWORK_SPEND_BUY_MFGARAGE(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2629, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void _NETWORK_SPEND_UPGRADE_MFGARAGE(Any p0, Any p1, Any p2, Any p3) // 0xCF8F346DDDC66643
function MONEY._NETWORK_SPEND_UPGRADE_MFGARAGE(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2630, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void _NETWORK_SPEND_BUY_SUPPLIES(int p0, BOOL p1, BOOL p2, int p3) // 0xB48185C0CA67B16B
function MONEY._NETWORK_SPEND_BUY_SUPPLIES(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2631, false,
    arg(Type.Int, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Int, p3)
  )
end

-- void _NETWORK_SPEND_BUY_ACID_LAB(Any p0, Any p1, Any p2, Any p3) // 0xF1E26A7924327152
function MONEY._NETWORK_SPEND_BUY_ACID_LAB(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2632, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void _NETWORK_SPEND_UPGRADE_ACID_LAB_EQUIPMENT(Any p0, Any p1, Any p2, Any p3) // 0x110EE9D486C23126
function MONEY._NETWORK_SPEND_UPGRADE_ACID_LAB_EQUIPMENT(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2633, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void _NETWORK_SPEND_UPGRADE_ACID_LAB_ARMOR(int p0, BOOL p1, BOOL p2, int p3) // 0xA7D541C9ACD63133
function MONEY._NETWORK_SPEND_UPGRADE_ACID_LAB_ARMOR(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2634, false,
    arg(Type.Int, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Int, p3)
  )
end

-- void _NETWORK_SPEND_UPGRADE_ACID_LAB_SCOOP(int p0, BOOL p1, BOOL p2, int p3) // 0x2940558E05BCC2EC
function MONEY._NETWORK_SPEND_UPGRADE_ACID_LAB_SCOOP(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2635, false,
    arg(Type.Int, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Int, p3)
  )
end

-- void _NETWORK_SPEND_UPGRADE_ACID_LAB_MINES(int p0, BOOL p1, BOOL p2, int p3) // 0x4B99AB08C92C54E4
function MONEY._NETWORK_SPEND_UPGRADE_ACID_LAB_MINES(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2636, false,
    arg(Type.Int, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Int, p3)
  )
end

-- void _NETWORK_SPEND_RENAME_ACID_LAB(Any p0, Any p1, Any p2, Any p3) // 0x842B1C5AF61ACDE9
function MONEY._NETWORK_SPEND_RENAME_ACID_LAB(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2637, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void _NETWORK_SPEND_RENAME_ACID_PRODUCT(Any p0, Any p1, Any p2, Any p3) // 0x446798F7495DD7D8
function MONEY._NETWORK_SPEND_RENAME_ACID_PRODUCT(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 2638, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void _NETWORK_EARN_AWARD_JUGGALO_MISSION(Any p0, Any p1) // 0xDDF047577F1A02A7
function MONEY._NETWORK_EARN_AWARD_JUGGALO_MISSION(p0, p1)
  native.invoke(
    Type.Void, 2639, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void _NETWORK_EARN_AWARD_ACID_LAB(Any p0, Any p1) // 0xD1A8165767AD2D23
function MONEY._NETWORK_EARN_AWARD_ACID_LAB(p0, p1)
  native.invoke(
    Type.Void, 2640, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void _NETWORK_EARN_AWARD_DAILY_STASH(Any p0, Any p1) // 0xC30650FA74A19D02
function MONEY._NETWORK_EARN_AWARD_DAILY_STASH(p0, p1)
  native.invoke(
    Type.Void, 2641, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void _NETWORK_EARN_AWARD_DEAD_DROP(Any p0, Any p1) // 0xD01EBAEA1F905EF6
function MONEY._NETWORK_EARN_AWARD_DEAD_DROP(p0, p1)
  native.invoke(
    Type.Void, 2642, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void _NETWORK_EARN_AWARD_RANDOM_EVENT(Any p0, Any p1) // 0xBEAFBB1B98B7EF55
function MONEY._NETWORK_EARN_AWARD_RANDOM_EVENT(p0, p1)
  native.invoke(
    Type.Void, 2643, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void _NETWORK_EARN_AWARD_TAXI(Any p0, Any p1) // 0xA914768AD35CD3A5
function MONEY._NETWORK_EARN_AWARD_TAXI(p0, p1)
  native.invoke(
    Type.Void, 2644, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void _NETWORK_EARN_STREET_DEALER(Any p0, Any p1) // 0xA81017EE1324FDFE
function MONEY._NETWORK_EARN_STREET_DEALER(p0, p1)
  native.invoke(
    Type.Void, 2645, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void _NETWORK_EARN_SELL_ACID(Any p0, Any p1) // 0x79B656937DF6DF5D
function MONEY._NETWORK_EARN_SELL_ACID(p0, p1)
  native.invoke(
    Type.Void, 2646, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void _NETWORK_EARN_SETUP_PARTICIPATION_ACID_LAB(Any p0, Any p1) // 0xE3942D59E8A7F70D
function MONEY._NETWORK_EARN_SETUP_PARTICIPATION_ACID_LAB(p0, p1)
  native.invoke(
    Type.Void, 2647, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void _NETWORK_EARN_SOURCE_PARTICIPATION_ACID_LAB(Any p0, Any p1) // 0x136F11B5DF1B304D
function MONEY._NETWORK_EARN_SOURCE_PARTICIPATION_ACID_LAB(p0, p1)
  native.invoke(
    Type.Void, 2648, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void _NETWORK_EARN_SELL_PARTICIPATION_ACID_LAB(Any p0, Any p1) // 0xCA3EF9B09A8D76B4
function MONEY._NETWORK_EARN_SELL_PARTICIPATION_ACID_LAB(p0, p1)
  native.invoke(
    Type.Void, 2649, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void _NETWORK_EARN_JUGGALO_STORY_MISSION(Any p0, Any p1) // 0xE01D10BA8CD53621
function MONEY._NETWORK_EARN_JUGGALO_STORY_MISSION(p0, p1)
  native.invoke(
    Type.Void, 2650, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void _NETWORK_EARN_JUGGALO_STORY_MISSION_PARTICIPATION(Any p0, Any p1) // 0x40FF6CCCC476185C
function MONEY._NETWORK_EARN_JUGGALO_STORY_MISSION_PARTICIPATION(p0, p1)
  native.invoke(
    Type.Void, 2651, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void _NETWORK_EARN_FOOLIGAN_JOB(Any p0, Any p1) // 0xCE4452AE85F5E252
--[[
JUGGALO_PHONE_MISSION...
--]]
function MONEY._NETWORK_EARN_FOOLIGAN_JOB(p0, p1)
  native.invoke(
    Type.Void, 2652, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void _NETWORK_EARN_FOOLIGAN_JOB_PARTICIPATION(Any p0, Any p1) // 0xC376B92D0E060970
--[[
JUGGALO_PHONE_MISSION_PARTICIPATION...
--]]
function MONEY._NETWORK_EARN_FOOLIGAN_JOB_PARTICIPATION(p0, p1)
  native.invoke(
    Type.Void, 2653, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void _NETWORK_EARN_TAXI_JOB(Any p0, Any p1) // 0x991E1588FAD9019D
function MONEY._NETWORK_EARN_TAXI_JOB(p0, p1)
  native.invoke(
    Type.Void, 2654, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void _NETWORK_EARN_DAILY_STASH_HOUSE_COMPLETED(Any p0, Any p1) // 0xCABC9874AFA70D6D
function MONEY._NETWORK_EARN_DAILY_STASH_HOUSE_COMPLETED(p0, p1)
  native.invoke(
    Type.Void, 2655, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void _NETWORK_EARN_DAILY_STASH_HOUSE_PARTICIPATION(Any p0, Any p1) // 0x9C0C6BD0F94CE391
function MONEY._NETWORK_EARN_DAILY_STASH_HOUSE_PARTICIPATION(p0, p1)
  native.invoke(
    Type.Void, 2656, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void _NETWORK_EARN_AVENGER(int amount, int p1) // 0x55F006B9D4A46C1D
--[[
Used for SERVICE_EARN_AVENGER_OPERATIONS & SERVICE_EARN_AVENGER_OPS_BONUS
--]]
function MONEY._NETWORK_EARN_AVENGER(amount, p1)
  native.invoke(
    Type.Void, 2657, false,
    arg(Type.Int, amount),
    arg(Type.Int, p1)
  )
end

-- void _NETWORK_EARN_SMUGGLER_OPS(Any p0, Any p1, Any p2) // 0xDEA273D5F8A9661A
function MONEY._NETWORK_EARN_SMUGGLER_OPS(p0, p1, p2)
  native.invoke(
    Type.Void, 2658, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void _NETWORK_EARN_BONUS_OBJECTIVE(int amount, Any p1, Any p2) // 0xDCEF983C24191997
function MONEY._NETWORK_EARN_BONUS_OBJECTIVE(amount, p1, p2)
  native.invoke(
    Type.Void, 2659, false,
    arg(Type.Int, amount),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void _NETWORK_EARN_PROGRESS_HUB(Any p0, Any p1) // 0xF8332B06F0EECC9C
function MONEY._NETWORK_EARN_PROGRESS_HUB(p0, p1)
  native.invoke(
    Type.Void, 2660, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void _NETWORK_SPENT_AIR_FREIGHT(int hangarCargoSourcingPrice, BOOL fromBank, BOOL fromBankAndWallet, int cost, int warehouseId, int warehouseSlot) // 0x8C7E8D6F96C9E948
function MONEY._NETWORK_SPENT_AIR_FREIGHT(hangarCargoSourcingPrice, fromBank, fromBankAndWallet, cost, warehouseId, warehouseSlot)
  native.invoke(
    Type.Void, 2661, false,
    arg(Type.Int, hangarCargoSourcingPrice),
    arg(Type.Bool, fromBank),
    arg(Type.Bool, fromBankAndWallet),
    arg(Type.Int, cost),
    arg(Type.Int, warehouseId),
    arg(Type.Int, warehouseSlot)
  )
end

-- void _NETWORK_SPENT_SKIP_CARGO_SOURCE_SETUP(int amount, BOOL fromBank, BOOL fromBankAndWallet, int cost) // 0xED1B407BADA42CEC
function MONEY._NETWORK_SPENT_SKIP_CARGO_SOURCE_SETUP(amount, fromBank, fromBankAndWallet, cost)
  native.invoke(
    Type.Void, 2662, false,
    arg(Type.Int, amount),
    arg(Type.Bool, fromBank),
    arg(Type.Bool, fromBankAndWallet),
    arg(Type.Int, cost)
  )
end

-- void _NETWORK_SPENT_STEALTH_MODULE(int amount, BOOL fromBank, BOOL fromBankAndWallet, Hash p3) // 0x95CE79A6939C537A
--[[
Hash p3 = STEALTH_MODULE
--]]
function MONEY._NETWORK_SPENT_STEALTH_MODULE(amount, fromBank, fromBankAndWallet, p3)
  native.invoke(
    Type.Void, 2663, false,
    arg(Type.Int, amount),
    arg(Type.Bool, fromBank),
    arg(Type.Bool, fromBankAndWallet),
    arg(Type.Hash, p3)
  )
end

-- void _NETWORK_SPENT_MISSILE_JAMMER(int amount, BOOL fromBank, BOOL fromBankAndWallet, Hash p3) // 0xD687100F616163F4
--[[
Hash p3 = MISSILE_JAMMER
--]]
function MONEY._NETWORK_SPENT_MISSILE_JAMMER(amount, fromBank, fromBankAndWallet, p3)
  native.invoke(
    Type.Void, 2664, false,
    arg(Type.Int, amount),
    arg(Type.Bool, fromBank),
    arg(Type.Bool, fromBankAndWallet),
    arg(Type.Hash, p3)
  )
end

-- void _NETWORK_SPENT_GENERIC(int price, BOOL p1, BOOL p2, Hash stat, Hash spent, const char* p5, const char* p6, Any* data) // 0x2803B027479FB640
function MONEY._NETWORK_SPENT_GENERIC(price, p1, p2, stat, spent, p5, p6, data)
  native.invoke(
    Type.Void, 2665, false,
    arg(Type.Int, price),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Hash, stat),
    arg(Type.Hash, spent),
    arg(Type.String, p5),
    arg(Type.String, p6),
    arg(Type.Any, data)
  )
end

-- void _NETWORK_EARN_GENERIC(int amount, Hash earn, const char* p2, const char* p3, Any* data) // 0xBF7B5BB7ED890380
--[[
_NETWORK_EARN_G*
--]]
function MONEY._NETWORK_EARN_GENERIC(amount, earn, p2, p3, data)
  native.invoke(
    Type.Void, 2666, false,
    arg(Type.Int, amount),
    arg(Type.Hash, earn),
    arg(Type.String, p2),
    arg(Type.String, p3),
    arg(Type.Any, data)
  )
end

-- void _NETWORK_CLEAR_TRANSACTION_TELEMETRY_NONCE() // 0xE03B9F95556E48E9
function MONEY._NETWORK_CLEAR_TRANSACTION_TELEMETRY_NONCE()
  native.invoke(
    Type.Void, 2667, false
  )
end

-- int NETWORK_GET_VC_BANK_BALANCE() // 0x76EF28DA05EA395A
function MONEY.NETWORK_GET_VC_BANK_BALANCE()
  return native.invoke(
    Type.Int, 2668, false
  )
end

-- int NETWORK_GET_VC_WALLET_BALANCE(int characterSlot) // 0xA40F9C2623F6A8B5
function MONEY.NETWORK_GET_VC_WALLET_BALANCE(characterSlot)
  return native.invoke(
    Type.Int, 2669, false,
    arg(Type.Int, characterSlot)
  )
end

-- int NETWORK_GET_VC_BALANCE() // 0x5CBAD97E059E1B94
function MONEY.NETWORK_GET_VC_BALANCE()
  return native.invoke(
    Type.Int, 2670, false
  )
end

-- int NETWORK_GET_EVC_BALANCE() // 0x5D1E75F91C07DEE5
function MONEY.NETWORK_GET_EVC_BALANCE()
  return native.invoke(
    Type.Int, 2671, false
  )
end

-- int NETWORK_GET_PVC_BALANCE() // 0x4F54F3B6C202FB4E
function MONEY.NETWORK_GET_PVC_BALANCE()
  return native.invoke(
    Type.Int, 2672, false
  )
end

-- const char* NETWORK_GET_STRING_WALLET_BALANCE(int characterSlot) // 0xF9B10B529DCFB33B
function MONEY.NETWORK_GET_STRING_WALLET_BALANCE(characterSlot)
  return native.invoke(
    Type.Const char, 2673, false,
    arg(Type.Int, characterSlot)
  )
end

-- const char* NETWORK_GET_STRING_BANK_BALANCE() // 0xA6FA3979BED01B81
function MONEY.NETWORK_GET_STRING_BANK_BALANCE()
  return native.invoke(
    Type.Const char, 2674, false
  )
end

-- const char* NETWORK_GET_STRING_BANK_WALLET_BALANCE(int character) // 0x700AF71AE615E6DD
function MONEY.NETWORK_GET_STRING_BANK_WALLET_BALANCE(character)
  return native.invoke(
    Type.Const char, 2675, false,
    arg(Type.Int, character)
  )
end

-- BOOL NETWORK_GET_CAN_SPEND_FROM_WALLET(int amount, int characterSlot) // 0xED5AB8860415BABA
--[[
Returns true if wallet balance >= amount.
--]]
function MONEY.NETWORK_GET_CAN_SPEND_FROM_WALLET(amount, characterSlot)
  return native.invoke(
    Type.Bool, 2676, false,
    arg(Type.Int, amount),
    arg(Type.Int, characterSlot)
  )
end

-- BOOL NETWORK_GET_CAN_SPEND_FROM_BANK(int amount) // 0xA31FD6A0865B6D14
--[[
Returns true if bank balance >= amount.
--]]
function MONEY.NETWORK_GET_CAN_SPEND_FROM_BANK(amount)
  return native.invoke(
    Type.Bool, 2677, false,
    arg(Type.Int, amount)
  )
end

-- BOOL NETWORK_GET_CAN_SPEND_FROM_BANK_AND_WALLET(int amount, int characterSlot) // 0xDC18531D7019A535
--[[
Returns true if bank balance + wallet balance >= amount.
--]]
function MONEY.NETWORK_GET_CAN_SPEND_FROM_BANK_AND_WALLET(amount, characterSlot)
  return native.invoke(
    Type.Bool, 2678, false,
    arg(Type.Int, amount),
    arg(Type.Int, characterSlot)
  )
end

-- int NETWORK_GET_PVC_TRANSFER_BALANCE() // 0x13A8DE2FD77D04F3
--[[
Retturns the same value as NETWORK_GET_REMAINING_TRANSFER_BALANCE.
--]]
function MONEY.NETWORK_GET_PVC_TRANSFER_BALANCE()
  return native.invoke(
    Type.Int, 2679, false
  )
end

-- BOOL NETWORK_GET_CAN_TRANSFER_CASH(int amount) // 0x08E8EEADFD0DC4A0
--[[
Returns false if amount > wallet balance or daily transfer limit has been hit.
--]]
function MONEY.NETWORK_GET_CAN_TRANSFER_CASH(amount)
  return native.invoke(
    Type.Bool, 2680, false,
    arg(Type.Int, amount)
  )
end

-- BOOL NETWORK_CAN_RECEIVE_PLAYER_CASH(Any p0, Any p1, Any p2, Any p3) // 0x5D17BE59D2123284
function MONEY.NETWORK_CAN_RECEIVE_PLAYER_CASH(p0, p1, p2, p3)
  return native.invoke(
    Type.Bool, 2681, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- int NETWORK_GET_REMAINING_TRANSFER_BALANCE() // 0xEA560AC9EEB1E19B
--[[
Returns the same value as NETWORK_GET_PVC_TRANSFER_BALANCE.
--]]
function MONEY.NETWORK_GET_REMAINING_TRANSFER_BALANCE()
  return native.invoke(
    Type.Int, 2682, false
  )
end

-- int WITHDRAW_VC(int amount) // 0xF70EFA14FE091429
--[[
Does nothing and always returns 0.
--]]
function MONEY.WITHDRAW_VC(amount)
  return native.invoke(
    Type.Int, 2683, false,
    arg(Type.Int, amount)
  )
end

-- BOOL DEPOSIT_VC(int amount) // 0xE260E0BB9CD995AC
--[[
Does nothing and always returns false.
--]]
function MONEY.DEPOSIT_VC(amount)
  return native.invoke(
    Type.Bool, 2684, false,
    arg(Type.Int, amount)
  )
end

-- BOOL HAS_VC_WITHDRAWAL_COMPLETED(Any p0) // 0xE154B48B68EF72BC
--[[
This function is hard-coded to always return 1.
--]]
function MONEY.HAS_VC_WITHDRAWAL_COMPLETED(p0)
  return native.invoke(
    Type.Bool, 2685, false,
    arg(Type.Any, p0)
  )
end

-- BOOL WAS_VC_WITHDRAWAL_SUCCESSFUL(Any p0) // 0x6FCF8DDEA146C45B
--[[
This function is hard-coded to always return 1.
--]]
function MONEY.WAS_VC_WITHDRAWAL_SUCCESSFUL(p0)
  return native.invoke(
    Type.Bool, 2686, false,
    arg(Type.Any, p0)
  )
end


NETSHOPPING = {}

-- BOOL NET_GAMESERVER_USE_SERVER_TRANSACTIONS() // 0x7D2708796355B20B
function NETSHOPPING.NET_GAMESERVER_USE_SERVER_TRANSACTIONS()
  return native.invoke(
    Type.Bool, 2687, false
  )
end

-- BOOL NET_GAMESERVER_CATALOG_ITEM_IS_VALID(const char* name) // 0xBD4D7EAF8A30F637
function NETSHOPPING.NET_GAMESERVER_CATALOG_ITEM_IS_VALID(name)
  return native.invoke(
    Type.Bool, 2688, false,
    arg(Type.String, name)
  )
end

-- BOOL NET_GAMESERVER_CATALOG_ITEM_KEY_IS_VALID(Hash hash) // 0x247F0F73A182EA0B
function NETSHOPPING.NET_GAMESERVER_CATALOG_ITEM_KEY_IS_VALID(hash)
  return native.invoke(
    Type.Bool, 2689, false,
    arg(Type.Hash, hash)
  )
end

-- int NET_GAMESERVER_GET_PRICE(Hash itemHash, Hash categoryHash, BOOL p2) // 0xC27009422FCCA88D
--[[
bool is always true in game scripts
--]]
function NETSHOPPING.NET_GAMESERVER_GET_PRICE(itemHash, categoryHash, p2)
  return native.invoke(
    Type.Int, 2690, false,
    arg(Type.Hash, itemHash),
    arg(Type.Hash, categoryHash),
    arg(Type.Bool, p2)
  )
end

-- BOOL NET_GAMESERVER_CATALOG_IS_VALID() // 0x3C4487461E9B0DCB
function NETSHOPPING.NET_GAMESERVER_CATALOG_IS_VALID()
  return native.invoke(
    Type.Bool, 2691, false
  )
end

-- BOOL NET_GAMESERVER_IS_CATALOG_CURRENT() // 0x2B949A1E6AEC8F6A
function NETSHOPPING.NET_GAMESERVER_IS_CATALOG_CURRENT()
  return native.invoke(
    Type.Bool, 2692, false
  )
end

-- Hash NET_GAMESERVER_GET_CATALOG_CLOUD_CRC() // 0x85F6C9ABA1DE2BCF
function NETSHOPPING.NET_GAMESERVER_GET_CATALOG_CLOUD_CRC()
  return native.invoke(
    Type.Hash, 2693, false
  )
end

-- BOOL NET_GAMESERVER_REFRESH_SERVER_CATALOG() // 0x357B152EF96C30B6
function NETSHOPPING.NET_GAMESERVER_REFRESH_SERVER_CATALOG()
  return native.invoke(
    Type.Bool, 2694, false
  )
end

-- BOOL NET_GAMESERVER_RETRIEVE_CATALOG_REFRESH_STATUS(int* state) // 0xCF38DAFBB49EDE5E
function NETSHOPPING.NET_GAMESERVER_RETRIEVE_CATALOG_REFRESH_STATUS(state)
  return native.invoke(
    Type.Bool, 2695, false,
    arg(Type.Int, state)
  )
end

-- BOOL NET_GAMESERVER_INIT_SESSION() // 0xE3E5A7C64CA2C6ED
function NETSHOPPING.NET_GAMESERVER_INIT_SESSION()
  return native.invoke(
    Type.Bool, 2696, false
  )
end

-- BOOL NET_GAMESERVER_RETRIEVE_INIT_SESSION_STATUS(int* p0) // 0x0395CB47B022E62C
function NETSHOPPING.NET_GAMESERVER_RETRIEVE_INIT_SESSION_STATUS(p0)
  return native.invoke(
    Type.Bool, 2697, false,
    arg(Type.Int, p0)
  )
end

-- BOOL NET_GAMESERVER_START_SESSION(int charSlot) // 0xA135AC892A58FC07
function NETSHOPPING.NET_GAMESERVER_START_SESSION(charSlot)
  return native.invoke(
    Type.Bool, 2698, false,
    arg(Type.Int, charSlot)
  )
end

-- BOOL NET_GAMESERVER_START_SESSION_PENDING() // 0x72EB7BA9B69BF6AB
function NETSHOPPING.NET_GAMESERVER_START_SESSION_PENDING()
  return native.invoke(
    Type.Bool, 2699, false
  )
end

-- BOOL NET_GAMESERVER_RETRIEVE_START_SESSION_STATUS(int* p0) // 0x170910093218C8B9
function NETSHOPPING.NET_GAMESERVER_RETRIEVE_START_SESSION_STATUS(p0)
  return native.invoke(
    Type.Bool, 2700, false,
    arg(Type.Int, p0)
  )
end

-- BOOL NET_GAMESERVER_RETRIEVE_SESSION_ERROR_CODE(int* p0) // 0xC13C38E47EA5DF31
function NETSHOPPING.NET_GAMESERVER_RETRIEVE_SESSION_ERROR_CODE(p0)
  return native.invoke(
    Type.Bool, 2701, false,
    arg(Type.Int, p0)
  )
end

-- BOOL NET_GAMESERVER_IS_SESSION_VALID(int charSlot) // 0xB24F0944DA203D9E
function NETSHOPPING.NET_GAMESERVER_IS_SESSION_VALID(charSlot)
  return native.invoke(
    Type.Bool, 2702, false,
    arg(Type.Int, charSlot)
  )
end

-- BOOL NET_GAMESERVER_CLEAR_SESSION(int p0) // 0x74A0FD0688F1EE45
function NETSHOPPING.NET_GAMESERVER_CLEAR_SESSION(p0)
  return native.invoke(
    Type.Bool, 2703, false,
    arg(Type.Int, p0)
  )
end

-- BOOL NET_GAMESERVER_SESSION_APPLY_RECEIVED_DATA(int charSlot) // 0x2F41D51BA3BCD1F1
function NETSHOPPING.NET_GAMESERVER_SESSION_APPLY_RECEIVED_DATA(charSlot)
  return native.invoke(
    Type.Bool, 2704, false,
    arg(Type.Int, charSlot)
  )
end

-- BOOL NET_GAMESERVER_IS_SESSION_REFRESH_PENDING() // 0x810E8431C0614BF9
function NETSHOPPING.NET_GAMESERVER_IS_SESSION_REFRESH_PENDING()
  return native.invoke(
    Type.Bool, 2705, false
  )
end

-- BOOL NET_GAMESERVER_START_SESSION_RESTART(BOOL inventory, BOOL playerbalance) // 0x35A1B3E1D1315CFA
--[[
Note: only one of the arguments can be set to true at a time
--]]
function NETSHOPPING.NET_GAMESERVER_START_SESSION_RESTART(inventory, playerbalance)
  return native.invoke(
    Type.Bool, 2706, false,
    arg(Type.Bool, inventory),
    arg(Type.Bool, playerbalance)
  )
end

-- BOOL NET_GAMESERVER_TRANSACTION_IN_PROGRESS() // 0x613F125BA3BD2EB9
function NETSHOPPING.NET_GAMESERVER_TRANSACTION_IN_PROGRESS()
  return native.invoke(
    Type.Bool, 2707, false
  )
end

-- BOOL NET_GAMESERVER_GET_SESSION_STATE_AND_STATUS(int* p0, BOOL* p1) // 0x897433D292B44130
function NETSHOPPING.NET_GAMESERVER_GET_SESSION_STATE_AND_STATUS(p0, p1)
  return native.invoke(
    Type.Bool, 2708, false,
    arg(Type.Int, p0),
    arg(Type.Bool, p1)
  )
end

-- BOOL NET_GAMESERVER_BASKET_START(int* transactionId, Hash categoryHash, Hash actionHash, int flags) // 0x279F08B1A4B29B7E
function NETSHOPPING.NET_GAMESERVER_BASKET_START(transactionId, categoryHash, actionHash, flags)
  return native.invoke(
    Type.Bool, 2709, false,
    arg(Type.Int, transactionId),
    arg(Type.Hash, categoryHash),
    arg(Type.Hash, actionHash),
    arg(Type.Int, flags)
  )
end

-- BOOL NET_GAMESERVER_BASKET_END() // 0xFA336E7F40C0A0D0
function NETSHOPPING.NET_GAMESERVER_BASKET_END()
  return native.invoke(
    Type.Bool, 2710, false
  )
end

-- BOOL NET_GAMESERVER_BASKET_IS_ACTIVE() // 0xA65568121DF2EA26
function NETSHOPPING.NET_GAMESERVER_BASKET_IS_ACTIVE()
  return native.invoke(
    Type.Bool, 2711, false
  )
end

-- BOOL NET_GAMESERVER_BASKET_ADD_ITEM(Any* itemData, int quantity) // 0xF30980718C8ED876
function NETSHOPPING.NET_GAMESERVER_BASKET_ADD_ITEM(itemData, quantity)
  return native.invoke(
    Type.Bool, 2712, false,
    arg(Type.Any, itemData),
    arg(Type.Int, quantity)
  )
end

-- BOOL NET_GAMESERVER_BASKET_IS_FULL() // 0x27F76CC6C55AD30E
function NETSHOPPING.NET_GAMESERVER_BASKET_IS_FULL()
  return native.invoke(
    Type.Bool, 2713, false
  )
end

-- BOOL NET_GAMESERVER_BASKET_APPLY_SERVER_DATA(Any p0, Any* p1) // 0xE1A0450ED46A7812
function NETSHOPPING.NET_GAMESERVER_BASKET_APPLY_SERVER_DATA(p0, p1)
  return native.invoke(
    Type.Bool, 2714, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL NET_GAMESERVER_CHECKOUT_START(int transactionId) // 0x39BE7CEA8D9CC8E6
function NETSHOPPING.NET_GAMESERVER_CHECKOUT_START(transactionId)
  return native.invoke(
    Type.Bool, 2715, false,
    arg(Type.Int, transactionId)
  )
end

-- BOOL NET_GAMESERVER_BEGIN_SERVICE(int* transactionId, Hash categoryHash, Hash itemHash, Hash actionTypeHash, int value, int flags) // 0x3C5FD37B5499582E
function NETSHOPPING.NET_GAMESERVER_BEGIN_SERVICE(transactionId, categoryHash, itemHash, actionTypeHash, value, flags)
  return native.invoke(
    Type.Bool, 2716, false,
    arg(Type.Int, transactionId),
    arg(Type.Hash, categoryHash),
    arg(Type.Hash, itemHash),
    arg(Type.Hash, actionTypeHash),
    arg(Type.Int, value),
    arg(Type.Int, flags)
  )
end

-- BOOL NET_GAMESERVER_END_SERVICE(int transactionId) // 0xE2A99A9B524BEFFF
function NETSHOPPING.NET_GAMESERVER_END_SERVICE(transactionId)
  return native.invoke(
    Type.Bool, 2717, false,
    arg(Type.Int, transactionId)
  )
end

-- BOOL NET_GAMESERVER_DELETE_CHARACTER(int slot, BOOL transfer, Hash reason) // 0x51F1A8E48C3D2F6D
function NETSHOPPING.NET_GAMESERVER_DELETE_CHARACTER(slot, transfer, reason)
  return native.invoke(
    Type.Bool, 2718, false,
    arg(Type.Int, slot),
    arg(Type.Bool, transfer),
    arg(Type.Hash, reason)
  )
end

-- int NET_GAMESERVER_DELETE_CHARACTER_GET_STATUS() // 0x0A6D923DFFC9BD89
function NETSHOPPING.NET_GAMESERVER_DELETE_CHARACTER_GET_STATUS()
  return native.invoke(
    Type.Int, 2719, false
  )
end

-- BOOL NET_GAMESERVER_DELETE_SET_TELEMETRY_NONCE_SEED() // 0x112CEF1615A1139F
function NETSHOPPING.NET_GAMESERVER_DELETE_SET_TELEMETRY_NONCE_SEED()
  return native.invoke(
    Type.Bool, 2720, false
  )
end

-- BOOL NET_GAMESERVER_TRANSFER_BANK_TO_WALLET(int charSlot, int amount) // 0xD47A2C1BA117471D
function NETSHOPPING.NET_GAMESERVER_TRANSFER_BANK_TO_WALLET(charSlot, amount)
  return native.invoke(
    Type.Bool, 2721, false,
    arg(Type.Int, charSlot),
    arg(Type.Int, amount)
  )
end

-- BOOL NET_GAMESERVER_TRANSFER_WALLET_TO_BANK(int charSlot, int amount) // 0xC2F7FE5309181C7D
function NETSHOPPING.NET_GAMESERVER_TRANSFER_WALLET_TO_BANK(charSlot, amount)
  return native.invoke(
    Type.Bool, 2722, false,
    arg(Type.Int, charSlot),
    arg(Type.Int, amount)
  )
end

-- int NET_GAMESERVER_TRANSFER_BANK_TO_WALLET_GET_STATUS() // 0x23789E777D14CE44
--[[
Same as 0x350AA5EBC03D3BD2
--]]
function NETSHOPPING.NET_GAMESERVER_TRANSFER_BANK_TO_WALLET_GET_STATUS()
  return native.invoke(
    Type.Int, 2723, false
  )
end

-- int NET_GAMESERVER_TRANSFER_WALLET_TO_BANK_GET_STATUS() // 0x350AA5EBC03D3BD2
--[[
Same as 0x23789E777D14CE44
--]]
function NETSHOPPING.NET_GAMESERVER_TRANSFER_WALLET_TO_BANK_GET_STATUS()
  return native.invoke(
    Type.Int, 2724, false
  )
end

-- BOOL NET_GAMESERVER_TRANSFER_CASH_SET_TELEMETRY_NONCE_SEED() // 0x498C1E05CE5F7877
--[[
Used to be NETWORK_SHOP_CASH_TRANSFER_SET_TELEMETRY_NONCE_SEED
--]]
function NETSHOPPING.NET_GAMESERVER_TRANSFER_CASH_SET_TELEMETRY_NONCE_SEED()
  return native.invoke(
    Type.Bool, 2725, false
  )
end

-- BOOL NET_GAMESERVER_SET_TELEMETRY_NONCE_SEED(int p0) // 0x9507D4271988E1AE
function NETSHOPPING.NET_GAMESERVER_SET_TELEMETRY_NONCE_SEED(p0)
  return native.invoke(
    Type.Bool, 2726, false,
    arg(Type.Int, p0)
  )
end


NETWORK = {}

-- const char* GET_ONLINE_VERSION() // 0xFCA9373EF340AC0A
--[[
Online version is defined here: update\update.rpf\common\data\version.txt

Example:

[ONLINE_VERSION_NUMBER]
1.33

_GET_ONLINE_VERSION() will return "1.33"
--]]
function NETWORK.GET_ONLINE_VERSION()
  return native.invoke(
    Type.Const char, 2727, false
  )
end

-- BOOL NETWORK_IS_SIGNED_IN() // 0x054354A99211EB96
--[[
Returns whether the player is signed into Social Club.
--]]
function NETWORK.NETWORK_IS_SIGNED_IN()
  return native.invoke(
    Type.Bool, 2728, false
  )
end

-- BOOL NETWORK_IS_SIGNED_ONLINE() // 0x1077788E268557C2
--[[
Returns whether the game is not in offline mode.

seemed not to work for some ppl
--]]
function NETWORK.NETWORK_IS_SIGNED_ONLINE()
  return native.invoke(
    Type.Bool, 2729, false
  )
end

-- BOOL NETWORK_IS_NP_AVAILABLE() // 0xBD545D44CCE70597
--[[
This function is hard-coded to always return 1.
--]]
function NETWORK.NETWORK_IS_NP_AVAILABLE()
  return native.invoke(
    Type.Bool, 2730, false
  )
end

-- BOOL NETWORK_IS_NP_PENDING() // 0xEBCAB9E5048434F4
--[[
This function is hard-coded to always return 1.
--]]
function NETWORK.NETWORK_IS_NP_PENDING()
  return native.invoke(
    Type.Bool, 2731, false
  )
end

-- int NETWORK_GET_NP_UNAVAILABLE_REASON() // 0x74FB3E29E6D10FA9
--[[
Hardcoded to return zero.

==== PS4 specific info ====

Returns some sort of unavailable reason:
-1 = REASON_INVALID
 0 = REASON_OTHER
 1 = REASON_SYSTEM_UPDATE
 2 = REASON_GAME_UPDATE
 3 = REASON_SIGNED_OUT
 4 = REASON_AGE
 5 = REASON_CONNECTION

=================================
--]]
function NETWORK.NETWORK_GET_NP_UNAVAILABLE_REASON()
  return native.invoke(
    Type.Int, 2732, false
  )
end

-- BOOL NETWORK_IS_CONNETED_TO_NP_PRESENCE() // 0x7808619F31FF22DB
--[[
This function is hard-coded to always return 1.
--]]
function NETWORK.NETWORK_IS_CONNETED_TO_NP_PRESENCE()
  return native.invoke(
    Type.Bool, 2733, false
  )
end

-- BOOL NETWORK_IS_LOGGED_IN_TO_PSN() // 0xA0FA4EC6A05DA44E
--[[
This function is hard-coded to always return 0.
--]]
function NETWORK.NETWORK_IS_LOGGED_IN_TO_PSN()
  return native.invoke(
    Type.Bool, 2734, false
  )
end

-- BOOL NETWORK_HAS_VALID_ROS_CREDENTIALS() // 0x85443FF4C328F53B
--[[
Returns whether the signed-in user has valid Rockstar Online Services (ROS) credentials.
--]]
function NETWORK.NETWORK_HAS_VALID_ROS_CREDENTIALS()
  return native.invoke(
    Type.Bool, 2735, false
  )
end

-- BOOL NETWORK_IS_REFRESHING_ROS_CREDENTIALS() // 0x8D11E61A4ABF49CC
function NETWORK.NETWORK_IS_REFRESHING_ROS_CREDENTIALS()
  return native.invoke(
    Type.Bool, 2736, false
  )
end

-- BOOL NETWORK_IS_CLOUD_AVAILABLE() // 0x9A4CF4F48AD77302
function NETWORK.NETWORK_IS_CLOUD_AVAILABLE()
  return native.invoke(
    Type.Bool, 2737, false
  )
end

-- BOOL NETWORK_HAS_SOCIAL_CLUB_ACCOUNT() // 0x67A5589628E0CFF6
function NETWORK.NETWORK_HAS_SOCIAL_CLUB_ACCOUNT()
  return native.invoke(
    Type.Bool, 2738, false
  )
end

-- BOOL NETWORK_ARE_SOCIAL_CLUB_POLICIES_CURRENT() // 0xBA9775570DB788CF
function NETWORK.NETWORK_ARE_SOCIAL_CLUB_POLICIES_CURRENT()
  return native.invoke(
    Type.Bool, 2739, false
  )
end

-- BOOL NETWORK_IS_HOST() // 0x8DB296B814EDDA07
--[[
If you are host, returns true else returns false.
--]]
function NETWORK.NETWORK_IS_HOST()
  return native.invoke(
    Type.Bool, 2740, false
  )
end

-- Player NETWORK_GET_HOST_PLAYER_INDEX() // 0x8251FB94DC4FDFC8
function NETWORK.NETWORK_GET_HOST_PLAYER_INDEX()
  return native.invoke(
    Type.Player, 2741, false
  )
end

-- BOOL NETWORK_WAS_GAME_SUSPENDED() // 0x4237E822315D8BA9
function NETWORK.NETWORK_WAS_GAME_SUSPENDED()
  return native.invoke(
    Type.Bool, 2742, false
  )
end

-- BOOL NETWORK_HAVE_ONLINE_PRIVILEGES() // 0x25CB5A9F37BFD063
function NETWORK.NETWORK_HAVE_ONLINE_PRIVILEGES()
  return native.invoke(
    Type.Bool, 2743, false
  )
end

-- BOOL NETWORK_HAS_AGE_RESTRICTIONS() // 0x1353F87E89946207
function NETWORK.NETWORK_HAS_AGE_RESTRICTIONS()
  return native.invoke(
    Type.Bool, 2744, false
  )
end

-- BOOL NETWORK_HAVE_USER_CONTENT_PRIVILEGES(int p0) // 0x72D918C99BCACC54
function NETWORK.NETWORK_HAVE_USER_CONTENT_PRIVILEGES(p0)
  return native.invoke(
    Type.Bool, 2745, false,
    arg(Type.Int, p0)
  )
end

-- BOOL NETWORK_HAVE_COMMUNICATION_PRIVILEGES(int p0, Player player) // 0xAEEF48CDF5B6CE7C
function NETWORK.NETWORK_HAVE_COMMUNICATION_PRIVILEGES(p0, player)
  return native.invoke(
    Type.Bool, 2746, false,
    arg(Type.Int, p0),
    arg(Type.Player, player)
  )
end

-- BOOL _NETWORK_HAVE_PLATFORM_COMMUNICATION_PRIVILEGES() // 0xE1E02509169C124E
--[[
Appears to be PlayStation-specific. Always returns true on other platforms if signed in with the primary user profile
--]]
function NETWORK._NETWORK_HAVE_PLATFORM_COMMUNICATION_PRIVILEGES()
  return native.invoke(
    Type.Bool, 2747, false
  )
end

-- BOOL NETWORK_CHECK_ONLINE_PRIVILEGES(Any p0, BOOL p1) // 0x78321BEA235FD8CD
function NETWORK.NETWORK_CHECK_ONLINE_PRIVILEGES(p0, p1)
  return native.invoke(
    Type.Bool, 2748, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1)
  )
end

-- BOOL NETWORK_CHECK_USER_CONTENT_PRIVILEGES(int p0, int p1, BOOL p2) // 0x595F028698072DD9
function NETWORK.NETWORK_CHECK_USER_CONTENT_PRIVILEGES(p0, p1, p2)
  return native.invoke(
    Type.Bool, 2749, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1),
    arg(Type.Bool, p2)
  )
end

-- BOOL NETWORK_CHECK_COMMUNICATION_PRIVILEGES(int p0, int p1, BOOL p2) // 0x83F28CE49FBBFFBA
function NETWORK.NETWORK_CHECK_COMMUNICATION_PRIVILEGES(p0, p1, p2)
  return native.invoke(
    Type.Bool, 2750, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1),
    arg(Type.Bool, p2)
  )
end

-- BOOL NETWORK_CHECK_TEXT_COMMUNICATION_PRIVILEGES(Any p0, Any p1, Any p2) // 0x07EAB372C8841D99
function NETWORK.NETWORK_CHECK_TEXT_COMMUNICATION_PRIVILEGES(p0, p1, p2)
  return native.invoke(
    Type.Bool, 2751, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- BOOL NETWORK_IS_USING_ONLINE_PROMOTION() // 0x906CA41A4B74ECA4
function NETWORK.NETWORK_IS_USING_ONLINE_PROMOTION()
  return native.invoke(
    Type.Bool, 2752, false
  )
end

-- BOOL NETWORK_SHOULD_SHOW_PROMOTION_ALERT_SCREEN() // 0x023ACAB2DC9DC4A4
function NETWORK.NETWORK_SHOULD_SHOW_PROMOTION_ALERT_SCREEN()
  return native.invoke(
    Type.Bool, 2753, false
  )
end

-- BOOL NETWORK_HAS_SOCIAL_NETWORKING_SHARING_PRIV() // 0x76BF03FADBF154F5
function NETWORK.NETWORK_HAS_SOCIAL_NETWORKING_SHARING_PRIV()
  return native.invoke(
    Type.Bool, 2754, false
  )
end

-- int NETWORK_GET_AGE_GROUP() // 0x9614B71F8ADB982B
function NETWORK.NETWORK_GET_AGE_GROUP()
  return native.invoke(
    Type.Int, 2755, false
  )
end

-- BOOL NETWORK_CHECK_PRIVILEGES(Any p0, Any p1, Any p2) // 0x0CF6CC51AA18F0F8
function NETWORK.NETWORK_CHECK_PRIVILEGES(p0, p1, p2)
  return native.invoke(
    Type.Bool, 2756, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- BOOL NETWORK_IS_PRIVILEGE_CHECK_IN_PROGRESS() // 0x64E5C4CC82847B73
--[[
Hardcoded to return false.
--]]
function NETWORK.NETWORK_IS_PRIVILEGE_CHECK_IN_PROGRESS()
  return native.invoke(
    Type.Bool, 2757, false
  )
end

-- void NETWORK_SET_PRIVILEGE_CHECK_RESULT_NOT_NEEDED() // 0x1F7BC3539F9E0224
function NETWORK.NETWORK_SET_PRIVILEGE_CHECK_RESULT_NOT_NEEDED()
  native.invoke(
    Type.Void, 2758, false
  )
end

-- BOOL NETWORK_RESOLVE_PRIVILEGE_USER_CONTENT() // 0xDE9225854F37BF72
--[[
Hardcoded to return true.
--]]
function NETWORK.NETWORK_RESOLVE_PRIVILEGE_USER_CONTENT()
  return native.invoke(
    Type.Bool, 2759, false
  )
end

-- BOOL NETWORK_HAVE_PLATFORM_SUBSCRIPTION() // 0x5EA784D197556507
function NETWORK.NETWORK_HAVE_PLATFORM_SUBSCRIPTION()
  return native.invoke(
    Type.Bool, 2760, false
  )
end

-- BOOL NETWORK_IS_PLATFORM_SUBSCRIPTION_CHECK_PENDING() // 0xA8ACB6459542A8C8
function NETWORK.NETWORK_IS_PLATFORM_SUBSCRIPTION_CHECK_PENDING()
  return native.invoke(
    Type.Bool, 2761, false
  )
end

-- void NETWORK_SHOW_ACCOUNT_UPGRADE_UI() // 0x83FE8D7229593017
function NETWORK.NETWORK_SHOW_ACCOUNT_UPGRADE_UI()
  native.invoke(
    Type.Void, 2762, false
  )
end

-- BOOL NETWORK_IS_SHOWING_SYSTEM_UI_OR_RECENTLY_REQUESTED_UPSELL() // 0x7788DFE15016A182
function NETWORK.NETWORK_IS_SHOWING_SYSTEM_UI_OR_RECENTLY_REQUESTED_UPSELL()
  return native.invoke(
    Type.Bool, 2763, false
  )
end

-- BOOL NETWORK_NEED_TO_START_NEW_GAME_BUT_BLOCKED() // 0x53C10C8BD774F2C9
function NETWORK.NETWORK_NEED_TO_START_NEW_GAME_BUT_BLOCKED()
  return native.invoke(
    Type.Bool, 2764, false
  )
end

-- BOOL NETWORK_CAN_BAIL() // 0x580CE4438479CC61
function NETWORK.NETWORK_CAN_BAIL()
  return native.invoke(
    Type.Bool, 2765, false
  )
end

-- void NETWORK_BAIL(int p0, int p1, int p2) // 0x95914459A87EBA28
function NETWORK.NETWORK_BAIL(p0, p1, p2)
  native.invoke(
    Type.Void, 2766, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1),
    arg(Type.Int, p2)
  )
end

-- void NETWORK_ON_RETURN_TO_SINGLE_PLAYER() // 0x283B6062A2C01E9B
function NETWORK.NETWORK_ON_RETURN_TO_SINGLE_PLAYER()
  native.invoke(
    Type.Void, 2767, false
  )
end

-- BOOL NETWORK_TRANSITION_START(int p0, Any p1, Any p2, Any p3) // 0x8B4FFC790CA131EF
function NETWORK.NETWORK_TRANSITION_START(p0, p1, p2, p3)
  return native.invoke(
    Type.Bool, 2768, false,
    arg(Type.Int, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- BOOL NETWORK_TRANSITION_ADD_STAGE(Hash hash, int p1, int p2, int state, int p4) // 0xC3BFED92026A2AAD
function NETWORK.NETWORK_TRANSITION_ADD_STAGE(hash, p1, p2, state, p4)
  return native.invoke(
    Type.Bool, 2769, false,
    arg(Type.Hash, hash),
    arg(Type.Int, p1),
    arg(Type.Int, p2),
    arg(Type.Int, state),
    arg(Type.Int, p4)
  )
end

-- BOOL NETWORK_TRANSITION_FINISH(Any p0, Any p1, Any p2) // 0x04918A41BC9B8157
function NETWORK.NETWORK_TRANSITION_FINISH(p0, p1, p2)
  return native.invoke(
    Type.Bool, 2770, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- BOOL NETWORK_CAN_ACCESS_MULTIPLAYER(int* loadingState) // 0xAF50DA1A3F8B1BA4
--[[
11 - Need to download tunables.
12 - Need to download background script.

Returns 1 if the multiplayer is loaded, otherwhise 0.
--]]
function NETWORK.NETWORK_CAN_ACCESS_MULTIPLAYER(loadingState)
  return native.invoke(
    Type.Bool, 2771, false,
    arg(Type.Int, loadingState)
  )
end

-- BOOL NETWORK_IS_MULTIPLAYER_DISABLED() // 0x9747292807126EDA
function NETWORK.NETWORK_IS_MULTIPLAYER_DISABLED()
  return native.invoke(
    Type.Bool, 2772, false
  )
end

-- BOOL NETWORK_CAN_ENTER_MULTIPLAYER() // 0x7E782A910C362C25
function NETWORK.NETWORK_CAN_ENTER_MULTIPLAYER()
  return native.invoke(
    Type.Bool, 2773, false
  )
end

-- BOOL NETWORK_SESSION_DO_FREEROAM_QUICKMATCH(Any p0, Any p1, Any p2) // 0x330ED4D05491934F
function NETWORK.NETWORK_SESSION_DO_FREEROAM_QUICKMATCH(p0, p1, p2)
  return native.invoke(
    Type.Bool, 2774, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- BOOL NETWORK_SESSION_DO_FRIEND_MATCHMAKING(int p0, int p1, int p2) // 0x2CFC76E0D087C994
function NETWORK.NETWORK_SESSION_DO_FRIEND_MATCHMAKING(p0, p1, p2)
  return native.invoke(
    Type.Bool, 2775, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1),
    arg(Type.Int, p2)
  )
end

-- BOOL NETWORK_SESSION_DO_CREW_MATCHMAKING(int crewId, int p1, int p2, int maxPlayers) // 0x94BC51E9449D917F
--[[
p4 seems to be unused in 1.60/build 2628
--]]
function NETWORK.NETWORK_SESSION_DO_CREW_MATCHMAKING(crewId, p1, p2, maxPlayers)
  return native.invoke(
    Type.Bool, 2776, false,
    arg(Type.Int, crewId),
    arg(Type.Int, p1),
    arg(Type.Int, p2),
    arg(Type.Int, maxPlayers)
  )
end

-- BOOL NETWORK_SESSION_DO_ACTIVITY_QUICKMATCH(Any p0, Any p1, Any p2, Any p3, Any p4) // 0xBE3E347A87ACEB82
function NETWORK.NETWORK_SESSION_DO_ACTIVITY_QUICKMATCH(p0, p1, p2, p3, p4)
  return native.invoke(
    Type.Bool, 2777, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4)
  )
end

-- BOOL NETWORK_SESSION_HOST(int p0, int maxPlayers, BOOL p2) // 0x6F3D4ED9BEE4E61D
--[[
Does nothing in online but in offline it will cause the screen to fade to black. Nothing happens past then, the screen will sit at black until you restart GTA. Other stuff must be needed to actually host a session.
--]]
function NETWORK.NETWORK_SESSION_HOST(p0, maxPlayers, p2)
  return native.invoke(
    Type.Bool, 2778, false,
    arg(Type.Int, p0),
    arg(Type.Int, maxPlayers),
    arg(Type.Bool, p2)
  )
end

-- BOOL NETWORK_SESSION_HOST_CLOSED(int p0, int maxPlayers) // 0xED34C0C02C098BB7
function NETWORK.NETWORK_SESSION_HOST_CLOSED(p0, maxPlayers)
  return native.invoke(
    Type.Bool, 2779, false,
    arg(Type.Int, p0),
    arg(Type.Int, maxPlayers)
  )
end

-- BOOL NETWORK_SESSION_HOST_FRIENDS_ONLY(int p0, int maxPlayers) // 0xB9CFD27A5D578D83
--[[
Does nothing in online but in offline it will cause the screen to fade to black. Nothing happens past then, the screen will sit at black until you restart GTA. Other stuff must be needed to actually host a session.
--]]
function NETWORK.NETWORK_SESSION_HOST_FRIENDS_ONLY(p0, maxPlayers)
  return native.invoke(
    Type.Bool, 2780, false,
    arg(Type.Int, p0),
    arg(Type.Int, maxPlayers)
  )
end

-- BOOL NETWORK_SESSION_IS_CLOSED_FRIENDS() // 0xFBCFA2EA2E206890
function NETWORK.NETWORK_SESSION_IS_CLOSED_FRIENDS()
  return native.invoke(
    Type.Bool, 2781, false
  )
end

-- BOOL NETWORK_SESSION_IS_CLOSED_CREW() // 0x74732C6CA90DA2B4
function NETWORK.NETWORK_SESSION_IS_CLOSED_CREW()
  return native.invoke(
    Type.Bool, 2782, false
  )
end

-- BOOL NETWORK_SESSION_IS_SOLO() // 0xF3929C2379B60CCE
function NETWORK.NETWORK_SESSION_IS_SOLO()
  return native.invoke(
    Type.Bool, 2783, false
  )
end

-- BOOL NETWORK_SESSION_IS_PRIVATE() // 0xCEF70AA5B3F89BA1
function NETWORK.NETWORK_SESSION_IS_PRIVATE()
  return native.invoke(
    Type.Bool, 2784, false
  )
end

-- BOOL _NETWORK_SESSION_LEAVE_INCLUDING_REASON(int leaveFlags, int leaveReason) // 0xE0128328CF1FD9F4
function NETWORK._NETWORK_SESSION_LEAVE_INCLUDING_REASON(leaveFlags, leaveReason)
  return native.invoke(
    Type.Bool, 2785, false,
    arg(Type.Int, leaveFlags),
    arg(Type.Int, leaveReason)
  )
end

-- BOOL NETWORK_SESSION_END(BOOL p0, BOOL p1) // 0xA02E59562D711006
--[[
p0 is always false and p1 varies.
NETWORK_SESSION_END(0, 1)
NETWORK_SESSION_END(0, 0)
Results in: "Connection to session lost due to an unknown network error. Please return to Grand Theft Auto V and try again later."
--]]
function NETWORK.NETWORK_SESSION_END(p0, p1)
  return native.invoke(
    Type.Bool, 2786, false,
    arg(Type.Bool, p0),
    arg(Type.Bool, p1)
  )
end

-- BOOL NETWORK_SESSION_LEAVE(Any p0) // 0xB9351A07A0D458B1
function NETWORK.NETWORK_SESSION_LEAVE(p0)
  return native.invoke(
    Type.Bool, 2787, false,
    arg(Type.Any, p0)
  )
end

-- void NETWORK_SESSION_KICK_PLAYER(Player player) // 0xFA8904DC5F304220
--[[
Only works as host.
--]]
function NETWORK.NETWORK_SESSION_KICK_PLAYER(player)
  native.invoke(
    Type.Void, 2788, false,
    arg(Type.Player, player)
  )
end

-- BOOL NETWORK_SESSION_GET_KICK_VOTE(Player player) // 0xD6D09A6F32F49EF1
function NETWORK.NETWORK_SESSION_GET_KICK_VOTE(player)
  return native.invoke(
    Type.Bool, 2789, false,
    arg(Type.Player, player)
  )
end

-- BOOL NETWORK_SESSION_RESERVE_SLOTS_TRANSITION(Any p0, Any p1, Any p2) // 0x041C7F2A6C9894E6
function NETWORK.NETWORK_SESSION_RESERVE_SLOTS_TRANSITION(p0, p1, p2)
  return native.invoke(
    Type.Bool, 2790, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- BOOL NETWORK_JOIN_PREVIOUSLY_FAILED_SESSION() // 0x59DF79317F85A7E0
function NETWORK.NETWORK_JOIN_PREVIOUSLY_FAILED_SESSION()
  return native.invoke(
    Type.Bool, 2791, false
  )
end

-- BOOL NETWORK_JOIN_PREVIOUSLY_FAILED_TRANSITION() // 0xFFE1E5B792D92B34
function NETWORK.NETWORK_JOIN_PREVIOUSLY_FAILED_TRANSITION()
  return native.invoke(
    Type.Bool, 2792, false
  )
end

-- void NETWORK_SESSION_SET_MATCHMAKING_GROUP(int matchmakingGroup) // 0x49EC8030F5015F8B
function NETWORK.NETWORK_SESSION_SET_MATCHMAKING_GROUP(matchmakingGroup)
  native.invoke(
    Type.Void, 2793, false,
    arg(Type.Int, matchmakingGroup)
  )
end

-- void NETWORK_SESSION_SET_MATCHMAKING_GROUP_MAX(int playerType, int playerCount) // 0x8B6A4DD0AF9CE215
--[[
playerType is an unsigned int from 0 to 4
0 = regular joiner
4 = spectator
--]]
function NETWORK.NETWORK_SESSION_SET_MATCHMAKING_GROUP_MAX(playerType, playerCount)
  native.invoke(
    Type.Void, 2794, false,
    arg(Type.Int, playerType),
    arg(Type.Int, playerCount)
  )
end

-- int NETWORK_SESSION_GET_MATCHMAKING_GROUP_FREE(int p0) // 0x56CE820830EF040B
function NETWORK.NETWORK_SESSION_GET_MATCHMAKING_GROUP_FREE(p0)
  return native.invoke(
    Type.Int, 2795, false,
    arg(Type.Int, p0)
  )
end

-- void NETWORK_SESSION_ADD_ACTIVE_MATCHMAKING_GROUP(int groupId) // 0xCAE55F48D3D7875C
--[[
groupId range: [0, 4]
--]]
function NETWORK.NETWORK_SESSION_ADD_ACTIVE_MATCHMAKING_GROUP(groupId)
  native.invoke(
    Type.Void, 2796, false,
    arg(Type.Int, groupId)
  )
end

-- void NETWORK_SESSION_SET_UNIQUE_CREW_LIMIT(Any p0) // 0xF49ABC20D8552257
function NETWORK.NETWORK_SESSION_SET_UNIQUE_CREW_LIMIT(p0)
  native.invoke(
    Type.Void, 2797, false,
    arg(Type.Any, p0)
  )
end

-- int NETWORK_SESSION_GET_UNIQUE_CREW_LIMIT() // 0xCDC936BF35EDCB73
function NETWORK.NETWORK_SESSION_GET_UNIQUE_CREW_LIMIT()
  return native.invoke(
    Type.Int, 2798, false
  )
end

-- void NETWORK_SESSION_SET_UNIQUE_CREW_LIMIT_TRANSITION(Any p0) // 0x4811BBAC21C5FCD5
function NETWORK.NETWORK_SESSION_SET_UNIQUE_CREW_LIMIT_TRANSITION(p0)
  native.invoke(
    Type.Void, 2799, false,
    arg(Type.Any, p0)
  )
end

-- void NETWORK_SESSION_SET_UNIQUE_CREW_ONLY_CREWS_TRANSITION(BOOL p0) // 0x5539C3EBF104A53A
function NETWORK.NETWORK_SESSION_SET_UNIQUE_CREW_ONLY_CREWS_TRANSITION(p0)
  native.invoke(
    Type.Void, 2800, false,
    arg(Type.Bool, p0)
  )
end

-- void NETWORK_SESSION_SET_CREW_LIMIT_MAX_MEMBERS_TRANSITION(Any p0) // 0x702BC4D605522539
function NETWORK.NETWORK_SESSION_SET_CREW_LIMIT_MAX_MEMBERS_TRANSITION(p0)
  native.invoke(
    Type.Void, 2801, false,
    arg(Type.Any, p0)
  )
end

-- void NETWORK_SESSION_SET_MATCHMAKING_PROPERTY_ID(BOOL p0) // 0x3F52E880AAF6C8CA
function NETWORK.NETWORK_SESSION_SET_MATCHMAKING_PROPERTY_ID(p0)
  native.invoke(
    Type.Void, 2802, false,
    arg(Type.Bool, p0)
  )
end

-- void NETWORK_SESSION_SET_MATCHMAKING_MENTAL_STATE(int p0) // 0xF1EEA2DDA9FFA69D
--[[
p0 in the decompiled scripts is always the stat mesh_texblend * 0.07 to int
--]]
function NETWORK.NETWORK_SESSION_SET_MATCHMAKING_MENTAL_STATE(p0)
  native.invoke(
    Type.Void, 2803, false,
    arg(Type.Int, p0)
  )
end

-- void NETWORK_SESSION_SET_NUM_BOSSES(int num) // 0x59D421683D31835A
function NETWORK.NETWORK_SESSION_SET_NUM_BOSSES(num)
  native.invoke(
    Type.Void, 2804, false,
    arg(Type.Int, num)
  )
end

-- void NETWORK_SESSION_SET_SCRIPT_VALIDATE_JOIN() // 0x1153FA02A659051C
function NETWORK.NETWORK_SESSION_SET_SCRIPT_VALIDATE_JOIN()
  native.invoke(
    Type.Void, 2805, false
  )
end

-- void NETWORK_SESSION_VALIDATE_JOIN(BOOL p0) // 0xC19F6C8E7865A6FF
function NETWORK.NETWORK_SESSION_VALIDATE_JOIN(p0)
  native.invoke(
    Type.Void, 2806, false,
    arg(Type.Bool, p0)
  )
end

-- void NETWORK_ADD_FOLLOWERS(int* p0, int p1) // 0x236406F60CF216D6
--[[
..
--]]
function NETWORK.NETWORK_ADD_FOLLOWERS(p0, p1)
  native.invoke(
    Type.Void, 2807, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1)
  )
end

-- void NETWORK_CLEAR_FOLLOWERS() // 0x058F43EC59A8631A
function NETWORK.NETWORK_CLEAR_FOLLOWERS()
  native.invoke(
    Type.Void, 2808, false
  )
end

-- void NETWORK_GET_GLOBAL_MULTIPLAYER_CLOCK(int* hours, int* minutes, int* seconds) // 0x6D03BFBD643B2A02
function NETWORK.NETWORK_GET_GLOBAL_MULTIPLAYER_CLOCK(hours, minutes, seconds)
  native.invoke(
    Type.Void, 2809, false,
    arg(Type.Int, hours),
    arg(Type.Int, minutes),
    arg(Type.Int, seconds)
  )
end

-- void NETWORK_SESSION_SET_GAMEMODE(Any p0) // 0x600F8CB31C7AAB6E
function NETWORK.NETWORK_SESSION_SET_GAMEMODE(p0)
  native.invoke(
    Type.Void, 2810, false,
    arg(Type.Any, p0)
  )
end

-- int NETWORK_SESSION_GET_HOST_AIM_PREFERENCE() // 0xDFFA5BE8381C3314
function NETWORK.NETWORK_SESSION_GET_HOST_AIM_PREFERENCE()
  return native.invoke(
    Type.Int, 2811, false
  )
end

-- BOOL NETWORK_FIND_GAMERS_IN_CREW(int crewId) // 0xE532D6811B3A4D2A
function NETWORK.NETWORK_FIND_GAMERS_IN_CREW(crewId)
  return native.invoke(
    Type.Bool, 2812, false,
    arg(Type.Int, crewId)
  )
end

-- BOOL NETWORK_FIND_MATCHED_GAMERS(int attribute, float fallbackLimit, float lowerLimit, float upperLimit) // 0xF7B2CFDE5C9F700D
--[[
Uses attributes to find players with similar stats. Upper/Lower limit must be above zero or the fallback limit +/-0.1 is used.
There can be up to 15 attributes, they are as follows:

0 = Races
1 = Parachuting
2 = Horde
3 = Darts
4 = Arm Wrestling
5 = Tennis
6 = Golf
7 = Shooting Range
8 = Deathmatch
9 = MPPLY_MCMWIN/MPPLY_CRMISSION
--]]
function NETWORK.NETWORK_FIND_MATCHED_GAMERS(attribute, fallbackLimit, lowerLimit, upperLimit)
  return native.invoke(
    Type.Bool, 2813, false,
    arg(Type.Int, attribute),
    arg(Type.Float, fallbackLimit),
    arg(Type.Float, lowerLimit),
    arg(Type.Float, upperLimit)
  )
end

-- BOOL NETWORK_IS_FINDING_GAMERS() // 0xDDDF64C91BFCF0AA
function NETWORK.NETWORK_IS_FINDING_GAMERS()
  return native.invoke(
    Type.Bool, 2814, false
  )
end

-- BOOL NETWORK_DID_FIND_GAMERS_SUCCEED() // 0xF9B83B77929D8863
function NETWORK.NETWORK_DID_FIND_GAMERS_SUCCEED()
  return native.invoke(
    Type.Bool, 2815, false
  )
end

-- int NETWORK_GET_NUM_FOUND_GAMERS() // 0xA1B043EE79A916FB
function NETWORK.NETWORK_GET_NUM_FOUND_GAMERS()
  return native.invoke(
    Type.Int, 2816, false
  )
end

-- BOOL NETWORK_GET_FOUND_GAMER(Any* p0, Any p1) // 0x9DCFF2AFB68B3476
function NETWORK.NETWORK_GET_FOUND_GAMER(p0, p1)
  return native.invoke(
    Type.Bool, 2817, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_CLEAR_FOUND_GAMERS() // 0x6D14CCEE1B40381A
function NETWORK.NETWORK_CLEAR_FOUND_GAMERS()
  native.invoke(
    Type.Void, 2818, false
  )
end

-- BOOL NETWORK_QUEUE_GAMER_FOR_STATUS(Any* p0) // 0x85A0EF54A500882C
function NETWORK.NETWORK_QUEUE_GAMER_FOR_STATUS(p0)
  return native.invoke(
    Type.Bool, 2819, false,
    arg(Type.Any, p0)
  )
end

-- BOOL NETWORK_GET_GAMER_STATUS_FROM_QUEUE() // 0x2CC848A861D01493
function NETWORK.NETWORK_GET_GAMER_STATUS_FROM_QUEUE()
  return native.invoke(
    Type.Bool, 2820, false
  )
end

-- BOOL NETWORK_IS_GETTING_GAMER_STATUS() // 0x94A8394D150B013A
function NETWORK.NETWORK_IS_GETTING_GAMER_STATUS()
  return native.invoke(
    Type.Bool, 2821, false
  )
end

-- BOOL NETWORK_DID_GET_GAMER_STATUS_SUCCEED() // 0x5AE17C6B0134B7F1
function NETWORK.NETWORK_DID_GET_GAMER_STATUS_SUCCEED()
  return native.invoke(
    Type.Bool, 2822, false
  )
end

-- BOOL NETWORK_GET_GAMER_STATUS_RESULT(Any* p0, Any p1) // 0x02A8BEC6FD9AF660
function NETWORK.NETWORK_GET_GAMER_STATUS_RESULT(p0, p1)
  return native.invoke(
    Type.Bool, 2823, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_CLEAR_GET_GAMER_STATUS() // 0x86E0660E4F5C956D
function NETWORK.NETWORK_CLEAR_GET_GAMER_STATUS()
  native.invoke(
    Type.Void, 2824, false
  )
end

-- void NETWORK_SESSION_JOIN_INVITE() // 0xC6F8AB8A4189CF3A
function NETWORK.NETWORK_SESSION_JOIN_INVITE()
  native.invoke(
    Type.Void, 2825, false
  )
end

-- void NETWORK_SESSION_CANCEL_INVITE() // 0x2FBF47B1B36D36F9
function NETWORK.NETWORK_SESSION_CANCEL_INVITE()
  native.invoke(
    Type.Void, 2826, false
  )
end

-- void NETWORK_SESSION_FORCE_CANCEL_INVITE() // 0xA29177F7703B5644
function NETWORK.NETWORK_SESSION_FORCE_CANCEL_INVITE()
  native.invoke(
    Type.Void, 2827, false
  )
end

-- BOOL NETWORK_HAS_PENDING_INVITE() // 0xAC8C7B9B88C4A668
function NETWORK.NETWORK_HAS_PENDING_INVITE()
  return native.invoke(
    Type.Bool, 2828, false
  )
end

-- BOOL NETWORK_HAS_CONFIRMED_INVITE() // 0xC42DD763159F3461
function NETWORK.NETWORK_HAS_CONFIRMED_INVITE()
  return native.invoke(
    Type.Bool, 2829, false
  )
end

-- BOOL NETWORK_REQUEST_INVITE_CONFIRMED_EVENT() // 0x62A0296C1BB1CEB3
--[[
Triggers a CEventNetworkInviteConfirmed event
--]]
function NETWORK.NETWORK_REQUEST_INVITE_CONFIRMED_EVENT()
  return native.invoke(
    Type.Bool, 2830, false
  )
end

-- BOOL NETWORK_SESSION_WAS_INVITED() // 0x23DFB504655D0CE4
function NETWORK.NETWORK_SESSION_WAS_INVITED()
  return native.invoke(
    Type.Bool, 2831, false
  )
end

-- void NETWORK_SESSION_GET_INVITER(Any* gamerHandle) // 0xE57397B4A3429DD0
function NETWORK.NETWORK_SESSION_GET_INVITER(gamerHandle)
  native.invoke(
    Type.Void, 2832, false,
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_SESSION_IS_AWAITING_INVITE_RESPONSE() // 0xD313DE83394AF134
--[[
Seems to be true while "Getting GTA Online session details" shows up.
--]]
function NETWORK.NETWORK_SESSION_IS_AWAITING_INVITE_RESPONSE()
  return native.invoke(
    Type.Bool, 2833, false
  )
end

-- BOOL NETWORK_SESSION_IS_DISPLAYING_INVITE_CONFIRMATION() // 0xBDB6F89C729CF388
function NETWORK.NETWORK_SESSION_IS_DISPLAYING_INVITE_CONFIRMATION()
  return native.invoke(
    Type.Bool, 2834, false
  )
end

-- void NETWORK_SUPPRESS_INVITE(BOOL toggle) // 0xA0682D67EF1FBA3D
function NETWORK.NETWORK_SUPPRESS_INVITE(toggle)
  native.invoke(
    Type.Void, 2835, false,
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_BLOCK_INVITES(BOOL toggle) // 0x34F9E9049454A7A0
function NETWORK.NETWORK_BLOCK_INVITES(toggle)
  native.invoke(
    Type.Void, 2836, false,
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_BLOCK_JOIN_QUEUE_INVITES(BOOL toggle) // 0xCFEB8AF24FC1D0BB
function NETWORK.NETWORK_BLOCK_JOIN_QUEUE_INVITES(toggle)
  native.invoke(
    Type.Void, 2837, false,
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_SET_CAN_RECEIVE_RS_INVITES(BOOL p0) // 0x68980414688F7F9D
function NETWORK.NETWORK_SET_CAN_RECEIVE_RS_INVITES(p0)
  native.invoke(
    Type.Void, 2838, false,
    arg(Type.Bool, p0)
  )
end

-- void NETWORK_STORE_INVITE_THROUGH_RESTART() // 0xF814FEC6A19FD6E0
function NETWORK.NETWORK_STORE_INVITE_THROUGH_RESTART()
  native.invoke(
    Type.Void, 2839, false
  )
end

-- void NETWORK_ALLOW_INVITE_PROCESS_IN_PLAYER_SWITCH(BOOL p0) // 0x6B07B9CE4D390375
function NETWORK.NETWORK_ALLOW_INVITE_PROCESS_IN_PLAYER_SWITCH(p0)
  native.invoke(
    Type.Void, 2840, false,
    arg(Type.Bool, p0)
  )
end

-- void NETWORK_SET_SCRIPT_READY_FOR_EVENTS(BOOL toggle) // 0x7AC752103856FB20
function NETWORK.NETWORK_SET_SCRIPT_READY_FOR_EVENTS(toggle)
  native.invoke(
    Type.Void, 2841, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL NETWORK_IS_OFFLINE_INVITE_PENDING() // 0x74698374C45701D2
function NETWORK.NETWORK_IS_OFFLINE_INVITE_PENDING()
  return native.invoke(
    Type.Bool, 2842, false
  )
end

-- void NETWORK_CLEAR_OFFLINE_INVITE_PENDING() // 0x140E6A44870A11CE
function NETWORK.NETWORK_CLEAR_OFFLINE_INVITE_PENDING()
  native.invoke(
    Type.Void, 2843, false
  )
end

-- void NETWORK_SESSION_HOST_SINGLE_PLAYER(int p0) // 0xC74C33FCA52856D5
--[[
Loads up the map that is loaded when beeing in mission creator
Player gets placed in a mix between online/offline mode
p0 is always 2 in R* scripts.

Appears to be patched in gtav b757 (game gets terminated) alonside with most other network natives to prevent online modding ~ghost30812
--]]
function NETWORK.NETWORK_SESSION_HOST_SINGLE_PLAYER(p0)
  native.invoke(
    Type.Void, 2844, false,
    arg(Type.Int, p0)
  )
end

-- void NETWORK_SESSION_LEAVE_SINGLE_PLAYER() // 0x3442775428FD2DAA
function NETWORK.NETWORK_SESSION_LEAVE_SINGLE_PLAYER()
  native.invoke(
    Type.Void, 2845, false
  )
end

-- BOOL NETWORK_IS_GAME_IN_PROGRESS() // 0x10FAB35428CCC9D7
function NETWORK.NETWORK_IS_GAME_IN_PROGRESS()
  return native.invoke(
    Type.Bool, 2846, false
  )
end

-- BOOL NETWORK_IS_SESSION_ACTIVE() // 0xD83C2B94E7508980
function NETWORK.NETWORK_IS_SESSION_ACTIVE()
  return native.invoke(
    Type.Bool, 2847, false
  )
end

-- BOOL NETWORK_IS_IN_SESSION() // 0xCA97246103B63917
function NETWORK.NETWORK_IS_IN_SESSION()
  return native.invoke(
    Type.Bool, 2848, false
  )
end

-- BOOL _NETWORK_IS_AMERICAS_VERSION() // 0x0292BD7F3766CEBC
--[[
Hardcoded to return 0.
--]]
function NETWORK._NETWORK_IS_AMERICAS_VERSION()
  return native.invoke(
    Type.Bool, 2849, false
  )
end

-- BOOL NETWORK_IS_SESSION_STARTED() // 0x9DE624D2FC4B603F
--[[
This checks if player is playing on gta online or not.
Please add an if and block your mod if this is "true".
--]]
function NETWORK.NETWORK_IS_SESSION_STARTED()
  return native.invoke(
    Type.Bool, 2850, false
  )
end

-- BOOL NETWORK_IS_SESSION_BUSY() // 0xF4435D66A8E2905E
function NETWORK.NETWORK_IS_SESSION_BUSY()
  return native.invoke(
    Type.Bool, 2851, false
  )
end

-- BOOL NETWORK_CAN_SESSION_END() // 0x4EEBC3694E49C572
function NETWORK.NETWORK_CAN_SESSION_END()
  return native.invoke(
    Type.Bool, 2852, false
  )
end

-- int NETWORK_GET_GAME_MODE() // 0x4C9034162368E206
function NETWORK.NETWORK_GET_GAME_MODE()
  return native.invoke(
    Type.Int, 2853, false
  )
end

-- void NETWORK_SESSION_MARK_VISIBLE(BOOL toggle) // 0x271CC6AB59EBF9A5
function NETWORK.NETWORK_SESSION_MARK_VISIBLE(toggle)
  native.invoke(
    Type.Void, 2854, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL NETWORK_SESSION_IS_VISIBLE() // 0xBA416D68C631496A
function NETWORK.NETWORK_SESSION_IS_VISIBLE()
  return native.invoke(
    Type.Bool, 2855, false
  )
end

-- void NETWORK_SESSION_BLOCK_JOIN_REQUESTS(BOOL toggle) // 0xA73667484D7037C3
function NETWORK.NETWORK_SESSION_BLOCK_JOIN_REQUESTS(toggle)
  native.invoke(
    Type.Void, 2856, false,
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_SESSION_CHANGE_SLOTS(int slots, BOOL p1) // 0xB4AB419E0D86ACAE
--[[
num player slots allowed in session, seems to work? 32 max
--]]
function NETWORK.NETWORK_SESSION_CHANGE_SLOTS(slots, p1)
  native.invoke(
    Type.Void, 2857, false,
    arg(Type.Int, slots),
    arg(Type.Bool, p1)
  )
end

-- int NETWORK_SESSION_GET_PRIVATE_SLOTS() // 0x53AFD64C6758F2F9
function NETWORK.NETWORK_SESSION_GET_PRIVATE_SLOTS()
  return native.invoke(
    Type.Int, 2858, false
  )
end

-- BOOL NETWORK_SESSION_VOICE_HOST() // 0x9C1556705F864230
function NETWORK.NETWORK_SESSION_VOICE_HOST()
  return native.invoke(
    Type.Bool, 2859, false
  )
end

-- BOOL NETWORK_SESSION_VOICE_LEAVE() // 0x6793E42BE02B575D
function NETWORK.NETWORK_SESSION_VOICE_LEAVE()
  return native.invoke(
    Type.Bool, 2860, false
  )
end

-- void NETWORK_SESSION_VOICE_CONNECT_TO_PLAYER(Any* gamerHandle) // 0xABD5E88B8A2D3DB2
function NETWORK.NETWORK_SESSION_VOICE_CONNECT_TO_PLAYER(gamerHandle)
  native.invoke(
    Type.Void, 2861, false,
    arg(Type.Any, gamerHandle)
  )
end

-- void NETWORK_SESSION_VOICE_RESPOND_TO_REQUEST(BOOL p0, int p1) // 0x7F8413B7FC2AA6B9
function NETWORK.NETWORK_SESSION_VOICE_RESPOND_TO_REQUEST(p0, p1)
  native.invoke(
    Type.Void, 2862, false,
    arg(Type.Bool, p0),
    arg(Type.Int, p1)
  )
end

-- void NETWORK_SESSION_VOICE_SET_TIMEOUT(int timeout) // 0x5B8ED3DB018927B1
function NETWORK.NETWORK_SESSION_VOICE_SET_TIMEOUT(timeout)
  native.invoke(
    Type.Void, 2863, false,
    arg(Type.Int, timeout)
  )
end

-- BOOL NETWORK_SESSION_IS_IN_VOICE_SESSION() // 0x855BC38818F6F684
function NETWORK.NETWORK_SESSION_IS_IN_VOICE_SESSION()
  return native.invoke(
    Type.Bool, 2864, false
  )
end

-- BOOL NETWORK_SESSION_IS_VOICE_SESSION_ACTIVE() // 0xB5D3453C98456528
function NETWORK.NETWORK_SESSION_IS_VOICE_SESSION_ACTIVE()
  return native.invoke(
    Type.Bool, 2865, false
  )
end

-- BOOL NETWORK_SESSION_IS_VOICE_SESSION_BUSY() // 0xEF0912DDF7C4CB4B
function NETWORK.NETWORK_SESSION_IS_VOICE_SESSION_BUSY()
  return native.invoke(
    Type.Bool, 2866, false
  )
end

-- BOOL NETWORK_SEND_TEXT_MESSAGE(const char* message, Any* gamerHandle) // 0x3A214F2EC889B100
--[[
Message is limited to 64 characters.
--]]
function NETWORK.NETWORK_SEND_TEXT_MESSAGE(message, gamerHandle)
  return native.invoke(
    Type.Bool, 2867, false,
    arg(Type.String, message),
    arg(Type.Any, gamerHandle)
  )
end

-- void NETWORK_SET_ACTIVITY_SPECTATOR(BOOL toggle) // 0x75138790B4359A74
function NETWORK.NETWORK_SET_ACTIVITY_SPECTATOR(toggle)
  native.invoke(
    Type.Void, 2868, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL NETWORK_IS_ACTIVITY_SPECTATOR() // 0x12103B9E0C9F92FB
function NETWORK.NETWORK_IS_ACTIVITY_SPECTATOR()
  return native.invoke(
    Type.Bool, 2869, false
  )
end

-- void NETWORK_SET_ACTIVITY_PLAYER_MAX(Any p0) // 0x0E4F77F7B9D74D84
function NETWORK.NETWORK_SET_ACTIVITY_PLAYER_MAX(p0)
  native.invoke(
    Type.Void, 2870, false,
    arg(Type.Any, p0)
  )
end

-- void NETWORK_SET_ACTIVITY_SPECTATOR_MAX(int maxSpectators) // 0x9D277B76D1D12222
function NETWORK.NETWORK_SET_ACTIVITY_SPECTATOR_MAX(maxSpectators)
  native.invoke(
    Type.Void, 2871, false,
    arg(Type.Int, maxSpectators)
  )
end

-- int NETWORK_GET_ACTIVITY_PLAYER_NUM(BOOL p0) // 0x73E2B500410DA5A2
function NETWORK.NETWORK_GET_ACTIVITY_PLAYER_NUM(p0)
  return native.invoke(
    Type.Int, 2872, false,
    arg(Type.Bool, p0)
  )
end

-- BOOL NETWORK_IS_ACTIVITY_SPECTATOR_FROM_HANDLE(Any* gamerHandle) // 0x2763BBAA72A7BCB9
function NETWORK.NETWORK_IS_ACTIVITY_SPECTATOR_FROM_HANDLE(gamerHandle)
  return native.invoke(
    Type.Bool, 2873, false,
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_HOST_TRANSITION(int p0, int p1, int p2, int p3, Any p4, BOOL p5, BOOL p6, int p7, Any p8, int p9) // 0xA60BB5CE242BB254
--[[
p0: Unknown int
p1: Unknown int
p2: Unknown int
p3: Unknown int
p4: Unknown always 0 in decompiled scripts
p5: BOOL purpose unknown, both 0 and 1 are used in decompiled scripts.
p6: BOOL purpose unknown, both 0 and 1 are used in decompiled scripts.
p7: Unknown int, it's an int according to decompiled scripts, however the value is always 0 or 1.
p8: Unknown int, it's an int according to decompiled scripts, however the value is always 0 or 1.
p9: Unknown int, sometimes 0, but also 32768 or 16384 appear in decompiled scripst, maybe a flag of some sort?

From what I can tell it looks like it does the following:
Creates/hosts a new transition to another online session, using this in FiveM will result in other players being disconencted from the server/preventing them from joining. This is most likely because I entered the wrong session parameters since they're pretty much all unknown right now.
You also need to use `NetworkJoinTransition(Player player)` and `NetworkLaunchTransition()`.
--]]
function NETWORK.NETWORK_HOST_TRANSITION(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
  return native.invoke(
    Type.Bool, 2874, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1),
    arg(Type.Int, p2),
    arg(Type.Int, p3),
    arg(Type.Any, p4),
    arg(Type.Bool, p5),
    arg(Type.Bool, p6),
    arg(Type.Int, p7),
    arg(Type.Any, p8),
    arg(Type.Int, p9)
  )
end

-- BOOL NETWORK_DO_TRANSITION_QUICKMATCH(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) // 0x71FB0EBCD4915D56
function NETWORK.NETWORK_DO_TRANSITION_QUICKMATCH(p0, p1, p2, p3, p4, p5)
  return native.invoke(
    Type.Bool, 2875, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5)
  )
end

-- BOOL NETWORK_DO_TRANSITION_QUICKMATCH_ASYNC(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) // 0xA091A5E44F0072E5
function NETWORK.NETWORK_DO_TRANSITION_QUICKMATCH_ASYNC(p0, p1, p2, p3, p4, p5)
  return native.invoke(
    Type.Bool, 2876, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5)
  )
end

-- BOOL NETWORK_DO_TRANSITION_QUICKMATCH_WITH_GROUP(Any p0, Any p1, Any p2, Any p3, Any* p4, Any p5, Any p6, Any p7) // 0x9C4AB58491FDC98A
function NETWORK.NETWORK_DO_TRANSITION_QUICKMATCH_WITH_GROUP(p0, p1, p2, p3, p4, p5, p6, p7)
  return native.invoke(
    Type.Bool, 2877, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5),
    arg(Type.Any, p6),
    arg(Type.Any, p7)
  )
end

-- BOOL NETWORK_JOIN_GROUP_ACTIVITY() // 0xA06509A691D12BE4
function NETWORK.NETWORK_JOIN_GROUP_ACTIVITY()
  return native.invoke(
    Type.Bool, 2878, false
  )
end

-- void NETWORK_CLEAR_GROUP_ACTIVITY() // 0x1888694923EF4591
function NETWORK.NETWORK_CLEAR_GROUP_ACTIVITY()
  native.invoke(
    Type.Void, 2879, false
  )
end

-- void NETWORK_RETAIN_ACTIVITY_GROUP() // 0xB13E88E655E5A3BC
function NETWORK.NETWORK_RETAIN_ACTIVITY_GROUP()
  native.invoke(
    Type.Void, 2880, false
  )
end

-- BOOL NETWORK_IS_TRANSITION_CLOSED_FRIENDS() // 0x6512765E3BE78C50
function NETWORK.NETWORK_IS_TRANSITION_CLOSED_FRIENDS()
  return native.invoke(
    Type.Bool, 2881, false
  )
end

-- BOOL NETWORK_IS_TRANSITION_CLOSED_CREW() // 0x0DBD5D7E3C5BEC3B
function NETWORK.NETWORK_IS_TRANSITION_CLOSED_CREW()
  return native.invoke(
    Type.Bool, 2882, false
  )
end

-- BOOL NETWORK_IS_TRANSITION_SOLO() // 0x5DC577201723960A
function NETWORK.NETWORK_IS_TRANSITION_SOLO()
  return native.invoke(
    Type.Bool, 2883, false
  )
end

-- BOOL NETWORK_IS_TRANSITION_PRIVATE() // 0x5A6AA44FF8E931E6
function NETWORK.NETWORK_IS_TRANSITION_PRIVATE()
  return native.invoke(
    Type.Bool, 2884, false
  )
end

-- int NETWORK_GET_NUM_TRANSITION_NON_ASYNC_GAMERS() // 0x617F49C2668E6155
function NETWORK.NETWORK_GET_NUM_TRANSITION_NON_ASYNC_GAMERS()
  return native.invoke(
    Type.Int, 2885, false
  )
end

-- void NETWORK_MARK_AS_PREFERRED_ACTIVITY(BOOL p0) // 0x261E97AD7BCF3D40
function NETWORK.NETWORK_MARK_AS_PREFERRED_ACTIVITY(p0)
  native.invoke(
    Type.Void, 2886, false,
    arg(Type.Bool, p0)
  )
end

-- void NETWORK_MARK_AS_WAITING_ASYNC(BOOL p0) // 0x39917E1B4CB0F911
function NETWORK.NETWORK_MARK_AS_WAITING_ASYNC(p0)
  native.invoke(
    Type.Void, 2887, false,
    arg(Type.Bool, p0)
  )
end

-- void NETWORK_SET_IN_PROGRESS_FINISH_TIME(Any p0) // 0x2CE9D95E4051AECD
function NETWORK.NETWORK_SET_IN_PROGRESS_FINISH_TIME(p0)
  native.invoke(
    Type.Void, 2888, false,
    arg(Type.Any, p0)
  )
end

-- void NETWORK_SET_TRANSITION_CREATOR_HANDLE(Any* p0) // 0xEF26739BCD9907D5
function NETWORK.NETWORK_SET_TRANSITION_CREATOR_HANDLE(p0)
  native.invoke(
    Type.Void, 2889, false,
    arg(Type.Any, p0)
  )
end

-- void NETWORK_CLEAR_TRANSITION_CREATOR_HANDLE() // 0xFB3272229A82C759
function NETWORK.NETWORK_CLEAR_TRANSITION_CREATOR_HANDLE()
  native.invoke(
    Type.Void, 2890, false
  )
end

-- BOOL NETWORK_INVITE_GAMERS_TO_TRANSITION(Any* p0, Any p1) // 0x4A595C32F77DFF76
function NETWORK.NETWORK_INVITE_GAMERS_TO_TRANSITION(p0, p1)
  return native.invoke(
    Type.Bool, 2891, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_SET_GAMER_INVITED_TO_TRANSITION(Any* gamerHandle) // 0xCA2C8073411ECDB6
function NETWORK.NETWORK_SET_GAMER_INVITED_TO_TRANSITION(gamerHandle)
  native.invoke(
    Type.Void, 2892, false,
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_LEAVE_TRANSITION() // 0xD23A1A815D21DB19
function NETWORK.NETWORK_LEAVE_TRANSITION()
  return native.invoke(
    Type.Bool, 2893, false
  )
end

-- BOOL NETWORK_LAUNCH_TRANSITION() // 0x2DCF46CB1A4F0884
function NETWORK.NETWORK_LAUNCH_TRANSITION()
  return native.invoke(
    Type.Bool, 2894, false
  )
end

-- void NETWORK_SET_DO_NOT_LAUNCH_FROM_JOIN_AS_MIGRATED_HOST(BOOL toggle) // 0xA2E9C1AB8A92E8CD
--[[
Appears to set whether a transition should be started when the session is migrating.
--]]
function NETWORK.NETWORK_SET_DO_NOT_LAUNCH_FROM_JOIN_AS_MIGRATED_HOST(toggle)
  native.invoke(
    Type.Void, 2895, false,
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_CANCEL_TRANSITION_MATCHMAKING() // 0x023782EFC70585EE
function NETWORK.NETWORK_CANCEL_TRANSITION_MATCHMAKING()
  native.invoke(
    Type.Void, 2896, false
  )
end

-- void NETWORK_BAIL_TRANSITION(int p0, int p1, int p2) // 0xEAA572036990CD1B
function NETWORK.NETWORK_BAIL_TRANSITION(p0, p1, p2)
  native.invoke(
    Type.Void, 2897, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1),
    arg(Type.Int, p2)
  )
end

-- BOOL NETWORK_DO_TRANSITION_TO_GAME(BOOL p0, int maxPlayers) // 0x3E9BB38102A589B0
function NETWORK.NETWORK_DO_TRANSITION_TO_GAME(p0, maxPlayers)
  return native.invoke(
    Type.Bool, 2898, false,
    arg(Type.Bool, p0),
    arg(Type.Int, maxPlayers)
  )
end

-- BOOL NETWORK_DO_TRANSITION_TO_NEW_GAME(BOOL p0, int maxPlayers, BOOL p2) // 0x4665F51EFED00034
function NETWORK.NETWORK_DO_TRANSITION_TO_NEW_GAME(p0, maxPlayers, p2)
  return native.invoke(
    Type.Bool, 2899, false,
    arg(Type.Bool, p0),
    arg(Type.Int, maxPlayers),
    arg(Type.Bool, p2)
  )
end

-- BOOL NETWORK_DO_TRANSITION_TO_FREEMODE(Any* p0, Any p1, BOOL p2, int players, BOOL p4) // 0x3AAD8B2FCA1E289F
--[[
p2 is true 3/4 of the occurrences I found.
'players' is the number of players for a session. On PS3/360 it's always 18. On PC it's 32.
--]]
function NETWORK.NETWORK_DO_TRANSITION_TO_FREEMODE(p0, p1, p2, players, p4)
  return native.invoke(
    Type.Bool, 2900, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Bool, p2),
    arg(Type.Int, players),
    arg(Type.Bool, p4)
  )
end

-- BOOL NETWORK_DO_TRANSITION_TO_NEW_FREEMODE(Any* p0, Any p1, int players, BOOL p3, BOOL p4, BOOL p5) // 0x9E80A5BA8109F974
function NETWORK.NETWORK_DO_TRANSITION_TO_NEW_FREEMODE(p0, p1, players, p3, p4, p5)
  return native.invoke(
    Type.Bool, 2901, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Int, players),
    arg(Type.Bool, p3),
    arg(Type.Bool, p4),
    arg(Type.Bool, p5)
  )
end

-- BOOL NETWORK_IS_TRANSITION_TO_GAME() // 0x9D7696D8F4FA6CB7
function NETWORK.NETWORK_IS_TRANSITION_TO_GAME()
  return native.invoke(
    Type.Bool, 2902, false
  )
end

-- int NETWORK_GET_TRANSITION_MEMBERS(Any* data, int dataCount) // 0x73B000F7FBC55829
--[[
Returns count.
--]]
function NETWORK.NETWORK_GET_TRANSITION_MEMBERS(data, dataCount)
  return native.invoke(
    Type.Int, 2903, false,
    arg(Type.Any, data),
    arg(Type.Int, dataCount)
  )
end

-- void NETWORK_APPLY_TRANSITION_PARAMETER(int p0, int p1) // 0x521638ADA1BA0D18
function NETWORK.NETWORK_APPLY_TRANSITION_PARAMETER(p0, p1)
  native.invoke(
    Type.Void, 2904, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1)
  )
end

-- void NETWORK_APPLY_TRANSITION_PARAMETER_STRING(int p0, const char* string, BOOL p2) // 0xEBEFC2E77084F599
function NETWORK.NETWORK_APPLY_TRANSITION_PARAMETER_STRING(p0, string, p2)
  native.invoke(
    Type.Void, 2905, false,
    arg(Type.Int, p0),
    arg(Type.String, string),
    arg(Type.Bool, p2)
  )
end

-- BOOL NETWORK_SEND_TRANSITION_GAMER_INSTRUCTION(Any* gamerHandle, const char* p1, int p2, int p3, BOOL p4) // 0x31D1D2B858D25E6B
function NETWORK.NETWORK_SEND_TRANSITION_GAMER_INSTRUCTION(gamerHandle, p1, p2, p3, p4)
  return native.invoke(
    Type.Bool, 2906, false,
    arg(Type.Any, gamerHandle),
    arg(Type.String, p1),
    arg(Type.Int, p2),
    arg(Type.Int, p3),
    arg(Type.Bool, p4)
  )
end

-- BOOL NETWORK_MARK_TRANSITION_GAMER_AS_FULLY_JOINED(Any* p0) // 0x5728BB6D63E3FF1D
function NETWORK.NETWORK_MARK_TRANSITION_GAMER_AS_FULLY_JOINED(p0)
  return native.invoke(
    Type.Bool, 2907, false,
    arg(Type.Any, p0)
  )
end

-- BOOL NETWORK_IS_TRANSITION_HOST() // 0x0B824797C9BF2159
function NETWORK.NETWORK_IS_TRANSITION_HOST()
  return native.invoke(
    Type.Bool, 2908, false
  )
end

-- BOOL NETWORK_IS_TRANSITION_HOST_FROM_HANDLE(Any* gamerHandle) // 0x6B5C83BA3EFE6A10
function NETWORK.NETWORK_IS_TRANSITION_HOST_FROM_HANDLE(gamerHandle)
  return native.invoke(
    Type.Bool, 2909, false,
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_GET_TRANSITION_HOST(Any* gamerHandle) // 0x65042B9774C4435E
function NETWORK.NETWORK_GET_TRANSITION_HOST(gamerHandle)
  return native.invoke(
    Type.Bool, 2910, false,
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_IS_IN_TRANSITION() // 0x68049AEFF83D8F0A
function NETWORK.NETWORK_IS_IN_TRANSITION()
  return native.invoke(
    Type.Bool, 2911, false
  )
end

-- BOOL NETWORK_IS_TRANSITION_STARTED() // 0x53FA83401D9C07FE
function NETWORK.NETWORK_IS_TRANSITION_STARTED()
  return native.invoke(
    Type.Bool, 2912, false
  )
end

-- BOOL NETWORK_IS_TRANSITION_BUSY() // 0x520F3282A53D26B7
function NETWORK.NETWORK_IS_TRANSITION_BUSY()
  return native.invoke(
    Type.Bool, 2913, false
  )
end

-- BOOL NETWORK_IS_TRANSITION_MATCHMAKING() // 0x292564C735375EDF
function NETWORK.NETWORK_IS_TRANSITION_MATCHMAKING()
  return native.invoke(
    Type.Bool, 2914, false
  )
end

-- BOOL NETWORK_IS_TRANSITION_LEAVE_POSTPONED() // 0xC571D0E77D8BBC29
function NETWORK.NETWORK_IS_TRANSITION_LEAVE_POSTPONED()
  return native.invoke(
    Type.Bool, 2915, false
  )
end

-- void NETWORK_TRANSITION_SET_IN_PROGRESS(Any p0) // 0x1398582B7F72B3ED
function NETWORK.NETWORK_TRANSITION_SET_IN_PROGRESS(p0)
  native.invoke(
    Type.Void, 2916, false,
    arg(Type.Any, p0)
  )
end

-- void NETWORK_TRANSITION_SET_CONTENT_CREATOR(Any p0) // 0x1F8E00FB18239600
function NETWORK.NETWORK_TRANSITION_SET_CONTENT_CREATOR(p0)
  native.invoke(
    Type.Void, 2917, false,
    arg(Type.Any, p0)
  )
end

-- void NETWORK_TRANSITION_SET_ACTIVITY_ISLAND(Any p0) // 0xF6F4383B7C92F11A
function NETWORK.NETWORK_TRANSITION_SET_ACTIVITY_ISLAND(p0)
  native.invoke(
    Type.Void, 2918, false,
    arg(Type.Any, p0)
  )
end

-- void NETWORK_OPEN_TRANSITION_MATCHMAKING() // 0x2B3A8F7CA3A38FDE
function NETWORK.NETWORK_OPEN_TRANSITION_MATCHMAKING()
  native.invoke(
    Type.Void, 2919, false
  )
end

-- void NETWORK_CLOSE_TRANSITION_MATCHMAKING() // 0x43F4DBA69710E01E
function NETWORK.NETWORK_CLOSE_TRANSITION_MATCHMAKING()
  native.invoke(
    Type.Void, 2920, false
  )
end

-- BOOL NETWORK_IS_TRANSITION_OPEN_TO_MATCHMAKING() // 0x37A4494483B9F5C9
function NETWORK.NETWORK_IS_TRANSITION_OPEN_TO_MATCHMAKING()
  return native.invoke(
    Type.Bool, 2921, false
  )
end

-- void NETWORK_SET_TRANSITION_VISIBILITY_LOCK(BOOL p0, BOOL p1) // 0x0C978FDA19692C2C
function NETWORK.NETWORK_SET_TRANSITION_VISIBILITY_LOCK(p0, p1)
  native.invoke(
    Type.Void, 2922, false,
    arg(Type.Bool, p0),
    arg(Type.Bool, p1)
  )
end

-- BOOL NETWORK_IS_TRANSITION_VISIBILITY_LOCKED() // 0xD0A484CB2F829FBE
function NETWORK.NETWORK_IS_TRANSITION_VISIBILITY_LOCKED()
  return native.invoke(
    Type.Bool, 2923, false
  )
end

-- void NETWORK_SET_TRANSITION_ACTIVITY_ID(Any p0) // 0x30DE938B516F0AD2
function NETWORK.NETWORK_SET_TRANSITION_ACTIVITY_ID(p0)
  native.invoke(
    Type.Void, 2924, false,
    arg(Type.Any, p0)
  )
end

-- void NETWORK_CHANGE_TRANSITION_SLOTS(Any p0, BOOL p1) // 0xEEEDA5E6D7080987
function NETWORK.NETWORK_CHANGE_TRANSITION_SLOTS(p0, p1)
  native.invoke(
    Type.Void, 2925, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1)
  )
end

-- void NETWORK_TRANSITION_BLOCK_JOIN_REQUESTS(BOOL p0) // 0x973D76AA760A6CB6
function NETWORK.NETWORK_TRANSITION_BLOCK_JOIN_REQUESTS(p0)
  native.invoke(
    Type.Void, 2926, false,
    arg(Type.Bool, p0)
  )
end

-- BOOL NETWORK_HAS_PLAYER_STARTED_TRANSITION(Player player) // 0x9AC9CCBFA8C29795
function NETWORK.NETWORK_HAS_PLAYER_STARTED_TRANSITION(player)
  return native.invoke(
    Type.Bool, 2927, false,
    arg(Type.Player, player)
  )
end

-- BOOL NETWORK_ARE_TRANSITION_DETAILS_VALID(Any p0) // 0x2615AA2A695930C1
function NETWORK.NETWORK_ARE_TRANSITION_DETAILS_VALID(p0)
  return native.invoke(
    Type.Bool, 2928, false,
    arg(Type.Any, p0)
  )
end

-- BOOL NETWORK_JOIN_TRANSITION(Player player) // 0x9D060B08CD63321A
--[[
int handle[76];
          NETWORK_HANDLE_FROM_FRIEND(iSelectedPlayer, &handle[0], 13);
          Player uVar2 = NETWORK_GET_PLAYER_FROM_GAMER_HANDLE(&handle[0]);
          NETWORK_JOIN_TRANSITION(uVar2);
nothing doin.
--]]
function NETWORK.NETWORK_JOIN_TRANSITION(player)
  return native.invoke(
    Type.Bool, 2929, false,
    arg(Type.Player, player)
  )
end

-- BOOL NETWORK_HAS_INVITED_GAMER_TO_TRANSITION(Any* p0) // 0x7284A47B3540E6CF
function NETWORK.NETWORK_HAS_INVITED_GAMER_TO_TRANSITION(p0)
  return native.invoke(
    Type.Bool, 2930, false,
    arg(Type.Any, p0)
  )
end

-- BOOL NETWORK_HAS_TRANSITION_INVITE_BEEN_ACKED(Any* p0) // 0x3F9990BF5F22759C
function NETWORK.NETWORK_HAS_TRANSITION_INVITE_BEEN_ACKED(p0)
  return native.invoke(
    Type.Bool, 2931, false,
    arg(Type.Any, p0)
  )
end

-- BOOL NETWORK_IS_ACTIVITY_SESSION() // 0x05095437424397FA
function NETWORK.NETWORK_IS_ACTIVITY_SESSION()
  return native.invoke(
    Type.Bool, 2932, false
  )
end

-- void NETWORK_DISABLE_REALTIME_MULTIPLAYER() // 0x236905C700FDB54D
function NETWORK.NETWORK_DISABLE_REALTIME_MULTIPLAYER()
  native.invoke(
    Type.Void, 2933, false
  )
end

-- void NETWORK_SET_PRESENCE_SESSION_INVITES_BLOCKED(BOOL toggle) // 0x4A9FDE3A5A6D0437
--[[
Does nothing. It's just a nullsub.
--]]
function NETWORK.NETWORK_SET_PRESENCE_SESSION_INVITES_BLOCKED(toggle)
  native.invoke(
    Type.Void, 2934, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL NETWORK_SEND_INVITE_VIA_PRESENCE(Any* gamerHandle, const char* p1, int dataCount, int p3) // 0xC3C7A6AFDB244624
function NETWORK.NETWORK_SEND_INVITE_VIA_PRESENCE(gamerHandle, p1, dataCount, p3)
  return native.invoke(
    Type.Bool, 2935, false,
    arg(Type.Any, gamerHandle),
    arg(Type.String, p1),
    arg(Type.Int, dataCount),
    arg(Type.Int, p3)
  )
end

-- BOOL NETWORK_SEND_TRANSITION_INVITE_VIA_PRESENCE(Any* gamerHandle, const char* p1, int dataCount, int p3) // 0xC116FF9B4D488291
function NETWORK.NETWORK_SEND_TRANSITION_INVITE_VIA_PRESENCE(gamerHandle, p1, dataCount, p3)
  return native.invoke(
    Type.Bool, 2936, false,
    arg(Type.Any, gamerHandle),
    arg(Type.String, p1),
    arg(Type.Int, dataCount),
    arg(Type.Int, p3)
  )
end

-- BOOL NETWORK_SEND_IMPORTANT_TRANSITION_INVITE_VIA_PRESENCE(Any* gamerHandle, const char* p1, int dataCount, int p3) // 0x1171A97A3D3981B6
--[[
Contains the string "NETWORK_SEND_PRESENCE_TRANSITION_INVITE" but so does 0xC116FF9B4D488291; seems to fit alphabetically here, tho.
--]]
function NETWORK.NETWORK_SEND_IMPORTANT_TRANSITION_INVITE_VIA_PRESENCE(gamerHandle, p1, dataCount, p3)
  return native.invoke(
    Type.Bool, 2937, false,
    arg(Type.Any, gamerHandle),
    arg(Type.String, p1),
    arg(Type.Int, dataCount),
    arg(Type.Int, p3)
  )
end

-- int NETWORK_GET_PRESENCE_INVITE_INDEX_BY_ID(int p0) // 0x742B58F723233ED9
function NETWORK.NETWORK_GET_PRESENCE_INVITE_INDEX_BY_ID(p0)
  return native.invoke(
    Type.Int, 2938, false,
    arg(Type.Int, p0)
  )
end

-- int NETWORK_GET_NUM_PRESENCE_INVITES() // 0xCEFA968912D0F78D
function NETWORK.NETWORK_GET_NUM_PRESENCE_INVITES()
  return native.invoke(
    Type.Int, 2939, false
  )
end

-- BOOL NETWORK_ACCEPT_PRESENCE_INVITE(int p0) // 0xFA91550DF9318B22
function NETWORK.NETWORK_ACCEPT_PRESENCE_INVITE(p0)
  return native.invoke(
    Type.Bool, 2940, false,
    arg(Type.Int, p0)
  )
end

-- BOOL NETWORK_REMOVE_PRESENCE_INVITE(int p0) // 0xF0210268DB0974B1
function NETWORK.NETWORK_REMOVE_PRESENCE_INVITE(p0)
  return native.invoke(
    Type.Bool, 2941, false,
    arg(Type.Int, p0)
  )
end

-- int NETWORK_GET_PRESENCE_INVITE_ID(int p0) // 0xDFF09646E12EC386
function NETWORK.NETWORK_GET_PRESENCE_INVITE_ID(p0)
  return native.invoke(
    Type.Int, 2942, false,
    arg(Type.Int, p0)
  )
end

-- const char* NETWORK_GET_PRESENCE_INVITE_INVITER(int p0) // 0x4962CC4AA2F345B7
function NETWORK.NETWORK_GET_PRESENCE_INVITE_INVITER(p0)
  return native.invoke(
    Type.Const char, 2943, false,
    arg(Type.Int, p0)
  )
end

-- BOOL NETWORK_GET_PRESENCE_INVITE_HANDLE(Any p0, Any* p1) // 0x38D5B0FEBB086F75
function NETWORK.NETWORK_GET_PRESENCE_INVITE_HANDLE(p0, p1)
  return native.invoke(
    Type.Bool, 2944, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- int NETWORK_GET_PRESENCE_INVITE_SESSION_ID(Any p0) // 0x26E1CD96B0903D60
function NETWORK.NETWORK_GET_PRESENCE_INVITE_SESSION_ID(p0)
  return native.invoke(
    Type.Int, 2945, false,
    arg(Type.Any, p0)
  )
end

-- const char* NETWORK_GET_PRESENCE_INVITE_CONTENT_ID(int p0) // 0x24409FC4C55CB22D
function NETWORK.NETWORK_GET_PRESENCE_INVITE_CONTENT_ID(p0)
  return native.invoke(
    Type.Const char, 2946, false,
    arg(Type.Int, p0)
  )
end

-- int NETWORK_GET_PRESENCE_INVITE_PLAYLIST_LENGTH(int p0) // 0xD39B3FFF8FFDD5BF
function NETWORK.NETWORK_GET_PRESENCE_INVITE_PLAYLIST_LENGTH(p0)
  return native.invoke(
    Type.Int, 2947, false,
    arg(Type.Int, p0)
  )
end

-- int NETWORK_GET_PRESENCE_INVITE_PLAYLIST_CURRENT(int p0) // 0x728C4CC7920CD102
function NETWORK.NETWORK_GET_PRESENCE_INVITE_PLAYLIST_CURRENT(p0)
  return native.invoke(
    Type.Int, 2948, false,
    arg(Type.Int, p0)
  )
end

-- BOOL NETWORK_GET_PRESENCE_INVITE_FROM_ADMIN(int p0) // 0x3DBF2DF0AEB7D289
function NETWORK.NETWORK_GET_PRESENCE_INVITE_FROM_ADMIN(p0)
  return native.invoke(
    Type.Bool, 2949, false,
    arg(Type.Int, p0)
  )
end

-- BOOL NETWORK_GET_PRESENCE_INVITE_IS_TOURNAMENT(Any p0) // 0x8806CEBFABD3CE05
function NETWORK.NETWORK_GET_PRESENCE_INVITE_IS_TOURNAMENT(p0)
  return native.invoke(
    Type.Bool, 2950, false,
    arg(Type.Any, p0)
  )
end

-- BOOL NETWORK_HAS_FOLLOW_INVITE() // 0x76D9B976C4C09FDE
function NETWORK.NETWORK_HAS_FOLLOW_INVITE()
  return native.invoke(
    Type.Bool, 2951, false
  )
end

-- BOOL NETWORK_ACTION_FOLLOW_INVITE() // 0xC88156EBB786F8D5
function NETWORK.NETWORK_ACTION_FOLLOW_INVITE()
  return native.invoke(
    Type.Bool, 2952, false
  )
end

-- BOOL NETWORK_CLEAR_FOLLOW_INVITE() // 0x439BFDE3CD0610F6
function NETWORK.NETWORK_CLEAR_FOLLOW_INVITE()
  return native.invoke(
    Type.Bool, 2953, false
  )
end

-- void NETWORK_REMOVE_AND_CANCEL_ALL_INVITES() // 0xEBF8284D8CADEB53
function NETWORK.NETWORK_REMOVE_AND_CANCEL_ALL_INVITES()
  native.invoke(
    Type.Void, 2954, false
  )
end

-- void NETWORK_REMOVE_TRANSITION_INVITE(Any* p0) // 0x7524B431B2E6F7EE
function NETWORK.NETWORK_REMOVE_TRANSITION_INVITE(p0)
  native.invoke(
    Type.Void, 2955, false,
    arg(Type.Any, p0)
  )
end

-- void NETWORK_REMOVE_ALL_TRANSITION_INVITE() // 0x726E0375C7A26368
function NETWORK.NETWORK_REMOVE_ALL_TRANSITION_INVITE()
  native.invoke(
    Type.Void, 2956, false
  )
end

-- void NETWORK_REMOVE_AND_CANCEL_ALL_TRANSITION_INVITES() // 0xF083835B70BA9BFE
function NETWORK.NETWORK_REMOVE_AND_CANCEL_ALL_TRANSITION_INVITES()
  native.invoke(
    Type.Void, 2957, false
  )
end

-- BOOL NETWORK_INVITE_GAMERS(Any* p0, Any p1, Any* p2, Any p3) // 0x9D80CD1D0E6327DE
function NETWORK.NETWORK_INVITE_GAMERS(p0, p1, p2, p3)
  return native.invoke(
    Type.Bool, 2958, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- BOOL NETWORK_HAS_INVITED_GAMER(Any* p0) // 0x4D86CD31E8976ECE
function NETWORK.NETWORK_HAS_INVITED_GAMER(p0)
  return native.invoke(
    Type.Bool, 2959, false,
    arg(Type.Any, p0)
  )
end

-- BOOL NETWORK_HAS_MADE_INVITE_DECISION(Any* gamerHandle) // 0x71DC455F5CD1C2B1
function NETWORK.NETWORK_HAS_MADE_INVITE_DECISION(gamerHandle)
  return native.invoke(
    Type.Bool, 2960, false,
    arg(Type.Any, gamerHandle)
  )
end

-- int NETWORK_GET_INVITE_REPLY_STATUS(Any p0) // 0x3855FB5EB2C5E8B2
function NETWORK.NETWORK_GET_INVITE_REPLY_STATUS(p0)
  return native.invoke(
    Type.Int, 2961, false,
    arg(Type.Any, p0)
  )
end

-- BOOL NETWORK_GET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU(Any* p0) // 0x74881E6BCAE2327C
function NETWORK.NETWORK_GET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU(p0)
  return native.invoke(
    Type.Bool, 2962, false,
    arg(Type.Any, p0)
  )
end

-- BOOL NETWORK_SET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU(Any* p0) // 0x7206F674F2A3B1BB
function NETWORK.NETWORK_SET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU(p0)
  return native.invoke(
    Type.Bool, 2963, false,
    arg(Type.Any, p0)
  )
end

-- void NETWORK_SET_INVITE_ON_CALL_FOR_INVITE_MENU(Any* p0) // 0x66F010A4B031A331
function NETWORK.NETWORK_SET_INVITE_ON_CALL_FOR_INVITE_MENU(p0)
  native.invoke(
    Type.Void, 2964, false,
    arg(Type.Any, p0)
  )
end

-- BOOL NETWORK_CHECK_DATA_MANAGER_SUCCEEDED_FOR_HANDLE(int p0, Any* gamerHandle) // 0x44B37CDCAE765AAE
function NETWORK.NETWORK_CHECK_DATA_MANAGER_SUCCEEDED_FOR_HANDLE(p0, gamerHandle)
  return native.invoke(
    Type.Bool, 2965, false,
    arg(Type.Int, p0),
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_CHECK_DATA_MANAGER_FOR_HANDLE(Any p0, Any* gamerHandle) // 0x4AD490AE1536933B
function NETWORK.NETWORK_CHECK_DATA_MANAGER_FOR_HANDLE(p0, gamerHandle)
  return native.invoke(
    Type.Bool, 2966, false,
    arg(Type.Any, p0),
    arg(Type.Any, gamerHandle)
  )
end

-- void NETWORK_SET_INVITE_FAILED_MESSAGE_FOR_INVITE_MENU(Any* p0, Any* p1) // 0x0D77A82DC2D0DA59
function NETWORK.NETWORK_SET_INVITE_FAILED_MESSAGE_FOR_INVITE_MENU(p0, p1)
  native.invoke(
    Type.Void, 2967, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL FILLOUT_PM_PLAYER_LIST(Any* gamerHandle, Any p1, Any p2) // 0xCBBD7C4991B64809
function NETWORK.FILLOUT_PM_PLAYER_LIST(gamerHandle, p1, p2)
  return native.invoke(
    Type.Bool, 2968, false,
    arg(Type.Any, gamerHandle),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- BOOL FILLOUT_PM_PLAYER_LIST_WITH_NAMES(Any* p0, Any* p1, Any p2, Any p3) // 0x716B6DB9D1886106
function NETWORK.FILLOUT_PM_PLAYER_LIST_WITH_NAMES(p0, p1, p2, p3)
  return native.invoke(
    Type.Bool, 2969, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- BOOL REFRESH_PLAYER_LIST_STATS(int p0) // 0xE26CCFF8094D8C74
function NETWORK.REFRESH_PLAYER_LIST_STATS(p0)
  return native.invoke(
    Type.Bool, 2970, false,
    arg(Type.Int, p0)
  )
end

-- BOOL NETWORK_SET_CURRENT_DATA_MANAGER_HANDLE(Any* p0) // 0x796A87B3B68D1F3D
function NETWORK.NETWORK_SET_CURRENT_DATA_MANAGER_HANDLE(p0)
  return native.invoke(
    Type.Bool, 2971, false,
    arg(Type.Any, p0)
  )
end

-- BOOL NETWORK_IS_IN_PLATFORM_PARTY() // 0x2FC5650B0271CB57
--[[
Hardcoded to return false.
--]]
function NETWORK.NETWORK_IS_IN_PLATFORM_PARTY()
  return native.invoke(
    Type.Bool, 2972, false
  )
end

-- int NETWORK_GET_PLATFORM_PARTY_MEMBER_COUNT() // 0x01ABCE5E7CBDA196
function NETWORK.NETWORK_GET_PLATFORM_PARTY_MEMBER_COUNT()
  return native.invoke(
    Type.Int, 2973, false
  )
end

-- int NETWORK_GET_PLATFORM_PARTY_MEMBERS(Any* data, int dataSize) // 0x120364DE2845DAF8
function NETWORK.NETWORK_GET_PLATFORM_PARTY_MEMBERS(data, dataSize)
  return native.invoke(
    Type.Int, 2974, false,
    arg(Type.Any, data),
    arg(Type.Int, dataSize)
  )
end

-- BOOL NETWORK_IS_IN_PLATFORM_PARTY_CHAT() // 0xFD8B834A8BA05048
--[[
Hardcoded to return false.
--]]
function NETWORK.NETWORK_IS_IN_PLATFORM_PARTY_CHAT()
  return native.invoke(
    Type.Bool, 2975, false
  )
end

-- BOOL NETWORK_IS_CHATTING_IN_PLATFORM_PARTY(Any* gamerHandle) // 0x8DE9945BCC9AEC52
--[[
This would be nice to see if someone is in party chat, but 2 sad notes.
1) It only becomes true if said person is speaking in that party at the time.
2) It will never, become true unless you are in that party with said person.
--]]
function NETWORK.NETWORK_IS_CHATTING_IN_PLATFORM_PARTY(gamerHandle)
  return native.invoke(
    Type.Bool, 2976, false,
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_CAN_QUEUE_FOR_PREVIOUS_SESSION_JOIN() // 0x2BF66D2E7414F686
function NETWORK.NETWORK_CAN_QUEUE_FOR_PREVIOUS_SESSION_JOIN()
  return native.invoke(
    Type.Bool, 2977, false
  )
end

-- BOOL NETWORK_IS_QUEUING_FOR_SESSION_JOIN() // 0x14922ED3E38761F0
function NETWORK.NETWORK_IS_QUEUING_FOR_SESSION_JOIN()
  return native.invoke(
    Type.Bool, 2978, false
  )
end

-- void NETWORK_CLEAR_QUEUED_JOIN_REQUEST() // 0x6CE50E47F5543D0C
function NETWORK.NETWORK_CLEAR_QUEUED_JOIN_REQUEST()
  native.invoke(
    Type.Void, 2979, false
  )
end

-- void NETWORK_SEND_QUEUED_JOIN_REQUEST() // 0xFA2888E3833C8E96
function NETWORK.NETWORK_SEND_QUEUED_JOIN_REQUEST()
  native.invoke(
    Type.Void, 2980, false
  )
end

-- void NETWORK_REMOVE_ALL_QUEUED_JOIN_REQUESTS() // 0x25D990F8E0E3F13C
function NETWORK.NETWORK_REMOVE_ALL_QUEUED_JOIN_REQUESTS()
  native.invoke(
    Type.Void, 2981, false
  )
end

-- void NETWORK_SEED_RANDOM_NUMBER_GENERATOR(int seed) // 0xF1B84178F8674195
function NETWORK.NETWORK_SEED_RANDOM_NUMBER_GENERATOR(seed)
  native.invoke(
    Type.Void, 2982, false,
    arg(Type.Int, seed)
  )
end

-- int NETWORK_GET_RANDOM_INT() // 0x599E4FA1F87EB5FF
function NETWORK.NETWORK_GET_RANDOM_INT()
  return native.invoke(
    Type.Int, 2983, false
  )
end

-- int NETWORK_GET_RANDOM_INT_RANGED(int rangeStart, int rangeEnd) // 0xE30CF56F1EFA5F43
--[[
Same as GET_RANDOM_INT_IN_RANGE
--]]
function NETWORK.NETWORK_GET_RANDOM_INT_RANGED(rangeStart, rangeEnd)
  return native.invoke(
    Type.Int, 2984, false,
    arg(Type.Int, rangeStart),
    arg(Type.Int, rangeEnd)
  )
end

-- float _NETWORK_GET_RANDOM_FLOAT_RANGED(float rangeStart, float rangeEnd) // 0x04BD27B5ACB67067
function NETWORK._NETWORK_GET_RANDOM_FLOAT_RANGED(rangeStart, rangeEnd)
  return native.invoke(
    Type.Float, 2985, false,
    arg(Type.Float, rangeStart),
    arg(Type.Float, rangeEnd)
  )
end

-- BOOL NETWORK_PLAYER_IS_CHEATER() // 0x655B91F1495A9090
function NETWORK.NETWORK_PLAYER_IS_CHEATER()
  return native.invoke(
    Type.Bool, 2986, false
  )
end

-- int NETWORK_PLAYER_GET_CHEATER_REASON() // 0x172F75B6EE2233BA
function NETWORK.NETWORK_PLAYER_GET_CHEATER_REASON()
  return native.invoke(
    Type.Int, 2987, false
  )
end

-- BOOL NETWORK_PLAYER_IS_BADSPORT() // 0x19D8DA0E5A68045A
function NETWORK.NETWORK_PLAYER_IS_BADSPORT()
  return native.invoke(
    Type.Bool, 2988, false
  )
end

-- BOOL REMOTE_CHEATER_PLAYER_DETECTED(Player player, int a, int b) // 0x472841A026D26D8B
function NETWORK.REMOTE_CHEATER_PLAYER_DETECTED(player, a, b)
  return native.invoke(
    Type.Bool, 2989, false,
    arg(Type.Player, player),
    arg(Type.Int, a),
    arg(Type.Int, b)
  )
end

-- BOOL BAD_SPORT_PLAYER_LEFT_DETECTED(Any* gamerHandle, int event, int amountReceived) // 0xEC5E3AF5289DCA81
function NETWORK.BAD_SPORT_PLAYER_LEFT_DETECTED(gamerHandle, event, amountReceived)
  return native.invoke(
    Type.Bool, 2990, false,
    arg(Type.Any, gamerHandle),
    arg(Type.Int, event),
    arg(Type.Int, amountReceived)
  )
end

-- void NETWORK_ADD_INVALID_OBJECT_MODEL(Hash modelHash) // 0x7F562DBC212E81F9
function NETWORK.NETWORK_ADD_INVALID_OBJECT_MODEL(modelHash)
  native.invoke(
    Type.Void, 2991, false,
    arg(Type.Hash, modelHash)
  )
end

-- void NETWORK_REMOVE_INVALID_OBJECT_MODEL(Hash modelHash) // 0x791EDB5803B2F468
function NETWORK.NETWORK_REMOVE_INVALID_OBJECT_MODEL(modelHash)
  native.invoke(
    Type.Void, 2992, false,
    arg(Type.Hash, modelHash)
  )
end

-- void NETWORK_CLEAR_INVALID_OBJECT_MODELS() // 0x03B2F03A53D85E41
function NETWORK.NETWORK_CLEAR_INVALID_OBJECT_MODELS()
  native.invoke(
    Type.Void, 2993, false
  )
end

-- void NETWORK_APPLY_PED_SCAR_DATA(Ped ped, int p1) // 0xE66C690248F11150
function NETWORK.NETWORK_APPLY_PED_SCAR_DATA(ped, p1)
  native.invoke(
    Type.Void, 2994, false,
    arg(Type.Ped, ped),
    arg(Type.Int, p1)
  )
end

-- void NETWORK_SET_THIS_SCRIPT_IS_NETWORK_SCRIPT(int maxNumMissionParticipants, BOOL p1, int instanceId) // 0x1CA59E306ECB80A5
function NETWORK.NETWORK_SET_THIS_SCRIPT_IS_NETWORK_SCRIPT(maxNumMissionParticipants, p1, instanceId)
  native.invoke(
    Type.Void, 2995, false,
    arg(Type.Int, maxNumMissionParticipants),
    arg(Type.Bool, p1),
    arg(Type.Int, instanceId)
  )
end

-- BOOL NETWORK_TRY_TO_SET_THIS_SCRIPT_IS_NETWORK_SCRIPT(Any p0, BOOL p1, Any p2) // 0xD1110739EEADB592
function NETWORK.NETWORK_TRY_TO_SET_THIS_SCRIPT_IS_NETWORK_SCRIPT(p0, p1, p2)
  return native.invoke(
    Type.Bool, 2996, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.Any, p2)
  )
end

-- BOOL NETWORK_GET_THIS_SCRIPT_IS_NETWORK_SCRIPT() // 0x2910669969E9535E
function NETWORK.NETWORK_GET_THIS_SCRIPT_IS_NETWORK_SCRIPT()
  return native.invoke(
    Type.Bool, 2997, false
  )
end

-- int NETWORK_GET_MAX_NUM_PARTICIPANTS() // 0xA6C90FBC38E395EE
function NETWORK.NETWORK_GET_MAX_NUM_PARTICIPANTS()
  return native.invoke(
    Type.Int, 2998, false
  )
end

-- int NETWORK_GET_NUM_PARTICIPANTS() // 0x18D0456E86604654
function NETWORK.NETWORK_GET_NUM_PARTICIPANTS()
  return native.invoke(
    Type.Int, 2999, false
  )
end

-- int NETWORK_GET_SCRIPT_STATUS() // 0x57D158647A6BFABF
function NETWORK.NETWORK_GET_SCRIPT_STATUS()
  return native.invoke(
    Type.Int, 3000, false
  )
end

-- void NETWORK_REGISTER_HOST_BROADCAST_VARIABLES(int* vars, int numVars, const char* debugName) // 0x3E9B2F01C50DF595
function NETWORK.NETWORK_REGISTER_HOST_BROADCAST_VARIABLES(vars, numVars, debugName)
  native.invoke(
    Type.Void, 3001, false,
    arg(Type.Int, vars),
    arg(Type.Int, numVars),
    arg(Type.String, debugName)
  )
end

-- void NETWORK_REGISTER_PLAYER_BROADCAST_VARIABLES(int* vars, int numVars, const char* debugName) // 0x3364AA97340CA215
function NETWORK.NETWORK_REGISTER_PLAYER_BROADCAST_VARIABLES(vars, numVars, debugName)
  native.invoke(
    Type.Void, 3002, false,
    arg(Type.Int, vars),
    arg(Type.Int, numVars),
    arg(Type.String, debugName)
  )
end

-- void NETWORK_REGISTER_HIGH_FREQUENCY_HOST_BROADCAST_VARIABLES(Any p0, Any p1, Any p2) // 0xEA8C0DDB10E2822A
function NETWORK.NETWORK_REGISTER_HIGH_FREQUENCY_HOST_BROADCAST_VARIABLES(p0, p1, p2)
  native.invoke(
    Type.Void, 3003, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void NETWORK_REGISTER_HIGH_FREQUENCY_PLAYER_BROADCAST_VARIABLES(Any p0, Any p1, Any p2) // 0xD6D7478CA62B8D41
function NETWORK.NETWORK_REGISTER_HIGH_FREQUENCY_PLAYER_BROADCAST_VARIABLES(p0, p1, p2)
  native.invoke(
    Type.Void, 3004, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void NETWORK_FINISH_BROADCASTING_DATA() // 0x64F62AFB081E260D
function NETWORK.NETWORK_FINISH_BROADCASTING_DATA()
  native.invoke(
    Type.Void, 3005, false
  )
end

-- BOOL NETWORK_HAS_RECEIVED_HOST_BROADCAST_DATA() // 0x5D10B3795F3FC886
function NETWORK.NETWORK_HAS_RECEIVED_HOST_BROADCAST_DATA()
  return native.invoke(
    Type.Bool, 3006, false
  )
end

-- Player NETWORK_GET_PLAYER_INDEX(Player player) // 0x24FB80D107371267
function NETWORK.NETWORK_GET_PLAYER_INDEX(player)
  return native.invoke(
    Type.Player, 3007, false,
    arg(Type.Player, player)
  )
end

-- int NETWORK_GET_PARTICIPANT_INDEX(int index) // 0x1B84DF6AF2A46938
function NETWORK.NETWORK_GET_PARTICIPANT_INDEX(index)
  return native.invoke(
    Type.Int, 3008, false,
    arg(Type.Int, index)
  )
end

-- Player NETWORK_GET_PLAYER_INDEX_FROM_PED(Ped ped) // 0x6C0E2E0125610278
--[[
Returns the Player associated to a given Ped when in an online session.
--]]
function NETWORK.NETWORK_GET_PLAYER_INDEX_FROM_PED(ped)
  return native.invoke(
    Type.Player, 3009, false,
    arg(Type.Ped, ped)
  )
end

-- int NETWORK_GET_NUM_CONNECTED_PLAYERS() // 0xA4A79DD2D9600654
--[[
Returns the amount of players connected in the current session. Only works when connected to a session/server.
--]]
function NETWORK.NETWORK_GET_NUM_CONNECTED_PLAYERS()
  return native.invoke(
    Type.Int, 3010, false
  )
end

-- BOOL NETWORK_IS_PLAYER_CONNECTED(Player player) // 0x93DC1BE4E1ABE9D1
function NETWORK.NETWORK_IS_PLAYER_CONNECTED(player)
  return native.invoke(
    Type.Bool, 3011, false,
    arg(Type.Player, player)
  )
end

-- int NETWORK_GET_TOTAL_NUM_PLAYERS() // 0xCF61D4B4702EE9EB
function NETWORK.NETWORK_GET_TOTAL_NUM_PLAYERS()
  return native.invoke(
    Type.Int, 3012, false
  )
end

-- BOOL NETWORK_IS_PARTICIPANT_ACTIVE(int p0) // 0x6FF8FF40B6357D45
function NETWORK.NETWORK_IS_PARTICIPANT_ACTIVE(p0)
  return native.invoke(
    Type.Bool, 3013, false,
    arg(Type.Int, p0)
  )
end

-- BOOL NETWORK_IS_PLAYER_ACTIVE(Player player) // 0xB8DFD30D6973E135
function NETWORK.NETWORK_IS_PLAYER_ACTIVE(player)
  return native.invoke(
    Type.Bool, 3014, false,
    arg(Type.Player, player)
  )
end

-- BOOL NETWORK_IS_PLAYER_A_PARTICIPANT(Player player) // 0x3CA58F6CB7CBD784
function NETWORK.NETWORK_IS_PLAYER_A_PARTICIPANT(player)
  return native.invoke(
    Type.Bool, 3015, false,
    arg(Type.Player, player)
  )
end

-- BOOL NETWORK_IS_HOST_OF_THIS_SCRIPT() // 0x83CD99A1E6061AB5
function NETWORK.NETWORK_IS_HOST_OF_THIS_SCRIPT()
  return native.invoke(
    Type.Bool, 3016, false
  )
end

-- Player NETWORK_GET_HOST_OF_THIS_SCRIPT() // 0xC7B4D79B01FA7A5C
function NETWORK.NETWORK_GET_HOST_OF_THIS_SCRIPT()
  return native.invoke(
    Type.Player, 3017, false
  )
end

-- Player NETWORK_GET_HOST_OF_SCRIPT(const char* scriptName, int instance_id, int position_hash) // 0x1D6A14F1F9A736FC
--[[
scriptName examples:
"freemode", "AM_CR_SecurityVan", ...

Most of the time, these values are used:
instance_id = -1
position_hash = 0
--]]
function NETWORK.NETWORK_GET_HOST_OF_SCRIPT(scriptName, instance_id, position_hash)
  return native.invoke(
    Type.Player, 3018, false,
    arg(Type.String, scriptName),
    arg(Type.Int, instance_id),
    arg(Type.Int, position_hash)
  )
end

-- void NETWORK_SET_MISSION_FINISHED() // 0x3B3D11CD9FFCDFC9
function NETWORK.NETWORK_SET_MISSION_FINISHED()
  native.invoke(
    Type.Void, 3019, false
  )
end

-- BOOL NETWORK_IS_SCRIPT_ACTIVE(const char* scriptName, int instance_id, BOOL p2, int position_hash) // 0x9D40DF90FAD26098
function NETWORK.NETWORK_IS_SCRIPT_ACTIVE(scriptName, instance_id, p2, position_hash)
  return native.invoke(
    Type.Bool, 3020, false,
    arg(Type.String, scriptName),
    arg(Type.Int, instance_id),
    arg(Type.Bool, p2),
    arg(Type.Int, position_hash)
  )
end

-- BOOL NETWORK_IS_SCRIPT_ACTIVE_BY_HASH(Hash scriptHash, int p1, BOOL p2, int p3) // 0xDA7DE67F5FE5EE13
function NETWORK.NETWORK_IS_SCRIPT_ACTIVE_BY_HASH(scriptHash, p1, p2, p3)
  return native.invoke(
    Type.Bool, 3021, false,
    arg(Type.Hash, scriptHash),
    arg(Type.Int, p1),
    arg(Type.Bool, p2),
    arg(Type.Int, p3)
  )
end

-- BOOL NETWORK_IS_THREAD_A_NETWORK_SCRIPT(int threadId) // 0x560B423D73015E77
function NETWORK.NETWORK_IS_THREAD_A_NETWORK_SCRIPT(threadId)
  return native.invoke(
    Type.Bool, 3022, false,
    arg(Type.Int, threadId)
  )
end

-- int NETWORK_GET_NUM_SCRIPT_PARTICIPANTS(const char* scriptName, int instance_id, int position_hash) // 0x3658E8CD94FC121A
function NETWORK.NETWORK_GET_NUM_SCRIPT_PARTICIPANTS(scriptName, instance_id, position_hash)
  return native.invoke(
    Type.Int, 3023, false,
    arg(Type.String, scriptName),
    arg(Type.Int, instance_id),
    arg(Type.Int, position_hash)
  )
end

-- int NETWORK_GET_INSTANCE_ID_OF_THIS_SCRIPT() // 0x638A3A81733086DB
function NETWORK.NETWORK_GET_INSTANCE_ID_OF_THIS_SCRIPT()
  return native.invoke(
    Type.Int, 3024, false
  )
end

-- Hash NETWORK_GET_POSITION_HASH_OF_THIS_SCRIPT() // 0x257ED0FADF750BCF
function NETWORK.NETWORK_GET_POSITION_HASH_OF_THIS_SCRIPT()
  return native.invoke(
    Type.Hash, 3025, false
  )
end

-- BOOL NETWORK_IS_PLAYER_A_PARTICIPANT_ON_SCRIPT(Player player, const char* script, int instance_id) // 0x1AD5B71586B94820
function NETWORK.NETWORK_IS_PLAYER_A_PARTICIPANT_ON_SCRIPT(player, script, instance_id)
  return native.invoke(
    Type.Bool, 3026, false,
    arg(Type.Player, player),
    arg(Type.String, script),
    arg(Type.Int, instance_id)
  )
end

-- void NETWORK_PREVENT_SCRIPT_HOST_MIGRATION() // 0x2302C0264EA58D31
function NETWORK.NETWORK_PREVENT_SCRIPT_HOST_MIGRATION()
  native.invoke(
    Type.Void, 3027, false
  )
end

-- void NETWORK_REQUEST_TO_BE_HOST_OF_THIS_SCRIPT() // 0x741A3D8380319A81
function NETWORK.NETWORK_REQUEST_TO_BE_HOST_OF_THIS_SCRIPT()
  native.invoke(
    Type.Void, 3028, false
  )
end

-- Player PARTICIPANT_ID() // 0x90986E8876CE0A83
--[[
Return the local Participant ID
--]]
function NETWORK.PARTICIPANT_ID()
  return native.invoke(
    Type.Player, 3029, false
  )
end

-- int PARTICIPANT_ID_TO_INT() // 0x57A3BDDAD8E5AA0A
--[[
Return the local Participant ID.

This native is exactly the same as 'PARTICIPANT_ID' native.
--]]
function NETWORK.PARTICIPANT_ID_TO_INT()
  return native.invoke(
    Type.Int, 3030, false
  )
end

-- Player NETWORK_GET_KILLER_OF_PLAYER(Player player, Hash* weaponHash) // 0x2DA41ED6E1FCD7A5
function NETWORK.NETWORK_GET_KILLER_OF_PLAYER(player, weaponHash)
  return native.invoke(
    Type.Player, 3031, false,
    arg(Type.Player, player),
    arg(Type.Hash, weaponHash)
  )
end

-- Player NETWORK_GET_DESTROYER_OF_NETWORK_ID(int netId, Hash* weaponHash) // 0x7A1ADEEF01740A24
function NETWORK.NETWORK_GET_DESTROYER_OF_NETWORK_ID(netId, weaponHash)
  return native.invoke(
    Type.Player, 3032, false,
    arg(Type.Int, netId),
    arg(Type.Hash, weaponHash)
  )
end

-- Player NETWORK_GET_DESTROYER_OF_ENTITY(Entity entity, Hash* weaponHash) // 0xC434133D9BA52777
function NETWORK.NETWORK_GET_DESTROYER_OF_ENTITY(entity, weaponHash)
  return native.invoke(
    Type.Player, 3033, false,
    arg(Type.Entity, entity),
    arg(Type.Hash, weaponHash)
  )
end

-- BOOL NETWORK_GET_ASSISTED_KILL_OF_ENTITY(Player player, Entity entity, int* p2) // 0x83660B734994124D
--[[
NETWORK_GET_ASSISTED_DAMAGE_OF_ENTITY that ensures the entity is dead (IS_ENTITY_DEAD)
--]]
function NETWORK.NETWORK_GET_ASSISTED_KILL_OF_ENTITY(player, entity, p2)
  return native.invoke(
    Type.Bool, 3034, false,
    arg(Type.Player, player),
    arg(Type.Entity, entity),
    arg(Type.Int, p2)
  )
end

-- BOOL NETWORK_GET_ASSISTED_DAMAGE_OF_ENTITY(Player player, Entity entity, int* p2) // 0x4CACA84440FA26F6
function NETWORK.NETWORK_GET_ASSISTED_DAMAGE_OF_ENTITY(player, entity, p2)
  return native.invoke(
    Type.Bool, 3035, false,
    arg(Type.Player, player),
    arg(Type.Entity, entity),
    arg(Type.Int, p2)
  )
end

-- Entity NETWORK_GET_ENTITY_KILLER_OF_PLAYER(Player player, Hash* weaponHash) // 0x42B2DAA6B596F5F8
function NETWORK.NETWORK_GET_ENTITY_KILLER_OF_PLAYER(player, weaponHash)
  return native.invoke(
    Type.Entity, 3036, false,
    arg(Type.Player, player),
    arg(Type.Hash, weaponHash)
  )
end

-- void NETWORK_SET_CURRENT_PUBLIC_CONTENT_ID(const char* missionId) // 0x2C863ACDCD12B3DB
function NETWORK.NETWORK_SET_CURRENT_PUBLIC_CONTENT_ID(missionId)
  native.invoke(
    Type.Void, 3037, false,
    arg(Type.String, missionId)
  )
end

-- void NETWORK_SET_CURRENT_CHAT_OPTION(int newChatOption) // 0x3DAD00265FBF356B
function NETWORK.NETWORK_SET_CURRENT_CHAT_OPTION(newChatOption)
  native.invoke(
    Type.Void, 3038, false,
    arg(Type.Int, newChatOption)
  )
end

-- void NETWORK_SET_CURRENT_SPAWN_LOCATION_OPTION(Hash mpSettingSpawn) // 0xAA6D5451DC3448B6
--[[
mpSettingSpawn:

enum eMpSettingSpawn
{
	MP_SETTING_SPAWN_NULL,
	MP_SETTING_SPAWN_PROPERTY,
	MP_SETTING_SPAWN_LAST_POSITION,
	MP_SETTING_SPAWN_GARAGE,
	MP_SETTING_SPAWN_RANDOM,
	MP_SETTING_SPAWN_PRIVATE_YACHT,
	MP_SETTING_SPAWN_OFFICE,
	MP_SETTING_SPAWN_CLUBHOUSE,
	MP_SETTING_SPAWN_IE_WAREHOUSE,
	MP_SETTING_SPAWN_BUNKER,
	MP_SETTING_SPAWN_HANGAR,
	MP_SETTING_SPAWN_DEFUNCT_BASE,
	MP_SETTING_SPAWN_NIGHTCLUB,
	MP_SETTING_SPAWN_ARENA_GARAGE,
	MP_SETTING_SPAWN_CASINO_APARTMENT,
	MP_SETTING_SPAWN_ARCADE,
	MP_SETTING_SPAWN_SUBMARINE,
	MP_SETTING_SPAWN_CAR_MEET,
	MP_SETTING_SPAWN_AUTO_SHOP,
	MP_SETTING_SPAWN_FIXER_HQ,
	MP_SETTING_SPAWN_MAX,
};
--]]
function NETWORK.NETWORK_SET_CURRENT_SPAWN_LOCATION_OPTION(mpSettingSpawn)
  native.invoke(
    Type.Void, 3039, false,
    arg(Type.Hash, mpSettingSpawn)
  )
end

-- void NETWORK_SET_VEHICLE_DRIVEN_IN_TEST_DRIVE(BOOL toggle) // 0x8C70252FC40F320B
--[[
Used by MetricVEHICLE_DIST_DRIVEN
--]]
function NETWORK.NETWORK_SET_VEHICLE_DRIVEN_IN_TEST_DRIVE(toggle)
  native.invoke(
    Type.Void, 3040, false,
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_SET_VEHICLE_DRIVEN_LOCATION(Hash location) // 0xA0CE91E47531D3BB
--[[
Sets 'loc' variable used in MetricVEHICLE_DIST_DRIVEN
--]]
function NETWORK.NETWORK_SET_VEHICLE_DRIVEN_LOCATION(location)
  native.invoke(
    Type.Void, 3041, false,
    arg(Type.Hash, location)
  )
end

-- void NETWORK_RESURRECT_LOCAL_PLAYER(float x, float y, float z, float heading, BOOL p4, BOOL changetime, BOOL p6, int p7, int p8) // 0xEA23C49EAA83ACFB
function NETWORK.NETWORK_RESURRECT_LOCAL_PLAYER(x, y, z, heading, p4, changetime, p6, p7, p8)
  native.invoke(
    Type.Void, 3042, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, heading),
    arg(Type.Bool, p4),
    arg(Type.Bool, changetime),
    arg(Type.Bool, p6),
    arg(Type.Int, p7),
    arg(Type.Int, p8)
  )
end

-- void NETWORK_SET_LOCAL_PLAYER_INVINCIBLE_TIME(int time) // 0x2D95C7E2D7E07307
function NETWORK.NETWORK_SET_LOCAL_PLAYER_INVINCIBLE_TIME(time)
  native.invoke(
    Type.Void, 3043, false,
    arg(Type.Int, time)
  )
end

-- BOOL NETWORK_IS_LOCAL_PLAYER_INVINCIBLE() // 0x8A8694B48715B000
function NETWORK.NETWORK_IS_LOCAL_PLAYER_INVINCIBLE()
  return native.invoke(
    Type.Bool, 3044, false
  )
end

-- void NETWORK_DISABLE_INVINCIBLE_FLASHING(Player player, BOOL toggle) // 0x9DD368BF06983221
function NETWORK.NETWORK_DISABLE_INVINCIBLE_FLASHING(player, toggle)
  native.invoke(
    Type.Void, 3045, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_PATCH_POST_CUTSCENE_HS4F_TUN_ENT(Ped ped) // 0xF0BC9BCD24A511D5
function NETWORK.NETWORK_PATCH_POST_CUTSCENE_HS4F_TUN_ENT(ped)
  native.invoke(
    Type.Void, 3046, false,
    arg(Type.Ped, ped)
  )
end

-- void NETWORK_SET_LOCAL_PLAYER_SYNC_LOOK_AT(BOOL toggle) // 0x524FF0AEFF9C3973
function NETWORK.NETWORK_SET_LOCAL_PLAYER_SYNC_LOOK_AT(toggle)
  native.invoke(
    Type.Void, 3047, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL NETWORK_HAS_ENTITY_BEEN_REGISTERED_WITH_THIS_THREAD(Entity entity) // 0xB07D3185E11657A5
function NETWORK.NETWORK_HAS_ENTITY_BEEN_REGISTERED_WITH_THIS_THREAD(entity)
  return native.invoke(
    Type.Bool, 3048, false,
    arg(Type.Entity, entity)
  )
end

-- int NETWORK_GET_NETWORK_ID_FROM_ENTITY(Entity entity) // 0xA11700682F3AD45C
function NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(entity)
  return native.invoke(
    Type.Int, 3049, false,
    arg(Type.Entity, entity)
  )
end

-- Entity NETWORK_GET_ENTITY_FROM_NETWORK_ID(int netId) // 0xCE4E5D9B0A4FF560
function NETWORK.NETWORK_GET_ENTITY_FROM_NETWORK_ID(netId)
  return native.invoke(
    Type.Entity, 3050, false,
    arg(Type.Int, netId)
  )
end

-- BOOL NETWORK_GET_ENTITY_IS_NETWORKED(Entity entity) // 0xC7827959479DCC78
function NETWORK.NETWORK_GET_ENTITY_IS_NETWORKED(entity)
  return native.invoke(
    Type.Bool, 3051, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL NETWORK_GET_ENTITY_IS_LOCAL(Entity entity) // 0x0991549DE4D64762
function NETWORK.NETWORK_GET_ENTITY_IS_LOCAL(entity)
  return native.invoke(
    Type.Bool, 3052, false,
    arg(Type.Entity, entity)
  )
end

-- void NETWORK_REGISTER_ENTITY_AS_NETWORKED(Entity entity) // 0x06FAACD625D80CAA
function NETWORK.NETWORK_REGISTER_ENTITY_AS_NETWORKED(entity)
  native.invoke(
    Type.Void, 3053, false,
    arg(Type.Entity, entity)
  )
end

-- void NETWORK_UNREGISTER_NETWORKED_ENTITY(Entity entity) // 0x7368E683BB9038D6
function NETWORK.NETWORK_UNREGISTER_NETWORKED_ENTITY(entity)
  native.invoke(
    Type.Void, 3054, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL NETWORK_DOES_NETWORK_ID_EXIST(int netId) // 0x38CE16C96BD11344
function NETWORK.NETWORK_DOES_NETWORK_ID_EXIST(netId)
  return native.invoke(
    Type.Bool, 3055, false,
    arg(Type.Int, netId)
  )
end

-- BOOL NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(int netId) // 0x18A47D074708FD68
function NETWORK.NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(netId)
  return native.invoke(
    Type.Bool, 3056, false,
    arg(Type.Int, netId)
  )
end

-- BOOL NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(int netId) // 0xA670B3662FAFFBD0
function NETWORK.NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(netId)
  return native.invoke(
    Type.Bool, 3057, false,
    arg(Type.Int, netId)
  )
end

-- BOOL NETWORK_HAS_CONTROL_OF_NETWORK_ID(int netId) // 0x4D36070FE0215186
function NETWORK.NETWORK_HAS_CONTROL_OF_NETWORK_ID(netId)
  return native.invoke(
    Type.Bool, 3058, false,
    arg(Type.Int, netId)
  )
end

-- BOOL NETWORK_IS_NETWORK_ID_REMOTELY_CONTROLLED(int netId) // 0x7242F8B741CE1086
--[[
Returns true if the specified network id is controlled by someone else.
--]]
function NETWORK.NETWORK_IS_NETWORK_ID_REMOTELY_CONTROLLED(netId)
  return native.invoke(
    Type.Bool, 3059, false,
    arg(Type.Int, netId)
  )
end

-- BOOL NETWORK_REQUEST_CONTROL_OF_ENTITY(Entity entity) // 0xB69317BF5E782347
function NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(entity)
  return native.invoke(
    Type.Bool, 3060, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL NETWORK_REQUEST_CONTROL_OF_DOOR(int doorID) // 0x870DDFD5A4A796E4
function NETWORK.NETWORK_REQUEST_CONTROL_OF_DOOR(doorID)
  return native.invoke(
    Type.Bool, 3061, false,
    arg(Type.Int, doorID)
  )
end

-- BOOL NETWORK_HAS_CONTROL_OF_ENTITY(Entity entity) // 0x01BF60A500E28887
function NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(entity)
  return native.invoke(
    Type.Bool, 3062, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL NETWORK_HAS_CONTROL_OF_PICKUP(Pickup pickup) // 0x5BC9495F0B3B6FA6
function NETWORK.NETWORK_HAS_CONTROL_OF_PICKUP(pickup)
  return native.invoke(
    Type.Bool, 3063, false,
    arg(Type.Pickup, pickup)
  )
end

-- BOOL NETWORK_HAS_CONTROL_OF_DOOR(Hash doorHash) // 0xCB3C68ADB06195DF
function NETWORK.NETWORK_HAS_CONTROL_OF_DOOR(doorHash)
  return native.invoke(
    Type.Bool, 3064, false,
    arg(Type.Hash, doorHash)
  )
end

-- BOOL NETWORK_IS_DOOR_NETWORKED(Hash doorHash) // 0xC01E93FAC20C3346
function NETWORK.NETWORK_IS_DOOR_NETWORKED(doorHash)
  return native.invoke(
    Type.Bool, 3065, false,
    arg(Type.Hash, doorHash)
  )
end

-- int VEH_TO_NET(Vehicle vehicle) // 0xB4C94523F023419C
--[[
calls from vehicle to net.

--]]
function NETWORK.VEH_TO_NET(vehicle)
  return native.invoke(
    Type.Int, 3066, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- int PED_TO_NET(Ped ped) // 0x0EDEC3C276198689
--[[
gets the network id of a ped
--]]
function NETWORK.PED_TO_NET(ped)
  return native.invoke(
    Type.Int, 3067, false,
    arg(Type.Ped, ped)
  )
end

-- int OBJ_TO_NET(Object object) // 0x99BFDC94A603E541
--[[
Lets objects spawn online simply do it like this:

int createdObject = OBJ_TO_NET(CREATE_OBJECT_NO_OFFSET(oball, pCoords.x, pCoords.y, pCoords.z, 1, 0, 0));
--]]
function NETWORK.OBJ_TO_NET(object)
  return native.invoke(
    Type.Int, 3068, false,
    arg(Type.Object, object)
  )
end

-- Vehicle NET_TO_VEH(int netHandle) // 0x367B936610BA360C
function NETWORK.NET_TO_VEH(netHandle)
  return native.invoke(
    Type.Vehicle, 3069, false,
    arg(Type.Int, netHandle)
  )
end

-- Ped NET_TO_PED(int netHandle) // 0xBDCD95FC216A8B3E
--[[
gets the ped id of a network id
--]]
function NETWORK.NET_TO_PED(netHandle)
  return native.invoke(
    Type.Ped, 3070, false,
    arg(Type.Int, netHandle)
  )
end

-- Object NET_TO_OBJ(int netHandle) // 0xD8515F5FEA14CB3F
--[[
gets the object id of a network id
--]]
function NETWORK.NET_TO_OBJ(netHandle)
  return native.invoke(
    Type.Object, 3071, false,
    arg(Type.Int, netHandle)
  )
end

-- Entity NET_TO_ENT(int netHandle) // 0xBFFEAB45A9A9094A
--[[
gets the entity id of a network id
--]]
function NETWORK.NET_TO_ENT(netHandle)
  return native.invoke(
    Type.Entity, 3072, false,
    arg(Type.Int, netHandle)
  )
end

-- void NETWORK_GET_LOCAL_HANDLE(Any* gamerHandle, int gamerHandleSize) // 0xE86051786B66CD8E
function NETWORK.NETWORK_GET_LOCAL_HANDLE(gamerHandle, gamerHandleSize)
  native.invoke(
    Type.Void, 3073, false,
    arg(Type.Any, gamerHandle),
    arg(Type.Int, gamerHandleSize)
  )
end

-- void NETWORK_HANDLE_FROM_USER_ID(const char* userId, Any* gamerHandle, int gamerHandleSize) // 0xDCD51DD8F87AEC5C
function NETWORK.NETWORK_HANDLE_FROM_USER_ID(userId, gamerHandle, gamerHandleSize)
  native.invoke(
    Type.Void, 3074, false,
    arg(Type.String, userId),
    arg(Type.Any, gamerHandle),
    arg(Type.Int, gamerHandleSize)
  )
end

-- void NETWORK_HANDLE_FROM_MEMBER_ID(const char* memberId, Any* gamerHandle, int gamerHandleSize) // 0xA0FD21BED61E5C4C
function NETWORK.NETWORK_HANDLE_FROM_MEMBER_ID(memberId, gamerHandle, gamerHandleSize)
  native.invoke(
    Type.Void, 3075, false,
    arg(Type.String, memberId),
    arg(Type.Any, gamerHandle),
    arg(Type.Int, gamerHandleSize)
  )
end

-- void NETWORK_HANDLE_FROM_PLAYER(Player player, Any* gamerHandle, int gamerHandleSize) // 0x388EB2B86C73B6B3
function NETWORK.NETWORK_HANDLE_FROM_PLAYER(player, gamerHandle, gamerHandleSize)
  native.invoke(
    Type.Void, 3076, false,
    arg(Type.Player, player),
    arg(Type.Any, gamerHandle),
    arg(Type.Int, gamerHandleSize)
  )
end

-- Hash NETWORK_HASH_FROM_PLAYER_HANDLE(Player player) // 0xBC1D768F2F5D6C05
function NETWORK.NETWORK_HASH_FROM_PLAYER_HANDLE(player)
  return native.invoke(
    Type.Hash, 3077, false,
    arg(Type.Player, player)
  )
end

-- Hash NETWORK_HASH_FROM_GAMER_HANDLE(Any* gamerHandle) // 0x58575AC3CF2CA8EC
function NETWORK.NETWORK_HASH_FROM_GAMER_HANDLE(gamerHandle)
  return native.invoke(
    Type.Hash, 3078, false,
    arg(Type.Any, gamerHandle)
  )
end

-- void NETWORK_HANDLE_FROM_FRIEND(int friendIndex, Any* gamerHandle, int gamerHandleSize) // 0xD45CB817D7E177D2
function NETWORK.NETWORK_HANDLE_FROM_FRIEND(friendIndex, gamerHandle, gamerHandleSize)
  native.invoke(
    Type.Void, 3079, false,
    arg(Type.Int, friendIndex),
    arg(Type.Any, gamerHandle),
    arg(Type.Int, gamerHandleSize)
  )
end

-- BOOL NETWORK_GAMERTAG_FROM_HANDLE_START(Any* gamerHandle) // 0x9F0C0A981D73FA56
function NETWORK.NETWORK_GAMERTAG_FROM_HANDLE_START(gamerHandle)
  return native.invoke(
    Type.Bool, 3080, false,
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_GAMERTAG_FROM_HANDLE_PENDING() // 0xB071E27958EF4CF0
function NETWORK.NETWORK_GAMERTAG_FROM_HANDLE_PENDING()
  return native.invoke(
    Type.Bool, 3081, false
  )
end

-- BOOL NETWORK_GAMERTAG_FROM_HANDLE_SUCCEEDED() // 0xFD00798DBA7523DD
function NETWORK.NETWORK_GAMERTAG_FROM_HANDLE_SUCCEEDED()
  return native.invoke(
    Type.Bool, 3082, false
  )
end

-- const char* NETWORK_GET_GAMERTAG_FROM_HANDLE(Any* gamerHandle) // 0x426141162EBE5CDB
function NETWORK.NETWORK_GET_GAMERTAG_FROM_HANDLE(gamerHandle)
  return native.invoke(
    Type.Const char, 3083, false,
    arg(Type.Any, gamerHandle)
  )
end

-- int NETWORK_DISPLAYNAMES_FROM_HANDLES_START(Any* p0, Any p1) // 0xD66C9E72B3CC4982
--[[
Hardcoded to return -1.
--]]
function NETWORK.NETWORK_DISPLAYNAMES_FROM_HANDLES_START(p0, p1)
  return native.invoke(
    Type.Int, 3084, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- int NETWORK_GET_DISPLAYNAMES_FROM_HANDLES(Any p0, Any p1, Any p2) // 0x58CC181719256197
--[[
This function is hard-coded to always return 0.
--]]
function NETWORK.NETWORK_GET_DISPLAYNAMES_FROM_HANDLES(p0, p1, p2)
  return native.invoke(
    Type.Int, 3085, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- BOOL NETWORK_ARE_HANDLES_THE_SAME(Any* gamerHandle1, Any* gamerHandle2) // 0x57DBA049E110F217
function NETWORK.NETWORK_ARE_HANDLES_THE_SAME(gamerHandle1, gamerHandle2)
  return native.invoke(
    Type.Bool, 3086, false,
    arg(Type.Any, gamerHandle1),
    arg(Type.Any, gamerHandle2)
  )
end

-- BOOL NETWORK_IS_HANDLE_VALID(Any* gamerHandle, int gamerHandleSize) // 0x6F79B93B0A8E4133
function NETWORK.NETWORK_IS_HANDLE_VALID(gamerHandle, gamerHandleSize)
  return native.invoke(
    Type.Bool, 3087, false,
    arg(Type.Any, gamerHandle),
    arg(Type.Int, gamerHandleSize)
  )
end

-- Player NETWORK_GET_PLAYER_FROM_GAMER_HANDLE(Any* gamerHandle) // 0xCE5F689CF5A0A49D
function NETWORK.NETWORK_GET_PLAYER_FROM_GAMER_HANDLE(gamerHandle)
  return native.invoke(
    Type.Player, 3088, false,
    arg(Type.Any, gamerHandle)
  )
end

-- const char* NETWORK_MEMBER_ID_FROM_GAMER_HANDLE(Any* gamerHandle) // 0xC82630132081BB6F
function NETWORK.NETWORK_MEMBER_ID_FROM_GAMER_HANDLE(gamerHandle)
  return native.invoke(
    Type.Const char, 3089, false,
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_IS_GAMER_IN_MY_SESSION(Any* gamerHandle) // 0x0F10B05DDF8D16E9
function NETWORK.NETWORK_IS_GAMER_IN_MY_SESSION(gamerHandle)
  return native.invoke(
    Type.Bool, 3090, false,
    arg(Type.Any, gamerHandle)
  )
end

-- void NETWORK_SHOW_PROFILE_UI(Any* gamerHandle) // 0x859ED1CEA343FCA8
function NETWORK.NETWORK_SHOW_PROFILE_UI(gamerHandle)
  native.invoke(
    Type.Void, 3091, false,
    arg(Type.Any, gamerHandle)
  )
end

-- const char* NETWORK_PLAYER_GET_NAME(Player player) // 0x7718D2E2060837D2
--[[
Returns the name of a given player. Returns "**Invalid**" if rlGamerInfo of the given player cannot be retrieved or the player doesn't exist.
--]]
function NETWORK.NETWORK_PLAYER_GET_NAME(player)
  return native.invoke(
    Type.Const char, 3092, false,
    arg(Type.Player, player)
  )
end

-- const char* NETWORK_PLAYER_GET_USERID(Player player, int* userID) // 0x4927FC39CD0869A0
--[[
Returns a string of the player's Rockstar Id. 
Takes a 24 char buffer. Returns the buffer or "**Invalid**" if rlGamerInfo of the given player cannot be retrieved or the player doesn't exist.
--]]
function NETWORK.NETWORK_PLAYER_GET_USERID(player, userID)
  return native.invoke(
    Type.Const char, 3093, false,
    arg(Type.Player, player),
    arg(Type.Int, userID)
  )
end

-- BOOL NETWORK_PLAYER_IS_ROCKSTAR_DEV(Player player) // 0x544ABDDA3B409B6D
--[[
Checks if a specific value (BYTE) in CNetGamePlayer is nonzero.
Returns always false in Singleplayer.

No longer used for dev checks since first mods were released on PS3 & 360.
R* now checks with the IS_DLC_PRESENT native for the dlc hash 2532323046,
if that is present it will unlock dev stuff.
--]]
function NETWORK.NETWORK_PLAYER_IS_ROCKSTAR_DEV(player)
  return native.invoke(
    Type.Bool, 3094, false,
    arg(Type.Player, player)
  )
end

-- BOOL NETWORK_PLAYER_INDEX_IS_CHEATER(Player player) // 0x565E430DB3B05BEC
function NETWORK.NETWORK_PLAYER_INDEX_IS_CHEATER(player)
  return native.invoke(
    Type.Bool, 3095, false,
    arg(Type.Player, player)
  )
end

-- int NETWORK_ENTITY_GET_OBJECT_ID(Entity entity) // 0x815F18AD865F057F
function NETWORK.NETWORK_ENTITY_GET_OBJECT_ID(entity)
  return native.invoke(
    Type.Int, 3096, false,
    arg(Type.Entity, entity)
  )
end

-- Entity NETWORK_GET_ENTITY_FROM_OBJECT_ID(Any p0) // 0x37D5F739FD494675
--[[
I've had this return the player's ped handle sometimes, but also other random entities.
Whatever p0 is, it's at least not synced to other players.
At least not all the time, some p0 values actually output the same entity, (different handle of course, but same entity).
But another p0 value may return an entity for player x, but not for player y (it'll just return -1 even if the entity exists on both clients).

Returns an entity handle or -1, value changes based on p0's value.
--]]
function NETWORK.NETWORK_GET_ENTITY_FROM_OBJECT_ID(p0)
  return native.invoke(
    Type.Entity, 3097, false,
    arg(Type.Any, p0)
  )
end

-- BOOL NETWORK_IS_INACTIVE_PROFILE(Any* p0) // 0x7E58745504313A2E
function NETWORK.NETWORK_IS_INACTIVE_PROFILE(p0)
  return native.invoke(
    Type.Bool, 3098, false,
    arg(Type.Any, p0)
  )
end

-- int NETWORK_GET_MAX_FRIENDS() // 0xAFEBB0D5D8F687D2
function NETWORK.NETWORK_GET_MAX_FRIENDS()
  return native.invoke(
    Type.Int, 3099, false
  )
end

-- int NETWORK_GET_FRIEND_COUNT() // 0x203F1CFD823B27A4
function NETWORK.NETWORK_GET_FRIEND_COUNT()
  return native.invoke(
    Type.Int, 3100, false
  )
end

-- const char* NETWORK_GET_FRIEND_NAME(int friendIndex) // 0xE11EBBB2A783FE8B
function NETWORK.NETWORK_GET_FRIEND_NAME(friendIndex)
  return native.invoke(
    Type.Const char, 3101, false,
    arg(Type.Int, friendIndex)
  )
end

-- const char* NETWORK_GET_FRIEND_DISPLAY_NAME(int friendIndex) // 0x4164F227D052E293
function NETWORK.NETWORK_GET_FRIEND_DISPLAY_NAME(friendIndex)
  return native.invoke(
    Type.Const char, 3102, false,
    arg(Type.Int, friendIndex)
  )
end

-- BOOL NETWORK_IS_FRIEND_ONLINE(const char* name) // 0x425A44533437B64D
function NETWORK.NETWORK_IS_FRIEND_ONLINE(name)
  return native.invoke(
    Type.Bool, 3103, false,
    arg(Type.String, name)
  )
end

-- BOOL NETWORK_IS_FRIEND_HANDLE_ONLINE(Any* gamerHandle) // 0x87EB7A3FFCB314DB
function NETWORK.NETWORK_IS_FRIEND_HANDLE_ONLINE(gamerHandle)
  return native.invoke(
    Type.Bool, 3104, false,
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_IS_FRIEND_IN_SAME_TITLE(const char* friendName) // 0x2EA9A3BEDF3F17B8
--[[
In scripts R* calls 'NETWORK_GET_FRIEND_NAME' in this param.
--]]
function NETWORK.NETWORK_IS_FRIEND_IN_SAME_TITLE(friendName)
  return native.invoke(
    Type.Bool, 3105, false,
    arg(Type.String, friendName)
  )
end

-- BOOL NETWORK_IS_FRIEND_IN_MULTIPLAYER(const char* friendName) // 0x57005C18827F3A28
function NETWORK.NETWORK_IS_FRIEND_IN_MULTIPLAYER(friendName)
  return native.invoke(
    Type.Bool, 3106, false,
    arg(Type.String, friendName)
  )
end

-- BOOL NETWORK_IS_FRIEND(Any* gamerHandle) // 0x1A24A179F9B31654
function NETWORK.NETWORK_IS_FRIEND(gamerHandle)
  return native.invoke(
    Type.Bool, 3107, false,
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_IS_PENDING_FRIEND(Any p0) // 0x0BE73DA6984A6E33
--[[
This function is hard-coded to always return 0.
--]]
function NETWORK.NETWORK_IS_PENDING_FRIEND(p0)
  return native.invoke(
    Type.Bool, 3108, false,
    arg(Type.Any, p0)
  )
end

-- BOOL NETWORK_IS_ADDING_FRIEND() // 0x6EA101606F6E4D81
function NETWORK.NETWORK_IS_ADDING_FRIEND()
  return native.invoke(
    Type.Bool, 3109, false
  )
end

-- BOOL NETWORK_ADD_FRIEND(Any* gamerHandle, const char* message) // 0x8E02D73914064223
function NETWORK.NETWORK_ADD_FRIEND(gamerHandle, message)
  return native.invoke(
    Type.Bool, 3110, false,
    arg(Type.Any, gamerHandle),
    arg(Type.String, message)
  )
end

-- BOOL NETWORK_IS_FRIEND_INDEX_ONLINE(int friendIndex) // 0xBAD8F2A42B844821
function NETWORK.NETWORK_IS_FRIEND_INDEX_ONLINE(friendIndex)
  return native.invoke(
    Type.Bool, 3111, false,
    arg(Type.Int, friendIndex)
  )
end

-- void NETWORK_SET_PLAYER_IS_PASSIVE(BOOL toggle) // 0x1B857666604B1A74
function NETWORK.NETWORK_SET_PLAYER_IS_PASSIVE(toggle)
  native.invoke(
    Type.Void, 3112, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL NETWORK_GET_PLAYER_OWNS_WAYPOINT(Player player) // 0x82377B65E943F72D
function NETWORK.NETWORK_GET_PLAYER_OWNS_WAYPOINT(player)
  return native.invoke(
    Type.Bool, 3113, false,
    arg(Type.Player, player)
  )
end

-- BOOL NETWORK_CAN_SET_WAYPOINT() // 0xC927EC229934AF60
function NETWORK.NETWORK_CAN_SET_WAYPOINT()
  return native.invoke(
    Type.Bool, 3114, false
  )
end

-- void NETWORK_IGNORE_REMOTE_WAYPOINTS() // 0x4C2A9FDC22377075
function NETWORK.NETWORK_IGNORE_REMOTE_WAYPOINTS()
  native.invoke(
    Type.Void, 3115, false
  )
end

-- BOOL _NETWORK_DOES_COMMUNICATION_GROUP_EXIST(int communicationType) // 0xDBDF80673BBA3D65
--[[
communicationType: 0 = VOICE; 1 = TEXT_CHAT; 2 = TEXT_MESSAGE; 3 = EMAIL; 4 = USER_CONTENT;  5 = USER_TEXT
--]]
function NETWORK._NETWORK_DOES_COMMUNICATION_GROUP_EXIST(communicationType)
  return native.invoke(
    Type.Bool, 3116, false,
    arg(Type.Int, communicationType)
  )
end

-- int _NETWORK_GET_COMMUNICATION_GROUP_FLAGS(int communicationType) // 0x40DF02F371F40883
--[[
Returns communicationGroupFlag
communicationType: see 0xDBDF80673BBA3D65

enum eCommunicationGroupFlag
{
	COMMUNICATION_GROUP_LOCAL_PLAYER = 1 << 0,
	COMMUNICATION_GROUP_FRIENDS = 1 << 1,
	COMMUNICATION_GROUP_SMALL_CREW = 1 << 2,
	COMMUNICATION_GROUP_LARGE_CREW = 1 << 3,
	COMMUNICATION_GROUP_RECENT_PLAYER = 1 << 4,
	COMMUNICATION_GROUP_SAME_SESSION = 1 << 5,
	COMMUNICATION_GROUP_SAME_TEAM = 1 << 6,
	COMMUNICATION_GROUP_INVALID = 1 << 7,
};
--]]
function NETWORK._NETWORK_GET_COMMUNICATION_GROUP_FLAGS(communicationType)
  return native.invoke(
    Type.Int, 3117, false,
    arg(Type.Int, communicationType)
  )
end

-- void _NETWORK_SET_COMMUNICATION_GROUP_FLAGS(int communicationType, int communicationGroupFlag) // 0xE549F846DE7D32D5
--[[
communicationType: see 0xDBDF80673BBA3D65
communicationGroupFlag: see 0x40DF02F371F40883
--]]
function NETWORK._NETWORK_SET_COMMUNICATION_GROUP_FLAGS(communicationType, communicationGroupFlag)
  native.invoke(
    Type.Void, 3118, false,
    arg(Type.Int, communicationType),
    arg(Type.Int, communicationGroupFlag)
  )
end

-- BOOL NETWORK_IS_PLAYER_ON_BLOCKLIST(Any* gamerHandle) // 0xAD4326FCA30D62F8
function NETWORK.NETWORK_IS_PLAYER_ON_BLOCKLIST(gamerHandle)
  return native.invoke(
    Type.Bool, 3119, false,
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_SET_SCRIPT_AUTOMUTED(Any p0) // 0xB309EBEA797E001F
function NETWORK.NETWORK_SET_SCRIPT_AUTOMUTED(p0)
  return native.invoke(
    Type.Bool, 3120, false,
    arg(Type.Any, p0)
  )
end

-- BOOL NETWORK_HAS_AUTOMUTE_OVERRIDE() // 0x26F07DD83A5F7F98
function NETWORK.NETWORK_HAS_AUTOMUTE_OVERRIDE()
  return native.invoke(
    Type.Bool, 3121, false
  )
end

-- BOOL NETWORK_HAS_HEADSET() // 0xE870F9F1F7B4F1FA
function NETWORK.NETWORK_HAS_HEADSET()
  return native.invoke(
    Type.Bool, 3122, false
  )
end

-- void NETWORK_SET_LOOK_AT_TALKERS(BOOL p0) // 0x7D395EA61622E116
function NETWORK.NETWORK_SET_LOOK_AT_TALKERS(p0)
  native.invoke(
    Type.Void, 3123, false,
    arg(Type.Bool, p0)
  )
end

-- BOOL NETWORK_IS_PUSH_TO_TALK_ACTIVE() // 0xC0D2AF00BCC234CA
function NETWORK.NETWORK_IS_PUSH_TO_TALK_ACTIVE()
  return native.invoke(
    Type.Bool, 3124, false
  )
end

-- BOOL NETWORK_GAMER_HAS_HEADSET(Any* gamerHandle) // 0xF2FD55CB574BCC55
function NETWORK.NETWORK_GAMER_HAS_HEADSET(gamerHandle)
  return native.invoke(
    Type.Bool, 3125, false,
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_IS_GAMER_TALKING(Any* gamerHandle) // 0x71C33B22606CD88A
function NETWORK.NETWORK_IS_GAMER_TALKING(gamerHandle)
  return native.invoke(
    Type.Bool, 3126, false,
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_PERMISSIONS_HAS_GAMER_RECORD(Any* gamerHandle) // 0x559EBF901A8C68E0
function NETWORK.NETWORK_PERMISSIONS_HAS_GAMER_RECORD(gamerHandle)
  return native.invoke(
    Type.Bool, 3127, false,
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_CAN_COMMUNICATE_WITH_GAMER(Any* gamerHandle) // 0x8F5D1AD832AEB06C
function NETWORK.NETWORK_CAN_COMMUNICATE_WITH_GAMER(gamerHandle)
  return native.invoke(
    Type.Bool, 3128, false,
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_CAN_TEXT_CHAT_WITH_GAMER(Any* gamerHandle) // 0xA150A4F065806B1F
function NETWORK.NETWORK_CAN_TEXT_CHAT_WITH_GAMER(gamerHandle)
  return native.invoke(
    Type.Bool, 3129, false,
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_IS_GAMER_MUTED_BY_ME(Any* gamerHandle) // 0xCE60DE011B6C7978
function NETWORK.NETWORK_IS_GAMER_MUTED_BY_ME(gamerHandle)
  return native.invoke(
    Type.Bool, 3130, false,
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_AM_I_MUTED_BY_GAMER(Any* gamerHandle) // 0xDF02A2C93F1F26DA
function NETWORK.NETWORK_AM_I_MUTED_BY_GAMER(gamerHandle)
  return native.invoke(
    Type.Bool, 3131, false,
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_IS_GAMER_BLOCKED_BY_ME(Any* gamerHandle) // 0xE944C4F5AF1B5883
function NETWORK.NETWORK_IS_GAMER_BLOCKED_BY_ME(gamerHandle)
  return native.invoke(
    Type.Bool, 3132, false,
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_AM_I_BLOCKED_BY_GAMER(Any* gamerHandle) // 0x15337C7C268A27B2
function NETWORK.NETWORK_AM_I_BLOCKED_BY_GAMER(gamerHandle)
  return native.invoke(
    Type.Bool, 3133, false,
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_CAN_VIEW_GAMER_USER_CONTENT(Any* gamerHandle) // 0xB57A49545BA53CE7
function NETWORK.NETWORK_CAN_VIEW_GAMER_USER_CONTENT(gamerHandle)
  return native.invoke(
    Type.Bool, 3134, false,
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_HAS_VIEW_GAMER_USER_CONTENT_RESULT(Any* gamerHandle) // 0xCCA4318E1AB03F1F
function NETWORK.NETWORK_HAS_VIEW_GAMER_USER_CONTENT_RESULT(gamerHandle)
  return native.invoke(
    Type.Bool, 3135, false,
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_CAN_PLAY_MULTIPLAYER_WITH_GAMER(Any* gamerHandle) // 0x07DD29D5E22763F1
function NETWORK.NETWORK_CAN_PLAY_MULTIPLAYER_WITH_GAMER(gamerHandle)
  return native.invoke(
    Type.Bool, 3136, false,
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_CAN_GAMER_PLAY_MULTIPLAYER_WITH_ME(Any* gamerHandle) // 0x135F9B7B7ADD2185
function NETWORK.NETWORK_CAN_GAMER_PLAY_MULTIPLAYER_WITH_ME(gamerHandle)
  return native.invoke(
    Type.Bool, 3137, false,
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_CAN_SEND_LOCAL_INVITE(Any* gamerHandle) // 0x021ABCBD98EC4320
function NETWORK.NETWORK_CAN_SEND_LOCAL_INVITE(gamerHandle)
  return native.invoke(
    Type.Bool, 3138, false,
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_CAN_RECEIVE_LOCAL_INVITE(Any* gamerHandle) // 0x421E34C55F125964
function NETWORK.NETWORK_CAN_RECEIVE_LOCAL_INVITE(gamerHandle)
  return native.invoke(
    Type.Bool, 3139, false,
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_IS_PLAYER_TALKING(Player player) // 0x031E11F3D447647E
--[[
returns true if someone is screaming or talking in a microphone
--]]
function NETWORK.NETWORK_IS_PLAYER_TALKING(player)
  return native.invoke(
    Type.Bool, 3140, false,
    arg(Type.Player, player)
  )
end

-- BOOL NETWORK_PLAYER_HAS_HEADSET(Player player) // 0x3FB99A8B08D18FD6
function NETWORK.NETWORK_PLAYER_HAS_HEADSET(player)
  return native.invoke(
    Type.Bool, 3141, false,
    arg(Type.Player, player)
  )
end

-- BOOL NETWORK_IS_PLAYER_MUTED_BY_ME(Player player) // 0x8C71288AE68EDE39
function NETWORK.NETWORK_IS_PLAYER_MUTED_BY_ME(player)
  return native.invoke(
    Type.Bool, 3142, false,
    arg(Type.Player, player)
  )
end

-- BOOL NETWORK_AM_I_MUTED_BY_PLAYER(Player player) // 0x9D6981DFC91A8604
function NETWORK.NETWORK_AM_I_MUTED_BY_PLAYER(player)
  return native.invoke(
    Type.Bool, 3143, false,
    arg(Type.Player, player)
  )
end

-- BOOL NETWORK_IS_PLAYER_BLOCKED_BY_ME(Player player) // 0x57AF1F8E27483721
function NETWORK.NETWORK_IS_PLAYER_BLOCKED_BY_ME(player)
  return native.invoke(
    Type.Bool, 3144, false,
    arg(Type.Player, player)
  )
end

-- BOOL NETWORK_AM_I_BLOCKED_BY_PLAYER(Player player) // 0x87F395D957D4353D
function NETWORK.NETWORK_AM_I_BLOCKED_BY_PLAYER(player)
  return native.invoke(
    Type.Bool, 3145, false,
    arg(Type.Player, player)
  )
end

-- float NETWORK_GET_PLAYER_LOUDNESS(Player player) // 0x21A1684A25C2867F
function NETWORK.NETWORK_GET_PLAYER_LOUDNESS(player)
  return native.invoke(
    Type.Float, 3146, false,
    arg(Type.Player, player)
  )
end

-- void NETWORK_SET_TALKER_PROXIMITY(float value) // 0xCBF12D65F95AD686
function NETWORK.NETWORK_SET_TALKER_PROXIMITY(value)
  native.invoke(
    Type.Void, 3147, false,
    arg(Type.Float, value)
  )
end

-- float NETWORK_GET_TALKER_PROXIMITY() // 0x84F0F13120B4E098
function NETWORK.NETWORK_GET_TALKER_PROXIMITY()
  return native.invoke(
    Type.Float, 3148, false
  )
end

-- void NETWORK_SET_VOICE_ACTIVE(BOOL toggle) // 0xBABEC9E69A91C57B
function NETWORK.NETWORK_SET_VOICE_ACTIVE(toggle)
  native.invoke(
    Type.Void, 3149, false,
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_REMAIN_IN_GAME_CHAT(BOOL p0) // 0xCFEB46DCD7D8D5EB
function NETWORK.NETWORK_REMAIN_IN_GAME_CHAT(p0)
  native.invoke(
    Type.Void, 3150, false,
    arg(Type.Bool, p0)
  )
end

-- void NETWORK_OVERRIDE_TRANSITION_CHAT(BOOL p0) // 0xAF66059A131AA269
function NETWORK.NETWORK_OVERRIDE_TRANSITION_CHAT(p0)
  native.invoke(
    Type.Void, 3151, false,
    arg(Type.Bool, p0)
  )
end

-- void NETWORK_SET_TEAM_ONLY_CHAT(BOOL toggle) // 0xD5B4883AC32F24C3
function NETWORK.NETWORK_SET_TEAM_ONLY_CHAT(toggle)
  native.invoke(
    Type.Void, 3152, false,
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_SET_SCRIPT_CONTROLLING_TEAMS(Any p0) // 0x265559DA40B3F327
function NETWORK.NETWORK_SET_SCRIPT_CONTROLLING_TEAMS(p0)
  native.invoke(
    Type.Void, 3153, false,
    arg(Type.Any, p0)
  )
end

-- BOOL NETWORK_SET_SAME_TEAM_AS_LOCAL_PLAYER(Any p0, Any p1) // 0x4348BFDA56023A2F
function NETWORK.NETWORK_SET_SAME_TEAM_AS_LOCAL_PLAYER(p0, p1)
  return native.invoke(
    Type.Bool, 3154, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_OVERRIDE_TEAM_RESTRICTIONS(int team, BOOL toggle) // 0x6F697A66CE78674E
function NETWORK.NETWORK_OVERRIDE_TEAM_RESTRICTIONS(team, toggle)
  native.invoke(
    Type.Void, 3155, false,
    arg(Type.Int, team),
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_SET_OVERRIDE_SPECTATOR_MODE(BOOL toggle) // 0x70DA3BF8DACD3210
function NETWORK.NETWORK_SET_OVERRIDE_SPECTATOR_MODE(toggle)
  native.invoke(
    Type.Void, 3156, false,
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_SET_OVERRIDE_TUTORIAL_SESSION_CHAT(BOOL toggle) // 0x3C5C1E2C2FF814B1
function NETWORK.NETWORK_SET_OVERRIDE_TUTORIAL_SESSION_CHAT(toggle)
  native.invoke(
    Type.Void, 3157, false,
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_SET_PROXIMITY_AFFECTS_TEAM(BOOL toggle) // 0x9D7AFCBF21C51712
function NETWORK.NETWORK_SET_PROXIMITY_AFFECTS_TEAM(toggle)
  native.invoke(
    Type.Void, 3158, false,
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_SET_NO_SPECTATOR_CHAT(BOOL toggle) // 0xF46A1E03E8755980
function NETWORK.NETWORK_SET_NO_SPECTATOR_CHAT(toggle)
  native.invoke(
    Type.Void, 3159, false,
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_SET_IGNORE_SPECTATOR_CHAT_LIMITS_SAME_TEAM(BOOL toggle) // 0x6A5D89D7769A40D8
function NETWORK.NETWORK_SET_IGNORE_SPECTATOR_CHAT_LIMITS_SAME_TEAM(toggle)
  native.invoke(
    Type.Void, 3160, false,
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_OVERRIDE_CHAT_RESTRICTIONS(Player player, BOOL toggle) // 0x3039AE5AD2C9C0C4
--[[
Could possibly bypass being muted or automatically muted
--]]
function NETWORK.NETWORK_OVERRIDE_CHAT_RESTRICTIONS(player, toggle)
  native.invoke(
    Type.Void, 3161, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_OVERRIDE_SEND_RESTRICTIONS(Player player, BOOL toggle) // 0x97DD4C5944CC2E6A
--[[
This is used alongside the native,
'NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS'. Read its description for more info.
--]]
function NETWORK.NETWORK_OVERRIDE_SEND_RESTRICTIONS(player, toggle)
  native.invoke(
    Type.Void, 3162, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_OVERRIDE_SEND_RESTRICTIONS_ALL(BOOL toggle) // 0x57B192B4D4AD23D5
function NETWORK.NETWORK_OVERRIDE_SEND_RESTRICTIONS_ALL(toggle)
  native.invoke(
    Type.Void, 3163, false,
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS(Player player, BOOL toggle) // 0xDDF73E2B1FEC5AB4
--[[
R* uses this to hear all player when spectating. 
It allows you to hear other online players when their chat is on none, crew and or friends
--]]
function NETWORK.NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS(player, toggle)
  native.invoke(
    Type.Void, 3164, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS_ALL(BOOL toggle) // 0x0FF2862B61A58AF9
--[[
p0 is always false in scripts.
--]]
function NETWORK.NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS_ALL(toggle)
  native.invoke(
    Type.Void, 3165, false,
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_SET_VOICE_CHANNEL(int channel) // 0xEF6212C2EFEF1A23
function NETWORK.NETWORK_SET_VOICE_CHANNEL(channel)
  native.invoke(
    Type.Void, 3166, false,
    arg(Type.Int, channel)
  )
end

-- void NETWORK_CLEAR_VOICE_CHANNEL() // 0xE036A705F989E049
function NETWORK.NETWORK_CLEAR_VOICE_CHANNEL()
  native.invoke(
    Type.Void, 3167, false
  )
end

-- void NETWORK_APPLY_VOICE_PROXIMITY_OVERRIDE(float x, float y, float z) // 0xDBD2056652689917
function NETWORK.NETWORK_APPLY_VOICE_PROXIMITY_OVERRIDE(x, y, z)
  native.invoke(
    Type.Void, 3168, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void NETWORK_CLEAR_VOICE_PROXIMITY_OVERRIDE() // 0xF03755696450470C
function NETWORK.NETWORK_CLEAR_VOICE_PROXIMITY_OVERRIDE()
  native.invoke(
    Type.Void, 3169, false
  )
end

-- void NETWORK_ENABLE_VOICE_BANDWIDTH_RESTRICTION(Player player) // 0x5E3AA4CA2B6FB0EE
function NETWORK.NETWORK_ENABLE_VOICE_BANDWIDTH_RESTRICTION(player)
  native.invoke(
    Type.Void, 3170, false,
    arg(Type.Player, player)
  )
end

-- void NETWORK_DISABLE_VOICE_BANDWIDTH_RESTRICTION(Player player) // 0xCA575C391FEA25CC
function NETWORK.NETWORK_DISABLE_VOICE_BANDWIDTH_RESTRICTION(player)
  native.invoke(
    Type.Void, 3171, false,
    arg(Type.Player, player)
  )
end

-- void NETWORK_GET_MUTE_COUNT_FOR_PLAYER(Player p0, float* p1, float* p2) // 0xADB57E5B663CCA8B
--[[
NETWORK_GET_M[A-U]
--]]
function NETWORK.NETWORK_GET_MUTE_COUNT_FOR_PLAYER(p0, p1, p2)
  native.invoke(
    Type.Void, 3172, false,
    arg(Type.Player, p0),
    arg(Type.Float, p1),
    arg(Type.Float, p2)
  )
end

-- void NETWORK_SET_SPECTATOR_TO_NON_SPECTATOR_TEXT_CHAT(BOOL toggle) // 0x8EF52ACAECC51D9C
function NETWORK.NETWORK_SET_SPECTATOR_TO_NON_SPECTATOR_TEXT_CHAT(toggle)
  native.invoke(
    Type.Void, 3173, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL NETWORK_TEXT_CHAT_IS_TYPING() // 0x5FCF4D7069B09026
--[[
Same as _IS_TEXT_CHAT_ACTIVE, except it does not check if the text chat HUD component is initialized, and therefore may crash.
--]]
function NETWORK.NETWORK_TEXT_CHAT_IS_TYPING()
  return native.invoke(
    Type.Bool, 3174, false
  )
end

-- void SHUTDOWN_AND_LAUNCH_SINGLE_PLAYER_GAME() // 0x593850C16A36B692
--[[
Starts a new singleplayer game (at the prologue).
--]]
function NETWORK.SHUTDOWN_AND_LAUNCH_SINGLE_PLAYER_GAME()
  native.invoke(
    Type.Void, 3175, false
  )
end

-- BOOL SHUTDOWN_AND_LOAD_MOST_RECENT_SAVE() // 0x9ECA15ADFE141431
--[[
In singleplayer this will re-load your game.

In FiveM / GTA:Online this disconnects you from the session, and starts loading single player, however you still remain connected to the server (only if you're the host, if you're not then you also (most likely) get disconnected from the server) and other players will not be able to join until you exit the game.

You might need to DoScreenFadeIn and ShutdownLoadingScreen otherwise you probably won't end up loading into SP at all.

Somewhat related note: opening the pause menu after loading into this 'singleplayer' mode crashes the game.
--]]
function NETWORK.SHUTDOWN_AND_LOAD_MOST_RECENT_SAVE()
  return native.invoke(
    Type.Bool, 3176, false
  )
end

-- void NETWORK_SET_FRIENDLY_FIRE_OPTION(BOOL toggle) // 0xF808475FA571D823
function NETWORK.NETWORK_SET_FRIENDLY_FIRE_OPTION(toggle)
  native.invoke(
    Type.Void, 3177, false,
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_SET_RICH_PRESENCE(int p0, int p1, Any p2, Any p3) // 0x1DCCACDCFC569362
--[[
This native does absolutely nothing, just a nullsub
--]]
function NETWORK.NETWORK_SET_RICH_PRESENCE(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 3178, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void NETWORK_SET_RICH_PRESENCE_STRING(int p0, const char* textLabel) // 0x3E200C2BCF4164EB
--[[
This native does absolutely nothing, just a nullsub
--]]
function NETWORK.NETWORK_SET_RICH_PRESENCE_STRING(p0, textLabel)
  native.invoke(
    Type.Void, 3179, false,
    arg(Type.Int, p0),
    arg(Type.String, textLabel)
  )
end

-- int NETWORK_GET_TIMEOUT_TIME() // 0x5ED0356A0CE3A34F
function NETWORK.NETWORK_GET_TIMEOUT_TIME()
  return native.invoke(
    Type.Int, 3180, false
  )
end

-- void NETWORK_LEAVE_PED_BEHIND_BEFORE_WARP(Player player, float x, float y, float z, BOOL p4, BOOL p5) // 0x9769F811D1785B03
--[[
p4 and p5 are always 0 in scripts
--]]
function NETWORK.NETWORK_LEAVE_PED_BEHIND_BEFORE_WARP(player, x, y, z, p4, p5)
  native.invoke(
    Type.Void, 3181, false,
    arg(Type.Player, player),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Bool, p4),
    arg(Type.Bool, p5)
  )
end

-- void NETWORK_LEAVE_PED_BEHIND_BEFORE_CUTSCENE(Player player, BOOL p1) // 0xBF22E0F32968E967
function NETWORK.NETWORK_LEAVE_PED_BEHIND_BEFORE_CUTSCENE(player, p1)
  native.invoke(
    Type.Void, 3182, false,
    arg(Type.Player, player),
    arg(Type.Bool, p1)
  )
end

-- void REMOVE_ALL_STICKY_BOMBS_FROM_ENTITY(Entity entity, Ped ped) // 0x715135F4B82AC90D
--[[
entity must be a valid entity; ped can be NULL
--]]
function NETWORK.REMOVE_ALL_STICKY_BOMBS_FROM_ENTITY(entity, ped)
  native.invoke(
    Type.Void, 3183, false,
    arg(Type.Entity, entity),
    arg(Type.Ped, ped)
  )
end

-- void NETWORK_KEEP_ENTITY_COLLISION_DISABLED_AFTER_ANIM_SCENE(Any p0, Any p1) // 0x17C9E241111A674D
function NETWORK.NETWORK_KEEP_ENTITY_COLLISION_DISABLED_AFTER_ANIM_SCENE(p0, p1)
  native.invoke(
    Type.Void, 3184, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL NETWORK_IS_ANY_PLAYER_NEAR(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) // 0x2E4C123D1C8A710E
function NETWORK.NETWORK_IS_ANY_PLAYER_NEAR(p0, p1, p2, p3, p4, p5, p6)
  return native.invoke(
    Type.Bool, 3185, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5),
    arg(Type.Any, p6)
  )
end

-- BOOL NETWORK_CLAN_SERVICE_IS_VALID() // 0x579CCED0265D4896
function NETWORK.NETWORK_CLAN_SERVICE_IS_VALID()
  return native.invoke(
    Type.Bool, 3186, false
  )
end

-- BOOL NETWORK_CLAN_PLAYER_IS_ACTIVE(Any* gamerHandle) // 0xB124B57F571D8F18
function NETWORK.NETWORK_CLAN_PLAYER_IS_ACTIVE(gamerHandle)
  return native.invoke(
    Type.Bool, 3187, false,
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_CLAN_PLAYER_GET_DESC(Any* clanDesc, int bufferSize, Any* gamerHandle) // 0xEEE6EACBE8874FBA
--[[
bufferSize is 35 in the scripts.

bufferSize is the elementCount of p0(desc), sizeof(p0) == 280 == p1*8 == 35 * 8, p2(netHandle) is obtained from NETWORK::NETWORK_HANDLE_FROM_PLAYER.  And no, I can't explain why 35 * sizeof(int) == 280 and not 140, but I'll get back to you on that.

the answer is: because p0 an int64_t* / int64_t[35].  and FYI p2 is an int64_t[13]

https://pastebin.com/cSZniHak
--]]
function NETWORK.NETWORK_CLAN_PLAYER_GET_DESC(clanDesc, bufferSize, gamerHandle)
  return native.invoke(
    Type.Bool, 3188, false,
    arg(Type.Any, clanDesc),
    arg(Type.Int, bufferSize),
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_CLAN_IS_ROCKSTAR_CLAN(Any* clanDesc, int bufferSize) // 0x7543BB439F63792B
--[[
bufferSize is 35 in the scripts.
--]]
function NETWORK.NETWORK_CLAN_IS_ROCKSTAR_CLAN(clanDesc, bufferSize)
  return native.invoke(
    Type.Bool, 3189, false,
    arg(Type.Any, clanDesc),
    arg(Type.Int, bufferSize)
  )
end

-- void NETWORK_CLAN_GET_UI_FORMATTED_TAG(Any* clanDesc, int bufferSize, char* formattedTag) // 0xF45352426FF3A4F0
--[[
bufferSize is 35 in the scripts.
--]]
function NETWORK.NETWORK_CLAN_GET_UI_FORMATTED_TAG(clanDesc, bufferSize, formattedTag)
  native.invoke(
    Type.Void, 3190, false,
    arg(Type.Any, clanDesc),
    arg(Type.Int, bufferSize),
    arg(Type.Char, formattedTag)
  )
end

-- int NETWORK_CLAN_GET_LOCAL_MEMBERSHIPS_COUNT() // 0x1F471B79ACC90BEF
function NETWORK.NETWORK_CLAN_GET_LOCAL_MEMBERSHIPS_COUNT()
  return native.invoke(
    Type.Int, 3191, false
  )
end

-- BOOL NETWORK_CLAN_GET_MEMBERSHIP_DESC(Any* memberDesc, int p1) // 0x48DE78AF2C8885B8
function NETWORK.NETWORK_CLAN_GET_MEMBERSHIP_DESC(memberDesc, p1)
  return native.invoke(
    Type.Bool, 3192, false,
    arg(Type.Any, memberDesc),
    arg(Type.Int, p1)
  )
end

-- BOOL NETWORK_CLAN_DOWNLOAD_MEMBERSHIP(Any* gamerHandle) // 0xA989044E70010ABE
function NETWORK.NETWORK_CLAN_DOWNLOAD_MEMBERSHIP(gamerHandle)
  return native.invoke(
    Type.Bool, 3193, false,
    arg(Type.Any, gamerHandle)
  )
end

-- BOOL NETWORK_CLAN_DOWNLOAD_MEMBERSHIP_PENDING(Any* p0) // 0x5B9E023DC6EBEDC0
function NETWORK.NETWORK_CLAN_DOWNLOAD_MEMBERSHIP_PENDING(p0)
  return native.invoke(
    Type.Bool, 3194, false,
    arg(Type.Any, p0)
  )
end

-- BOOL NETWORK_CLAN_ANY_DOWNLOAD_MEMBERSHIP_PENDING() // 0xB3F64A6A91432477
function NETWORK.NETWORK_CLAN_ANY_DOWNLOAD_MEMBERSHIP_PENDING()
  return native.invoke(
    Type.Bool, 3195, false
  )
end

-- BOOL NETWORK_CLAN_REMOTE_MEMBERSHIPS_ARE_IN_CACHE(int* p0) // 0xBB6E6FEE99D866B2
function NETWORK.NETWORK_CLAN_REMOTE_MEMBERSHIPS_ARE_IN_CACHE(p0)
  return native.invoke(
    Type.Bool, 3196, false,
    arg(Type.Int, p0)
  )
end

-- int NETWORK_CLAN_GET_MEMBERSHIP_COUNT(int* p0) // 0xAAB11F6C4ADBC2C1
function NETWORK.NETWORK_CLAN_GET_MEMBERSHIP_COUNT(p0)
  return native.invoke(
    Type.Int, 3197, false,
    arg(Type.Int, p0)
  )
end

-- BOOL NETWORK_CLAN_GET_MEMBERSHIP_VALID(int* p0, Any p1) // 0x48A59CF88D43DF0E
function NETWORK.NETWORK_CLAN_GET_MEMBERSHIP_VALID(p0, p1)
  return native.invoke(
    Type.Bool, 3198, false,
    arg(Type.Int, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL NETWORK_CLAN_GET_MEMBERSHIP(int* p0, Any* clanMembership, int p2) // 0xC8BC2011F67B3411
function NETWORK.NETWORK_CLAN_GET_MEMBERSHIP(p0, clanMembership, p2)
  return native.invoke(
    Type.Bool, 3199, false,
    arg(Type.Int, p0),
    arg(Type.Any, clanMembership),
    arg(Type.Int, p2)
  )
end

-- BOOL NETWORK_CLAN_JOIN(int clanDesc) // 0x9FAAA4F4FC71F87F
function NETWORK.NETWORK_CLAN_JOIN(clanDesc)
  return native.invoke(
    Type.Bool, 3200, false,
    arg(Type.Int, clanDesc)
  )
end

-- BOOL NETWORK_CLAN_CREWINFO_GET_STRING_VALUE(const char* animDict, const char* animName) // 0x729E3401F0430686
--[[
Only documented...

Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
--]]
function NETWORK.NETWORK_CLAN_CREWINFO_GET_STRING_VALUE(animDict, animName)
  return native.invoke(
    Type.Bool, 3201, false,
    arg(Type.String, animDict),
    arg(Type.String, animName)
  )
end

-- BOOL NETWORK_CLAN_CREWINFO_GET_CREWRANKTITLE(int p0, const char* p1) // 0x2B51EDBEFC301339
function NETWORK.NETWORK_CLAN_CREWINFO_GET_CREWRANKTITLE(p0, p1)
  return native.invoke(
    Type.Bool, 3202, false,
    arg(Type.Int, p0),
    arg(Type.String, p1)
  )
end

-- BOOL NETWORK_CLAN_HAS_CREWINFO_METADATA_BEEN_RECEIVED() // 0xC32EA7A2F6CA7557
function NETWORK.NETWORK_CLAN_HAS_CREWINFO_METADATA_BEEN_RECEIVED()
  return native.invoke(
    Type.Bool, 3203, false
  )
end

-- BOOL NETWORK_CLAN_GET_EMBLEM_TXD_NAME(Any* netHandle, char* txdName) // 0x5835D9CD92E83184
function NETWORK.NETWORK_CLAN_GET_EMBLEM_TXD_NAME(netHandle, txdName)
  return native.invoke(
    Type.Bool, 3204, false,
    arg(Type.Any, netHandle),
    arg(Type.Char, txdName)
  )
end

-- BOOL NETWORK_CLAN_REQUEST_EMBLEM(Any p0) // 0x13518FF1C6B28938
function NETWORK.NETWORK_CLAN_REQUEST_EMBLEM(p0)
  return native.invoke(
    Type.Bool, 3205, false,
    arg(Type.Any, p0)
  )
end

-- BOOL NETWORK_CLAN_IS_EMBLEM_READY(Any p0, Any* p1) // 0xA134777FF7F33331
function NETWORK.NETWORK_CLAN_IS_EMBLEM_READY(p0, p1)
  return native.invoke(
    Type.Bool, 3206, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_CLAN_RELEASE_EMBLEM(Any p0) // 0x113E6E3E50E286B0
function NETWORK.NETWORK_CLAN_RELEASE_EMBLEM(p0)
  native.invoke(
    Type.Void, 3207, false,
    arg(Type.Any, p0)
  )
end

-- BOOL NETWORK_GET_PRIMARY_CLAN_DATA_CLEAR() // 0x9AA46BADAD0E27ED
function NETWORK.NETWORK_GET_PRIMARY_CLAN_DATA_CLEAR()
  return native.invoke(
    Type.Bool, 3208, false
  )
end

-- void NETWORK_GET_PRIMARY_CLAN_DATA_CANCEL() // 0x042E4B70B93E6054
function NETWORK.NETWORK_GET_PRIMARY_CLAN_DATA_CANCEL()
  native.invoke(
    Type.Void, 3209, false
  )
end

-- BOOL NETWORK_GET_PRIMARY_CLAN_DATA_START(Any* p0, Any p1) // 0xCE86D8191B762107
function NETWORK.NETWORK_GET_PRIMARY_CLAN_DATA_START(p0, p1)
  return native.invoke(
    Type.Bool, 3210, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL NETWORK_GET_PRIMARY_CLAN_DATA_PENDING() // 0xB5074DB804E28CE7
function NETWORK.NETWORK_GET_PRIMARY_CLAN_DATA_PENDING()
  return native.invoke(
    Type.Bool, 3211, false
  )
end

-- BOOL NETWORK_GET_PRIMARY_CLAN_DATA_SUCCESS() // 0x5B4F04F19376A0BA
function NETWORK.NETWORK_GET_PRIMARY_CLAN_DATA_SUCCESS()
  return native.invoke(
    Type.Bool, 3212, false
  )
end

-- BOOL NETWORK_GET_PRIMARY_CLAN_DATA_NEW(Any* p0, Any* p1) // 0xC080FF658B2E41DA
function NETWORK.NETWORK_GET_PRIMARY_CLAN_DATA_NEW(p0, p1)
  return native.invoke(
    Type.Bool, 3213, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void SET_NETWORK_ID_CAN_MIGRATE(int netId, BOOL toggle) // 0x299EEB23175895FC
--[[
Whether or not another player is allowed to take control of the entity
--]]
function NETWORK.SET_NETWORK_ID_CAN_MIGRATE(netId, toggle)
  native.invoke(
    Type.Void, 3214, false,
    arg(Type.Int, netId),
    arg(Type.Bool, toggle)
  )
end

-- void SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(int netId, BOOL toggle) // 0xE05E81A888FA63C8
function NETWORK.SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(netId, toggle)
  native.invoke(
    Type.Void, 3215, false,
    arg(Type.Int, netId),
    arg(Type.Bool, toggle)
  )
end

-- void SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER(int netId, Player player, BOOL toggle) // 0xA8A024587329F36A
function NETWORK.SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER(netId, player, toggle)
  native.invoke(
    Type.Void, 3216, false,
    arg(Type.Int, netId),
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- void SET_NETWORK_ID_CAN_BE_REASSIGNED(int netId, BOOL toggle) // 0x9D724B400A7E8FFC
--[[
"No Reassign" in CPhysicalScriptGameStateDataNode
--]]
function NETWORK.SET_NETWORK_ID_CAN_BE_REASSIGNED(netId, toggle)
  native.invoke(
    Type.Void, 3217, false,
    arg(Type.Int, netId),
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_SET_ENTITY_CAN_BLEND(Entity entity, BOOL toggle) // 0xD830567D88A1E873
function NETWORK.NETWORK_SET_ENTITY_CAN_BLEND(entity, toggle)
  native.invoke(
    Type.Void, 3218, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_SET_OBJECT_CAN_BLEND_WHEN_FIXED(Object object, BOOL toggle) // 0x0379DAF89BA09AA5
function NETWORK.NETWORK_SET_OBJECT_CAN_BLEND_WHEN_FIXED(object, toggle)
  native.invoke(
    Type.Void, 3219, false,
    arg(Type.Object, object),
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_SET_ENTITY_ONLY_EXISTS_FOR_PARTICIPANTS(Entity entity, BOOL toggle) // 0xF1CA12B18AEF5298
--[[
if set to true other network players can't see it
if set to false other network player can see it
=========================================
^^ I attempted this by grabbing an object with GET_ENTITY_PLAYER_IS_FREE_AIMING_AT and setting this naive no matter the toggle he could still see it.

pc or last gen?

^^ last-gen
--]]
function NETWORK.NETWORK_SET_ENTITY_ONLY_EXISTS_FOR_PARTICIPANTS(entity, toggle)
  native.invoke(
    Type.Void, 3220, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- void SET_NETWORK_ID_VISIBLE_IN_CUTSCENE(int netId, BOOL p1, BOOL p2) // 0xA6928482543022B4
function NETWORK.SET_NETWORK_ID_VISIBLE_IN_CUTSCENE(netId, p1, p2)
  native.invoke(
    Type.Void, 3221, false,
    arg(Type.Int, netId),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void SET_NETWORK_ID_VISIBLE_IN_CUTSCENE_HACK(int netId, BOOL p1, BOOL p2) // 0x32EBD154CB6B8B99
function NETWORK.SET_NETWORK_ID_VISIBLE_IN_CUTSCENE_HACK(netId, p1, p2)
  native.invoke(
    Type.Void, 3222, false,
    arg(Type.Int, netId),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void SET_NETWORK_ID_VISIBLE_IN_CUTSCENE_REMAIN_HACK(Any p0, Any p1, Any p2) // 0x76B3F29D3F967692
function NETWORK.SET_NETWORK_ID_VISIBLE_IN_CUTSCENE_REMAIN_HACK(p0, p1, p2)
  native.invoke(
    Type.Void, 3223, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void SET_NETWORK_CUTSCENE_ENTITIES(BOOL toggle) // 0xAAA553E7DD28A457
function NETWORK.SET_NETWORK_CUTSCENE_ENTITIES(toggle)
  native.invoke(
    Type.Void, 3224, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL ARE_CUTSCENE_ENTITIES_NETWORKED() // 0x66D6A5E9C511214A
--[[
Getter for SET_NETWORK_CUTSCENE_ENTITIES.
--]]
function NETWORK.ARE_CUTSCENE_ENTITIES_NETWORKED()
  return native.invoke(
    Type.Bool, 3225, false
  )
end

-- void SET_NETWORK_ID_PASS_CONTROL_IN_TUTORIAL(int netId, BOOL state) // 0x3FA36981311FA4FF
function NETWORK.SET_NETWORK_ID_PASS_CONTROL_IN_TUTORIAL(netId, state)
  native.invoke(
    Type.Void, 3226, false,
    arg(Type.Int, netId),
    arg(Type.Bool, state)
  )
end

-- BOOL IS_NETWORK_ID_OWNED_BY_PARTICIPANT(int netId) // 0xA1607996431332DF
function NETWORK.IS_NETWORK_ID_OWNED_BY_PARTICIPANT(netId)
  return native.invoke(
    Type.Bool, 3227, false,
    arg(Type.Int, netId)
  )
end

-- void SET_REMOTE_PLAYER_VISIBLE_IN_CUTSCENE(Player player, BOOL locallyVisible) // 0x96320E6549DAE7B4
function NETWORK.SET_REMOTE_PLAYER_VISIBLE_IN_CUTSCENE(player, locallyVisible)
  native.invoke(
    Type.Void, 3228, false,
    arg(Type.Player, player),
    arg(Type.Bool, locallyVisible)
  )
end

-- void SET_LOCAL_PLAYER_VISIBLE_IN_CUTSCENE(BOOL p0, BOOL p1) // 0xD1065D68947E7B6E
function NETWORK.SET_LOCAL_PLAYER_VISIBLE_IN_CUTSCENE(p0, p1)
  native.invoke(
    Type.Void, 3229, false,
    arg(Type.Bool, p0),
    arg(Type.Bool, p1)
  )
end

-- void SET_LOCAL_PLAYER_INVISIBLE_LOCALLY(BOOL bIncludePlayersVehicle) // 0xE5F773C1A1D9D168
function NETWORK.SET_LOCAL_PLAYER_INVISIBLE_LOCALLY(bIncludePlayersVehicle)
  native.invoke(
    Type.Void, 3230, false,
    arg(Type.Bool, bIncludePlayersVehicle)
  )
end

-- void SET_LOCAL_PLAYER_VISIBLE_LOCALLY(BOOL bIncludePlayersVehicle) // 0x7619364C82D3BF14
function NETWORK.SET_LOCAL_PLAYER_VISIBLE_LOCALLY(bIncludePlayersVehicle)
  native.invoke(
    Type.Void, 3231, false,
    arg(Type.Bool, bIncludePlayersVehicle)
  )
end

-- void SET_PLAYER_INVISIBLE_LOCALLY(Player player, BOOL bIncludePlayersVehicle) // 0x12B37D54667DB0B8
function NETWORK.SET_PLAYER_INVISIBLE_LOCALLY(player, bIncludePlayersVehicle)
  native.invoke(
    Type.Void, 3232, false,
    arg(Type.Player, player),
    arg(Type.Bool, bIncludePlayersVehicle)
  )
end

-- void SET_PLAYER_VISIBLE_LOCALLY(Player player, BOOL bIncludePlayersVehicle) // 0xFAA10F1FAFB11AF2
function NETWORK.SET_PLAYER_VISIBLE_LOCALLY(player, bIncludePlayersVehicle)
  native.invoke(
    Type.Void, 3233, false,
    arg(Type.Player, player),
    arg(Type.Bool, bIncludePlayersVehicle)
  )
end

-- void FADE_OUT_LOCAL_PLAYER(BOOL p0) // 0x416DBD4CD6ED8DD2
--[[
Hardcoded to not work in SP.
--]]
function NETWORK.FADE_OUT_LOCAL_PLAYER(p0)
  native.invoke(
    Type.Void, 3234, false,
    arg(Type.Bool, p0)
  )
end

-- void NETWORK_FADE_OUT_ENTITY(Entity entity, BOOL normal, BOOL slow) // 0xDE564951F95E09ED
--[[
normal - transition like when your coming out of LSC
slow - transition like when you walk into a mission
 
--]]
function NETWORK.NETWORK_FADE_OUT_ENTITY(entity, normal, slow)
  native.invoke(
    Type.Void, 3235, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, normal),
    arg(Type.Bool, slow)
  )
end

-- void NETWORK_FADE_IN_ENTITY(Entity entity, BOOL state, Any p2) // 0x1F4ED342ACEFE62D
--[[
state - 0 does 5 fades
state - 1 does 6 fades

p3: setting to 1 made vehicle fade in slower, probably "slow" as per NETWORK_FADE_OUT_ENTITY
--]]
function NETWORK.NETWORK_FADE_IN_ENTITY(entity, state, p2)
  native.invoke(
    Type.Void, 3236, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, state),
    arg(Type.Any, p2)
  )
end

-- BOOL NETWORK_IS_PLAYER_FADING(Player player) // 0x631DC5DFF4B110E3
function NETWORK.NETWORK_IS_PLAYER_FADING(player)
  return native.invoke(
    Type.Bool, 3237, false,
    arg(Type.Player, player)
  )
end

-- BOOL NETWORK_IS_ENTITY_FADING(Entity entity) // 0x422F32CC7E56ABAD
function NETWORK.NETWORK_IS_ENTITY_FADING(entity)
  return native.invoke(
    Type.Bool, 3238, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL IS_PLAYER_IN_CUTSCENE(Player player) // 0xE73092F4157CD126
function NETWORK.IS_PLAYER_IN_CUTSCENE(player)
  return native.invoke(
    Type.Bool, 3239, false,
    arg(Type.Player, player)
  )
end

-- void SET_ENTITY_VISIBLE_IN_CUTSCENE(Any p0, BOOL p1, BOOL p2) // 0xE0031D3C8F36AB82
function NETWORK.SET_ENTITY_VISIBLE_IN_CUTSCENE(p0, p1, p2)
  native.invoke(
    Type.Void, 3240, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void SET_ENTITY_LOCALLY_INVISIBLE(Entity entity) // 0xE135A9FF3F5D05D8
--[[
Makes the provided entity visible for yourself for the current frame.
--]]
function NETWORK.SET_ENTITY_LOCALLY_INVISIBLE(entity)
  native.invoke(
    Type.Void, 3241, false,
    arg(Type.Entity, entity)
  )
end

-- void SET_ENTITY_LOCALLY_VISIBLE(Entity entity) // 0x241E289B5C059EDC
function NETWORK.SET_ENTITY_LOCALLY_VISIBLE(entity)
  native.invoke(
    Type.Void, 3242, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL IS_DAMAGE_TRACKER_ACTIVE_ON_NETWORK_ID(int netID) // 0x6E192E33AD436366
function NETWORK.IS_DAMAGE_TRACKER_ACTIVE_ON_NETWORK_ID(netID)
  return native.invoke(
    Type.Bool, 3243, false,
    arg(Type.Int, netID)
  )
end

-- void ACTIVATE_DAMAGE_TRACKER_ON_NETWORK_ID(int netID, BOOL toggle) // 0xD45B1FFCCD52FF19
function NETWORK.ACTIVATE_DAMAGE_TRACKER_ON_NETWORK_ID(netID, toggle)
  native.invoke(
    Type.Void, 3244, false,
    arg(Type.Int, netID),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_DAMAGE_TRACKER_ACTIVE_ON_PLAYER(Player player) // 0xB2092A1EAA7FD45F
function NETWORK.IS_DAMAGE_TRACKER_ACTIVE_ON_PLAYER(player)
  return native.invoke(
    Type.Bool, 3245, false,
    arg(Type.Player, player)
  )
end

-- void ACTIVATE_DAMAGE_TRACKER_ON_PLAYER(Player player, BOOL toggle) // 0xBEC0816FF5ACBCDA
function NETWORK.ACTIVATE_DAMAGE_TRACKER_ON_PLAYER(player, toggle)
  native.invoke(
    Type.Void, 3246, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_SPHERE_VISIBLE_TO_ANOTHER_MACHINE(float p0, float p1, float p2, float p3) // 0xD82CF8E64C8729D8
function NETWORK.IS_SPHERE_VISIBLE_TO_ANOTHER_MACHINE(p0, p1, p2, p3)
  return native.invoke(
    Type.Bool, 3247, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3)
  )
end

-- BOOL IS_SPHERE_VISIBLE_TO_PLAYER(Any p0, float p1, float p2, float p3, float p4) // 0xDC3A310219E5DA62
function NETWORK.IS_SPHERE_VISIBLE_TO_PLAYER(p0, p1, p2, p3, p4)
  return native.invoke(
    Type.Bool, 3248, false,
    arg(Type.Any, p0),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4)
  )
end

-- void RESERVE_NETWORK_MISSION_OBJECTS(int amount) // 0x4E5C93BD0C32FBF8
function NETWORK.RESERVE_NETWORK_MISSION_OBJECTS(amount)
  native.invoke(
    Type.Void, 3249, false,
    arg(Type.Int, amount)
  )
end

-- void RESERVE_NETWORK_MISSION_PEDS(int amount) // 0xB60FEBA45333D36F
function NETWORK.RESERVE_NETWORK_MISSION_PEDS(amount)
  native.invoke(
    Type.Void, 3250, false,
    arg(Type.Int, amount)
  )
end

-- void RESERVE_NETWORK_MISSION_VEHICLES(int amount) // 0x76B02E21ED27A469
function NETWORK.RESERVE_NETWORK_MISSION_VEHICLES(amount)
  native.invoke(
    Type.Void, 3251, false,
    arg(Type.Int, amount)
  )
end

-- void RESERVE_LOCAL_NETWORK_MISSION_OBJECTS(int amount) // 0x797F9C5E661D920E
function NETWORK.RESERVE_LOCAL_NETWORK_MISSION_OBJECTS(amount)
  native.invoke(
    Type.Void, 3252, false,
    arg(Type.Int, amount)
  )
end

-- void RESERVE_LOCAL_NETWORK_MISSION_PEDS(int amount) // 0x2C8DF5D129595281
function NETWORK.RESERVE_LOCAL_NETWORK_MISSION_PEDS(amount)
  native.invoke(
    Type.Void, 3253, false,
    arg(Type.Int, amount)
  )
end

-- void RESERVE_LOCAL_NETWORK_MISSION_VEHICLES(int amount) // 0x42613035157E4208
function NETWORK.RESERVE_LOCAL_NETWORK_MISSION_VEHICLES(amount)
  native.invoke(
    Type.Void, 3254, false,
    arg(Type.Int, amount)
  )
end

-- BOOL CAN_REGISTER_MISSION_OBJECTS(int amount) // 0x800DD4721A8B008B
function NETWORK.CAN_REGISTER_MISSION_OBJECTS(amount)
  return native.invoke(
    Type.Bool, 3255, false,
    arg(Type.Int, amount)
  )
end

-- BOOL CAN_REGISTER_MISSION_PEDS(int amount) // 0xBCBF4FEF9FA5D781
function NETWORK.CAN_REGISTER_MISSION_PEDS(amount)
  return native.invoke(
    Type.Bool, 3256, false,
    arg(Type.Int, amount)
  )
end

-- BOOL CAN_REGISTER_MISSION_VEHICLES(int amount) // 0x7277F1F2E085EE74
function NETWORK.CAN_REGISTER_MISSION_VEHICLES(amount)
  return native.invoke(
    Type.Bool, 3257, false,
    arg(Type.Int, amount)
  )
end

-- BOOL CAN_REGISTER_MISSION_PICKUPS(int amount) // 0x0A49D1CB6E34AF72
function NETWORK.CAN_REGISTER_MISSION_PICKUPS(amount)
  return native.invoke(
    Type.Bool, 3258, false,
    arg(Type.Int, amount)
  )
end

-- BOOL CAN_REGISTER_MISSION_DOORS(Any p0) // 0xE16AA70CE9BEEDC3
function NETWORK.CAN_REGISTER_MISSION_DOORS(p0)
  return native.invoke(
    Type.Bool, 3259, false,
    arg(Type.Any, p0)
  )
end

-- BOOL CAN_REGISTER_MISSION_ENTITIES(int ped_amt, int vehicle_amt, int object_amt, int pickup_amt) // 0x69778E7564BADE6D
function NETWORK.CAN_REGISTER_MISSION_ENTITIES(ped_amt, vehicle_amt, object_amt, pickup_amt)
  return native.invoke(
    Type.Bool, 3260, false,
    arg(Type.Int, ped_amt),
    arg(Type.Int, vehicle_amt),
    arg(Type.Int, object_amt),
    arg(Type.Int, pickup_amt)
  )
end

-- int GET_NUM_RESERVED_MISSION_OBJECTS(BOOL p0, Any p1) // 0xAA81B5F10BC43AC2
--[[
p0 appears to be for MP
--]]
function NETWORK.GET_NUM_RESERVED_MISSION_OBJECTS(p0, p1)
  return native.invoke(
    Type.Int, 3261, false,
    arg(Type.Bool, p0),
    arg(Type.Any, p1)
  )
end

-- int GET_NUM_RESERVED_MISSION_PEDS(BOOL p0, Any p1) // 0x1F13D5AE5CB17E17
--[[
p0 appears to be for MP
--]]
function NETWORK.GET_NUM_RESERVED_MISSION_PEDS(p0, p1)
  return native.invoke(
    Type.Int, 3262, false,
    arg(Type.Bool, p0),
    arg(Type.Any, p1)
  )
end

-- int GET_NUM_RESERVED_MISSION_VEHICLES(BOOL p0, Any p1) // 0xCF3A965906452031
--[[
p0 appears to be for MP
--]]
function NETWORK.GET_NUM_RESERVED_MISSION_VEHICLES(p0, p1)
  return native.invoke(
    Type.Int, 3263, false,
    arg(Type.Bool, p0),
    arg(Type.Any, p1)
  )
end

-- int GET_NUM_CREATED_MISSION_OBJECTS(BOOL p0) // 0x12B6281B6C6706C0
function NETWORK.GET_NUM_CREATED_MISSION_OBJECTS(p0)
  return native.invoke(
    Type.Int, 3264, false,
    arg(Type.Bool, p0)
  )
end

-- int GET_NUM_CREATED_MISSION_PEDS(BOOL p0) // 0xCB215C4B56A7FAE7
function NETWORK.GET_NUM_CREATED_MISSION_PEDS(p0)
  return native.invoke(
    Type.Int, 3265, false,
    arg(Type.Bool, p0)
  )
end

-- int GET_NUM_CREATED_MISSION_VEHICLES(BOOL p0) // 0x0CD9AB83489430EA
function NETWORK.GET_NUM_CREATED_MISSION_VEHICLES(p0)
  return native.invoke(
    Type.Int, 3266, false,
    arg(Type.Bool, p0)
  )
end

-- void GET_RESERVED_MISSION_ENTITIES_IN_AREA(float x, float y, float z, Any p3, Any* out1, Any* out2, Any* out3) // 0xE42D626EEC94E5D9
function NETWORK.GET_RESERVED_MISSION_ENTITIES_IN_AREA(x, y, z, p3, out1, out2, out3)
  native.invoke(
    Type.Void, 3267, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Any, p3),
    arg(Type.Any, out1),
    arg(Type.Any, out2),
    arg(Type.Any, out3)
  )
end

-- int GET_MAX_NUM_NETWORK_OBJECTS() // 0xC7BE335216B5EC7C
function NETWORK.GET_MAX_NUM_NETWORK_OBJECTS()
  return native.invoke(
    Type.Int, 3268, false
  )
end

-- int GET_MAX_NUM_NETWORK_PEDS() // 0x0C1F7D49C39D2289
function NETWORK.GET_MAX_NUM_NETWORK_PEDS()
  return native.invoke(
    Type.Int, 3269, false
  )
end

-- int GET_MAX_NUM_NETWORK_VEHICLES() // 0x0AFCE529F69B21FF
function NETWORK.GET_MAX_NUM_NETWORK_VEHICLES()
  return native.invoke(
    Type.Int, 3270, false
  )
end

-- int GET_MAX_NUM_NETWORK_PICKUPS() // 0xA72835064DD63E4C
function NETWORK.GET_MAX_NUM_NETWORK_PICKUPS()
  return native.invoke(
    Type.Int, 3271, false
  )
end

-- void NETWORK_SET_OBJECT_SCOPE_DISTANCE(Object object, float range) // 0xBA7F0B77D80A4EB7
function NETWORK.NETWORK_SET_OBJECT_SCOPE_DISTANCE(object, range)
  native.invoke(
    Type.Void, 3272, false,
    arg(Type.Object, object),
    arg(Type.Float, range)
  )
end

-- void NETWORK_ALLOW_CLONING_WHILE_IN_TUTORIAL(Any p0, Any p1) // 0x0F1A4B45B7693B95
function NETWORK.NETWORK_ALLOW_CLONING_WHILE_IN_TUTORIAL(p0, p1)
  native.invoke(
    Type.Void, 3273, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void NETWORK_SET_TASK_CUTSCENE_INSCOPE_MULTIPLER(Any p0) // 0xC6FCEE21C6FCEE21
--[[
A value between 1.0 and 5.0

_NETWORK_SET_TASK_CUTSCENE_PROXIMITY_SCALE?
--]]
function NETWORK.NETWORK_SET_TASK_CUTSCENE_INSCOPE_MULTIPLER(p0)
  native.invoke(
    Type.Void, 3274, false,
    arg(Type.Any, p0)
  )
end

-- int GET_NETWORK_TIME() // 0x7A5487FE9FAA6B48
function NETWORK.GET_NETWORK_TIME()
  return native.invoke(
    Type.Int, 3275, false
  )
end

-- int GET_NETWORK_TIME_ACCURATE() // 0x89023FBBF9200E9F
--[[
Returns the same value as GET_NETWORK_TIME in freemode, but as opposed to `GET_NETWORK_TIME` it always gets the most recent time, instead of once per tick.
Could be used for benchmarking since it can return times in ticks.
--]]
function NETWORK.GET_NETWORK_TIME_ACCURATE()
  return native.invoke(
    Type.Int, 3276, false
  )
end

-- BOOL HAS_NETWORK_TIME_STARTED() // 0x46718ACEEDEAFC84
function NETWORK.HAS_NETWORK_TIME_STARTED()
  return native.invoke(
    Type.Bool, 3277, false
  )
end

-- int GET_TIME_OFFSET(int timeA, int timeB) // 0x017008CCDAD48503
--[[
Adds the first argument to the second.
--]]
function NETWORK.GET_TIME_OFFSET(timeA, timeB)
  return native.invoke(
    Type.Int, 3278, false,
    arg(Type.Int, timeA),
    arg(Type.Int, timeB)
  )
end

-- BOOL IS_TIME_LESS_THAN(int timeA, int timeB) // 0xCB2CF5148012C8D0
--[[
Subtracts the second argument from the first, then returns whether the result is negative.
--]]
function NETWORK.IS_TIME_LESS_THAN(timeA, timeB)
  return native.invoke(
    Type.Bool, 3279, false,
    arg(Type.Int, timeA),
    arg(Type.Int, timeB)
  )
end

-- BOOL IS_TIME_MORE_THAN(int timeA, int timeB) // 0xDE350F8651E4346C
--[[
Subtracts the first argument from the second, then returns whether the result is negative.
--]]
function NETWORK.IS_TIME_MORE_THAN(timeA, timeB)
  return native.invoke(
    Type.Bool, 3280, false,
    arg(Type.Int, timeA),
    arg(Type.Int, timeB)
  )
end

-- BOOL IS_TIME_EQUAL_TO(int timeA, int timeB) // 0xF5BC95857BD6D512
--[[
Returns true if the two times are equal; otherwise returns false.
--]]
function NETWORK.IS_TIME_EQUAL_TO(timeA, timeB)
  return native.invoke(
    Type.Bool, 3281, false,
    arg(Type.Int, timeA),
    arg(Type.Int, timeB)
  )
end

-- int GET_TIME_DIFFERENCE(int timeA, int timeB) // 0xA2C6FC031D46FFF0
--[[
Subtracts the second argument from the first.
--]]
function NETWORK.GET_TIME_DIFFERENCE(timeA, timeB)
  return native.invoke(
    Type.Int, 3282, false,
    arg(Type.Int, timeA),
    arg(Type.Int, timeB)
  )
end

-- const char* GET_TIME_AS_STRING(int time) // 0x9E23B1777A927DAD
function NETWORK.GET_TIME_AS_STRING(time)
  return native.invoke(
    Type.Const char, 3283, false,
    arg(Type.Int, time)
  )
end

-- const char* GET_CLOUD_TIME_AS_STRING() // 0xF12E6CD06C73D69E
--[[
Same as GET_CLOUD_TIME_AS_INT but returns the value as a hex string (%I64X).
--]]
function NETWORK.GET_CLOUD_TIME_AS_STRING()
  return native.invoke(
    Type.Const char, 3284, false
  )
end

-- int GET_CLOUD_TIME_AS_INT() // 0x9A73240B49945C76
--[[
Returns POSIX timestamp, an int representing the cloud time.
--]]
function NETWORK.GET_CLOUD_TIME_AS_INT()
  return native.invoke(
    Type.Int, 3285, false
  )
end

-- void CONVERT_POSIX_TIME(int posixTime, Any* timeStructure) // 0xAC97AF97FA68E5D5
--[[
Takes the specified time and writes it to the structure specified in the second argument.

struct date_time
{
    int year;
    int PADDING1;
    int month;
    int PADDING2;
    int day;
    int PADDING3;
    int hour;
    int PADDING4;
    int minute;
    int PADDING5;
    int second;
    int PADDING6;
};
--]]
function NETWORK.CONVERT_POSIX_TIME(posixTime, timeStructure)
  native.invoke(
    Type.Void, 3286, false,
    arg(Type.Int, posixTime),
    arg(Type.Any, timeStructure)
  )
end

-- void NETWORK_SET_IN_SPECTATOR_MODE(BOOL toggle, Ped playerPed) // 0x423DE3854BB50894
function NETWORK.NETWORK_SET_IN_SPECTATOR_MODE(toggle, playerPed)
  native.invoke(
    Type.Void, 3287, false,
    arg(Type.Bool, toggle),
    arg(Type.Ped, playerPed)
  )
end

-- void NETWORK_SET_IN_SPECTATOR_MODE_EXTENDED(BOOL toggle, Ped playerPed, BOOL p2) // 0x419594E137637120
function NETWORK.NETWORK_SET_IN_SPECTATOR_MODE_EXTENDED(toggle, playerPed, p2)
  native.invoke(
    Type.Void, 3288, false,
    arg(Type.Bool, toggle),
    arg(Type.Ped, playerPed),
    arg(Type.Bool, p2)
  )
end

-- void NETWORK_SET_IN_FREE_CAM_MODE(BOOL toggle) // 0xFC18DB55AE19E046
function NETWORK.NETWORK_SET_IN_FREE_CAM_MODE(toggle)
  native.invoke(
    Type.Void, 3289, false,
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_SET_ANTAGONISTIC_TO_PLAYER(BOOL toggle, Player player) // 0x5C707A667DF8B9FA
function NETWORK.NETWORK_SET_ANTAGONISTIC_TO_PLAYER(toggle, player)
  native.invoke(
    Type.Void, 3290, false,
    arg(Type.Bool, toggle),
    arg(Type.Player, player)
  )
end

-- BOOL NETWORK_IS_IN_SPECTATOR_MODE() // 0x048746E388762E11
function NETWORK.NETWORK_IS_IN_SPECTATOR_MODE()
  return native.invoke(
    Type.Bool, 3291, false
  )
end

-- void NETWORK_SET_IN_MP_CUTSCENE(BOOL p0, BOOL p1) // 0x9CA5DE655269FEC4
function NETWORK.NETWORK_SET_IN_MP_CUTSCENE(p0, p1)
  native.invoke(
    Type.Void, 3292, false,
    arg(Type.Bool, p0),
    arg(Type.Bool, p1)
  )
end

-- BOOL NETWORK_IS_IN_MP_CUTSCENE() // 0x6CC27C9FA2040220
function NETWORK.NETWORK_IS_IN_MP_CUTSCENE()
  return native.invoke(
    Type.Bool, 3293, false
  )
end

-- BOOL NETWORK_IS_PLAYER_IN_MP_CUTSCENE(Player player) // 0x63F9EE203C3619F2
function NETWORK.NETWORK_IS_PLAYER_IN_MP_CUTSCENE(player)
  return native.invoke(
    Type.Bool, 3294, false,
    arg(Type.Player, player)
  )
end

-- void NETWORK_HIDE_PROJECTILE_IN_CUTSCENE() // 0xFAC18E7356BD3210
function NETWORK.NETWORK_HIDE_PROJECTILE_IN_CUTSCENE()
  native.invoke(
    Type.Void, 3295, false
  )
end

-- void SET_NETWORK_VEHICLE_RESPOT_TIMER(int netId, int time, Any p2, Any p3) // 0xEC51713AB6EC36E8
function NETWORK.SET_NETWORK_VEHICLE_RESPOT_TIMER(netId, time, p2, p3)
  native.invoke(
    Type.Void, 3296, false,
    arg(Type.Int, netId),
    arg(Type.Int, time),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- BOOL IS_NETWORK_VEHICLE_RUNNING_RESPOT_TIMER(int networkID) // 0xDD7CEF5B3A4DA8A6
function NETWORK.IS_NETWORK_VEHICLE_RUNNING_RESPOT_TIMER(networkID)
  return native.invoke(
    Type.Bool, 3297, false,
    arg(Type.Int, networkID)
  )
end

-- void SET_NETWORK_VEHICLE_AS_GHOST(Vehicle vehicle, BOOL toggle) // 0x6274C4712850841E
function NETWORK.SET_NETWORK_VEHICLE_AS_GHOST(vehicle, toggle)
  native.invoke(
    Type.Void, 3298, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_NETWORK_VEHICLE_MAX_POSITION_DELTA_MULTIPLIER(Vehicle vehicle, float multiplier) // 0xA2A707979FE754DC
--[[
rage::netBlenderLinInterp::GetPositionMaxForUpdateLevel
--]]
function NETWORK.SET_NETWORK_VEHICLE_MAX_POSITION_DELTA_MULTIPLIER(vehicle, multiplier)
  native.invoke(
    Type.Void, 3299, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, multiplier)
  )
end

-- void SET_NETWORK_ENABLE_HIGH_SPEED_EDGE_FALL_DETECTION(Vehicle vehicle, BOOL toggle) // 0x838DA0936A24ED4D
--[[
Enables a periodic ShapeTest within the NetBlender and invokes rage::netBlenderLinInterp::GoStraightToTarget (or some functional wrapper).
--]]
function NETWORK.SET_NETWORK_ENABLE_HIGH_SPEED_EDGE_FALL_DETECTION(vehicle, toggle)
  native.invoke(
    Type.Void, 3300, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_LOCAL_PLAYER_AS_GHOST(BOOL toggle, BOOL p1) // 0x5FFE9B4144F9712F
function NETWORK.SET_LOCAL_PLAYER_AS_GHOST(toggle, p1)
  native.invoke(
    Type.Void, 3301, false,
    arg(Type.Bool, toggle),
    arg(Type.Bool, p1)
  )
end

-- BOOL IS_ENTITY_A_GHOST(Entity entity) // 0x21D04D7BC538C146
function NETWORK.IS_ENTITY_A_GHOST(entity)
  return native.invoke(
    Type.Bool, 3302, false,
    arg(Type.Entity, entity)
  )
end

-- void SET_NON_PARTICIPANTS_OF_THIS_SCRIPT_AS_GHOSTS(BOOL p0) // 0x13F1FCB111B820B0
function NETWORK.SET_NON_PARTICIPANTS_OF_THIS_SCRIPT_AS_GHOSTS(p0)
  native.invoke(
    Type.Void, 3303, false,
    arg(Type.Bool, p0)
  )
end

-- void SET_REMOTE_PLAYER_AS_GHOST(Player player, BOOL p1) // 0xA7C511FA1C5BDA38
--[[
Enables ghosting between specific players
--]]
function NETWORK.SET_REMOTE_PLAYER_AS_GHOST(player, p1)
  native.invoke(
    Type.Void, 3304, false,
    arg(Type.Player, player),
    arg(Type.Bool, p1)
  )
end

-- void SET_GHOST_ALPHA(int alpha) // 0x658500AE6D723A7E
--[[
Must be a value between 1 and 254
--]]
function NETWORK.SET_GHOST_ALPHA(alpha)
  native.invoke(
    Type.Void, 3305, false,
    arg(Type.Int, alpha)
  )
end

-- void RESET_GHOST_ALPHA() // 0x17330EBF2F2124A8
--[[
Resets the entity ghost alpha to the default value (128)
--]]
function NETWORK.RESET_GHOST_ALPHA()
  native.invoke(
    Type.Void, 3306, false
  )
end

-- void SET_ENTITY_GHOSTED_FOR_GHOST_PLAYERS(Entity entity, BOOL toggle) // 0x4BA166079D658ED4
function NETWORK.SET_ENTITY_GHOSTED_FOR_GHOST_PLAYERS(entity, toggle)
  native.invoke(
    Type.Void, 3307, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- void SET_INVERT_GHOSTING(BOOL p0) // 0xD7B6C73CAD419BCF
function NETWORK.SET_INVERT_GHOSTING(p0)
  native.invoke(
    Type.Void, 3308, false,
    arg(Type.Bool, p0)
  )
end

-- BOOL IS_ENTITY_IN_GHOST_COLLISION(Entity entity) // 0x7EF7649B64D7FF10
function NETWORK.IS_ENTITY_IN_GHOST_COLLISION(entity)
  return native.invoke(
    Type.Bool, 3309, false,
    arg(Type.Entity, entity)
  )
end

-- void USE_PLAYER_COLOUR_INSTEAD_OF_TEAM_COLOUR(BOOL toggle) // 0x77758139EC9B66C7
function NETWORK.USE_PLAYER_COLOUR_INSTEAD_OF_TEAM_COLOUR(toggle)
  native.invoke(
    Type.Void, 3310, false,
    arg(Type.Bool, toggle)
  )
end

-- int NETWORK_CREATE_SYNCHRONISED_SCENE(float x, float y, float z, float xRot, float yRot, float zRot, int rotationOrder, BOOL useOcclusionPortal, BOOL looped, float p9, float animTime, float p11) // 0x7CD6BC4C2BBDD526
function NETWORK.NETWORK_CREATE_SYNCHRONISED_SCENE(x, y, z, xRot, yRot, zRot, rotationOrder, useOcclusionPortal, looped, p9, animTime, p11)
  return native.invoke(
    Type.Int, 3311, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, xRot),
    arg(Type.Float, yRot),
    arg(Type.Float, zRot),
    arg(Type.Int, rotationOrder),
    arg(Type.Bool, useOcclusionPortal),
    arg(Type.Bool, looped),
    arg(Type.Float, p9),
    arg(Type.Float, animTime),
    arg(Type.Float, p11)
  )
end

-- void NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE(Ped ped, int netScene, const char* animDict, const char* animnName, float speed, float speedMultiplier, int duration, int flag, float playbackRate, Any p9) // 0x742A637471BCECD9
function NETWORK.NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE(ped, netScene, animDict, animnName, speed, speedMultiplier, duration, flag, playbackRate, p9)
  native.invoke(
    Type.Void, 3312, false,
    arg(Type.Ped, ped),
    arg(Type.Int, netScene),
    arg(Type.String, animDict),
    arg(Type.String, animnName),
    arg(Type.Float, speed),
    arg(Type.Float, speedMultiplier),
    arg(Type.Int, duration),
    arg(Type.Int, flag),
    arg(Type.Float, playbackRate),
    arg(Type.Any, p9)
  )
end

-- void NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE_WITH_IK(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9) // 0xA5EAFE473E45C442
function NETWORK.NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE_WITH_IK(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
  native.invoke(
    Type.Void, 3313, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5),
    arg(Type.Any, p6),
    arg(Type.Any, p7),
    arg(Type.Any, p8),
    arg(Type.Any, p9)
  )
end

-- void NETWORK_ADD_ENTITY_TO_SYNCHRONISED_SCENE(Entity entity, int netScene, const char* animDict, const char* animName, float speed, float speedMulitiplier, int flag) // 0xF2404D68CBC855FA
function NETWORK.NETWORK_ADD_ENTITY_TO_SYNCHRONISED_SCENE(entity, netScene, animDict, animName, speed, speedMulitiplier, flag)
  native.invoke(
    Type.Void, 3314, false,
    arg(Type.Entity, entity),
    arg(Type.Int, netScene),
    arg(Type.String, animDict),
    arg(Type.String, animName),
    arg(Type.Float, speed),
    arg(Type.Float, speedMulitiplier),
    arg(Type.Int, flag)
  )
end

-- void NETWORK_ADD_MAP_ENTITY_TO_SYNCHRONISED_SCENE(int netScene, Hash modelHash, float x, float y, float z, float p5, const char* p6, float p7, float p8, int flags) // 0x45F35C0EDC33B03B
--[[
Similar structure as NETWORK_ADD_ENTITY_TO_SYNCHRONISED_SCENE but it includes this time a hash.
In casino_slots it is used one time in a synced scene involving a ped and the slot machine?
--]]
function NETWORK.NETWORK_ADD_MAP_ENTITY_TO_SYNCHRONISED_SCENE(netScene, modelHash, x, y, z, p5, p6, p7, p8, flags)
  native.invoke(
    Type.Void, 3315, false,
    arg(Type.Int, netScene),
    arg(Type.Hash, modelHash),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, p5),
    arg(Type.String, p6),
    arg(Type.Float, p7),
    arg(Type.Float, p8),
    arg(Type.Int, flags)
  )
end

-- void NETWORK_ADD_SYNCHRONISED_SCENE_CAMERA(int netScene, const char* animDict, const char* animName) // 0xCF8BD3B0BD6D42D7
function NETWORK.NETWORK_ADD_SYNCHRONISED_SCENE_CAMERA(netScene, animDict, animName)
  native.invoke(
    Type.Void, 3316, false,
    arg(Type.Int, netScene),
    arg(Type.String, animDict),
    arg(Type.String, animName)
  )
end

-- void NETWORK_ATTACH_SYNCHRONISED_SCENE_TO_ENTITY(int netScene, Entity entity, int bone) // 0x478DCBD2A98B705A
function NETWORK.NETWORK_ATTACH_SYNCHRONISED_SCENE_TO_ENTITY(netScene, entity, bone)
  native.invoke(
    Type.Void, 3317, false,
    arg(Type.Int, netScene),
    arg(Type.Entity, entity),
    arg(Type.Int, bone)
  )
end

-- void NETWORK_START_SYNCHRONISED_SCENE(int netScene) // 0x9A1B3FCDB36C8697
function NETWORK.NETWORK_START_SYNCHRONISED_SCENE(netScene)
  native.invoke(
    Type.Void, 3318, false,
    arg(Type.Int, netScene)
  )
end

-- void NETWORK_STOP_SYNCHRONISED_SCENE(int netScene) // 0xC254481A4574CB2F
function NETWORK.NETWORK_STOP_SYNCHRONISED_SCENE(netScene)
  native.invoke(
    Type.Void, 3319, false,
    arg(Type.Int, netScene)
  )
end

-- int NETWORK_GET_LOCAL_SCENE_FROM_NETWORK_ID(int netId) // 0x02C40BF885C567B6
function NETWORK.NETWORK_GET_LOCAL_SCENE_FROM_NETWORK_ID(netId)
  return native.invoke(
    Type.Int, 3320, false,
    arg(Type.Int, netId)
  )
end

-- void NETWORK_FORCE_LOCAL_USE_OF_SYNCED_SCENE_CAMERA(int netScene) // 0xC9B43A33D09CADA7
function NETWORK.NETWORK_FORCE_LOCAL_USE_OF_SYNCED_SCENE_CAMERA(netScene)
  native.invoke(
    Type.Void, 3321, false,
    arg(Type.Int, netScene)
  )
end

-- void NETWORK_ALLOW_REMOTE_SYNCED_SCENE_LOCAL_PLAYER_REQUESTS(Any p0) // 0x144DA052257AE7D8
function NETWORK.NETWORK_ALLOW_REMOTE_SYNCED_SCENE_LOCAL_PLAYER_REQUESTS(p0)
  native.invoke(
    Type.Void, 3322, false,
    arg(Type.Any, p0)
  )
end

-- BOOL NETWORK_FIND_LARGEST_BUNCH_OF_PLAYERS(int p0, Any p1) // 0xFB1F9381E80FA13F
--[[
p0 is always 0. p1 is pointing to a global.
--]]
function NETWORK.NETWORK_FIND_LARGEST_BUNCH_OF_PLAYERS(p0, p1)
  return native.invoke(
    Type.Bool, 3323, false,
    arg(Type.Int, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL NETWORK_START_RESPAWN_SEARCH_FOR_PLAYER(Player player, float x, float y, float z, float radius, float p5, float p6, float p7, int flags) // 0x5A6FFA2433E2F14C
--[[
One of the first things it does is get the players ped.
Then it calls a function that is used in some tasks and ped based functions.
p5, p6, p7 is another coordinate (or zero), often related to `GET_BLIP_COORDS, in the decompiled scripts.
--]]
function NETWORK.NETWORK_START_RESPAWN_SEARCH_FOR_PLAYER(player, x, y, z, radius, p5, p6, p7, flags)
  return native.invoke(
    Type.Bool, 3324, false,
    arg(Type.Player, player),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Float, p5),
    arg(Type.Float, p6),
    arg(Type.Float, p7),
    arg(Type.Int, flags)
  )
end

-- BOOL NETWORK_START_RESPAWN_SEARCH_IN_ANGLED_AREA_FOR_PLAYER(Player player, float x1, float y1, float z1, float x2, float y2, float z2, float width, float p8, float p9, float p10, int flags) // 0x4BA92A18502BCA61
--[[
p8, p9, p10 is another coordinate, or zero, often related to `GET_BLIP_COORDS in the decompiled scripts.
--]]
function NETWORK.NETWORK_START_RESPAWN_SEARCH_IN_ANGLED_AREA_FOR_PLAYER(player, x1, y1, z1, x2, y2, z2, width, p8, p9, p10, flags)
  return native.invoke(
    Type.Bool, 3325, false,
    arg(Type.Player, player),
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Float, width),
    arg(Type.Float, p8),
    arg(Type.Float, p9),
    arg(Type.Float, p10),
    arg(Type.Int, flags)
  )
end

-- int NETWORK_QUERY_RESPAWN_RESULTS(Any* p0) // 0x3C891A251567DFCE
function NETWORK.NETWORK_QUERY_RESPAWN_RESULTS(p0)
  return native.invoke(
    Type.Int, 3326, false,
    arg(Type.Any, p0)
  )
end

-- void NETWORK_CANCEL_RESPAWN_SEARCH() // 0xFB8F2A6F3DF08CBE
function NETWORK.NETWORK_CANCEL_RESPAWN_SEARCH()
  native.invoke(
    Type.Void, 3327, false
  )
end

-- void NETWORK_GET_RESPAWN_RESULT(int randomInt, Vector3* coordinates, float* heading) // 0x371EA43692861CF1
--[[
Based on scripts such as in freemode.c how they call their vars vVar and fVar the 2nd and 3rd param it a Vector3 and Float, but the first is based on get_random_int_in_range..
--]]
function NETWORK.NETWORK_GET_RESPAWN_RESULT(randomInt, coordinates, heading)
  native.invoke(
    Type.Void, 3328, true,
    arg(Type.Int, randomInt),
    arg(Type.Vector3, coordinates),
    arg(Type.Float, heading)
  )
end

-- int NETWORK_GET_RESPAWN_RESULT_FLAGS(int p0) // 0x6C34F1208B8923FD
function NETWORK.NETWORK_GET_RESPAWN_RESULT_FLAGS(p0)
  return native.invoke(
    Type.Int, 3329, false,
    arg(Type.Int, p0)
  )
end

-- void NETWORK_START_SOLO_TUTORIAL_SESSION() // 0x17E0198B3882C2CB
function NETWORK.NETWORK_START_SOLO_TUTORIAL_SESSION()
  native.invoke(
    Type.Void, 3330, false
  )
end

-- void NETWORK_ALLOW_GANG_TO_JOIN_TUTORIAL_SESSION(int teamId, int instanceId) // 0xFB680D403909DC70
--[[
teamId must be < 3, instanceId must be < 64
--]]
function NETWORK.NETWORK_ALLOW_GANG_TO_JOIN_TUTORIAL_SESSION(teamId, instanceId)
  native.invoke(
    Type.Void, 3331, false,
    arg(Type.Int, teamId),
    arg(Type.Int, instanceId)
  )
end

-- void NETWORK_END_TUTORIAL_SESSION() // 0xD0AFAFF5A51D72F7
function NETWORK.NETWORK_END_TUTORIAL_SESSION()
  native.invoke(
    Type.Void, 3332, false
  )
end

-- BOOL NETWORK_IS_IN_TUTORIAL_SESSION() // 0xADA24309FE08DACF
function NETWORK.NETWORK_IS_IN_TUTORIAL_SESSION()
  return native.invoke(
    Type.Bool, 3333, false
  )
end

-- BOOL NETWORK_WAITING_POP_CLEAR_TUTORIAL_SESSION() // 0xB37E4E6A2388CA7B
function NETWORK.NETWORK_WAITING_POP_CLEAR_TUTORIAL_SESSION()
  return native.invoke(
    Type.Bool, 3334, false
  )
end

-- BOOL NETWORK_IS_TUTORIAL_SESSION_CHANGE_PENDING() // 0x35F0B98A8387274D
function NETWORK.NETWORK_IS_TUTORIAL_SESSION_CHANGE_PENDING()
  return native.invoke(
    Type.Bool, 3335, false
  )
end

-- int NETWORK_GET_PLAYER_TUTORIAL_SESSION_INSTANCE(Player player) // 0x3B39236746714134
function NETWORK.NETWORK_GET_PLAYER_TUTORIAL_SESSION_INSTANCE(player)
  return native.invoke(
    Type.Int, 3336, false,
    arg(Type.Player, player)
  )
end

-- BOOL NETWORK_ARE_PLAYERS_IN_SAME_TUTORIAL_SESSION(Player player, int index) // 0x9DE986FC9A87C474
function NETWORK.NETWORK_ARE_PLAYERS_IN_SAME_TUTORIAL_SESSION(player, index)
  return native.invoke(
    Type.Bool, 3337, false,
    arg(Type.Player, player),
    arg(Type.Int, index)
  )
end

-- void NETWORK_BLOCK_PROXY_MIGRATION_BETWEEN_TUTORIAL_SESSIONS(Any p0) // 0xFEA7A352DDB34D52
function NETWORK.NETWORK_BLOCK_PROXY_MIGRATION_BETWEEN_TUTORIAL_SESSIONS(p0)
  native.invoke(
    Type.Void, 3338, false,
    arg(Type.Any, p0)
  )
end

-- void NETWORK_CONCEAL_PLAYER(Player player, BOOL toggle, BOOL p2) // 0xBBDF066252829606
function NETWORK.NETWORK_CONCEAL_PLAYER(player, toggle, p2)
  native.invoke(
    Type.Void, 3339, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle),
    arg(Type.Bool, p2)
  )
end

-- BOOL NETWORK_IS_PLAYER_CONCEALED(Player player) // 0x919B3C98ED8292F9
function NETWORK.NETWORK_IS_PLAYER_CONCEALED(player)
  return native.invoke(
    Type.Bool, 3340, false,
    arg(Type.Player, player)
  )
end

-- void NETWORK_CONCEAL_ENTITY(Entity entity, BOOL toggle) // 0x1632BE0AC1E62876
function NETWORK.NETWORK_CONCEAL_ENTITY(entity, toggle)
  native.invoke(
    Type.Void, 3341, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- BOOL NETWORK_IS_ENTITY_CONCEALED(Entity entity) // 0x71302EC70689052A
--[[
Note: This only works for vehicles, which appears to be a bug (since the setter _does_ work for every entity type and the name is 99% correct).
--]]
function NETWORK.NETWORK_IS_ENTITY_CONCEALED(entity)
  return native.invoke(
    Type.Bool, 3342, false,
    arg(Type.Entity, entity)
  )
end

-- void NETWORK_OVERRIDE_CLOCK_TIME(int hours, int minutes, int seconds) // 0xE679E3E06E363892
--[[
Works in Singleplayer too.
Passing wrong data (e.g. hours above 23) will cause the game to crash.
--]]
function NETWORK.NETWORK_OVERRIDE_CLOCK_TIME(hours, minutes, seconds)
  native.invoke(
    Type.Void, 3343, false,
    arg(Type.Int, hours),
    arg(Type.Int, minutes),
    arg(Type.Int, seconds)
  )
end

-- void NETWORK_OVERRIDE_CLOCK_RATE(int ms) // 0x42BF1D2E723B6D7E
function NETWORK.NETWORK_OVERRIDE_CLOCK_RATE(ms)
  native.invoke(
    Type.Void, 3344, false,
    arg(Type.Int, ms)
  )
end

-- void NETWORK_CLEAR_CLOCK_TIME_OVERRIDE() // 0xD972DF67326F966E
function NETWORK.NETWORK_CLEAR_CLOCK_TIME_OVERRIDE()
  native.invoke(
    Type.Void, 3345, false
  )
end

-- BOOL NETWORK_IS_CLOCK_TIME_OVERRIDDEN() // 0xD7C95D322FF57522
function NETWORK.NETWORK_IS_CLOCK_TIME_OVERRIDDEN()
  return native.invoke(
    Type.Bool, 3346, false
  )
end

-- int NETWORK_ADD_ENTITY_AREA(float x1, float y1, float z1, float x2, float y2, float z2) // 0x494C8FB299290269
function NETWORK.NETWORK_ADD_ENTITY_AREA(x1, y1, z1, x2, y2, z2)
  return native.invoke(
    Type.Int, 3347, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2)
  )
end

-- int NETWORK_ADD_ENTITY_ANGLED_AREA(float x1, float y1, float z1, float x2, float y2, float z2, float width) // 0x376C6375BA60293A
--[[
To remove, see: NETWORK_REMOVE_ENTITY_AREA
See IS_POINT_IN_ANGLED_AREA for the definition of an angled area.
--]]
function NETWORK.NETWORK_ADD_ENTITY_ANGLED_AREA(x1, y1, z1, x2, y2, z2, width)
  return native.invoke(
    Type.Int, 3348, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Float, width)
  )
end

-- int NETWORK_ADD_CLIENT_ENTITY_AREA(float x1, float y1, float z1, float x2, float y2, float z2) // 0x25B99872D588A101
function NETWORK.NETWORK_ADD_CLIENT_ENTITY_AREA(x1, y1, z1, x2, y2, z2)
  return native.invoke(
    Type.Int, 3349, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2)
  )
end

-- int NETWORK_ADD_CLIENT_ENTITY_ANGLED_AREA(float x1, float y1, float z1, float x2, float y2, float z2, float radius) // 0x2B1C623823DB0D9D
function NETWORK.NETWORK_ADD_CLIENT_ENTITY_ANGLED_AREA(x1, y1, z1, x2, y2, z2, radius)
  return native.invoke(
    Type.Int, 3350, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Float, radius)
  )
end

-- BOOL NETWORK_REMOVE_ENTITY_AREA(int areaHandle) // 0x93CF869BAA0C4874
function NETWORK.NETWORK_REMOVE_ENTITY_AREA(areaHandle)
  return native.invoke(
    Type.Bool, 3351, false,
    arg(Type.Int, areaHandle)
  )
end

-- BOOL NETWORK_ENTITY_AREA_DOES_EXIST(int areaHandle) // 0xE64A3CA08DFA37A9
function NETWORK.NETWORK_ENTITY_AREA_DOES_EXIST(areaHandle)
  return native.invoke(
    Type.Bool, 3352, false,
    arg(Type.Int, areaHandle)
  )
end

-- BOOL NETWORK_ENTITY_AREA_HAVE_ALL_REPLIED(int areaHandle) // 0x4DF7CFFF471A7FB1
function NETWORK.NETWORK_ENTITY_AREA_HAVE_ALL_REPLIED(areaHandle)
  return native.invoke(
    Type.Bool, 3353, false,
    arg(Type.Int, areaHandle)
  )
end

-- BOOL NETWORK_ENTITY_AREA_IS_OCCUPIED(int areaHandle) // 0x4A2D4E8BF4265B0F
function NETWORK.NETWORK_ENTITY_AREA_IS_OCCUPIED(areaHandle)
  return native.invoke(
    Type.Bool, 3354, false,
    arg(Type.Int, areaHandle)
  )
end

-- void NETWORK_USE_HIGH_PRECISION_BLENDING(int netID, BOOL toggle) // 0x2B1813ABA29016C5
function NETWORK.NETWORK_USE_HIGH_PRECISION_BLENDING(netID, toggle)
  native.invoke(
    Type.Void, 3355, false,
    arg(Type.Int, netID),
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_SET_CUSTOM_ARENA_BALL_PARAMS(int netId) // 0xA6FCECCF4721D679
function NETWORK.NETWORK_SET_CUSTOM_ARENA_BALL_PARAMS(netId)
  native.invoke(
    Type.Void, 3356, false,
    arg(Type.Int, netId)
  )
end

-- void NETWORK_ENTITY_USE_HIGH_PRECISION_ROTATION(int netId, BOOL toggle) // 0x95BAF97C82464629
function NETWORK.NETWORK_ENTITY_USE_HIGH_PRECISION_ROTATION(netId, toggle)
  native.invoke(
    Type.Void, 3357, false,
    arg(Type.Int, netId),
    arg(Type.Bool, toggle)
  )
end

-- BOOL NETWORK_REQUEST_CLOUD_BACKGROUND_SCRIPTS() // 0x924426BFFD82E915
function NETWORK.NETWORK_REQUEST_CLOUD_BACKGROUND_SCRIPTS()
  return native.invoke(
    Type.Bool, 3358, false
  )
end

-- BOOL NETWORK_IS_CLOUD_BACKGROUND_SCRIPT_REQUEST_PENDING() // 0x8132C0EB8B2B3293
function NETWORK.NETWORK_IS_CLOUD_BACKGROUND_SCRIPT_REQUEST_PENDING()
  return native.invoke(
    Type.Bool, 3359, false
  )
end

-- void NETWORK_REQUEST_CLOUD_TUNABLES() // 0x42FB3B532D526E6C
function NETWORK.NETWORK_REQUEST_CLOUD_TUNABLES()
  native.invoke(
    Type.Void, 3360, false
  )
end

-- BOOL NETWORK_IS_TUNABLE_CLOUD_REQUEST_PENDING() // 0x0467C11ED88B7D28
function NETWORK.NETWORK_IS_TUNABLE_CLOUD_REQUEST_PENDING()
  return native.invoke(
    Type.Bool, 3361, false
  )
end

-- int NETWORK_GET_TUNABLE_CLOUD_CRC() // 0x10BD227A753B0D84
--[[
Actually returns the version (TUNABLE_VERSION)
--]]
function NETWORK.NETWORK_GET_TUNABLE_CLOUD_CRC()
  return native.invoke(
    Type.Int, 3362, false
  )
end

-- BOOL NETWORK_DOES_TUNABLE_EXIST(const char* tunableContext, const char* tunableName) // 0x85E5F8B9B898B20A
function NETWORK.NETWORK_DOES_TUNABLE_EXIST(tunableContext, tunableName)
  return native.invoke(
    Type.Bool, 3363, false,
    arg(Type.String, tunableContext),
    arg(Type.String, tunableName)
  )
end

-- BOOL NETWORK_ACCESS_TUNABLE_INT(const char* tunableContext, const char* tunableName, int* value) // 0x8BE1146DFD5D4468
function NETWORK.NETWORK_ACCESS_TUNABLE_INT(tunableContext, tunableName, value)
  return native.invoke(
    Type.Bool, 3364, false,
    arg(Type.String, tunableContext),
    arg(Type.String, tunableName),
    arg(Type.Int, value)
  )
end

-- BOOL NETWORK_ACCESS_TUNABLE_FLOAT(const char* tunableContext, const char* tunableName, float* value) // 0xE5608CA7BC163A5F
function NETWORK.NETWORK_ACCESS_TUNABLE_FLOAT(tunableContext, tunableName, value)
  return native.invoke(
    Type.Bool, 3365, false,
    arg(Type.String, tunableContext),
    arg(Type.String, tunableName),
    arg(Type.Float, value)
  )
end

-- BOOL NETWORK_ACCESS_TUNABLE_BOOL(const char* tunableContext, const char* tunableName) // 0xAA6A47A573ABB75A
function NETWORK.NETWORK_ACCESS_TUNABLE_BOOL(tunableContext, tunableName)
  return native.invoke(
    Type.Bool, 3366, false,
    arg(Type.String, tunableContext),
    arg(Type.String, tunableName)
  )
end

-- BOOL NETWORK_DOES_TUNABLE_EXIST_HASH(Hash tunableContext, Hash tunableName) // 0xE4E53E1419D81127
function NETWORK.NETWORK_DOES_TUNABLE_EXIST_HASH(tunableContext, tunableName)
  return native.invoke(
    Type.Bool, 3367, false,
    arg(Type.Hash, tunableContext),
    arg(Type.Hash, tunableName)
  )
end

-- BOOL NETWORK_ACCESS_TUNABLE_MODIFICATION_DETECTION_CLEAR() // 0xFAFC23AEE23868DB
function NETWORK.NETWORK_ACCESS_TUNABLE_MODIFICATION_DETECTION_CLEAR()
  return native.invoke(
    Type.Bool, 3368, false
  )
end

-- BOOL NETWORK_ACCESS_TUNABLE_INT_HASH(Hash tunableContext, Hash tunableName, int* value) // 0x40FCE03E50E8DBE8
function NETWORK.NETWORK_ACCESS_TUNABLE_INT_HASH(tunableContext, tunableName, value)
  return native.invoke(
    Type.Bool, 3369, false,
    arg(Type.Hash, tunableContext),
    arg(Type.Hash, tunableName),
    arg(Type.Int, value)
  )
end

-- BOOL NETWORK_ACCESS_TUNABLE_INT_MODIFICATION_DETECTION_REGISTRATION_HASH(Hash contextHash, Hash nameHash, int* value) // 0x3A8B55FDA4C8DDEF
function NETWORK.NETWORK_ACCESS_TUNABLE_INT_MODIFICATION_DETECTION_REGISTRATION_HASH(contextHash, nameHash, value)
  return native.invoke(
    Type.Bool, 3370, false,
    arg(Type.Hash, contextHash),
    arg(Type.Hash, nameHash),
    arg(Type.Int, value)
  )
end

-- BOOL NETWORK_ACCESS_TUNABLE_FLOAT_HASH(Hash tunableContext, Hash tunableName, float* value) // 0x972BC203BBC4C4D5
function NETWORK.NETWORK_ACCESS_TUNABLE_FLOAT_HASH(tunableContext, tunableName, value)
  return native.invoke(
    Type.Bool, 3371, false,
    arg(Type.Hash, tunableContext),
    arg(Type.Hash, tunableName),
    arg(Type.Float, value)
  )
end

-- BOOL NETWORK_ACCESS_TUNABLE_FLOAT_MODIFICATION_DETECTION_REGISTRATION_HASH(Hash contextHash, Hash nameHash, float* value) // 0x1950DAE9848A4739
function NETWORK.NETWORK_ACCESS_TUNABLE_FLOAT_MODIFICATION_DETECTION_REGISTRATION_HASH(contextHash, nameHash, value)
  return native.invoke(
    Type.Bool, 3372, false,
    arg(Type.Hash, contextHash),
    arg(Type.Hash, nameHash),
    arg(Type.Float, value)
  )
end

-- BOOL NETWORK_ACCESS_TUNABLE_BOOL_HASH(Hash tunableContext, Hash tunableName) // 0xEA16B69D93D71A45
function NETWORK.NETWORK_ACCESS_TUNABLE_BOOL_HASH(tunableContext, tunableName)
  return native.invoke(
    Type.Bool, 3373, false,
    arg(Type.Hash, tunableContext),
    arg(Type.Hash, tunableName)
  )
end

-- BOOL NETWORK_ACCESS_TUNABLE_BOOL_MODIFICATION_DETECTION_REGISTRATION_HASH(Hash contextHash, Hash nameHash, BOOL* value) // 0x697F508861875B42
function NETWORK.NETWORK_ACCESS_TUNABLE_BOOL_MODIFICATION_DETECTION_REGISTRATION_HASH(contextHash, nameHash, value)
  return native.invoke(
    Type.Bool, 3374, false,
    arg(Type.Hash, contextHash),
    arg(Type.Hash, nameHash),
    arg(Type.Bool, value)
  )
end

-- BOOL NETWORK_TRY_ACCESS_TUNABLE_BOOL_HASH(Hash tunableContext, Hash tunableName, BOOL defaultValue) // 0xC7420099936CE286
--[[
Returns defaultValue if the tunable doesn't exist.
--]]
function NETWORK.NETWORK_TRY_ACCESS_TUNABLE_BOOL_HASH(tunableContext, tunableName, defaultValue)
  return native.invoke(
    Type.Bool, 3375, false,
    arg(Type.Hash, tunableContext),
    arg(Type.Hash, tunableName),
    arg(Type.Bool, defaultValue)
  )
end

-- int NETWORK_GET_CONTENT_MODIFIER_LIST_ID(Hash contentHash) // 0x187382F8A3E0A6C3
--[[
Return the content modifier id (the tunables context if you want) of a specific content.

It takes the content hash (which is the mission id hash), and return the content modifier id, used as the tunables context.

The mission id can be found on the Social club, for example, 'socialclub.rockstargames.com/games/gtav/jobs/job/A8M6Bz8MLEC5xngvDCzGwA'

'A8M6Bz8MLEC5xngvDCzGwA' is the mission id, so the game hash this and use it as the parameter for this native.

--]]
function NETWORK.NETWORK_GET_CONTENT_MODIFIER_LIST_ID(contentHash)
  return native.invoke(
    Type.Int, 3376, false,
    arg(Type.Hash, contentHash)
  )
end

-- int NETWORK_GET_BONE_ID_OF_FATAL_HIT() // 0x7DB53B37A2F211A0
function NETWORK.NETWORK_GET_BONE_ID_OF_FATAL_HIT()
  return native.invoke(
    Type.Int, 3377, false
  )
end

-- void NETWORK_RESET_BODY_TRACKER() // 0x72433699B4E6DD64
function NETWORK.NETWORK_RESET_BODY_TRACKER()
  native.invoke(
    Type.Void, 3378, false
  )
end

-- int NETWORK_GET_NUMBER_BODY_TRACKER_HITS() // 0xD38C4A6D047C019D
function NETWORK.NETWORK_GET_NUMBER_BODY_TRACKER_HITS()
  return native.invoke(
    Type.Int, 3379, false
  )
end

-- BOOL NETWORK_HAS_BONE_BEEN_HIT_BY_KILLER(int boneIndex) // 0x2E0BF682CC778D49
function NETWORK.NETWORK_HAS_BONE_BEEN_HIT_BY_KILLER(boneIndex)
  return native.invoke(
    Type.Bool, 3380, false,
    arg(Type.Int, boneIndex)
  )
end

-- BOOL NETWORK_SET_ATTRIBUTE_DAMAGE_TO_PLAYER(Ped ped, Player player) // 0x0EDE326D47CD0F3E
function NETWORK.NETWORK_SET_ATTRIBUTE_DAMAGE_TO_PLAYER(ped, player)
  return native.invoke(
    Type.Bool, 3381, false,
    arg(Type.Ped, ped),
    arg(Type.Player, player)
  )
end

-- void NETWORK_TRIGGER_DAMAGE_EVENT_FOR_ZERO_DAMAGE(Entity entity, BOOL toggle) // 0x890E2C5ABED7236D
--[[
Allows vehicle wheels to be destructible even when the vehicle entity is invincible.
--]]
function NETWORK.NETWORK_TRIGGER_DAMAGE_EVENT_FOR_ZERO_DAMAGE(entity, toggle)
  native.invoke(
    Type.Void, 3382, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_TRIGGER_DAMAGE_EVENT_FOR_ZERO_WEAPON_HASH(Entity entity, BOOL toggle) // 0x38B7C51AB1EDC7D8
function NETWORK.NETWORK_TRIGGER_DAMAGE_EVENT_FOR_ZERO_WEAPON_HASH(entity, toggle)
  native.invoke(
    Type.Void, 3383, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_SET_NO_LONGER_NEEDED(Entity entity, BOOL toggle) // 0x3FC795691834481D
function NETWORK.NETWORK_SET_NO_LONGER_NEEDED(entity, toggle)
  native.invoke(
    Type.Void, 3384, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- BOOL NETWORK_EXPLODE_VEHICLE(Vehicle vehicle, BOOL isAudible, BOOL isInvisible, int netId) // 0x301A42153C9AD707
--[[
In the console script dumps, this is only referenced once. 
NETWORK::NETWORK_EXPLODE_VEHICLE(vehicle, 1, 0, 0);

^^^^^ That must be PC script dumps? In X360 Script Dumps it is reference a few times with 2 differences in the parameters.
Which as you see below is 1, 0, 0 + 1, 1, 0 + 1, 0, and a *param?

am_plane_takedown.c 
network_explode_vehicle(net_to_veh(Local_40.imm_2), 1, 1, 0);

armenian2.c 
network_explode_vehicle(Local_80[6 <2>], 1, 0, 0);

fm_horde_controler.c
network_explode_vehicle(net_to_veh(*uParam0), 1, 0, *uParam0);

fm_mission_controller.c, has 6 hits so not going to list them.

Side note, setting the first parameter to 0 seems to mute sound or so?

Seems it's like ADD_EXPLOSION, etc. the first 2 params. The 3rd atm no need to worry since it always seems to be 0.

--]]
function NETWORK.NETWORK_EXPLODE_VEHICLE(vehicle, isAudible, isInvisible, netId)
  return native.invoke(
    Type.Bool, 3385, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, isAudible),
    arg(Type.Bool, isInvisible),
    arg(Type.Int, netId)
  )
end

-- void NETWORK_EXPLODE_HELI(Vehicle vehicle, BOOL isAudible, BOOL isInvisible, int netId) // 0x2A5E0621DD815A9A
function NETWORK.NETWORK_EXPLODE_HELI(vehicle, isAudible, isInvisible, netId)
  native.invoke(
    Type.Void, 3386, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, isAudible),
    arg(Type.Bool, isInvisible),
    arg(Type.Int, netId)
  )
end

-- void NETWORK_USE_LOGARITHMIC_BLENDING_THIS_FRAME(Entity entity) // 0xCD71A4ECAB22709E
function NETWORK.NETWORK_USE_LOGARITHMIC_BLENDING_THIS_FRAME(entity)
  native.invoke(
    Type.Void, 3387, false,
    arg(Type.Entity, entity)
  )
end

-- void NETWORK_OVERRIDE_COORDS_AND_HEADING(Entity entity, float x, float y, float z, float heading) // 0xA7E30DE9272B6D49
function NETWORK.NETWORK_OVERRIDE_COORDS_AND_HEADING(entity, x, y, z, heading)
  native.invoke(
    Type.Void, 3388, false,
    arg(Type.Entity, entity),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, heading)
  )
end

-- void NETWORK_ENABLE_EXTRA_VEHICLE_ORIENTATION_BLEND_CHECKS(int netId, BOOL toggle) // 0xE6717E652B8C8D8A
function NETWORK.NETWORK_ENABLE_EXTRA_VEHICLE_ORIENTATION_BLEND_CHECKS(netId, toggle)
  native.invoke(
    Type.Void, 3389, false,
    arg(Type.Int, netId),
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_DISABLE_PROXIMITY_MIGRATION(int netID) // 0x407091CF6037118E
function NETWORK.NETWORK_DISABLE_PROXIMITY_MIGRATION(netID)
  native.invoke(
    Type.Void, 3390, false,
    arg(Type.Int, netID)
  )
end

-- void NETWORK_SET_PROPERTY_ID(int id) // 0x1775961C2FBBCB5C
--[[
value must be < 255
--]]
function NETWORK.NETWORK_SET_PROPERTY_ID(id)
  native.invoke(
    Type.Void, 3391, false,
    arg(Type.Int, id)
  )
end

-- void NETWORK_CLEAR_PROPERTY_ID() // 0xC2B82527CA77053E
function NETWORK.NETWORK_CLEAR_PROPERTY_ID()
  native.invoke(
    Type.Void, 3392, false
  )
end

-- void NETWORK_SET_PLAYER_MENTAL_STATE(int p0) // 0x367EF5E2F439B4C6
--[[
p0 in the decompiled scripts is always the stat mesh_texblend * 0.07 to int
--]]
function NETWORK.NETWORK_SET_PLAYER_MENTAL_STATE(p0)
  native.invoke(
    Type.Void, 3393, false,
    arg(Type.Int, p0)
  )
end

-- void NETWORK_SET_MINIMUM_RANK_FOR_MISSION(BOOL p0) // 0x94538037EE44F5CF
function NETWORK.NETWORK_SET_MINIMUM_RANK_FOR_MISSION(p0)
  native.invoke(
    Type.Void, 3394, false,
    arg(Type.Bool, p0)
  )
end

-- void NETWORK_CACHE_LOCAL_PLAYER_HEAD_BLEND_DATA() // 0xBD0BE0BFC927EAC1
function NETWORK.NETWORK_CACHE_LOCAL_PLAYER_HEAD_BLEND_DATA()
  native.invoke(
    Type.Void, 3395, false
  )
end

-- BOOL NETWORK_HAS_CACHED_PLAYER_HEAD_BLEND_DATA(Player player) // 0x237D5336A9A54108
function NETWORK.NETWORK_HAS_CACHED_PLAYER_HEAD_BLEND_DATA(player)
  return native.invoke(
    Type.Bool, 3396, false,
    arg(Type.Player, player)
  )
end

-- BOOL NETWORK_APPLY_CACHED_PLAYER_HEAD_BLEND_DATA(Ped ped, Player player) // 0x99B72C7ABDE5C910
function NETWORK.NETWORK_APPLY_CACHED_PLAYER_HEAD_BLEND_DATA(ped, player)
  return native.invoke(
    Type.Bool, 3397, false,
    arg(Type.Ped, ped),
    arg(Type.Player, player)
  )
end

-- int GET_NUM_COMMERCE_ITEMS() // 0xF2EAC213D5EA0623
function NETWORK.GET_NUM_COMMERCE_ITEMS()
  return native.invoke(
    Type.Int, 3398, false
  )
end

-- BOOL IS_COMMERCE_DATA_VALID() // 0xEA14EEF5B7CD2C30
function NETWORK.IS_COMMERCE_DATA_VALID()
  return native.invoke(
    Type.Bool, 3399, false
  )
end

-- void TRIGGER_COMMERCE_DATA_FETCH(Any p0) // 0xB606E6CC59664972
--[[
Does nothing (it's a nullsub).
--]]
function NETWORK.TRIGGER_COMMERCE_DATA_FETCH(p0)
  native.invoke(
    Type.Void, 3400, false,
    arg(Type.Any, p0)
  )
end

-- BOOL IS_COMMERCE_DATA_FETCH_IN_PROGRESS() // 0x1D4DC17C38FEAFF0
function NETWORK.IS_COMMERCE_DATA_FETCH_IN_PROGRESS()
  return native.invoke(
    Type.Bool, 3401, false
  )
end

-- const char* GET_COMMERCE_ITEM_ID(int index) // 0x662635855957C411
function NETWORK.GET_COMMERCE_ITEM_ID(index)
  return native.invoke(
    Type.Const char, 3402, false,
    arg(Type.Int, index)
  )
end

-- const char* GET_COMMERCE_ITEM_NAME(int index) // 0xB4271092CA7EDF48
function NETWORK.GET_COMMERCE_ITEM_NAME(index)
  return native.invoke(
    Type.Const char, 3403, false,
    arg(Type.Int, index)
  )
end

-- const char* GET_COMMERCE_PRODUCT_PRICE(int index) // 0xCA94551B50B4932C
function NETWORK.GET_COMMERCE_PRODUCT_PRICE(index)
  return native.invoke(
    Type.Const char, 3404, false,
    arg(Type.Int, index)
  )
end

-- int GET_COMMERCE_ITEM_NUM_CATS(int index) // 0x2A7776C709904AB0
function NETWORK.GET_COMMERCE_ITEM_NUM_CATS(index)
  return native.invoke(
    Type.Int, 3405, false,
    arg(Type.Int, index)
  )
end

-- const char* GET_COMMERCE_ITEM_CAT(int index, int index2) // 0x6F44CBF56D79FAC0
--[[
index2 is unused
--]]
function NETWORK.GET_COMMERCE_ITEM_CAT(index, index2)
  return native.invoke(
    Type.Const char, 3406, false,
    arg(Type.Int, index),
    arg(Type.Int, index2)
  )
end

-- void OPEN_COMMERCE_STORE(const char* p0, const char* p1, int p2) // 0x58C21165F6545892
function NETWORK.OPEN_COMMERCE_STORE(p0, p1, p2)
  native.invoke(
    Type.Void, 3407, false,
    arg(Type.String, p0),
    arg(Type.String, p1),
    arg(Type.Int, p2)
  )
end

-- BOOL IS_COMMERCE_STORE_OPEN() // 0x2EAC52B4019E2782
function NETWORK.IS_COMMERCE_STORE_OPEN()
  return native.invoke(
    Type.Bool, 3408, false
  )
end

-- void SET_STORE_ENABLED(BOOL toggle) // 0x9641A9FF718E9C5E
--[[
Access to the store for shark cards etc...
--]]
function NETWORK.SET_STORE_ENABLED(toggle)
  native.invoke(
    Type.Void, 3409, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL REQUEST_COMMERCE_ITEM_IMAGE(int index) // 0xA2F952104FC6DD4B
function NETWORK.REQUEST_COMMERCE_ITEM_IMAGE(index)
  return native.invoke(
    Type.Bool, 3410, false,
    arg(Type.Int, index)
  )
end

-- void RELEASE_ALL_COMMERCE_ITEM_IMAGES() // 0x72D0706CD6CCDB58
function NETWORK.RELEASE_ALL_COMMERCE_ITEM_IMAGES()
  native.invoke(
    Type.Void, 3411, false
  )
end

-- const char* GET_COMMERCE_ITEM_TEXTURENAME(int index) // 0x722F5D28B61C5EA8
function NETWORK.GET_COMMERCE_ITEM_TEXTURENAME(index)
  return native.invoke(
    Type.Const char, 3412, false,
    arg(Type.Int, index)
  )
end

-- BOOL IS_STORE_AVAILABLE_TO_USER() // 0x883D79C4071E18B3
function NETWORK.IS_STORE_AVAILABLE_TO_USER()
  return native.invoke(
    Type.Bool, 3413, false
  )
end

-- void DELAY_MP_STORE_OPEN() // 0x265635150FB0D82E
function NETWORK.DELAY_MP_STORE_OPEN()
  native.invoke(
    Type.Void, 3414, false
  )
end

-- void RESET_STORE_NETWORK_GAME_TRACKING() // 0x444C4525ECE0A4B9
function NETWORK.RESET_STORE_NETWORK_GAME_TRACKING()
  native.invoke(
    Type.Void, 3415, false
  )
end

-- BOOL IS_USER_OLD_ENOUGH_TO_ACCESS_STORE() // 0x59328EB08C5CEB2B
function NETWORK.IS_USER_OLD_ENOUGH_TO_ACCESS_STORE()
  return native.invoke(
    Type.Bool, 3416, false
  )
end

-- void SET_LAST_VIEWED_SHOP_ITEM(Hash p0, int p1, Hash p2) // 0xFAE628F1E9ADB239
function NETWORK.SET_LAST_VIEWED_SHOP_ITEM(p0, p1, p2)
  native.invoke(
    Type.Void, 3417, false,
    arg(Type.Hash, p0),
    arg(Type.Int, p1),
    arg(Type.Hash, p2)
  )
end

-- int GET_USER_PREMIUM_ACCESS() // 0x754615490A029508
--[[
Checks some commerce stuff
--]]
function NETWORK.GET_USER_PREMIUM_ACCESS()
  return native.invoke(
    Type.Int, 3418, false
  )
end

-- int GET_USER_STARTER_ACCESS() // 0x155467ACA0F55705
--[[
Checks some commerce stuff
--]]
function NETWORK.GET_USER_STARTER_ACCESS()
  return native.invoke(
    Type.Int, 3419, false
  )
end

-- int CLOUD_DELETE_MEMBER_FILE(const char* p0) // 0xC64DED7EF0D2FE37
function NETWORK.CLOUD_DELETE_MEMBER_FILE(p0)
  return native.invoke(
    Type.Int, 3420, false,
    arg(Type.String, p0)
  )
end

-- BOOL CLOUD_HAS_REQUEST_COMPLETED(int requestId) // 0x4C61B39930D045DA
function NETWORK.CLOUD_HAS_REQUEST_COMPLETED(requestId)
  return native.invoke(
    Type.Bool, 3421, false,
    arg(Type.Int, requestId)
  )
end

-- BOOL CLOUD_DID_REQUEST_SUCCEED(int requestId) // 0x3A3D5568AF297CD5
function NETWORK.CLOUD_DID_REQUEST_SUCCEED(requestId)
  return native.invoke(
    Type.Bool, 3422, false,
    arg(Type.Int, requestId)
  )
end

-- void CLOUD_CHECK_AVAILABILITY() // 0x4F18196C8D38768D
--[[
Downloads prod.cloud.rockstargames.com/titles/gta5/[platform]/check.json
--]]
function NETWORK.CLOUD_CHECK_AVAILABILITY()
  native.invoke(
    Type.Void, 3423, false
  )
end

-- BOOL CLOUD_IS_CHECKING_AVAILABILITY() // 0xC7ABAC5DE675EE3B
function NETWORK.CLOUD_IS_CHECKING_AVAILABILITY()
  return native.invoke(
    Type.Bool, 3424, false
  )
end

-- BOOL CLOUD_GET_AVAILABILITY_CHECK_RESULT() // 0x0B0CC10720653F3B
function NETWORK.CLOUD_GET_AVAILABILITY_CHECK_RESULT()
  return native.invoke(
    Type.Bool, 3425, false
  )
end

-- int GET_CONTENT_TO_LOAD_TYPE() // 0x8B0C2964BA471961
--[[
This function is hard-coded to always return 0.
--]]
function NETWORK.GET_CONTENT_TO_LOAD_TYPE()
  return native.invoke(
    Type.Int, 3426, false
  )
end

-- BOOL GET_IS_LAUNCH_FROM_LIVE_AREA() // 0x88B588B41FF7868E
--[[
This function is hard-coded to always return 0.
--]]
function NETWORK.GET_IS_LAUNCH_FROM_LIVE_AREA()
  return native.invoke(
    Type.Bool, 3427, false
  )
end

-- BOOL GET_IS_LIVE_AREA_LAUNCH_WITH_CONTENT() // 0x67FC09BC554A75E5
--[[
This function is hard-coded to always return 0.
--]]
function NETWORK.GET_IS_LIVE_AREA_LAUNCH_WITH_CONTENT()
  return native.invoke(
    Type.Bool, 3428, false
  )
end

-- void CLEAR_SERVICE_EVENT_ARGUMENTS() // 0x966DD84FB6A46017
--[[
This native does absolutely nothing, just a nullsub
--]]
function NETWORK.CLEAR_SERVICE_EVENT_ARGUMENTS()
  native.invoke(
    Type.Void, 3429, false
  )
end

-- BOOL UGC_COPY_CONTENT(Any* p0, Any* p1) // 0x152D90E4C1B4738A
function NETWORK.UGC_COPY_CONTENT(p0, p1)
  return native.invoke(
    Type.Bool, 3430, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL UGC_IS_CREATING() // 0x9FEDF86898F100E9
function NETWORK.UGC_IS_CREATING()
  return native.invoke(
    Type.Bool, 3431, false
  )
end

-- BOOL UGC_HAS_CREATE_FINISHED() // 0x5E24341A7F92A74B
function NETWORK.UGC_HAS_CREATE_FINISHED()
  return native.invoke(
    Type.Bool, 3432, false
  )
end

-- BOOL UGC_DID_CREATE_SUCCEED() // 0x24E4E51FC16305F9
function NETWORK.UGC_DID_CREATE_SUCCEED()
  return native.invoke(
    Type.Bool, 3433, false
  )
end

-- int UGC_GET_CREATE_RESULT() // 0xFBC5E768C7A77A6A
function NETWORK.UGC_GET_CREATE_RESULT()
  return native.invoke(
    Type.Int, 3434, false
  )
end

-- const char* UGC_GET_CREATE_CONTENT_ID() // 0xC55A0B40FFB1ED23
function NETWORK.UGC_GET_CREATE_CONTENT_ID()
  return native.invoke(
    Type.Const char, 3435, false
  )
end

-- void UGC_CLEAR_CREATE_RESULT() // 0x17440AA15D1D3739
function NETWORK.UGC_CLEAR_CREATE_RESULT()
  native.invoke(
    Type.Void, 3436, false
  )
end

-- BOOL UGC_QUERY_MY_CONTENT(Any p0, Any p1, Any* p2, Any p3, Any p4, Any p5) // 0x9BF438815F5D96EA
function NETWORK.UGC_QUERY_MY_CONTENT(p0, p1, p2, p3, p4, p5)
  return native.invoke(
    Type.Bool, 3437, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5)
  )
end

-- BOOL UGC_QUERY_BY_CATEGORY(Any p0, Any p1, Any p2, const char* p3, Any p4, BOOL p5) // 0x692D58DF40657E8C
function NETWORK.UGC_QUERY_BY_CATEGORY(p0, p1, p2, p3, p4, p5)
  return native.invoke(
    Type.Bool, 3438, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.String, p3),
    arg(Type.Any, p4),
    arg(Type.Bool, p5)
  )
end

-- BOOL UGC_QUERY_BY_CONTENT_ID(const char* contentId, BOOL latestVersion, const char* contentTypeName) // 0x158EC424F35EC469
function NETWORK.UGC_QUERY_BY_CONTENT_ID(contentId, latestVersion, contentTypeName)
  return native.invoke(
    Type.Bool, 3439, false,
    arg(Type.String, contentId),
    arg(Type.Bool, latestVersion),
    arg(Type.String, contentTypeName)
  )
end

-- BOOL UGC_QUERY_BY_CONTENT_IDS(Any* data, int count, BOOL latestVersion, const char* contentTypeName) // 0xC7397A83F7A2A462
function NETWORK.UGC_QUERY_BY_CONTENT_IDS(data, count, latestVersion, contentTypeName)
  return native.invoke(
    Type.Bool, 3440, false,
    arg(Type.Any, data),
    arg(Type.Int, count),
    arg(Type.Bool, latestVersion),
    arg(Type.String, contentTypeName)
  )
end

-- BOOL UGC_QUERY_MOST_RECENTLY_CREATED_CONTENT(int offset, int count, const char* contentTypeName, int p3) // 0x6D4CB481FAC835E8
function NETWORK.UGC_QUERY_MOST_RECENTLY_CREATED_CONTENT(offset, count, contentTypeName, p3)
  return native.invoke(
    Type.Bool, 3441, false,
    arg(Type.Int, offset),
    arg(Type.Int, count),
    arg(Type.String, contentTypeName),
    arg(Type.Int, p3)
  )
end

-- BOOL UGC_GET_BOOKMARKED_CONTENT(Any p0, Any p1, const char* p2, Any* p3) // 0xD5A4B59980401588
function NETWORK.UGC_GET_BOOKMARKED_CONTENT(p0, p1, p2, p3)
  return native.invoke(
    Type.Bool, 3442, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.String, p2),
    arg(Type.Any, p3)
  )
end

-- BOOL UGC_GET_MY_CONTENT(Any p0, Any p1, const char* p2, Any* p3) // 0x3195F8DD0D531052
function NETWORK.UGC_GET_MY_CONTENT(p0, p1, p2, p3)
  return native.invoke(
    Type.Bool, 3443, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.String, p2),
    arg(Type.Any, p3)
  )
end

-- BOOL UGC_GET_FRIEND_CONTENT(Any p0, Any p1, const char* p2, Any* p3) // 0xF9E1CCAE8BA4C281
function NETWORK.UGC_GET_FRIEND_CONTENT(p0, p1, p2, p3)
  return native.invoke(
    Type.Bool, 3444, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.String, p2),
    arg(Type.Any, p3)
  )
end

-- BOOL UGC_GET_CREW_CONTENT(Any p0, Any p1, Any p2, const char* p3, Any* p4) // 0x9F6E2821885CAEE2
function NETWORK.UGC_GET_CREW_CONTENT(p0, p1, p2, p3, p4)
  return native.invoke(
    Type.Bool, 3445, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.String, p3),
    arg(Type.Any, p4)
  )
end

-- BOOL UGC_GET_GET_BY_CATEGORY(Any p0, Any p1, Any p2, const char* p3, Any* p4) // 0x678BB03C1A3BD51E
function NETWORK.UGC_GET_GET_BY_CATEGORY(p0, p1, p2, p3, p4)
  return native.invoke(
    Type.Bool, 3446, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.String, p3),
    arg(Type.Any, p4)
  )
end

-- BOOL UGC_GET_GET_BY_CONTENT_ID(const char* contentId, const char* contentTypeName) // 0x815E5E3073DA1D67
function NETWORK.UGC_GET_GET_BY_CONTENT_ID(contentId, contentTypeName)
  return native.invoke(
    Type.Bool, 3447, false,
    arg(Type.String, contentId),
    arg(Type.String, contentTypeName)
  )
end

-- BOOL UGC_GET_GET_BY_CONTENT_IDS(Any* data, int dataCount, const char* contentTypeName) // 0xB8322EEB38BE7C26
function NETWORK.UGC_GET_GET_BY_CONTENT_IDS(data, dataCount, contentTypeName)
  return native.invoke(
    Type.Bool, 3448, false,
    arg(Type.Any, data),
    arg(Type.Int, dataCount),
    arg(Type.String, contentTypeName)
  )
end

-- BOOL UGC_GET_MOST_RECENTLY_CREATED_CONTENT(Any p0, Any p1, Any* p2, Any* p3) // 0xA7862BC5ED1DFD7E
function NETWORK.UGC_GET_MOST_RECENTLY_CREATED_CONTENT(p0, p1, p2, p3)
  return native.invoke(
    Type.Bool, 3449, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- BOOL UGC_GET_MOST_RECENTLY_PLAYED_CONTENT(Any p0, Any p1, Any* p2, Any* p3) // 0x97A770BEEF227E2B
function NETWORK.UGC_GET_MOST_RECENTLY_PLAYED_CONTENT(p0, p1, p2, p3)
  return native.invoke(
    Type.Bool, 3450, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- BOOL UGC_GET_TOP_RATED_CONTENT(Any p0, Any p1, Any* p2, Any* p3) // 0x5324A0E3E4CE3570
function NETWORK.UGC_GET_TOP_RATED_CONTENT(p0, p1, p2, p3)
  return native.invoke(
    Type.Bool, 3451, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void UGC_CANCEL_QUERY() // 0xE9B99B6853181409
function NETWORK.UGC_CANCEL_QUERY()
  native.invoke(
    Type.Void, 3452, false
  )
end

-- BOOL UGC_IS_GETTING() // 0xD53ACDBEF24A46E8
function NETWORK.UGC_IS_GETTING()
  return native.invoke(
    Type.Bool, 3453, false
  )
end

-- BOOL UGC_HAS_GET_FINISHED() // 0x02ADA21EA2F6918F
function NETWORK.UGC_HAS_GET_FINISHED()
  return native.invoke(
    Type.Bool, 3454, false
  )
end

-- BOOL UGC_DID_GET_SUCCEED() // 0x941E5306BCD7C2C7
function NETWORK.UGC_DID_GET_SUCCEED()
  return native.invoke(
    Type.Bool, 3455, false
  )
end

-- BOOL UGC_WAS_QUERY_FORCE_CANCELLED() // 0xC87E740D9F3872CC
function NETWORK.UGC_WAS_QUERY_FORCE_CANCELLED()
  return native.invoke(
    Type.Bool, 3456, false
  )
end

-- int UGC_GET_QUERY_RESULT() // 0xEDF7F927136C224B
function NETWORK.UGC_GET_QUERY_RESULT()
  return native.invoke(
    Type.Int, 3457, false
  )
end

-- int UGC_GET_CONTENT_NUM() // 0xE0A6138401BCB837
function NETWORK.UGC_GET_CONTENT_NUM()
  return native.invoke(
    Type.Int, 3458, false
  )
end

-- int UGC_GET_CONTENT_TOTAL() // 0x769951E2455E2EB5
function NETWORK.UGC_GET_CONTENT_TOTAL()
  return native.invoke(
    Type.Int, 3459, false
  )
end

-- Hash UGC_GET_CONTENT_HASH() // 0x3A17A27D75C74887
function NETWORK.UGC_GET_CONTENT_HASH()
  return native.invoke(
    Type.Hash, 3460, false
  )
end

-- void UGC_CLEAR_QUERY_RESULTS() // 0xBA96394A0EECFA65
function NETWORK.UGC_CLEAR_QUERY_RESULTS()
  native.invoke(
    Type.Void, 3461, false
  )
end

-- const char* UGC_GET_CONTENT_USER_ID(int p0) // 0xCD67AD041A394C9C
function NETWORK.UGC_GET_CONTENT_USER_ID(p0)
  return native.invoke(
    Type.Const char, 3462, false,
    arg(Type.Int, p0)
  )
end

-- BOOL UGC_GET_CONTENT_CREATOR_GAMER_HANDLE(int p0, Any* p1) // 0x584770794D758C18
function NETWORK.UGC_GET_CONTENT_CREATOR_GAMER_HANDLE(p0, p1)
  return native.invoke(
    Type.Bool, 3463, false,
    arg(Type.Int, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL UGC_GET_CONTENT_CREATED_BY_LOCAL_PLAYER(Any p0) // 0x8C8D2739BA44AF0F
function NETWORK.UGC_GET_CONTENT_CREATED_BY_LOCAL_PLAYER(p0)
  return native.invoke(
    Type.Bool, 3464, false,
    arg(Type.Any, p0)
  )
end

-- const char* UGC_GET_CONTENT_USER_NAME(Any p0) // 0x703F12425ECA8BF5
function NETWORK.UGC_GET_CONTENT_USER_NAME(p0)
  return native.invoke(
    Type.Const char, 3465, false,
    arg(Type.Any, p0)
  )
end

-- BOOL UGC_GET_CONTENT_IS_USING_SC_NICKNAME(Any p0) // 0xAEAB987727C5A8A4
function NETWORK.UGC_GET_CONTENT_IS_USING_SC_NICKNAME(p0)
  return native.invoke(
    Type.Bool, 3466, false,
    arg(Type.Any, p0)
  )
end

-- int UGC_GET_CONTENT_CATEGORY(int p0) // 0xA7BAB11E7C9C6C5A
function NETWORK.UGC_GET_CONTENT_CATEGORY(p0)
  return native.invoke(
    Type.Int, 3467, false,
    arg(Type.Int, p0)
  )
end

-- const char* UGC_GET_CONTENT_ID(int p0) // 0x55AA95F481D694D2
--[[
Return the mission id of a job.
--]]
function NETWORK.UGC_GET_CONTENT_ID(p0)
  return native.invoke(
    Type.Const char, 3468, false,
    arg(Type.Int, p0)
  )
end

-- const char* UGC_GET_ROOT_CONTENT_ID(int p0) // 0xC0173D6BFF4E0348
--[[
Return the root content id of a job.
--]]
function NETWORK.UGC_GET_ROOT_CONTENT_ID(p0)
  return native.invoke(
    Type.Const char, 3469, false,
    arg(Type.Int, p0)
  )
end

-- const char* UGC_GET_CONTENT_NAME(Any p0) // 0xBF09786A7FCAB582
function NETWORK.UGC_GET_CONTENT_NAME(p0)
  return native.invoke(
    Type.Const char, 3470, false,
    arg(Type.Any, p0)
  )
end

-- int UGC_GET_CONTENT_DESCRIPTION_HASH(Any p0) // 0x7CF0448787B23758
function NETWORK.UGC_GET_CONTENT_DESCRIPTION_HASH(p0)
  return native.invoke(
    Type.Int, 3471, false,
    arg(Type.Any, p0)
  )
end

-- const char* UGC_GET_CONTENT_PATH(int p0, int p1) // 0xBAF6BABF9E7CCC13
function NETWORK.UGC_GET_CONTENT_PATH(p0, p1)
  return native.invoke(
    Type.Const char, 3472, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1)
  )
end

-- void UGC_GET_CONTENT_UPDATED_DATE(Any p0, Any* p1) // 0xCFD115B373C0DF63
function NETWORK.UGC_GET_CONTENT_UPDATED_DATE(p0, p1)
  native.invoke(
    Type.Void, 3473, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- int UGC_GET_CONTENT_FILE_VERSION(Any p0, Any p1) // 0x37025B27D9B658B1
function NETWORK.UGC_GET_CONTENT_FILE_VERSION(p0, p1)
  return native.invoke(
    Type.Int, 3474, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL UGC_GET_CONTENT_HAS_LO_RES_PHOTO(int p0) // 0x1D610EB0FEA716D9
function NETWORK.UGC_GET_CONTENT_HAS_LO_RES_PHOTO(p0)
  return native.invoke(
    Type.Bool, 3475, false,
    arg(Type.Int, p0)
  )
end

-- BOOL UGC_GET_CONTENT_HAS_HI_RES_PHOTO(int p0) // 0x7FCC39C46C3C03BD
function NETWORK.UGC_GET_CONTENT_HAS_HI_RES_PHOTO(p0)
  return native.invoke(
    Type.Bool, 3476, false,
    arg(Type.Int, p0)
  )
end

-- int UGC_GET_CONTENT_LANGUAGE(Any p0) // 0x32DD916F3F7C9672
function NETWORK.UGC_GET_CONTENT_LANGUAGE(p0)
  return native.invoke(
    Type.Int, 3477, false,
    arg(Type.Any, p0)
  )
end

-- BOOL UGC_GET_CONTENT_IS_PUBLISHED(Any p0) // 0x3054F114121C21EA
function NETWORK.UGC_GET_CONTENT_IS_PUBLISHED(p0)
  return native.invoke(
    Type.Bool, 3478, false,
    arg(Type.Any, p0)
  )
end

-- BOOL UGC_GET_CONTENT_IS_VERIFIED(Any p0) // 0xA9240A96C74CCA13
function NETWORK.UGC_GET_CONTENT_IS_VERIFIED(p0)
  return native.invoke(
    Type.Bool, 3479, false,
    arg(Type.Any, p0)
  )
end

-- float UGC_GET_CONTENT_RATING(Any p0, Any p1) // 0x1ACCFBA3D8DAB2EE
function NETWORK.UGC_GET_CONTENT_RATING(p0, p1)
  return native.invoke(
    Type.Float, 3480, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- int UGC_GET_CONTENT_RATING_COUNT(Any p0, Any p1) // 0x759299C5BB31D2A9
function NETWORK.UGC_GET_CONTENT_RATING_COUNT(p0, p1)
  return native.invoke(
    Type.Int, 3481, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- int UGC_GET_CONTENT_RATING_POSITIVE_COUNT(Any p0, Any p1) // 0x87E5C46C187FE0AE
function NETWORK.UGC_GET_CONTENT_RATING_POSITIVE_COUNT(p0, p1)
  return native.invoke(
    Type.Int, 3482, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- int UGC_GET_CONTENT_RATING_NEGATIVE_COUNT(Any p0, Any p1) // 0x4E548C0D7AE39FF9
function NETWORK.UGC_GET_CONTENT_RATING_NEGATIVE_COUNT(p0, p1)
  return native.invoke(
    Type.Int, 3483, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL UGC_GET_CONTENT_HAS_PLAYER_RECORD(Any p0) // 0x70EA8DA57840F9BE
function NETWORK.UGC_GET_CONTENT_HAS_PLAYER_RECORD(p0)
  return native.invoke(
    Type.Bool, 3484, false,
    arg(Type.Any, p0)
  )
end

-- BOOL UGC_GET_CONTENT_HAS_PLAYER_BOOKMARKED(Any p0) // 0x993CBE59D350D225
function NETWORK.UGC_GET_CONTENT_HAS_PLAYER_BOOKMARKED(p0)
  return native.invoke(
    Type.Bool, 3485, false,
    arg(Type.Any, p0)
  )
end

-- int UGC_REQUEST_CONTENT_DATA_FROM_INDEX(int p0, int p1) // 0x171DF6A0C07FB3DC
function NETWORK.UGC_REQUEST_CONTENT_DATA_FROM_INDEX(p0, p1)
  return native.invoke(
    Type.Int, 3486, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1)
  )
end

-- int UGC_REQUEST_CONTENT_DATA_FROM_PARAMS(const char* contentTypeName, const char* contentId, int p2, int p3, int p4) // 0x7FD2990AF016795E
function NETWORK.UGC_REQUEST_CONTENT_DATA_FROM_PARAMS(contentTypeName, contentId, p2, p3, p4)
  return native.invoke(
    Type.Int, 3487, false,
    arg(Type.String, contentTypeName),
    arg(Type.String, contentId),
    arg(Type.Int, p2),
    arg(Type.Int, p3),
    arg(Type.Int, p4)
  )
end

-- int UGC_REQUEST_CACHED_DESCRIPTION(int p0) // 0x5E0165278F6339EE
function NETWORK.UGC_REQUEST_CACHED_DESCRIPTION(p0)
  return native.invoke(
    Type.Int, 3488, false,
    arg(Type.Int, p0)
  )
end

-- BOOL UGC_IS_DESCRIPTION_REQUEST_IN_PROGRESS(Any p0) // 0x2D5DC831176D0114
function NETWORK.UGC_IS_DESCRIPTION_REQUEST_IN_PROGRESS(p0)
  return native.invoke(
    Type.Bool, 3489, false,
    arg(Type.Any, p0)
  )
end

-- BOOL UGC_HAS_DESCRIPTION_REQUEST_FINISHED(Any p0) // 0xEBFA8D50ADDC54C4
function NETWORK.UGC_HAS_DESCRIPTION_REQUEST_FINISHED(p0)
  return native.invoke(
    Type.Bool, 3490, false,
    arg(Type.Any, p0)
  )
end

-- BOOL UGC_DID_DESCRIPTION_REQUEST_SUCCEED(Any p0) // 0x162C23CA83ED0A62
function NETWORK.UGC_DID_DESCRIPTION_REQUEST_SUCCEED(p0)
  return native.invoke(
    Type.Bool, 3491, false,
    arg(Type.Any, p0)
  )
end

-- const char* UGC_GET_CACHED_DESCRIPTION(Any p0, Any p1) // 0x40F7E66472DF3E5C
function NETWORK.UGC_GET_CACHED_DESCRIPTION(p0, p1)
  return native.invoke(
    Type.Const char, 3492, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL UGC_RELEASE_CACHED_DESCRIPTION(Any p0) // 0x5A34CD9C3C5BEC44
function NETWORK.UGC_RELEASE_CACHED_DESCRIPTION(p0)
  return native.invoke(
    Type.Bool, 3493, false,
    arg(Type.Any, p0)
  )
end

-- void UGC_RELEASE_ALL_CACHED_DESCRIPTIONS() // 0x68103E2247887242
function NETWORK.UGC_RELEASE_ALL_CACHED_DESCRIPTIONS()
  native.invoke(
    Type.Void, 3494, false
  )
end

-- BOOL UGC_HAS_PERMISSION_TO_WRITE() // 0xC33E7CBC06EC1A8D
function NETWORK.UGC_HAS_PERMISSION_TO_WRITE()
  return native.invoke(
    Type.Bool, 3495, false
  )
end

-- BOOL UGC_PUBLISH(const char* contentId, const char* baseContentId, const char* contentTypeName) // 0x1DE0F5F50D723CAA
function NETWORK.UGC_PUBLISH(contentId, baseContentId, contentTypeName)
  return native.invoke(
    Type.Bool, 3496, false,
    arg(Type.String, contentId),
    arg(Type.String, baseContentId),
    arg(Type.String, contentTypeName)
  )
end

-- BOOL UGC_SET_BOOKMARKED(const char* contentId, BOOL bookmarked, const char* contentTypeName) // 0x274A1519DFC1094F
function NETWORK.UGC_SET_BOOKMARKED(contentId, bookmarked, contentTypeName)
  return native.invoke(
    Type.Bool, 3497, false,
    arg(Type.String, contentId),
    arg(Type.Bool, bookmarked),
    arg(Type.String, contentTypeName)
  )
end

-- BOOL UGC_SET_DELETED(Any* p0, BOOL p1, const char* p2) // 0xD05D1A6C74DA3498
function NETWORK.UGC_SET_DELETED(p0, p1, p2)
  return native.invoke(
    Type.Bool, 3498, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.String, p2)
  )
end

-- BOOL UGC_IS_MODIFYING() // 0x45E816772E93A9DB
function NETWORK.UGC_IS_MODIFYING()
  return native.invoke(
    Type.Bool, 3499, false
  )
end

-- BOOL UGC_HAS_MODIFY_FINISHED() // 0x299EF3C576773506
function NETWORK.UGC_HAS_MODIFY_FINISHED()
  return native.invoke(
    Type.Bool, 3500, false
  )
end

-- BOOL UGC_DID_MODIFY_SUCCEED() // 0x793FF272D5B365F4
function NETWORK.UGC_DID_MODIFY_SUCCEED()
  return native.invoke(
    Type.Bool, 3501, false
  )
end

-- int UGC_GET_MODIFY_RESULT() // 0x5A0A3D1A186A5508
function NETWORK.UGC_GET_MODIFY_RESULT()
  return native.invoke(
    Type.Int, 3502, false
  )
end

-- void UGC_CLEAR_MODIFY_RESULT() // 0xA1E5E0204A6FCC70
function NETWORK.UGC_CLEAR_MODIFY_RESULT()
  native.invoke(
    Type.Void, 3503, false
  )
end

-- BOOL UGC_GET_CREATORS_BY_USER_ID(Any* p0, Any* p1) // 0xB746D20B17F2A229
function NETWORK.UGC_GET_CREATORS_BY_USER_ID(p0, p1)
  return native.invoke(
    Type.Bool, 3504, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL UGC_HAS_QUERY_CREATORS_FINISHED() // 0x63B406D7884BFA95
function NETWORK.UGC_HAS_QUERY_CREATORS_FINISHED()
  return native.invoke(
    Type.Bool, 3505, false
  )
end

-- BOOL UGC_DID_QUERY_CREATORS_SUCCEED() // 0x4D02279C83BE69FE
function NETWORK.UGC_DID_QUERY_CREATORS_SUCCEED()
  return native.invoke(
    Type.Bool, 3506, false
  )
end

-- int UGC_GET_CREATOR_NUM() // 0x597F8DBA9B206FC7
function NETWORK.UGC_GET_CREATOR_NUM()
  return native.invoke(
    Type.Int, 3507, false
  )
end

-- BOOL UGC_LOAD_OFFLINE_QUERY(Any p0) // 0x5CAE833B0EE0C500
function NETWORK.UGC_LOAD_OFFLINE_QUERY(p0)
  return native.invoke(
    Type.Bool, 3508, false,
    arg(Type.Any, p0)
  )
end

-- void UGC_CLEAR_OFFLINE_QUERY() // 0x61A885D3F7CFEE9A
function NETWORK.UGC_CLEAR_OFFLINE_QUERY()
  native.invoke(
    Type.Void, 3509, false
  )
end

-- void UGC_SET_QUERY_DATA_FROM_OFFLINE(BOOL p0) // 0xF98DDE0A8ED09323
function NETWORK.UGC_SET_QUERY_DATA_FROM_OFFLINE(p0)
  native.invoke(
    Type.Void, 3510, false,
    arg(Type.Bool, p0)
  )
end

-- void UGC_SET_USING_OFFLINE_CONTENT(BOOL p0) // 0xFD75DABC0957BF33
function NETWORK.UGC_SET_USING_OFFLINE_CONTENT(p0)
  native.invoke(
    Type.Void, 3511, false,
    arg(Type.Bool, p0)
  )
end

-- BOOL UGC_IS_LANGUAGE_SUPPORTED(Any p0) // 0xF53E48461B71EECB
function NETWORK.UGC_IS_LANGUAGE_SUPPORTED(p0)
  return native.invoke(
    Type.Bool, 3512, false,
    arg(Type.Any, p0)
  )
end

-- BOOL FACEBOOK_POST_COMPLETED_HEIST(const char* heistName, int cashEarned, int xpEarned) // 0x098AB65B9ED9A9EC
function NETWORK.FACEBOOK_POST_COMPLETED_HEIST(heistName, cashEarned, xpEarned)
  return native.invoke(
    Type.Bool, 3513, false,
    arg(Type.String, heistName),
    arg(Type.Int, cashEarned),
    arg(Type.Int, xpEarned)
  )
end

-- BOOL FACEBOOK_POST_CREATE_CHARACTER() // 0xDC48473142545431
function NETWORK.FACEBOOK_POST_CREATE_CHARACTER()
  return native.invoke(
    Type.Bool, 3514, false
  )
end

-- BOOL FACEBOOK_POST_COMPLETED_MILESTONE(int milestoneId) // 0x0AE1F1653B554AB9
function NETWORK.FACEBOOK_POST_COMPLETED_MILESTONE(milestoneId)
  return native.invoke(
    Type.Bool, 3515, false,
    arg(Type.Int, milestoneId)
  )
end

-- BOOL FACEBOOK_HAS_POST_COMPLETED() // 0x62B9FEC9A11F10EF
function NETWORK.FACEBOOK_HAS_POST_COMPLETED()
  return native.invoke(
    Type.Bool, 3516, false
  )
end

-- BOOL FACEBOOK_DID_POST_SUCCEED() // 0xA75E2B6733DA5142
function NETWORK.FACEBOOK_DID_POST_SUCCEED()
  return native.invoke(
    Type.Bool, 3517, false
  )
end

-- BOOL FACEBOOK_CAN_POST_TO_FACEBOOK() // 0x43865688AE10F0D7
function NETWORK.FACEBOOK_CAN_POST_TO_FACEBOOK()
  return native.invoke(
    Type.Bool, 3518, false
  )
end

-- int TEXTURE_DOWNLOAD_REQUEST(Any* gamerHandle, const char* filePath, const char* name, BOOL p3) // 0x16160DA74A8E74A2
function NETWORK.TEXTURE_DOWNLOAD_REQUEST(gamerHandle, filePath, name, p3)
  return native.invoke(
    Type.Int, 3519, false,
    arg(Type.Any, gamerHandle),
    arg(Type.String, filePath),
    arg(Type.String, name),
    arg(Type.Bool, p3)
  )
end

-- int TITLE_TEXTURE_DOWNLOAD_REQUEST(const char* filePath, const char* name, BOOL p2) // 0x0B203B4AFDE53A4F
function NETWORK.TITLE_TEXTURE_DOWNLOAD_REQUEST(filePath, name, p2)
  return native.invoke(
    Type.Int, 3520, false,
    arg(Type.String, filePath),
    arg(Type.String, name),
    arg(Type.Bool, p2)
  )
end

-- int UGC_TEXTURE_DOWNLOAD_REQUEST(const char* p0, int p1, int p2, int p3, const char* p4, BOOL p5) // 0x308F96458B7087CC
function NETWORK.UGC_TEXTURE_DOWNLOAD_REQUEST(p0, p1, p2, p3, p4, p5)
  return native.invoke(
    Type.Int, 3521, false,
    arg(Type.String, p0),
    arg(Type.Int, p1),
    arg(Type.Int, p2),
    arg(Type.Int, p3),
    arg(Type.String, p4),
    arg(Type.Bool, p5)
  )
end

-- void TEXTURE_DOWNLOAD_RELEASE(int p0) // 0x487EB90B98E9FB19
function NETWORK.TEXTURE_DOWNLOAD_RELEASE(p0)
  native.invoke(
    Type.Void, 3522, false,
    arg(Type.Int, p0)
  )
end

-- BOOL TEXTURE_DOWNLOAD_HAS_FAILED(int p0) // 0x5776ED562C134687
function NETWORK.TEXTURE_DOWNLOAD_HAS_FAILED(p0)
  return native.invoke(
    Type.Bool, 3523, false,
    arg(Type.Int, p0)
  )
end

-- const char* TEXTURE_DOWNLOAD_GET_NAME(int p0) // 0x3448505B6E35262D
function NETWORK.TEXTURE_DOWNLOAD_GET_NAME(p0)
  return native.invoke(
    Type.Const char, 3524, false,
    arg(Type.Int, p0)
  )
end

-- int GET_STATUS_OF_TEXTURE_DOWNLOAD(int p0) // 0x8BD6C6DEA20E82C6
--[[
0 = succeeded
1 = pending
2 = failed
--]]
function NETWORK.GET_STATUS_OF_TEXTURE_DOWNLOAD(p0)
  return native.invoke(
    Type.Int, 3525, false,
    arg(Type.Int, p0)
  )
end

-- BOOL NETWORK_CHECK_ROS_LINK_WENTDOWN_NOT_NET() // 0x60EDD13EB3AC1FF3
--[[
Returns true if profile setting 901 is set to true and sets it to false.
--]]
function NETWORK.NETWORK_CHECK_ROS_LINK_WENTDOWN_NOT_NET()
  return native.invoke(
    Type.Bool, 3526, false
  )
end

-- BOOL NETWORK_SHOULD_SHOW_STRICT_NAT_WARNING() // 0x82A2B386716608F1
--[[
Returns true if the NAT type is Strict (3) and a certain number of connections have failed.
--]]
function NETWORK.NETWORK_SHOULD_SHOW_STRICT_NAT_WARNING()
  return native.invoke(
    Type.Bool, 3527, false
  )
end

-- BOOL NETWORK_IS_CABLE_CONNECTED() // 0xEFFB25453D8600F9
function NETWORK.NETWORK_IS_CABLE_CONNECTED()
  return native.invoke(
    Type.Bool, 3528, false
  )
end

-- BOOL NETWORK_HAVE_SCS_PRIVATE_MSG_PRIV() // 0x66B59CFFD78467AF
function NETWORK.NETWORK_HAVE_SCS_PRIVATE_MSG_PRIV()
  return native.invoke(
    Type.Bool, 3529, false
  )
end

-- BOOL NETWORK_HAVE_ROS_SOCIAL_CLUB_PRIV() // 0x606E4D3E3CCCF3EB
function NETWORK.NETWORK_HAVE_ROS_SOCIAL_CLUB_PRIV()
  return native.invoke(
    Type.Bool, 3530, false
  )
end

-- BOOL NETWORK_HAVE_ROS_BANNED_PRIV() // 0x8020A73847E0CA7D
function NETWORK.NETWORK_HAVE_ROS_BANNED_PRIV()
  return native.invoke(
    Type.Bool, 3531, false
  )
end

-- BOOL NETWORK_HAVE_ROS_CREATE_TICKET_PRIV() // 0xA0AD7E2AF5349F61
function NETWORK.NETWORK_HAVE_ROS_CREATE_TICKET_PRIV()
  return native.invoke(
    Type.Bool, 3532, false
  )
end

-- BOOL NETWORK_HAVE_ROS_MULTIPLAYER_PRIV() // 0x5F91D5D0B36AA310
function NETWORK.NETWORK_HAVE_ROS_MULTIPLAYER_PRIV()
  return native.invoke(
    Type.Bool, 3533, false
  )
end

-- BOOL NETWORK_HAVE_ROS_LEADERBOARD_WRITE_PRIV() // 0x422D396F80A96547
function NETWORK.NETWORK_HAVE_ROS_LEADERBOARD_WRITE_PRIV()
  return native.invoke(
    Type.Bool, 3534, false
  )
end

-- BOOL NETWORK_HAS_ROS_PRIVILEGE(int index) // 0xA699957E60D80214
--[[
index is always 18 in scripts
--]]
function NETWORK.NETWORK_HAS_ROS_PRIVILEGE(index)
  return native.invoke(
    Type.Bool, 3535, false,
    arg(Type.Int, index)
  )
end

-- BOOL NETWORK_HAS_ROS_PRIVILEGE_END_DATE(int privilege, int* banType, Any* timeData) // 0xC22912B1D85F26B1
function NETWORK.NETWORK_HAS_ROS_PRIVILEGE_END_DATE(privilege, banType, timeData)
  return native.invoke(
    Type.Bool, 3536, false,
    arg(Type.Int, privilege),
    arg(Type.Int, banType),
    arg(Type.Any, timeData)
  )
end

-- BOOL NETWORK_HAS_ROS_PRIVILEGE_PLAYED_LAST_GEN() // 0x593570C289A77688
function NETWORK.NETWORK_HAS_ROS_PRIVILEGE_PLAYED_LAST_GEN()
  return native.invoke(
    Type.Bool, 3537, false
  )
end

-- BOOL NETWORK_HAS_ROS_PRIVILEGE_SPECIAL_EDITION_CONTENT() // 0x91B87C55093DE351
function NETWORK.NETWORK_HAS_ROS_PRIVILEGE_SPECIAL_EDITION_CONTENT()
  return native.invoke(
    Type.Bool, 3538, false
  )
end

-- BOOL _NETWORK_HAS_ROS_PRIVILEGE_MP_TEXT_COMMUNICATION() // 0xD9719341663C385F
--[[
Checks for privilege 29
--]]
function NETWORK._NETWORK_HAS_ROS_PRIVILEGE_MP_TEXT_COMMUNICATION()
  return native.invoke(
    Type.Bool, 3539, false
  )
end

-- BOOL _NETWORK_HAS_ROS_PRIVILEGE_MP_VOICE_COMMUNICATION() // 0x8956A309BE90057C
--[[
Checks for privilege 30
--]]
function NETWORK._NETWORK_HAS_ROS_PRIVILEGE_MP_VOICE_COMMUNICATION()
  return native.invoke(
    Type.Bool, 3540, false
  )
end

-- int NETWORK_START_COMMUNICATION_PERMISSIONS_CHECK(Any p0) // 0x36391F397731595D
function NETWORK.NETWORK_START_COMMUNICATION_PERMISSIONS_CHECK(p0)
  return native.invoke(
    Type.Int, 3541, false,
    arg(Type.Any, p0)
  )
end

-- int NETWORK_START_USER_CONTENT_PERMISSIONS_CHECK(Any* netHandle) // 0xDEB2B99A1AF1A2A6
--[[
Always returns -1. Seems to be XB1 specific.
--]]
function NETWORK.NETWORK_START_USER_CONTENT_PERMISSIONS_CHECK(netHandle)
  return native.invoke(
    Type.Int, 3542, false,
    arg(Type.Any, netHandle)
  )
end

-- void NETWORK_SKIP_RADIO_RESET_NEXT_CLOSE() // 0x9465E683B12D3F6B
function NETWORK.NETWORK_SKIP_RADIO_RESET_NEXT_CLOSE()
  native.invoke(
    Type.Void, 3543, false
  )
end

-- void NETWORK_SKIP_RADIO_RESET_NEXT_OPEN() // 0xCA59CCAE5D01E4CE
function NETWORK.NETWORK_SKIP_RADIO_RESET_NEXT_OPEN()
  native.invoke(
    Type.Void, 3544, false
  )
end

-- BOOL NETWORK_SKIP_RADIO_WARNING() // 0x659CF2EF7F550C4F
--[[
Returns true if dinput8.dll is present in the game directory.
You will get following error message if that is true: "You are attempting to access GTA Online servers with an altered version of the game."
--]]
function NETWORK.NETWORK_SKIP_RADIO_WARNING()
  return native.invoke(
    Type.Bool, 3545, false
  )
end

-- void NETWORK_FORCE_LOCAL_PLAYER_SCAR_SYNC() // 0xB7C7F6AD6424304B
--[[
NETWORK_F[I-O]
--]]
function NETWORK.NETWORK_FORCE_LOCAL_PLAYER_SCAR_SYNC()
  native.invoke(
    Type.Void, 3546, false
  )
end

-- void NETWORK_DISABLE_LEAVE_REMOTE_PED_BEHIND(BOOL toggle) // 0xC505036A35AFD01B
function NETWORK.NETWORK_DISABLE_LEAVE_REMOTE_PED_BEHIND(toggle)
  native.invoke(
    Type.Void, 3547, false,
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_ALLOW_REMOTE_ATTACHMENT_MODIFICATION(Entity entity, BOOL toggle) // 0x267C78C60E806B9A
function NETWORK.NETWORK_ALLOW_REMOTE_ATTACHMENT_MODIFICATION(entity, toggle)
  native.invoke(
    Type.Void, 3548, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_SHOW_CHAT_RESTRICTION_MSC(Player player) // 0x6BFF5F84102DF80A
--[[
Does nothing (it's a nullsub).
--]]
function NETWORK.NETWORK_SHOW_CHAT_RESTRICTION_MSC(player)
  native.invoke(
    Type.Void, 3549, false,
    arg(Type.Player, player)
  )
end

-- void NETWORK_SHOW_PSN_UGC_RESTRICTION() // 0x5C497525F803486B
--[[
This native does absolutely nothing, just a nullsub
--]]
function NETWORK.NETWORK_SHOW_PSN_UGC_RESTRICTION()
  native.invoke(
    Type.Void, 3550, false
  )
end

-- BOOL NETWORK_IS_TITLE_UPDATE_REQUIRED() // 0x6FB7BB3607D27FA2
--[[
This function is hard-coded to always return 0.
--]]
function NETWORK.NETWORK_IS_TITLE_UPDATE_REQUIRED()
  return native.invoke(
    Type.Bool, 3551, false
  )
end

-- void NETWORK_QUIT_MP_TO_DESKTOP() // 0x45A83257ED02D9BC
function NETWORK.NETWORK_QUIT_MP_TO_DESKTOP()
  native.invoke(
    Type.Void, 3552, false
  )
end

-- BOOL NETWORK_IS_CONNECTED_VIA_RELAY(Player player) // 0x16D3D49902F697BB
function NETWORK.NETWORK_IS_CONNECTED_VIA_RELAY(player)
  return native.invoke(
    Type.Bool, 3553, false,
    arg(Type.Player, player)
  )
end

-- float NETWORK_GET_AVERAGE_LATENCY(Player player) // 0xD414BE129BB81B32
function NETWORK.NETWORK_GET_AVERAGE_LATENCY(player)
  return native.invoke(
    Type.Float, 3554, false,
    arg(Type.Player, player)
  )
end

-- float NETWORK_GET_AVERAGE_PING(Player player) // 0x0E3A041ED6AC2B45
--[[
Same as NETWORK_GET_AVERAGE_LATENCY
--]]
function NETWORK.NETWORK_GET_AVERAGE_PING(player)
  return native.invoke(
    Type.Float, 3555, false,
    arg(Type.Player, player)
  )
end

-- float NETWORK_GET_AVERAGE_PACKET_LOSS(Player player) // 0x350C23949E43686C
function NETWORK.NETWORK_GET_AVERAGE_PACKET_LOSS(player)
  return native.invoke(
    Type.Float, 3556, false,
    arg(Type.Player, player)
  )
end

-- int NETWORK_GET_NUM_UNACKED_RELIABLES(Player player) // 0xFF8FCF9FFC458A1C
function NETWORK.NETWORK_GET_NUM_UNACKED_RELIABLES(player)
  return native.invoke(
    Type.Int, 3557, false,
    arg(Type.Player, player)
  )
end

-- int NETWORK_GET_UNRELIABLE_RESEND_COUNT(Player player) // 0x3765C3A3E8192E10
function NETWORK.NETWORK_GET_UNRELIABLE_RESEND_COUNT(player)
  return native.invoke(
    Type.Int, 3558, false,
    arg(Type.Player, player)
  )
end

-- int NETWORK_GET_HIGHEST_RELIABLE_RESEND_COUNT(Player player) // 0x52C1EADAF7B10302
function NETWORK.NETWORK_GET_HIGHEST_RELIABLE_RESEND_COUNT(player)
  return native.invoke(
    Type.Int, 3559, false,
    arg(Type.Player, player)
  )
end

-- void NETWORK_REPORT_CODE_TAMPER() // 0x5626D9D6810730D5
function NETWORK.NETWORK_REPORT_CODE_TAMPER()
  native.invoke(
    Type.Void, 3560, false
  )
end

-- Vector3 NETWORK_GET_LAST_ENTITY_POS_RECEIVED_OVER_NETWORK(Entity entity) // 0x64D779659BC37B19
function NETWORK.NETWORK_GET_LAST_ENTITY_POS_RECEIVED_OVER_NETWORK(entity)
  return native.invoke(
    Type.Vector3, 3561, false,
    arg(Type.Entity, entity)
  )
end

-- Vector3 NETWORK_GET_LAST_PLAYER_POS_RECEIVED_OVER_NETWORK(Player player) // 0x125E6D638B8605D4
--[[
Returns the coordinates of another player.
Does not work if you enter your own player id as p0 (will return `(0.0, 0.0, 0.0)` in that case).
--]]
function NETWORK.NETWORK_GET_LAST_PLAYER_POS_RECEIVED_OVER_NETWORK(player)
  return native.invoke(
    Type.Vector3, 3562, false,
    arg(Type.Player, player)
  )
end

-- Vector3 NETWORK_GET_LAST_VEL_RECEIVED_OVER_NETWORK(Entity entity) // 0x33DE49EDF4DDE77A
--[[
Used by NetBlender
--]]
function NETWORK.NETWORK_GET_LAST_VEL_RECEIVED_OVER_NETWORK(entity)
  return native.invoke(
    Type.Vector3, 3563, false,
    arg(Type.Entity, entity)
  )
end

-- Vector3 NETWORK_GET_PREDICTED_VELOCITY(Entity entity, float maxSpeedToPredict) // 0xAA5FAFCD2C5F5E47
function NETWORK.NETWORK_GET_PREDICTED_VELOCITY(entity, maxSpeedToPredict)
  return native.invoke(
    Type.Vector3, 3564, false,
    arg(Type.Entity, entity),
    arg(Type.Float, maxSpeedToPredict)
  )
end

-- void NETWORK_DUMP_NET_IF_CONFIG() // 0xAEDF1BC1C133D6E3
--[[
Does nothing (it's a nullsub).
--]]
function NETWORK.NETWORK_DUMP_NET_IF_CONFIG()
  native.invoke(
    Type.Void, 3565, false
  )
end

-- void NETWORK_GET_SIGNALLING_INFO(Any* p0) // 0x2555CF7DA5473794
--[[
Does nothing (it's a nullsub).
--]]
function NETWORK.NETWORK_GET_SIGNALLING_INFO(p0)
  native.invoke(
    Type.Void, 3566, false,
    arg(Type.Any, p0)
  )
end

-- void NETWORK_GET_NET_STATISTICS_INFO(Any* p0) // 0x6FD992C4A1C1B986
--[[
Does nothing (it's a nullsub).
--]]
function NETWORK.NETWORK_GET_NET_STATISTICS_INFO(p0)
  native.invoke(
    Type.Void, 3567, false,
    arg(Type.Any, p0)
  )
end

-- int NETWORK_GET_PLAYER_ACCOUNT_ID(Player player) // 0xDB663CC9FF3407A9
function NETWORK.NETWORK_GET_PLAYER_ACCOUNT_ID(player)
  return native.invoke(
    Type.Int, 3568, false,
    arg(Type.Player, player)
  )
end

-- void NETWORK_UGC_NAV(Any p0, Any p1) // 0xC1447451DDB512F0
function NETWORK.NETWORK_UGC_NAV(p0, p1)
  native.invoke(
    Type.Void, 3569, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end


OBJECT = {}

-- Object CREATE_OBJECT(Hash modelHash, float x, float y, float z, BOOL isNetwork, BOOL bScriptHostObj, BOOL dynamic) // 0x509D5878EB39E842
--[[
List of object models that can be created without any additional effort like making sure ytyp is loaded etc: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ObjectList.ini
--]]
function OBJECT.CREATE_OBJECT(modelHash, x, y, z, isNetwork, bScriptHostObj, dynamic)
  return native.invoke(
    Type.Object, 3570, false,
    arg(Type.Hash, modelHash),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Bool, isNetwork),
    arg(Type.Bool, bScriptHostObj),
    arg(Type.Bool, dynamic)
  )
end

-- Object CREATE_OBJECT_NO_OFFSET(Hash modelHash, float x, float y, float z, BOOL isNetwork, BOOL bScriptHostObj, BOOL dynamic) // 0x9A294B2138ABB884
--[[
List of object models that can be created without any additional effort like making sure ytyp is loaded etc: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ObjectList.ini
--]]
function OBJECT.CREATE_OBJECT_NO_OFFSET(modelHash, x, y, z, isNetwork, bScriptHostObj, dynamic)
  return native.invoke(
    Type.Object, 3571, false,
    arg(Type.Hash, modelHash),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Bool, isNetwork),
    arg(Type.Bool, bScriptHostObj),
    arg(Type.Bool, dynamic)
  )
end

-- void DELETE_OBJECT(Object* object) // 0x539E0AE3E6634B9F
--[[
Deletes the specified object, then sets the handle pointed to by the pointer to NULL.
--]]
function OBJECT.DELETE_OBJECT(object)
  native.invoke(
    Type.Void, 3572, false,
    arg(Type.Object, object)
  )
end

-- BOOL PLACE_OBJECT_ON_GROUND_PROPERLY(Object object) // 0x58A850EAEE20FAA3
function OBJECT.PLACE_OBJECT_ON_GROUND_PROPERLY(object)
  return native.invoke(
    Type.Bool, 3573, false,
    arg(Type.Object, object)
  )
end

-- BOOL PLACE_OBJECT_ON_GROUND_OR_OBJECT_PROPERLY(Object object) // 0xD76EEEF746057FD6
function OBJECT.PLACE_OBJECT_ON_GROUND_OR_OBJECT_PROPERLY(object)
  return native.invoke(
    Type.Bool, 3574, false,
    arg(Type.Object, object)
  )
end

-- BOOL ROTATE_OBJECT(Object object, float p1, float p2, BOOL p3) // 0xAFE24E4D29249E4A
function OBJECT.ROTATE_OBJECT(object, p1, p2, p3)
  return native.invoke(
    Type.Bool, 3575, false,
    arg(Type.Object, object),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Bool, p3)
  )
end

-- BOOL SLIDE_OBJECT(Object object, float toX, float toY, float toZ, float speedX, float speedY, float speedZ, BOOL collision) // 0x2FDFF4107B8C1147
--[[
Returns true if the object has finished moving.

If false, moves the object towards the specified X, Y and Z coordinates with the specified X, Y and Z speed.

See also: https://gtagmodding.com/opcode-database/opcode/034E/
Has to be looped until it returns true.
--]]
function OBJECT.SLIDE_OBJECT(object, toX, toY, toZ, speedX, speedY, speedZ, collision)
  return native.invoke(
    Type.Bool, 3576, false,
    arg(Type.Object, object),
    arg(Type.Float, toX),
    arg(Type.Float, toY),
    arg(Type.Float, toZ),
    arg(Type.Float, speedX),
    arg(Type.Float, speedY),
    arg(Type.Float, speedZ),
    arg(Type.Bool, collision)
  )
end

-- void SET_OBJECT_TARGETTABLE(Object object, BOOL targettable, Any p2) // 0x8A7391690F5AFD81
function OBJECT.SET_OBJECT_TARGETTABLE(object, targettable, p2)
  native.invoke(
    Type.Void, 3577, false,
    arg(Type.Object, object),
    arg(Type.Bool, targettable),
    arg(Type.Any, p2)
  )
end

-- void SET_OBJECT_FORCE_VEHICLES_TO_AVOID(Object object, BOOL toggle) // 0x77F33F2CCF64B3AA
--[[
Overrides a flag on the object which determines if the object should be avoided by a vehicle in task CTaskVehicleGoToPointWithAvoidanceAutomobile.
--]]
function OBJECT.SET_OBJECT_FORCE_VEHICLES_TO_AVOID(object, toggle)
  native.invoke(
    Type.Void, 3578, false,
    arg(Type.Object, object),
    arg(Type.Bool, toggle)
  )
end

-- Object GET_CLOSEST_OBJECT_OF_TYPE(float x, float y, float z, float radius, Hash modelHash, BOOL isMission, BOOL p6, BOOL p7) // 0xE143FA2249364369
--[[
Has 8 params in the latest patches.

isMission - if true doesn't return mission objects
--]]
function OBJECT.GET_CLOSEST_OBJECT_OF_TYPE(x, y, z, radius, modelHash, isMission, p6, p7)
  return native.invoke(
    Type.Object, 3579, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Hash, modelHash),
    arg(Type.Bool, isMission),
    arg(Type.Bool, p6),
    arg(Type.Bool, p7)
  )
end

-- BOOL HAS_OBJECT_BEEN_BROKEN(Object object, Any p1) // 0x8ABFB70C49CC43E2
function OBJECT.HAS_OBJECT_BEEN_BROKEN(object, p1)
  return native.invoke(
    Type.Bool, 3580, false,
    arg(Type.Object, object),
    arg(Type.Any, p1)
  )
end

-- BOOL HAS_CLOSEST_OBJECT_OF_TYPE_BEEN_BROKEN(float p0, float p1, float p2, float p3, Hash modelHash, Any p5) // 0x761B0E69AC4D007E
function OBJECT.HAS_CLOSEST_OBJECT_OF_TYPE_BEEN_BROKEN(p0, p1, p2, p3, modelHash, p5)
  return native.invoke(
    Type.Bool, 3581, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Hash, modelHash),
    arg(Type.Any, p5)
  )
end

-- BOOL HAS_CLOSEST_OBJECT_OF_TYPE_BEEN_COMPLETELY_DESTROYED(float x, float y, float z, float radius, Hash modelHash, BOOL p5) // 0x46494A2475701343
function OBJECT.HAS_CLOSEST_OBJECT_OF_TYPE_BEEN_COMPLETELY_DESTROYED(x, y, z, radius, modelHash, p5)
  return native.invoke(
    Type.Bool, 3582, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Hash, modelHash),
    arg(Type.Bool, p5)
  )
end

-- BOOL GET_HAS_OBJECT_BEEN_COMPLETELY_DESTROYED(Any p0) // 0x2542269291C6AC84
function OBJECT.GET_HAS_OBJECT_BEEN_COMPLETELY_DESTROYED(p0)
  return native.invoke(
    Type.Bool, 3583, false,
    arg(Type.Any, p0)
  )
end

-- Vector3 GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(float xPos, float yPos, float zPos, float heading, float xOffset, float yOffset, float zOffset) // 0x163E252DE035A133
function OBJECT.GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(xPos, yPos, zPos, heading, xOffset, yOffset, zOffset)
  return native.invoke(
    Type.Vector3, 3584, false,
    arg(Type.Float, xPos),
    arg(Type.Float, yPos),
    arg(Type.Float, zPos),
    arg(Type.Float, heading),
    arg(Type.Float, xOffset),
    arg(Type.Float, yOffset),
    arg(Type.Float, zOffset)
  )
end

-- BOOL GET_COORDS_AND_ROTATION_OF_CLOSEST_OBJECT_OF_TYPE(float x, float y, float z, float radius, Hash modelHash, Vector3* outPosition, Vector3* outRotation, int rotationOrder) // 0x163F8B586BC95F2A
function OBJECT.GET_COORDS_AND_ROTATION_OF_CLOSEST_OBJECT_OF_TYPE(x, y, z, radius, modelHash, outPosition, outRotation, rotationOrder)
  return native.invoke(
    Type.Bool, 3585, true,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Hash, modelHash),
    arg(Type.Vector3, outPosition),
    arg(Type.Vector3, outRotation),
    arg(Type.Int, rotationOrder)
  )
end

-- void SET_STATE_OF_CLOSEST_DOOR_OF_TYPE(Hash type, float x, float y, float z, BOOL locked, float heading, BOOL p6) // 0xF82D8F1926A02C3D
--[[
Hardcoded to not work in multiplayer.


Used to lock/unlock doors to interior areas of the game.

(Possible) Door Types:

https://pastebin.com/9S2m3qA4

Heading is either 1, 0 or -1 in the scripts. Means default closed(0) or opened either into(1) or out(-1) of the interior.
Locked means that the heading is locked.  
p6 is always 0. 

225 door types, model names and coords found in stripclub.c4:
https://pastebin.com/gywnbzsH

get door info: https://pastebin.com/i14rbekD
--]]
function OBJECT.SET_STATE_OF_CLOSEST_DOOR_OF_TYPE(type, x, y, z, locked, heading, p6)
  native.invoke(
    Type.Void, 3586, false,
    arg(Type.Hash, type),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Bool, locked),
    arg(Type.Float, heading),
    arg(Type.Bool, p6)
  )
end

-- void GET_STATE_OF_CLOSEST_DOOR_OF_TYPE(Hash type, float x, float y, float z, BOOL* locked, float* heading) // 0xEDC1A5B84AEF33FF
--[[
locked is 0 if no door is found
locked is 0 if door is unlocked
locked is 1 if door is found and unlocked.

-------------
the locked bool is either 0(unlocked)(false) or 1(locked)(true)
--]]
function OBJECT.GET_STATE_OF_CLOSEST_DOOR_OF_TYPE(type, x, y, z, locked, heading)
  native.invoke(
    Type.Void, 3587, false,
    arg(Type.Hash, type),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Bool, locked),
    arg(Type.Float, heading)
  )
end

-- void SET_LOCKED_UNSTREAMED_IN_DOOR_OF_TYPE(Hash modelHash, float x, float y, float z, BOOL locked, float xRotMult, float yRotMult, float zRotMult) // 0x9B12F9A24FABEDB0
--[[
Hardcoded not to work in multiplayer environments.
When you set locked to 0 the door open and to 1 the door close
OBJECT::SET_LOCKED_UNSTREAMED_IN_DOOR_OF_TYPE(${prop_gate_prison_01}, 1845.0, 2605.0, 45.0, 0, 0.0, 50.0, 0);  //door open

OBJECT::SET_LOCKED_UNSTREAMED_IN_DOOR_OF_TYPE(${prop_gate_prison_01}, 1845.0, 2605.0, 45.0, 1, 0.0, 50.0, 0);  //door close
--]]
function OBJECT.SET_LOCKED_UNSTREAMED_IN_DOOR_OF_TYPE(modelHash, x, y, z, locked, xRotMult, yRotMult, zRotMult)
  native.invoke(
    Type.Void, 3588, false,
    arg(Type.Hash, modelHash),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Bool, locked),
    arg(Type.Float, xRotMult),
    arg(Type.Float, yRotMult),
    arg(Type.Float, zRotMult)
  )
end

-- void PLAY_OBJECT_AUTO_START_ANIM(Any p0) // 0x006E4B040ED37EC3
function OBJECT.PLAY_OBJECT_AUTO_START_ANIM(p0)
  native.invoke(
    Type.Void, 3589, false,
    arg(Type.Any, p0)
  )
end

-- void ADD_DOOR_TO_SYSTEM(Hash doorHash, Hash modelHash, float x, float y, float z, BOOL p5, BOOL scriptDoor, BOOL isLocal) // 0x6F8838D03D1DC226
--[[
doorHash has to be unique. scriptDoor false; relies upon getNetworkGameScriptHandler. isLocal On true disables the creation CRequestDoorEvent's in DOOR_SYSTEM_SET_DOOR_STATE.
p5 only set to true in single player native scripts.
If scriptDoor is true, register the door on the script handler host (note: there's a hardcap on the number of script IDs that can be added to the system at a given time). If scriptDoor and isLocal are both false, the door is considered to be in a "Persists w/o netobj" state.

door hashes normally look like PROP_[int]_DOOR_[int] for interior doors and PROP_BUILDING_[int]_DOOR_[int] exterior doors but you can just make up your own hash if you want
All doors need to be registered with ADD_DOOR_TO_SYSTEM before they can be manipulated with the door natives and the easiest way to get door models is just find the door in codewalker.

Example: AddDoorToSystem("PROP_43_DOOR_0", "hei_v_ilev_fh_heistdoor2", -1456.818, -520.5037, 69.67043, 0, 0, 0)
--]]
function OBJECT.ADD_DOOR_TO_SYSTEM(doorHash, modelHash, x, y, z, p5, scriptDoor, isLocal)
  native.invoke(
    Type.Void, 3590, false,
    arg(Type.Hash, doorHash),
    arg(Type.Hash, modelHash),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Bool, p5),
    arg(Type.Bool, scriptDoor),
    arg(Type.Bool, isLocal)
  )
end

-- void REMOVE_DOOR_FROM_SYSTEM(Hash doorHash, Any p1) // 0x464D8E1427156FE4
--[[
CDoor and CDoorSystemData still internally allocated (and their associations between doorHash, modelHash, and coordinates).
Only its NetObj removed and flag ``*(v2 + 192) |= 8u`` (1604 retail) toggled.
--]]
function OBJECT.REMOVE_DOOR_FROM_SYSTEM(doorHash, p1)
  native.invoke(
    Type.Void, 3591, false,
    arg(Type.Hash, doorHash),
    arg(Type.Any, p1)
  )
end

-- void DOOR_SYSTEM_SET_DOOR_STATE(Hash doorHash, int state, BOOL requestDoor, BOOL forceUpdate) // 0x6BAB9442830C7F53
--[[
Lockstates not applied and CNetObjDoor's not created until DOOR_SYSTEM_GET_IS_PHYSICS_LOADED returns true.
`requestDoor` on true, and when door system is configured to, i.e., "persists w/o netobj", generate a CRequestDoorEvent.
`forceUpdate` on true, forces an update on the door system (same path as netObjDoor_applyDoorStuff)
Door lock states:
0: UNLOCKED
1: LOCKED
2: DOORSTATE_FORCE_LOCKED_UNTIL_OUT_OF_AREA
3: DOORSTATE_FORCE_UNLOCKED_THIS_FRAME
4: DOORSTATE_FORCE_LOCKED_THIS_FRAME
5: DOORSTATE_FORCE_OPEN_THIS_FRAME
6: DOORSTATE_FORCE_CLOSED_THIS_FRAME
--]]
function OBJECT.DOOR_SYSTEM_SET_DOOR_STATE(doorHash, state, requestDoor, forceUpdate)
  native.invoke(
    Type.Void, 3592, false,
    arg(Type.Hash, doorHash),
    arg(Type.Int, state),
    arg(Type.Bool, requestDoor),
    arg(Type.Bool, forceUpdate)
  )
end

-- int DOOR_SYSTEM_GET_DOOR_STATE(Hash doorHash) // 0x160AA1B32F6139B8
function OBJECT.DOOR_SYSTEM_GET_DOOR_STATE(doorHash)
  return native.invoke(
    Type.Int, 3593, false,
    arg(Type.Hash, doorHash)
  )
end

-- int DOOR_SYSTEM_GET_DOOR_PENDING_STATE(Hash doorHash) // 0x4BC2854478F3A749
function OBJECT.DOOR_SYSTEM_GET_DOOR_PENDING_STATE(doorHash)
  return native.invoke(
    Type.Int, 3594, false,
    arg(Type.Hash, doorHash)
  )
end

-- void DOOR_SYSTEM_SET_AUTOMATIC_RATE(Hash doorHash, float rate, BOOL requestDoor, BOOL forceUpdate) // 0x03C27E13B42A0E82
--[[
Includes networking check: ownership vs. or the door itself **isn't** networked.
`forceUpdate` on true invokes DOOR_SYSTEM_SET_DOOR_STATE otherwise requestDoor is unused.
--]]
function OBJECT.DOOR_SYSTEM_SET_AUTOMATIC_RATE(doorHash, rate, requestDoor, forceUpdate)
  native.invoke(
    Type.Void, 3595, false,
    arg(Type.Hash, doorHash),
    arg(Type.Float, rate),
    arg(Type.Bool, requestDoor),
    arg(Type.Bool, forceUpdate)
  )
end

-- void DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Hash doorHash, float distance, BOOL requestDoor, BOOL forceUpdate) // 0x9BA001CB45CBF627
--[[
`forceUpdate` on true invokes DOOR_SYSTEM_SET_DOOR_STATE otherwise requestDoor is unused.
--]]
function OBJECT.DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(doorHash, distance, requestDoor, forceUpdate)
  native.invoke(
    Type.Void, 3596, false,
    arg(Type.Hash, doorHash),
    arg(Type.Float, distance),
    arg(Type.Bool, requestDoor),
    arg(Type.Bool, forceUpdate)
  )
end

-- void DOOR_SYSTEM_SET_OPEN_RATIO(Hash doorHash, float ajar, BOOL requestDoor, BOOL forceUpdate) // 0xB6E6FBA95C7324AC
--[[
Sets the ajar angle of a door.
Ranges from -1.0 to 1.0, and 0.0 is closed / default.
`forceUpdate` on true invokes DOOR_SYSTEM_SET_DOOR_STATE otherwise requestDoor is unused.
--]]
function OBJECT.DOOR_SYSTEM_SET_OPEN_RATIO(doorHash, ajar, requestDoor, forceUpdate)
  native.invoke(
    Type.Void, 3597, false,
    arg(Type.Hash, doorHash),
    arg(Type.Float, ajar),
    arg(Type.Bool, requestDoor),
    arg(Type.Bool, forceUpdate)
  )
end

-- float DOOR_SYSTEM_GET_AUTOMATIC_DISTANCE(Hash doorHash) // 0xE851471AEFC3374F
function OBJECT.DOOR_SYSTEM_GET_AUTOMATIC_DISTANCE(doorHash)
  return native.invoke(
    Type.Float, 3598, false,
    arg(Type.Hash, doorHash)
  )
end

-- float DOOR_SYSTEM_GET_OPEN_RATIO(Hash doorHash) // 0x65499865FCA6E5EC
function OBJECT.DOOR_SYSTEM_GET_OPEN_RATIO(doorHash)
  return native.invoke(
    Type.Float, 3599, false,
    arg(Type.Hash, doorHash)
  )
end

-- void DOOR_SYSTEM_SET_SPRING_REMOVED(Hash doorHash, BOOL removed, BOOL requestDoor, BOOL forceUpdate) // 0xC485E07E4F0B7958
--[[
Includes networking check: ownership vs. or the door itself **isn't** networked.
`forceUpdate` on true invokes DOOR_SYSTEM_SET_DOOR_STATE otherwise requestDoor is unused.
--]]
function OBJECT.DOOR_SYSTEM_SET_SPRING_REMOVED(doorHash, removed, requestDoor, forceUpdate)
  native.invoke(
    Type.Void, 3600, false,
    arg(Type.Hash, doorHash),
    arg(Type.Bool, removed),
    arg(Type.Bool, requestDoor),
    arg(Type.Bool, forceUpdate)
  )
end

-- void DOOR_SYSTEM_SET_HOLD_OPEN(Hash doorHash, BOOL toggle) // 0xD9B71952F78A2640
--[[
Includes networking check: ownership vs. or the door itself **isn't** networked.
--]]
function OBJECT.DOOR_SYSTEM_SET_HOLD_OPEN(doorHash, toggle)
  native.invoke(
    Type.Void, 3601, false,
    arg(Type.Hash, doorHash),
    arg(Type.Bool, toggle)
  )
end

-- void DOOR_SYSTEM_SET_DOOR_OPEN_FOR_RACES(Hash doorHash, BOOL p1) // 0xA85A21582451E951
--[[
Some property related to gates. Native name between ``DOOR_SYSTEM_SET_AUTOMATIC_RATE`` and ``DOOR_SYSTEM_SET_DOOR_STATE``.
--]]
function OBJECT.DOOR_SYSTEM_SET_DOOR_OPEN_FOR_RACES(doorHash, p1)
  native.invoke(
    Type.Void, 3602, false,
    arg(Type.Hash, doorHash),
    arg(Type.Bool, p1)
  )
end

-- BOOL IS_DOOR_REGISTERED_WITH_SYSTEM(Hash doorHash) // 0xC153C43EA202C8C1
--[[
if (OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(doorHash)) 
{
    OBJECT::REMOVE_DOOR_FROM_SYSTEM(doorHash);
}
--]]
function OBJECT.IS_DOOR_REGISTERED_WITH_SYSTEM(doorHash)
  return native.invoke(
    Type.Bool, 3603, false,
    arg(Type.Hash, doorHash)
  )
end

-- BOOL IS_DOOR_CLOSED(Hash doorHash) // 0xC531EE8A1145A149
function OBJECT.IS_DOOR_CLOSED(doorHash)
  return native.invoke(
    Type.Bool, 3604, false,
    arg(Type.Hash, doorHash)
  )
end

-- void OPEN_ALL_BARRIERS_FOR_RACE(BOOL p0) // 0xC7F29CA00F46350E
function OBJECT.OPEN_ALL_BARRIERS_FOR_RACE(p0)
  native.invoke(
    Type.Void, 3605, false,
    arg(Type.Bool, p0)
  )
end

-- void CLOSE_ALL_BARRIERS_FOR_RACE() // 0x701FDA1E82076BA4
--[[
Clears the fields sets by 0xC7F29CA00F46350E (1604 retail: 0x1424A7A10, 0x1424A7A11) and iterates over the global CDoor's bucket-list.
Related to its "Pre-networked state"?
--]]
function OBJECT.CLOSE_ALL_BARRIERS_FOR_RACE()
  native.invoke(
    Type.Void, 3606, false
  )
end

-- BOOL DOOR_SYSTEM_GET_IS_PHYSICS_LOADED(Any p0) // 0xDF97CDD4FC08FD34
function OBJECT.DOOR_SYSTEM_GET_IS_PHYSICS_LOADED(p0)
  return native.invoke(
    Type.Bool, 3607, false,
    arg(Type.Any, p0)
  )
end

-- BOOL DOOR_SYSTEM_FIND_EXISTING_DOOR(float x, float y, float z, Hash modelHash, Hash* outDoorHash) // 0x589F80B325CC82C5
--[[
Search radius: 0.5
--]]
function OBJECT.DOOR_SYSTEM_FIND_EXISTING_DOOR(x, y, z, modelHash, outDoorHash)
  return native.invoke(
    Type.Bool, 3608, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Hash, modelHash),
    arg(Type.Hash, outDoorHash)
  )
end

-- BOOL IS_GARAGE_EMPTY(Hash garageHash, BOOL p1, int p2) // 0x90E47239EA1980B8
function OBJECT.IS_GARAGE_EMPTY(garageHash, p1, p2)
  return native.invoke(
    Type.Bool, 3609, false,
    arg(Type.Hash, garageHash),
    arg(Type.Bool, p1),
    arg(Type.Int, p2)
  )
end

-- BOOL IS_PLAYER_ENTIRELY_INSIDE_GARAGE(Hash garageHash, Player player, float p2, int p3) // 0x024A60DEB0EA69F0
function OBJECT.IS_PLAYER_ENTIRELY_INSIDE_GARAGE(garageHash, player, p2, p3)
  return native.invoke(
    Type.Bool, 3610, false,
    arg(Type.Hash, garageHash),
    arg(Type.Player, player),
    arg(Type.Float, p2),
    arg(Type.Int, p3)
  )
end

-- BOOL IS_PLAYER_PARTIALLY_INSIDE_GARAGE(Hash garageHash, Player player, int p2) // 0x1761DC5D8471CBAA
function OBJECT.IS_PLAYER_PARTIALLY_INSIDE_GARAGE(garageHash, player, p2)
  return native.invoke(
    Type.Bool, 3611, false,
    arg(Type.Hash, garageHash),
    arg(Type.Player, player),
    arg(Type.Int, p2)
  )
end

-- BOOL ARE_ENTITIES_ENTIRELY_INSIDE_GARAGE(Hash garageHash, BOOL p1, BOOL p2, BOOL p3, Any p4) // 0x85B6C850546FDDE2
function OBJECT.ARE_ENTITIES_ENTIRELY_INSIDE_GARAGE(garageHash, p1, p2, p3, p4)
  return native.invoke(
    Type.Bool, 3612, false,
    arg(Type.Hash, garageHash),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3),
    arg(Type.Any, p4)
  )
end

-- BOOL IS_ANY_ENTITY_ENTIRELY_INSIDE_GARAGE(Hash garageHash, BOOL p1, BOOL p2, BOOL p3, Any p4) // 0x673ED815D6E323B7
function OBJECT.IS_ANY_ENTITY_ENTIRELY_INSIDE_GARAGE(garageHash, p1, p2, p3, p4)
  return native.invoke(
    Type.Bool, 3613, false,
    arg(Type.Hash, garageHash),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3),
    arg(Type.Any, p4)
  )
end

-- BOOL IS_OBJECT_ENTIRELY_INSIDE_GARAGE(Hash garageHash, Entity entity, float p2, int p3) // 0x372EF6699146A1E4
--[[
Despite the name, it does work for any entity type.
--]]
function OBJECT.IS_OBJECT_ENTIRELY_INSIDE_GARAGE(garageHash, entity, p2, p3)
  return native.invoke(
    Type.Bool, 3614, false,
    arg(Type.Hash, garageHash),
    arg(Type.Entity, entity),
    arg(Type.Float, p2),
    arg(Type.Int, p3)
  )
end

-- BOOL IS_OBJECT_PARTIALLY_INSIDE_GARAGE(Hash garageHash, Entity entity, int p2) // 0xF0EED5A6BC7B237A
--[[
Despite the name, it does work for any entity type.
--]]
function OBJECT.IS_OBJECT_PARTIALLY_INSIDE_GARAGE(garageHash, entity, p2)
  return native.invoke(
    Type.Bool, 3615, false,
    arg(Type.Hash, garageHash),
    arg(Type.Entity, entity),
    arg(Type.Int, p2)
  )
end

-- void CLEAR_GARAGE(Hash garageHash, BOOL isNetwork) // 0xDA05194260CDCDF9
function OBJECT.CLEAR_GARAGE(garageHash, isNetwork)
  native.invoke(
    Type.Void, 3616, false,
    arg(Type.Hash, garageHash),
    arg(Type.Bool, isNetwork)
  )
end

-- void CLEAR_OBJECTS_INSIDE_GARAGE(Hash garageHash, BOOL vehicles, BOOL peds, BOOL objects, BOOL isNetwork) // 0x190428512B240692
function OBJECT.CLEAR_OBJECTS_INSIDE_GARAGE(garageHash, vehicles, peds, objects, isNetwork)
  native.invoke(
    Type.Void, 3617, false,
    arg(Type.Hash, garageHash),
    arg(Type.Bool, vehicles),
    arg(Type.Bool, peds),
    arg(Type.Bool, objects),
    arg(Type.Bool, isNetwork)
  )
end

-- void DISABLE_TIDYING_UP_IN_GARAGE(int id, BOOL toggle) // 0x659F9D71F52843F8
--[[
Sets a flag. A valid id is 0x157DC10D
--]]
function OBJECT.DISABLE_TIDYING_UP_IN_GARAGE(id, toggle)
  native.invoke(
    Type.Void, 3618, false,
    arg(Type.Int, id),
    arg(Type.Bool, toggle)
  )
end

-- void ENABLE_SAVING_IN_GARAGE(Hash garageHash, BOOL toggle) // 0xF2E1A7133DD356A6
function OBJECT.ENABLE_SAVING_IN_GARAGE(garageHash, toggle)
  native.invoke(
    Type.Void, 3619, false,
    arg(Type.Hash, garageHash),
    arg(Type.Bool, toggle)
  )
end

-- void CLOSE_SAFEHOUSE_GARAGES() // 0x66A49D021870FE88
function OBJECT.CLOSE_SAFEHOUSE_GARAGES()
  native.invoke(
    Type.Void, 3620, false
  )
end

-- BOOL DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS(float x, float y, float z, float radius, Hash hash, BOOL p5) // 0xBFA48E2FF417213F
--[[
p5 is usually 0.
--]]
function OBJECT.DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS(x, y, z, radius, hash, p5)
  return native.invoke(
    Type.Bool, 3621, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Hash, hash),
    arg(Type.Bool, p5)
  )
end

-- BOOL IS_POINT_IN_ANGLED_AREA(float xPos, float yPos, float zPos, float x1, float y1, float z1, float x2, float y2, float z2, float width, BOOL debug, BOOL includeZ) // 0x2A70BAE8883E4C81
--[[
An angled area is an X-Z oriented rectangle with three parameters:
1. origin: the mid-point along a base edge of the rectangle;
2. extent: the mid-point of opposite base edge on the other Z;
3. width: the length of the base edge; (named derived from logging strings ``CNetworkRoadNodeWorldStateData``).

The oriented rectangle can then be derived from the direction of the two points (``norm(origin - extent)``), its orthonormal, and the width, e.g:
1. golf_mp https://i.imgur.com/JhsQAK9.png
2. am_taxi https://i.imgur.com/TJWCZaT.jpg
--]]
function OBJECT.IS_POINT_IN_ANGLED_AREA(xPos, yPos, zPos, x1, y1, z1, x2, y2, z2, width, debug, includeZ)
  return native.invoke(
    Type.Bool, 3622, false,
    arg(Type.Float, xPos),
    arg(Type.Float, yPos),
    arg(Type.Float, zPos),
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Float, width),
    arg(Type.Bool, debug),
    arg(Type.Bool, includeZ)
  )
end

-- void SET_OBJECT_ALLOW_LOW_LOD_BUOYANCY(Object object, BOOL toggle) // 0x4D89D607CB3DD1D2
--[[
Overrides the climbing/blocking flags of the object, used in the native scripts mostly for "prop_dock_bouy_*"
--]]
function OBJECT.SET_OBJECT_ALLOW_LOW_LOD_BUOYANCY(object, toggle)
  native.invoke(
    Type.Void, 3623, false,
    arg(Type.Object, object),
    arg(Type.Bool, toggle)
  )
end

-- void SET_OBJECT_PHYSICS_PARAMS(Object object, float weight, float p2, float p3, float p4, float p5, float gravity, float p7, float p8, float p9, float p10, float buoyancy) // 0xF6DF6E90DE7DF90F
--[[
Adjust the physics parameters of a prop, or otherwise known as "object". This is useful for simulated gravity.

Other parameters seem to be unknown.

p2: seems to be weight and gravity related. Higher value makes the obj fall faster. Very sensitive?
p3: seems similar to p2
p4: makes obj fall slower the higher the value
p5: similar to p4
--]]
function OBJECT.SET_OBJECT_PHYSICS_PARAMS(object, weight, p2, p3, p4, p5, gravity, p7, p8, p9, p10, buoyancy)
  native.invoke(
    Type.Void, 3624, false,
    arg(Type.Object, object),
    arg(Type.Float, weight),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Float, gravity),
    arg(Type.Float, p7),
    arg(Type.Float, p8),
    arg(Type.Float, p9),
    arg(Type.Float, p10),
    arg(Type.Float, buoyancy)
  )
end

-- float GET_OBJECT_FRAGMENT_DAMAGE_HEALTH(Any p0, BOOL p1) // 0xB6FBFD079B8D0596
function OBJECT.GET_OBJECT_FRAGMENT_DAMAGE_HEALTH(p0, p1)
  return native.invoke(
    Type.Float, 3625, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1)
  )
end

-- void SET_ACTIVATE_OBJECT_PHYSICS_AS_SOON_AS_IT_IS_UNFROZEN(Object object, BOOL toggle) // 0x406137F8EF90EAF5
function OBJECT.SET_ACTIVATE_OBJECT_PHYSICS_AS_SOON_AS_IT_IS_UNFROZEN(object, toggle)
  native.invoke(
    Type.Void, 3626, false,
    arg(Type.Object, object),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_ANY_OBJECT_NEAR_POINT(float x, float y, float z, float range, BOOL p4) // 0x397DC58FF00298D1
function OBJECT.IS_ANY_OBJECT_NEAR_POINT(x, y, z, range, p4)
  return native.invoke(
    Type.Bool, 3627, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, range),
    arg(Type.Bool, p4)
  )
end

-- BOOL IS_OBJECT_NEAR_POINT(Hash objectHash, float x, float y, float z, float range) // 0x8C90FE4B381BA60A
function OBJECT.IS_OBJECT_NEAR_POINT(objectHash, x, y, z, range)
  return native.invoke(
    Type.Bool, 3628, false,
    arg(Type.Hash, objectHash),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, range)
  )
end

-- void REMOVE_OBJECT_HIGH_DETAIL_MODEL(Object object) // 0x4A39DB43E47CF3AA
function OBJECT.REMOVE_OBJECT_HIGH_DETAIL_MODEL(object)
  native.invoke(
    Type.Void, 3629, false,
    arg(Type.Object, object)
  )
end

-- void BREAK_OBJECT_FRAGMENT_CHILD(Object p0, Any p1, BOOL p2) // 0xE7E4C198B0185900
function OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(p0, p1, p2)
  native.invoke(
    Type.Void, 3630, false,
    arg(Type.Object, p0),
    arg(Type.Any, p1),
    arg(Type.Bool, p2)
  )
end

-- void DAMAGE_OBJECT_FRAGMENT_CHILD(Any p0, Any p1, Any p2) // 0xE05F6AEEFEB0BB02
function OBJECT.DAMAGE_OBJECT_FRAGMENT_CHILD(p0, p1, p2)
  native.invoke(
    Type.Void, 3631, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void FIX_OBJECT_FRAGMENT(Object object) // 0xF9C1681347C8BD15
function OBJECT.FIX_OBJECT_FRAGMENT(object)
  native.invoke(
    Type.Void, 3632, false,
    arg(Type.Object, object)
  )
end

-- void TRACK_OBJECT_VISIBILITY(Object object) // 0xB252BC036B525623
function OBJECT.TRACK_OBJECT_VISIBILITY(object)
  native.invoke(
    Type.Void, 3633, false,
    arg(Type.Object, object)
  )
end

-- BOOL IS_OBJECT_VISIBLE(Object object) // 0x8B32ACE6326A7546
function OBJECT.IS_OBJECT_VISIBLE(object)
  return native.invoke(
    Type.Bool, 3634, false,
    arg(Type.Object, object)
  )
end

-- void SET_OBJECT_IS_SPECIAL_GOLFBALL(Object object, BOOL toggle) // 0xC6033D32241F6FB5
function OBJECT.SET_OBJECT_IS_SPECIAL_GOLFBALL(object, toggle)
  native.invoke(
    Type.Void, 3635, false,
    arg(Type.Object, object),
    arg(Type.Bool, toggle)
  )
end

-- void SET_OBJECT_TAKES_DAMAGE_FROM_COLLIDING_WITH_BUILDINGS(Any p0, BOOL p1) // 0xEB6F1A9B5510A5D2
function OBJECT.SET_OBJECT_TAKES_DAMAGE_FROM_COLLIDING_WITH_BUILDINGS(p0, p1)
  native.invoke(
    Type.Void, 3636, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1)
  )
end

-- void ALLOW_DAMAGE_EVENTS_FOR_NON_NETWORKED_OBJECTS(BOOL value) // 0xABDABF4E1EDECBFA
function OBJECT.ALLOW_DAMAGE_EVENTS_FOR_NON_NETWORKED_OBJECTS(value)
  native.invoke(
    Type.Void, 3637, false,
    arg(Type.Bool, value)
  )
end

-- void SET_CUTSCENES_WEAPON_FLASHLIGHT_ON_THIS_FRAME(Object object, BOOL toggle) // 0xBCE595371A5FBAAF
--[[
Requires a component_at_*_flsh to be attached to the weapon object
--]]
function OBJECT.SET_CUTSCENES_WEAPON_FLASHLIGHT_ON_THIS_FRAME(object, toggle)
  native.invoke(
    Type.Void, 3638, false,
    arg(Type.Object, object),
    arg(Type.Bool, toggle)
  )
end

-- Object GET_RAYFIRE_MAP_OBJECT(float x, float y, float z, float radius, const char* name) // 0xB48FCED898292E52
--[[
Example:
OBJECT::GET_RAYFIRE_MAP_OBJECT(-809.9619750976562, 170.919, 75.7406997680664, 3.0, "des_tvsmash");
--]]
function OBJECT.GET_RAYFIRE_MAP_OBJECT(x, y, z, radius, name)
  return native.invoke(
    Type.Object, 3639, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.String, name)
  )
end

-- void SET_STATE_OF_RAYFIRE_MAP_OBJECT(Object object, int state) // 0x5C29F698D404C5E1
--[[
Defines the state of a destructible object.
Use the GET_RAYFIRE_MAP_OBJECT native to find an object's handle with its name / coords.
State 2 == object just spawned
State 4 == Beginning of the animation
State 6 == Start animation
State 9 == End of the animation
--]]
function OBJECT.SET_STATE_OF_RAYFIRE_MAP_OBJECT(object, state)
  native.invoke(
    Type.Void, 3640, false,
    arg(Type.Object, object),
    arg(Type.Int, state)
  )
end

-- int GET_STATE_OF_RAYFIRE_MAP_OBJECT(Object object) // 0x899BA936634A322E
--[[
Get a destructible object's state.
Substract 1 to get the real state.
See SET_STATE_OF_RAYFIRE_MAP_OBJECT to see the different states
For example, if the object just spawned (state 2), the native will return 3.
--]]
function OBJECT.GET_STATE_OF_RAYFIRE_MAP_OBJECT(object)
  return native.invoke(
    Type.Int, 3641, false,
    arg(Type.Object, object)
  )
end

-- BOOL DOES_RAYFIRE_MAP_OBJECT_EXIST(Object object) // 0x52AF537A0C5B8AAD
--[[
Returns true if a destructible object with this handle exists, false otherwise.  
--]]
function OBJECT.DOES_RAYFIRE_MAP_OBJECT_EXIST(object)
  return native.invoke(
    Type.Bool, 3642, false,
    arg(Type.Object, object)
  )
end

-- float GET_RAYFIRE_MAP_OBJECT_ANIM_PHASE(Object object) // 0x260EE4FDBDF4DB01
--[[
`object`: The des-object handle to get the animation progress from.
Return value is a float between 0.0 and 1.0, 0.0 is the beginning of the animation, 1.0 is the end. Value resets to 0.0 instantly after reaching 1.0.
--]]
function OBJECT.GET_RAYFIRE_MAP_OBJECT_ANIM_PHASE(object)
  return native.invoke(
    Type.Float, 3643, false,
    arg(Type.Object, object)
  )
end

-- Pickup CREATE_PICKUP(Hash pickupHash, float posX, float posY, float posZ, int p4, int value, BOOL p6, Hash modelHash) // 0xFBA08C503DD5FA58
--[[
Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
--]]
function OBJECT.CREATE_PICKUP(pickupHash, posX, posY, posZ, p4, value, p6, modelHash)
  return native.invoke(
    Type.Pickup, 3644, false,
    arg(Type.Hash, pickupHash),
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ),
    arg(Type.Int, p4),
    arg(Type.Int, value),
    arg(Type.Bool, p6),
    arg(Type.Hash, modelHash)
  )
end

-- Pickup CREATE_PICKUP_ROTATE(Hash pickupHash, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, int flag, int amount, Any p9, BOOL p10, Hash modelHash) // 0x891804727E0A98B7
--[[
flags:
8 (1 << 3): place on ground
512 (1 << 9): spin around

Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
--]]
function OBJECT.CREATE_PICKUP_ROTATE(pickupHash, posX, posY, posZ, rotX, rotY, rotZ, flag, amount, p9, p10, modelHash)
  return native.invoke(
    Type.Pickup, 3645, false,
    arg(Type.Hash, pickupHash),
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ),
    arg(Type.Float, rotX),
    arg(Type.Float, rotY),
    arg(Type.Float, rotZ),
    arg(Type.Int, flag),
    arg(Type.Int, amount),
    arg(Type.Any, p9),
    arg(Type.Bool, p10),
    arg(Type.Hash, modelHash)
  )
end

-- void FORCE_PICKUP_ROTATE_FACE_UP() // 0x394CD08E31313C28
function OBJECT.FORCE_PICKUP_ROTATE_FACE_UP()
  native.invoke(
    Type.Void, 3646, false
  )
end

-- void SET_CUSTOM_PICKUP_WEAPON_HASH(Hash pickupHash, Pickup pickup) // 0x826D1EE4D1CAFC78
function OBJECT.SET_CUSTOM_PICKUP_WEAPON_HASH(pickupHash, pickup)
  native.invoke(
    Type.Void, 3647, false,
    arg(Type.Hash, pickupHash),
    arg(Type.Pickup, pickup)
  )
end

-- Object CREATE_AMBIENT_PICKUP(Hash pickupHash, float posX, float posY, float posZ, int flags, int value, Hash modelHash, BOOL p7, BOOL p8) // 0x673966A0C0FD7171
--[[
Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
--]]
function OBJECT.CREATE_AMBIENT_PICKUP(pickupHash, posX, posY, posZ, flags, value, modelHash, p7, p8)
  return native.invoke(
    Type.Object, 3648, false,
    arg(Type.Hash, pickupHash),
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ),
    arg(Type.Int, flags),
    arg(Type.Int, value),
    arg(Type.Hash, modelHash),
    arg(Type.Bool, p7),
    arg(Type.Bool, p8)
  )
end

-- Object CREATE_NON_NETWORKED_AMBIENT_PICKUP(Hash pickupHash, float posX, float posY, float posZ, int flags, int value, Hash modelHash, BOOL p7, BOOL p8) // 0x9C93764223E29C50
function OBJECT.CREATE_NON_NETWORKED_AMBIENT_PICKUP(pickupHash, posX, posY, posZ, flags, value, modelHash, p7, p8)
  return native.invoke(
    Type.Object, 3649, false,
    arg(Type.Hash, pickupHash),
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ),
    arg(Type.Int, flags),
    arg(Type.Int, value),
    arg(Type.Hash, modelHash),
    arg(Type.Bool, p7),
    arg(Type.Bool, p8)
  )
end

-- void BLOCK_PLAYERS_FOR_AMBIENT_PICKUP(Any p0, Any p1) // 0x1E3F1B1B891A2AAA
function OBJECT.BLOCK_PLAYERS_FOR_AMBIENT_PICKUP(p0, p1)
  native.invoke(
    Type.Void, 3650, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- Object CREATE_PORTABLE_PICKUP(Hash pickupHash, float x, float y, float z, BOOL placeOnGround, Hash modelHash) // 0x2EAF1FDB2FB55698
--[[
Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
--]]
function OBJECT.CREATE_PORTABLE_PICKUP(pickupHash, x, y, z, placeOnGround, modelHash)
  return native.invoke(
    Type.Object, 3651, false,
    arg(Type.Hash, pickupHash),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Bool, placeOnGround),
    arg(Type.Hash, modelHash)
  )
end

-- Object CREATE_NON_NETWORKED_PORTABLE_PICKUP(Hash pickupHash, float x, float y, float z, BOOL placeOnGround, Hash modelHash) // 0x125494B98A21AAF7
--[[
Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
--]]
function OBJECT.CREATE_NON_NETWORKED_PORTABLE_PICKUP(pickupHash, x, y, z, placeOnGround, modelHash)
  return native.invoke(
    Type.Object, 3652, false,
    arg(Type.Hash, pickupHash),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Bool, placeOnGround),
    arg(Type.Hash, modelHash)
  )
end

-- void ATTACH_PORTABLE_PICKUP_TO_PED(Object pickupObject, Ped ped) // 0x8DC39368BDD57755
function OBJECT.ATTACH_PORTABLE_PICKUP_TO_PED(pickupObject, ped)
  native.invoke(
    Type.Void, 3653, false,
    arg(Type.Object, pickupObject),
    arg(Type.Ped, ped)
  )
end

-- void DETACH_PORTABLE_PICKUP_FROM_PED(Object pickupObject) // 0xCF463D1E9A0AECB1
function OBJECT.DETACH_PORTABLE_PICKUP_FROM_PED(pickupObject)
  native.invoke(
    Type.Void, 3654, false,
    arg(Type.Object, pickupObject)
  )
end

-- void FORCE_PORTABLE_PICKUP_LAST_ACCESSIBLE_POSITION_SETTING(Object object) // 0x5CE2E45A5CE2E45A
function OBJECT.FORCE_PORTABLE_PICKUP_LAST_ACCESSIBLE_POSITION_SETTING(object)
  native.invoke(
    Type.Void, 3655, false,
    arg(Type.Object, object)
  )
end

-- void HIDE_PORTABLE_PICKUP_WHEN_DETACHED(Object pickupObject, BOOL toggle) // 0x867458251D47CCB2
function OBJECT.HIDE_PORTABLE_PICKUP_WHEN_DETACHED(pickupObject, toggle)
  native.invoke(
    Type.Void, 3656, false,
    arg(Type.Object, pickupObject),
    arg(Type.Bool, toggle)
  )
end

-- void SET_MAX_NUM_PORTABLE_PICKUPS_CARRIED_BY_PLAYER(Hash modelHash, int number) // 0x0BF3B3BD47D79C08
function OBJECT.SET_MAX_NUM_PORTABLE_PICKUPS_CARRIED_BY_PLAYER(modelHash, number)
  native.invoke(
    Type.Void, 3657, false,
    arg(Type.Hash, modelHash),
    arg(Type.Int, number)
  )
end

-- void SET_LOCAL_PLAYER_CAN_COLLECT_PORTABLE_PICKUPS(BOOL toggle) // 0x78857FC65CADB909
function OBJECT.SET_LOCAL_PLAYER_CAN_COLLECT_PORTABLE_PICKUPS(toggle)
  native.invoke(
    Type.Void, 3658, false,
    arg(Type.Bool, toggle)
  )
end

-- Vector3 GET_SAFE_PICKUP_COORDS(float x, float y, float z, float p3, float p4) // 0x6E16BC2503FF1FF0
function OBJECT.GET_SAFE_PICKUP_COORDS(x, y, z, p3, p4)
  return native.invoke(
    Type.Vector3, 3659, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, p3),
    arg(Type.Float, p4)
  )
end

-- void ADD_EXTENDED_PICKUP_PROBE_AREA(float x, float y, float z, float radius) // 0xD4A7A435B3710D05
--[[
Adds an area that seems to be related to pickup physics behavior.
Max amount of areas is 10. Only works in multiplayer.
--]]
function OBJECT.ADD_EXTENDED_PICKUP_PROBE_AREA(x, y, z, radius)
  native.invoke(
    Type.Void, 3660, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius)
  )
end

-- void CLEAR_EXTENDED_PICKUP_PROBE_AREAS() // 0xB7C6D80FB371659A
--[[
Clears all areas created by ADD_EXTENDED_PICKUP_PROBE_AREA
--]]
function OBJECT.CLEAR_EXTENDED_PICKUP_PROBE_AREAS()
  native.invoke(
    Type.Void, 3661, false
  )
end

-- Vector3 GET_PICKUP_COORDS(Pickup pickup) // 0x225B8B35C88029B3
function OBJECT.GET_PICKUP_COORDS(pickup)
  return native.invoke(
    Type.Vector3, 3662, false,
    arg(Type.Pickup, pickup)
  )
end

-- void SUPPRESS_PICKUP_SOUND_FOR_PICKUP(Any p0, Any p1) // 0x8DCA505A5C196F05
function OBJECT.SUPPRESS_PICKUP_SOUND_FOR_PICKUP(p0, p1)
  native.invoke(
    Type.Void, 3663, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void REMOVE_ALL_PICKUPS_OF_TYPE(Hash pickupHash) // 0x27F9D613092159CF
--[[
Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
--]]
function OBJECT.REMOVE_ALL_PICKUPS_OF_TYPE(pickupHash)
  native.invoke(
    Type.Void, 3664, false,
    arg(Type.Hash, pickupHash)
  )
end

-- BOOL HAS_PICKUP_BEEN_COLLECTED(Pickup pickup) // 0x80EC48E6679313F9
function OBJECT.HAS_PICKUP_BEEN_COLLECTED(pickup)
  return native.invoke(
    Type.Bool, 3665, false,
    arg(Type.Pickup, pickup)
  )
end

-- void REMOVE_PICKUP(Pickup pickup) // 0x3288D8ACAECD2AB2
function OBJECT.REMOVE_PICKUP(pickup)
  native.invoke(
    Type.Void, 3666, false,
    arg(Type.Pickup, pickup)
  )
end

-- void CREATE_MONEY_PICKUPS(float x, float y, float z, int value, int amount, Hash model) // 0x0589B5E791CE9B2B
--[[
Spawns one or more money pickups.

x: The X-component of the world position to spawn the money pickups at.
y: The Y-component of the world position to spawn the money pickups at.
z: The Z-component of the world position to spawn the money pickups at.
value: The combined value of the pickups (in dollars).
amount: The number of pickups to spawn.
model: The model to use, or 0 for default money model.

Example:
CREATE_MONEY_PICKUPS(x, y, z, 1000, 3, 0x684a97ae);

Spawns 3 spray cans that'll collectively give $1000 when picked up. (Three spray cans, each giving $334, $334, $332 = $1000).

==============================================

Max is 2000 in MP. So if you put the amount to 20, but the value to $400,000 eg. They will only be able to pickup 20 - $2,000 bags. So, $40,000
--]]
function OBJECT.CREATE_MONEY_PICKUPS(x, y, z, value, amount, model)
  native.invoke(
    Type.Void, 3667, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, value),
    arg(Type.Int, amount),
    arg(Type.Hash, model)
  )
end

-- BOOL DOES_PICKUP_EXIST(Pickup pickup) // 0xAFC1CA75AD4074D1
function OBJECT.DOES_PICKUP_EXIST(pickup)
  return native.invoke(
    Type.Bool, 3668, false,
    arg(Type.Pickup, pickup)
  )
end

-- BOOL DOES_PICKUP_OBJECT_EXIST(Object pickupObject) // 0xD9EFB6DBF7DAAEA3
function OBJECT.DOES_PICKUP_OBJECT_EXIST(pickupObject)
  return native.invoke(
    Type.Bool, 3669, false,
    arg(Type.Object, pickupObject)
  )
end

-- Object GET_PICKUP_OBJECT(Pickup pickup) // 0x5099BC55630B25AE
function OBJECT.GET_PICKUP_OBJECT(pickup)
  return native.invoke(
    Type.Object, 3670, false,
    arg(Type.Pickup, pickup)
  )
end

-- BOOL IS_OBJECT_A_PICKUP(Object object) // 0xFC481C641EBBD27D
function OBJECT.IS_OBJECT_A_PICKUP(object)
  return native.invoke(
    Type.Bool, 3671, false,
    arg(Type.Object, object)
  )
end

-- BOOL IS_OBJECT_A_PORTABLE_PICKUP(Object object) // 0x0378C08504160D0D
function OBJECT.IS_OBJECT_A_PORTABLE_PICKUP(object)
  return native.invoke(
    Type.Bool, 3672, false,
    arg(Type.Object, object)
  )
end

-- BOOL DOES_PICKUP_OF_TYPE_EXIST_IN_AREA(Hash pickupHash, float x, float y, float z, float radius) // 0xF9C36251F6E48E33
--[[
Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
--]]
function OBJECT.DOES_PICKUP_OF_TYPE_EXIST_IN_AREA(pickupHash, x, y, z, radius)
  return native.invoke(
    Type.Bool, 3673, false,
    arg(Type.Hash, pickupHash),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius)
  )
end

-- void SET_PICKUP_REGENERATION_TIME(Pickup pickup, int duration) // 0x78015C9B4B3ECC9D
function OBJECT.SET_PICKUP_REGENERATION_TIME(pickup, duration)
  native.invoke(
    Type.Void, 3674, false,
    arg(Type.Pickup, pickup),
    arg(Type.Int, duration)
  )
end

-- void FORCE_PICKUP_REGENERATE(Any p0) // 0x758A5C1B3B1E1990
function OBJECT.FORCE_PICKUP_REGENERATE(p0)
  native.invoke(
    Type.Void, 3675, false,
    arg(Type.Any, p0)
  )
end

-- void SET_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_OF_TYPE(Player player, Hash pickupHash, BOOL toggle) // 0x616093EC6B139DD9
--[[
Disabling/enabling a player from getting pickups. From the scripts:

OBJECT::SET_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_OF_TYPE(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);
OBJECT::SET_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_OF_TYPE(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);
OBJECT::SET_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_OF_TYPE(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 1);
OBJECT::SET_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_OF_TYPE(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);
OBJECT::SET_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_OF_TYPE(PLAYER::PLAYER_ID(), ${pickup_armour_standard}, 0);
OBJECT::SET_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_OF_TYPE(PLAYER::PLAYER_ID(), ${pickup_armour_standard}, 1);

Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
--]]
function OBJECT.SET_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_OF_TYPE(player, pickupHash, toggle)
  native.invoke(
    Type.Void, 3676, false,
    arg(Type.Player, player),
    arg(Type.Hash, pickupHash),
    arg(Type.Bool, toggle)
  )
end

-- void SET_LOCAL_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_WITH_MODEL(Hash modelHash, BOOL toggle) // 0x88EAEC617CD26926
--[[
Maximum amount of pickup models that can be disallowed is 30.
--]]
function OBJECT.SET_LOCAL_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_WITH_MODEL(modelHash, toggle)
  native.invoke(
    Type.Void, 3677, false,
    arg(Type.Hash, modelHash),
    arg(Type.Bool, toggle)
  )
end

-- void ALLOW_ALL_PLAYERS_TO_COLLECT_PICKUPS_OF_TYPE(Hash pickupHash) // 0xFDC07C58E8AAB715
--[[
Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
--]]
function OBJECT.ALLOW_ALL_PLAYERS_TO_COLLECT_PICKUPS_OF_TYPE(pickupHash)
  native.invoke(
    Type.Void, 3678, false,
    arg(Type.Hash, pickupHash)
  )
end

-- void SET_TEAM_PICKUP_OBJECT(Object object, Any p1, BOOL p2) // 0x53E0DF1A2A3CF0CA
function OBJECT.SET_TEAM_PICKUP_OBJECT(object, p1, p2)
  native.invoke(
    Type.Void, 3679, false,
    arg(Type.Object, object),
    arg(Type.Any, p1),
    arg(Type.Bool, p2)
  )
end

-- void PREVENT_COLLECTION_OF_PORTABLE_PICKUP(Object object, BOOL p1, BOOL p2) // 0x92AEFB5F6E294023
function OBJECT.PREVENT_COLLECTION_OF_PORTABLE_PICKUP(object, p1, p2)
  native.invoke(
    Type.Void, 3680, false,
    arg(Type.Object, object),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void SET_PICKUP_OBJECT_GLOW_WHEN_UNCOLLECTABLE(Pickup pickup, BOOL toggle) // 0x27F248C3FEBFAAD3
function OBJECT.SET_PICKUP_OBJECT_GLOW_WHEN_UNCOLLECTABLE(pickup, toggle)
  native.invoke(
    Type.Void, 3681, false,
    arg(Type.Pickup, pickup),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PICKUP_GLOW_OFFSET(Pickup pickup, float p1) // 0x0596843B34B95CE5
--[[
p1 is always 0.51. This native is called before SET_PICKUP_REGENERATION_TIME in all occurances.
--]]
function OBJECT.SET_PICKUP_GLOW_OFFSET(pickup, p1)
  native.invoke(
    Type.Void, 3682, false,
    arg(Type.Pickup, pickup),
    arg(Type.Float, p1)
  )
end

-- void SET_PICKUP_OBJECT_GLOW_OFFSET(Pickup pickup, float p1, BOOL p2) // 0xA08FE5E49BDC39DD
--[[
p1 is always -0.2 in scripts and p2 is always true in scripts.
--]]
function OBJECT.SET_PICKUP_OBJECT_GLOW_OFFSET(pickup, p1, p2)
  native.invoke(
    Type.Void, 3683, false,
    arg(Type.Pickup, pickup),
    arg(Type.Float, p1),
    arg(Type.Bool, p2)
  )
end

-- void SET_OBJECT_GLOW_IN_SAME_TEAM(Pickup pickup) // 0x62454A641B41F3C5
function OBJECT.SET_OBJECT_GLOW_IN_SAME_TEAM(pickup)
  native.invoke(
    Type.Void, 3684, false,
    arg(Type.Pickup, pickup)
  )
end

-- void SET_PICKUP_OBJECT_ARROW_MARKER(Pickup pickup, BOOL toggle) // 0x39A5FB7EAF150840
function OBJECT.SET_PICKUP_OBJECT_ARROW_MARKER(pickup, toggle)
  native.invoke(
    Type.Void, 3685, false,
    arg(Type.Pickup, pickup),
    arg(Type.Bool, toggle)
  )
end

-- void ALLOW_PICKUP_ARROW_MARKER_WHEN_UNCOLLECTABLE(Pickup pickup, BOOL toggle) // 0x834344A414C7C85D
function OBJECT.ALLOW_PICKUP_ARROW_MARKER_WHEN_UNCOLLECTABLE(pickup, toggle)
  native.invoke(
    Type.Void, 3686, false,
    arg(Type.Pickup, pickup),
    arg(Type.Bool, toggle)
  )
end

-- int GET_DEFAULT_AMMO_FOR_WEAPON_PICKUP(Hash pickupHash) // 0xDB41D07A45A6D4B7
function OBJECT.GET_DEFAULT_AMMO_FOR_WEAPON_PICKUP(pickupHash)
  return native.invoke(
    Type.Int, 3687, false,
    arg(Type.Hash, pickupHash)
  )
end

-- void SET_PICKUP_GENERATION_RANGE_MULTIPLIER(float multiplier) // 0x318516E02DE3ECE2
function OBJECT.SET_PICKUP_GENERATION_RANGE_MULTIPLIER(multiplier)
  native.invoke(
    Type.Void, 3688, false,
    arg(Type.Float, multiplier)
  )
end

-- float GET_PICKUP_GENERATION_RANGE_MULTIPLIER() // 0xB3ECA65C7317F174
function OBJECT.GET_PICKUP_GENERATION_RANGE_MULTIPLIER()
  return native.invoke(
    Type.Float, 3689, false
  )
end

-- void SET_ONLY_ALLOW_AMMO_COLLECTION_WHEN_LOW(BOOL p0) // 0x31F924B53EADDF65
function OBJECT.SET_ONLY_ALLOW_AMMO_COLLECTION_WHEN_LOW(p0)
  native.invoke(
    Type.Void, 3690, false,
    arg(Type.Bool, p0)
  )
end

-- void SET_PICKUP_UNCOLLECTABLE(Pickup pickup, BOOL toggle) // 0x1C1B69FAE509BA97
function OBJECT.SET_PICKUP_UNCOLLECTABLE(pickup, toggle)
  native.invoke(
    Type.Void, 3691, false,
    arg(Type.Pickup, pickup),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PICKUP_TRANSPARENT_WHEN_UNCOLLECTABLE(Pickup pickup, BOOL toggle) // 0x858EC9FD25DE04AA
function OBJECT.SET_PICKUP_TRANSPARENT_WHEN_UNCOLLECTABLE(pickup, toggle)
  native.invoke(
    Type.Void, 3692, false,
    arg(Type.Pickup, pickup),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PICKUP_HIDDEN_WHEN_UNCOLLECTABLE(Pickup pickup, BOOL toggle) // 0x3ED2B83AB2E82799
function OBJECT.SET_PICKUP_HIDDEN_WHEN_UNCOLLECTABLE(pickup, toggle)
  native.invoke(
    Type.Void, 3693, false,
    arg(Type.Pickup, pickup),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PICKUP_OBJECT_TRANSPARENT_WHEN_UNCOLLECTABLE(Pickup pickup, BOOL toggle) // 0x8881C98A31117998
function OBJECT.SET_PICKUP_OBJECT_TRANSPARENT_WHEN_UNCOLLECTABLE(pickup, toggle)
  native.invoke(
    Type.Void, 3694, false,
    arg(Type.Pickup, pickup),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PICKUP_OBJECT_ALPHA_WHEN_TRANSPARENT(int p0) // 0x8CFF648FBD7330F1
--[[
p0 is either 0 or 50 in scripts.
--]]
function OBJECT.SET_PICKUP_OBJECT_ALPHA_WHEN_TRANSPARENT(p0)
  native.invoke(
    Type.Void, 3695, false,
    arg(Type.Int, p0)
  )
end

-- void SET_PORTABLE_PICKUP_PERSIST(Pickup pickup, BOOL toggle) // 0x46F3ADD1E2D5BAF2
function OBJECT.SET_PORTABLE_PICKUP_PERSIST(pickup, toggle)
  native.invoke(
    Type.Void, 3696, false,
    arg(Type.Pickup, pickup),
    arg(Type.Bool, toggle)
  )
end

-- void ALLOW_PORTABLE_PICKUP_TO_MIGRATE_TO_NON_PARTICIPANTS(Pickup pickup, BOOL toggle) // 0x641F272B52E2F0F8
function OBJECT.ALLOW_PORTABLE_PICKUP_TO_MIGRATE_TO_NON_PARTICIPANTS(pickup, toggle)
  native.invoke(
    Type.Void, 3697, false,
    arg(Type.Pickup, pickup),
    arg(Type.Bool, toggle)
  )
end

-- void FORCE_ACTIVATE_PHYSICS_ON_UNFIXED_PICKUP(Pickup pickup, BOOL toggle) // 0x4C134B4DF76025D0
function OBJECT.FORCE_ACTIVATE_PHYSICS_ON_UNFIXED_PICKUP(pickup, toggle)
  native.invoke(
    Type.Void, 3698, false,
    arg(Type.Pickup, pickup),
    arg(Type.Bool, toggle)
  )
end

-- void ALLOW_PICKUP_BY_NONE_PARTICIPANT(Pickup pickup, BOOL toggle) // 0xAA059C615DE9DD03
function OBJECT.ALLOW_PICKUP_BY_NONE_PARTICIPANT(pickup, toggle)
  native.invoke(
    Type.Void, 3699, false,
    arg(Type.Pickup, pickup),
    arg(Type.Bool, toggle)
  )
end

-- void SUPPRESS_PICKUP_REWARD_TYPE(int rewardType, BOOL suppress) // 0xF92099527DB8E2A7
--[[
enum ePickupRewardType
{
    PICKUP_REWARD_TYPE_AMMO = (1 << 0),
    PICKUP_REWARD_TYPE_BULLET_MP = (1 << 1),
    PICKUP_REWARD_TYPE_MISSILE_MP = (1 << 2),
    PICKUP_REWARD_TYPE_GRENADE_LAUNCHER_MP = (1 << 3),
    PICKUP_REWARD_TYPE_ARMOUR = (1 << 4),
    PICKUP_REWARD_TYPE_HEALTH = (1 << 5),
    PICKUP_REWARD_TYPE_HEALTH_VARIABLE = PICKUP_REWARD_TYPE_HEALTH,
    PICKUP_REWARD_TYPE_MONEY_FIXED = (1 << 6),
    PICKUP_REWARD_TYPE_MONEY_VARIABLE = PICKUP_REWARD_TYPE_MONEY_FIXED,
    PICKUP_REWARD_TYPE_WEAPON = (1 << 7),
    PICKUP_REWARD_TYPE_STAT = (1 << 8),
    PICKUP_REWARD_TYPE_STAT_VARIABLE = PICKUP_REWARD_TYPE_STAT,
    PICKUP_REWARD_TYPE_VEHICLE_FIX = (1 << 9),
    PICKUP_REWARD_TYPE_FIREWORK_MP = (1 << 10),
};
--]]
function OBJECT.SUPPRESS_PICKUP_REWARD_TYPE(rewardType, suppress)
  native.invoke(
    Type.Void, 3700, false,
    arg(Type.Int, rewardType),
    arg(Type.Bool, suppress)
  )
end

-- void CLEAR_ALL_PICKUP_REWARD_TYPE_SUPPRESSION() // 0xA2C1F5E92AFE49ED
function OBJECT.CLEAR_ALL_PICKUP_REWARD_TYPE_SUPPRESSION()
  native.invoke(
    Type.Void, 3701, false
  )
end

-- void CLEAR_PICKUP_REWARD_TYPE_SUPPRESSION(int rewardType) // 0x762DB2D380B48D04
function OBJECT.CLEAR_PICKUP_REWARD_TYPE_SUPPRESSION(rewardType)
  native.invoke(
    Type.Void, 3702, false,
    arg(Type.Int, rewardType)
  )
end

-- void RENDER_FAKE_PICKUP_GLOW(float x, float y, float z, int colorIndex) // 0x3430676B11CDF21D
--[[
draws circular marker at pos
-1 = none
0 = red
1 = green
2 = blue
3 = green larger
4 = nothing
5 = green small
--]]
function OBJECT.RENDER_FAKE_PICKUP_GLOW(x, y, z, colorIndex)
  native.invoke(
    Type.Void, 3703, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, colorIndex)
  )
end

-- void SET_PICKUP_OBJECT_COLLECTABLE_IN_VEHICLE(Pickup pickup) // 0x7813E8B8C4AE4799
function OBJECT.SET_PICKUP_OBJECT_COLLECTABLE_IN_VEHICLE(pickup)
  native.invoke(
    Type.Void, 3704, false,
    arg(Type.Pickup, pickup)
  )
end

-- void SET_PICKUP_TRACK_DAMAGE_EVENTS(Pickup pickup, BOOL toggle) // 0xBFFE53AE7E67FCDC
function OBJECT.SET_PICKUP_TRACK_DAMAGE_EVENTS(pickup, toggle)
  native.invoke(
    Type.Void, 3705, false,
    arg(Type.Pickup, pickup),
    arg(Type.Bool, toggle)
  )
end

-- void SET_ENTITY_FLAG_SUPPRESS_SHADOW(Entity entity, BOOL toggle) // 0xD05A3241B9A86F19
--[[
Sets entity+38 to C (when false) or 0xFF3f (when true)
--]]
function OBJECT.SET_ENTITY_FLAG_SUPPRESS_SHADOW(entity, toggle)
  native.invoke(
    Type.Void, 3706, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- void SET_ENTITY_FLAG_RENDER_SMALL_SHADOW(Object object, BOOL toggle) // 0xB2D0BDE54F0E8E5A
function OBJECT.SET_ENTITY_FLAG_RENDER_SMALL_SHADOW(object, toggle)
  native.invoke(
    Type.Void, 3707, false,
    arg(Type.Object, object),
    arg(Type.Bool, toggle)
  )
end

-- Hash GET_WEAPON_TYPE_FROM_PICKUP_TYPE(Hash pickupHash) // 0x08F96CA6C551AD51
--[[
Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
--]]
function OBJECT.GET_WEAPON_TYPE_FROM_PICKUP_TYPE(pickupHash)
  return native.invoke(
    Type.Hash, 3708, false,
    arg(Type.Hash, pickupHash)
  )
end

-- Hash GET_PICKUP_TYPE_FROM_WEAPON_HASH(Hash weaponHash) // 0xD6429A016084F1A5
--[[
Returns the pickup hash for the given weapon hash
--]]
function OBJECT.GET_PICKUP_TYPE_FROM_WEAPON_HASH(weaponHash)
  return native.invoke(
    Type.Hash, 3709, false,
    arg(Type.Hash, weaponHash)
  )
end

-- BOOL IS_PICKUP_WEAPON_OBJECT_VALID(Object object) // 0x11D1E53A726891FE
function OBJECT.IS_PICKUP_WEAPON_OBJECT_VALID(object)
  return native.invoke(
    Type.Bool, 3710, false,
    arg(Type.Object, object)
  )
end

-- int GET_OBJECT_TINT_INDEX(Object object) // 0xE84EB93729C5F36A
function OBJECT.GET_OBJECT_TINT_INDEX(object)
  return native.invoke(
    Type.Int, 3711, false,
    arg(Type.Object, object)
  )
end

-- void SET_OBJECT_TINT_INDEX(Object object, int textureVariation) // 0x971DA0055324D033
--[[
enum ObjectPaintVariants
{
 Pacific = 0,
  Azure = 1,
    Nautical = 2,
 Continental = 3,
  Battleship = 4,
   Intrepid = 5,
 Uniform = 6,
  Classico = 7,
 Mediterranean = 8,
    Command = 9,
  Mariner = 10,
 Ruby = 11,
    Vintage = 12,
 Pristine = 13,
    Merchant = 14,
    Voyager = 15
};
--]]
function OBJECT.SET_OBJECT_TINT_INDEX(object, textureVariation)
  native.invoke(
    Type.Void, 3712, false,
    arg(Type.Object, object),
    arg(Type.Int, textureVariation)
  )
end

-- BOOL SET_TINT_INDEX_CLOSEST_BUILDING_OF_TYPE(float x, float y, float z, float radius, Hash modelHash, int textureVariation) // 0xF12E33034D887F66
function OBJECT.SET_TINT_INDEX_CLOSEST_BUILDING_OF_TYPE(x, y, z, radius, modelHash, textureVariation)
  return native.invoke(
    Type.Bool, 3713, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Hash, modelHash),
    arg(Type.Int, textureVariation)
  )
end

-- void SET_PROP_TINT_INDEX(Any p0, Any p1) // 0x31574B1B41268673
function OBJECT.SET_PROP_TINT_INDEX(p0, p1)
  native.invoke(
    Type.Void, 3714, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL SET_PROP_LIGHT_COLOR(Object object, BOOL p1, int r, int g, int b) // 0x5F048334B4A4E774
function OBJECT.SET_PROP_LIGHT_COLOR(object, p1, r, g, b)
  return native.invoke(
    Type.Bool, 3715, false,
    arg(Type.Object, object),
    arg(Type.Bool, p1),
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b)
  )
end

-- BOOL IS_PROP_LIGHT_OVERRIDEN(Object object) // 0xADF084FB8F075D06
function OBJECT.IS_PROP_LIGHT_OVERRIDEN(object)
  return native.invoke(
    Type.Bool, 3716, false,
    arg(Type.Object, object)
  )
end

-- void SET_OBJECT_IS_VISIBLE_IN_MIRRORS(Object object, BOOL toggle) // 0x3B2FD68DB5F8331C
function OBJECT.SET_OBJECT_IS_VISIBLE_IN_MIRRORS(object, toggle)
  native.invoke(
    Type.Void, 3717, false,
    arg(Type.Object, object),
    arg(Type.Bool, toggle)
  )
end

-- void SET_OBJECT_SPEED_BOOST_AMOUNT(Object object, Any p1) // 0x96EE0EBA0163DF80
function OBJECT.SET_OBJECT_SPEED_BOOST_AMOUNT(object, p1)
  native.invoke(
    Type.Void, 3718, false,
    arg(Type.Object, object),
    arg(Type.Any, p1)
  )
end

-- void SET_OBJECT_SPEED_BOOST_DURATION(Object object, float duration) // 0xDF6CA0330F2E737B
function OBJECT.SET_OBJECT_SPEED_BOOST_DURATION(object, duration)
  native.invoke(
    Type.Void, 3719, false,
    arg(Type.Object, object),
    arg(Type.Float, duration)
  )
end

-- Hash CONVERT_OLD_PICKUP_TYPE_TO_NEW(Hash pickupHash) // 0x5EAAD83F8CFB4575
--[[
returns pickup hash.

Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
--]]
function OBJECT.CONVERT_OLD_PICKUP_TYPE_TO_NEW(pickupHash)
  return native.invoke(
    Type.Hash, 3720, false,
    arg(Type.Hash, pickupHash)
  )
end

-- void SET_FORCE_OBJECT_THIS_FRAME(float x, float y, float z, float p3) // 0xF538081986E49E9D
function OBJECT.SET_FORCE_OBJECT_THIS_FRAME(x, y, z, p3)
  native.invoke(
    Type.Void, 3721, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, p3)
  )
end

-- void ONLY_CLEAN_UP_OBJECT_WHEN_OUT_OF_RANGE(Object object) // 0xADBE4809F19F927A
--[[
is this like setting is as no longer needed?
--]]
function OBJECT.ONLY_CLEAN_UP_OBJECT_WHEN_OUT_OF_RANGE(object)
  native.invoke(
    Type.Void, 3722, false,
    arg(Type.Object, object)
  )
end

-- void SET_DISABLE_COLLISIONS_BETWEEN_CARS_AND_CAR_PARACHUTE(Any p0) // 0x8CAAB2BD3EA58BD4
function OBJECT.SET_DISABLE_COLLISIONS_BETWEEN_CARS_AND_CAR_PARACHUTE(p0)
  native.invoke(
    Type.Void, 3723, false,
    arg(Type.Any, p0)
  )
end

-- void SET_PROJECTILES_SHOULD_EXPLODE_ON_CONTACT(Entity entity, Any p1) // 0x63ECF581BC70E363
function OBJECT.SET_PROJECTILES_SHOULD_EXPLODE_ON_CONTACT(entity, p1)
  native.invoke(
    Type.Void, 3724, false,
    arg(Type.Entity, entity),
    arg(Type.Any, p1)
  )
end

-- void SET_DRIVE_ARTICULATED_JOINT(Object object, BOOL toggle, int p2) // 0x911024442F4898F0
--[[
Activate the physics to: "xs_prop_arena_{flipper,wall,bollard,turntable,pit}"
--]]
function OBJECT.SET_DRIVE_ARTICULATED_JOINT(object, toggle, p2)
  native.invoke(
    Type.Void, 3725, false,
    arg(Type.Object, object),
    arg(Type.Bool, toggle),
    arg(Type.Int, p2)
  )
end

-- void SET_DRIVE_ARTICULATED_JOINT_WITH_INFLICTOR(Object object, BOOL toggle, int p2, Ped ped) // 0xB20834A7DD3D8896
function OBJECT.SET_DRIVE_ARTICULATED_JOINT_WITH_INFLICTOR(object, toggle, p2, ped)
  native.invoke(
    Type.Void, 3726, false,
    arg(Type.Object, object),
    arg(Type.Bool, toggle),
    arg(Type.Int, p2),
    arg(Type.Ped, ped)
  )
end

-- void SET_OBJECT_IS_A_PRESSURE_PLATE(Object object, BOOL toggle) // 0x734E1714D077DA9A
function OBJECT.SET_OBJECT_IS_A_PRESSURE_PLATE(object, toggle)
  native.invoke(
    Type.Void, 3727, false,
    arg(Type.Object, object),
    arg(Type.Bool, toggle)
  )
end

-- void SET_WEAPON_IMPACTS_APPLY_GREATER_FORCE(Object object, BOOL p1) // 0x1A6CBB06E2D0D79D
function OBJECT.SET_WEAPON_IMPACTS_APPLY_GREATER_FORCE(object, p1)
  native.invoke(
    Type.Void, 3728, false,
    arg(Type.Object, object),
    arg(Type.Bool, p1)
  )
end

-- BOOL GET_IS_ARTICULATED_JOINT_AT_MIN_ANGLE(Object object, Any p1) // 0x43C677F1E1158005
function OBJECT.GET_IS_ARTICULATED_JOINT_AT_MIN_ANGLE(object, p1)
  return native.invoke(
    Type.Bool, 3729, false,
    arg(Type.Object, object),
    arg(Type.Any, p1)
  )
end

-- BOOL GET_IS_ARTICULATED_JOINT_AT_MAX_ANGLE(Any p0, Any p1) // 0x3BD770D281982DB5
function OBJECT.GET_IS_ARTICULATED_JOINT_AT_MAX_ANGLE(p0, p1)
  return native.invoke(
    Type.Bool, 3730, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void SET_IS_OBJECT_ARTICULATED(Object object, BOOL toggle) // 0x1C57C94A6446492A
function OBJECT.SET_IS_OBJECT_ARTICULATED(object, toggle)
  native.invoke(
    Type.Void, 3731, false,
    arg(Type.Object, object),
    arg(Type.Bool, toggle)
  )
end

-- void SET_IS_OBJECT_BALL(Object object, BOOL toggle) // 0xB5B7742424BD4445
function OBJECT.SET_IS_OBJECT_BALL(object, toggle)
  native.invoke(
    Type.Void, 3732, false,
    arg(Type.Object, object),
    arg(Type.Bool, toggle)
  )
end


PAD = {}

-- BOOL IS_CONTROL_ENABLED(int control, int action) // 0x1CEA6BFDF248E5D9
--[[
control: 0: PLAYER_CONTROL, 1: CAMERA_CONTROL, 2: FRONTEND_CONTROL
For more info, see https://docs.fivem.net/docs/game-references/controls/
--]]
function PAD.IS_CONTROL_ENABLED(control, action)
  return native.invoke(
    Type.Bool, 3733, false,
    arg(Type.Int, control),
    arg(Type.Int, action)
  )
end

-- BOOL IS_CONTROL_PRESSED(int control, int action) // 0xF3A21BCD95725A4A
--[[
Returns whether a control is currently pressed.
control: see IS_CONTROL_ENABLED
--]]
function PAD.IS_CONTROL_PRESSED(control, action)
  return native.invoke(
    Type.Bool, 3734, false,
    arg(Type.Int, control),
    arg(Type.Int, action)
  )
end

-- BOOL IS_CONTROL_RELEASED(int control, int action) // 0x648EE3E7F38877DD
--[[
Returns whether a control is currently _not_ pressed.
control: see IS_CONTROL_ENABLED
--]]
function PAD.IS_CONTROL_RELEASED(control, action)
  return native.invoke(
    Type.Bool, 3735, false,
    arg(Type.Int, control),
    arg(Type.Int, action)
  )
end

-- BOOL IS_CONTROL_JUST_PRESSED(int control, int action) // 0x580417101DDB492F
--[[
Returns whether a control was newly pressed since the last check.
control: see IS_CONTROL_ENABLED
--]]
function PAD.IS_CONTROL_JUST_PRESSED(control, action)
  return native.invoke(
    Type.Bool, 3736, false,
    arg(Type.Int, control),
    arg(Type.Int, action)
  )
end

-- BOOL IS_CONTROL_JUST_RELEASED(int control, int action) // 0x50F940259D3841E6
--[[
Returns whether a control was newly released since the last check.
control: see IS_CONTROL_ENABLED
--]]
function PAD.IS_CONTROL_JUST_RELEASED(control, action)
  return native.invoke(
    Type.Bool, 3737, false,
    arg(Type.Int, control),
    arg(Type.Int, action)
  )
end

-- int GET_CONTROL_VALUE(int control, int action) // 0xD95E79E8686D2C27
--[[
control: see IS_CONTROL_ENABLED
--]]
function PAD.GET_CONTROL_VALUE(control, action)
  return native.invoke(
    Type.Int, 3738, false,
    arg(Type.Int, control),
    arg(Type.Int, action)
  )
end

-- float GET_CONTROL_NORMAL(int control, int action) // 0xEC3C9B8D5327B563
--[[
Returns the value of GET_CONTROL_VALUE normalized (i.e. a real number value between -1 and 1)

control: see IS_CONTROL_ENABLED
--]]
function PAD.GET_CONTROL_NORMAL(control, action)
  return native.invoke(
    Type.Float, 3739, false,
    arg(Type.Int, control),
    arg(Type.Int, action)
  )
end

-- void SET_USE_ADJUSTED_MOUSE_COORDS(BOOL toggle) // 0x5B73C77D9EB66E24
function PAD.SET_USE_ADJUSTED_MOUSE_COORDS(toggle)
  native.invoke(
    Type.Void, 3740, false,
    arg(Type.Bool, toggle)
  )
end

-- float GET_CONTROL_UNBOUND_NORMAL(int control, int action) // 0x5B84D09CEC5209C5
--[[
Seems to return values between -1 and 1 for controls like gas and steering.

control: see IS_CONTROL_ENABLED
--]]
function PAD.GET_CONTROL_UNBOUND_NORMAL(control, action)
  return native.invoke(
    Type.Float, 3741, false,
    arg(Type.Int, control),
    arg(Type.Int, action)
  )
end

-- BOOL SET_CONTROL_VALUE_NEXT_FRAME(int control, int action, float value) // 0xE8A25867FBA3B05E
--[[
This is for simulating player input.
value is a float value from 0 - 1

control: see IS_CONTROL_ENABLED
--]]
function PAD.SET_CONTROL_VALUE_NEXT_FRAME(control, action, value)
  return native.invoke(
    Type.Bool, 3742, false,
    arg(Type.Int, control),
    arg(Type.Int, action),
    arg(Type.Float, value)
  )
end

-- BOOL IS_DISABLED_CONTROL_PRESSED(int control, int action) // 0xE2587F8CBBD87B1D
--[[
control: see IS_CONTROL_ENABLED
--]]
function PAD.IS_DISABLED_CONTROL_PRESSED(control, action)
  return native.invoke(
    Type.Bool, 3743, false,
    arg(Type.Int, control),
    arg(Type.Int, action)
  )
end

-- BOOL IS_DISABLED_CONTROL_RELEASED(int control, int action) // 0xFB6C4072E9A32E92
--[[
control: see IS_CONTROL_ENABLED
--]]
function PAD.IS_DISABLED_CONTROL_RELEASED(control, action)
  return native.invoke(
    Type.Bool, 3744, false,
    arg(Type.Int, control),
    arg(Type.Int, action)
  )
end

-- BOOL IS_DISABLED_CONTROL_JUST_PRESSED(int control, int action) // 0x91AEF906BCA88877
--[[
control: see IS_CONTROL_ENABLED
--]]
function PAD.IS_DISABLED_CONTROL_JUST_PRESSED(control, action)
  return native.invoke(
    Type.Bool, 3745, false,
    arg(Type.Int, control),
    arg(Type.Int, action)
  )
end

-- BOOL IS_DISABLED_CONTROL_JUST_RELEASED(int control, int action) // 0x305C8DCD79DA8B0F
--[[
control: see IS_CONTROL_ENABLED
--]]
function PAD.IS_DISABLED_CONTROL_JUST_RELEASED(control, action)
  return native.invoke(
    Type.Bool, 3746, false,
    arg(Type.Int, control),
    arg(Type.Int, action)
  )
end

-- float GET_DISABLED_CONTROL_NORMAL(int control, int action) // 0x11E65974A982637C
--[[
control: see IS_CONTROL_ENABLED
--]]
function PAD.GET_DISABLED_CONTROL_NORMAL(control, action)
  return native.invoke(
    Type.Float, 3747, false,
    arg(Type.Int, control),
    arg(Type.Int, action)
  )
end

-- float GET_DISABLED_CONTROL_UNBOUND_NORMAL(int control, int action) // 0x4F8A26A890FD62FB
--[[
The "disabled" variant of GET_CONTROL_UNBOUND_NORMAL.

control: see IS_CONTROL_ENABLED
--]]
function PAD.GET_DISABLED_CONTROL_UNBOUND_NORMAL(control, action)
  return native.invoke(
    Type.Float, 3748, false,
    arg(Type.Int, control),
    arg(Type.Int, action)
  )
end

-- int GET_CONTROL_HOW_LONG_AGO(int control) // 0xD7D22F5592AED8BA
--[[
Returns time in ms since last input.

control: see IS_CONTROL_ENABLED
--]]
function PAD.GET_CONTROL_HOW_LONG_AGO(control)
  return native.invoke(
    Type.Int, 3749, false,
    arg(Type.Int, control)
  )
end

-- BOOL IS_USING_KEYBOARD_AND_MOUSE(int control) // 0xA571D46727E2B718
--[[
control: unused parameter
--]]
function PAD.IS_USING_KEYBOARD_AND_MOUSE(control)
  return native.invoke(
    Type.Bool, 3750, false,
    arg(Type.Int, control)
  )
end

-- BOOL IS_USING_CURSOR(int control) // 0x13337B38DB572509
--[[
control: see IS_CONTROL_ENABLED
--]]
function PAD.IS_USING_CURSOR(control)
  return native.invoke(
    Type.Bool, 3751, false,
    arg(Type.Int, control)
  )
end

-- BOOL SET_CURSOR_POSITION(float x, float y) // 0xFC695459D4D0E219
function PAD.SET_CURSOR_POSITION(x, y)
  return native.invoke(
    Type.Bool, 3752, false,
    arg(Type.Float, x),
    arg(Type.Float, y)
  )
end

-- BOOL IS_USING_REMOTE_PLAY(int control) // 0x23F09EADC01449D6
--[[
control: see IS_CONTROL_ENABLED

Hardcoded to return false.
--]]
function PAD.IS_USING_REMOTE_PLAY(control)
  return native.invoke(
    Type.Bool, 3753, false,
    arg(Type.Int, control)
  )
end

-- BOOL HAVE_CONTROLS_CHANGED(int control) // 0x6CD79468A1E595C6
--[[
control: unused parameter
--]]
function PAD.HAVE_CONTROLS_CHANGED(control)
  return native.invoke(
    Type.Bool, 3754, false,
    arg(Type.Int, control)
  )
end

-- const char* GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(int control, int action, BOOL allowXOSwap) // 0x0499D7B09FC9B407
--[[
allowXOSwap appears to always be true.

EG:
GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 201, 1) /*INPUT_FRONTEND_ACCEPT (e.g. Enter button)*/
GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 202, 1) /*INPUT_FRONTEND_CANCEL (e.g. ESC button)*/
GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 51, 1) /*INPUT_CONTEXT (e.g. E button)*/

gtaforums.com/topic/819070-c-draw-instructional-buttons-scaleform-movie/#entry1068197378

control: unused parameter
--]]
function PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(control, action, allowXOSwap)
  return native.invoke(
    Type.Const char, 3755, false,
    arg(Type.Int, control),
    arg(Type.Int, action),
    arg(Type.Bool, allowXOSwap)
  )
end

-- const char* GET_CONTROL_GROUP_INSTRUCTIONAL_BUTTONS_STRING(int control, int controlGroup, BOOL allowXOSwap) // 0x80C2FD58D720C801
--[[
control: unused parameter
--]]
function PAD.GET_CONTROL_GROUP_INSTRUCTIONAL_BUTTONS_STRING(control, controlGroup, allowXOSwap)
  return native.invoke(
    Type.Const char, 3756, false,
    arg(Type.Int, control),
    arg(Type.Int, controlGroup),
    arg(Type.Bool, allowXOSwap)
  )
end

-- void SET_CONTROL_LIGHT_EFFECT_COLOR(int control, int red, int green, int blue) // 0x8290252FFF36ACB5
--[[
control: see IS_CONTROL_ENABLED
--]]
function PAD.SET_CONTROL_LIGHT_EFFECT_COLOR(control, red, green, blue)
  native.invoke(
    Type.Void, 3757, false,
    arg(Type.Int, control),
    arg(Type.Int, red),
    arg(Type.Int, green),
    arg(Type.Int, blue)
  )
end

-- void CLEAR_CONTROL_LIGHT_EFFECT(int control) // 0xCB0360EFEFB2580D
--[[
control: see IS_CONTROL_ENABLED
--]]
function PAD.CLEAR_CONTROL_LIGHT_EFFECT(control)
  native.invoke(
    Type.Void, 3758, false,
    arg(Type.Int, control)
  )
end

-- void SET_CONTROL_SHAKE(int control, int duration, int frequency) // 0x48B3886C1358D0D5
--[[
control: see IS_CONTROL_ENABLED
duration in milliseconds 
frequency should range from about 10 (slow vibration) to 255 (very fast)

example:
SET_CONTROL_SHAKE(PLAYER_CONTROL, 100, 200);
--]]
function PAD.SET_CONTROL_SHAKE(control, duration, frequency)
  native.invoke(
    Type.Void, 3759, false,
    arg(Type.Int, control),
    arg(Type.Int, duration),
    arg(Type.Int, frequency)
  )
end

-- void SET_CONTROL_TRIGGER_SHAKE(int control, int leftDuration, int leftFrequency, int rightDuration, int rightFrequency) // 0x14D29BB12D47F68C
--[[
Does nothing (it's a nullsub).
--]]
function PAD.SET_CONTROL_TRIGGER_SHAKE(control, leftDuration, leftFrequency, rightDuration, rightFrequency)
  native.invoke(
    Type.Void, 3760, false,
    arg(Type.Int, control),
    arg(Type.Int, leftDuration),
    arg(Type.Int, leftFrequency),
    arg(Type.Int, rightDuration),
    arg(Type.Int, rightFrequency)
  )
end

-- void STOP_CONTROL_SHAKE(int control) // 0x38C16A305E8CDC8D
--[[
control: see IS_CONTROL_ENABLED
--]]
function PAD.STOP_CONTROL_SHAKE(control)
  native.invoke(
    Type.Void, 3761, false,
    arg(Type.Int, control)
  )
end

-- void SET_CONTROL_SHAKE_SUPPRESSED_ID(int control, int uniqueId) // 0xF239400E16C23E08
--[[
control: see IS_CONTROL_ENABLED
--]]
function PAD.SET_CONTROL_SHAKE_SUPPRESSED_ID(control, uniqueId)
  native.invoke(
    Type.Void, 3762, false,
    arg(Type.Int, control),
    arg(Type.Int, uniqueId)
  )
end

-- void CLEAR_CONTROL_SHAKE_SUPPRESSED_ID(int control) // 0xA0CEFCEA390AAB9B
--[[
control: see IS_CONTROL_ENABLED
--]]
function PAD.CLEAR_CONTROL_SHAKE_SUPPRESSED_ID(control)
  native.invoke(
    Type.Void, 3763, false,
    arg(Type.Int, control)
  )
end

-- BOOL IS_LOOK_INVERTED() // 0x77B612531280010D
function PAD.IS_LOOK_INVERTED()
  return native.invoke(
    Type.Bool, 3764, false
  )
end

-- BOOL IS_MOUSE_LOOK_INVERTED() // 0xE1615EC03B3BB4FD
--[[
Used with IS_LOOK_INVERTED() and negates its affect.

--

Not sure how the person above got that description, but here's an actual example:

if (PAD::IS_USING_KEYBOARD_AND_MOUSE(2)) {
    if (a_5) {
        if (PAD::IS_LOOK_INVERTED()) {
            a_3 *= -1;
        }
        if (PAD::IS_MOUSE_LOOK_INVERTED()) {
            a_3 *= -1;
        }
    }
}
--]]
function PAD.IS_MOUSE_LOOK_INVERTED()
  return native.invoke(
    Type.Bool, 3765, false
  )
end

-- int GET_LOCAL_PLAYER_AIM_STATE() // 0xBB41AFBBBC0A0287
--[[
Hard-coded to return 3 if using KBM, otherwise same behavior as GET_LOCAL_PLAYER_GAMEPAD_AIM_STATE.
--]]
function PAD.GET_LOCAL_PLAYER_AIM_STATE()
  return native.invoke(
    Type.Int, 3766, false
  )
end

-- int GET_LOCAL_PLAYER_GAMEPAD_AIM_STATE() // 0x59B9A7AF4C95133C
--[[
Returns the local player's targeting mode. See PLAYER::SET_PLAYER_TARGETING_MODE.
--]]
function PAD.GET_LOCAL_PLAYER_GAMEPAD_AIM_STATE()
  return native.invoke(
    Type.Int, 3767, false
  )
end

-- BOOL GET_IS_USING_ALTERNATE_HANDBRAKE() // 0x25AAA32BDC98F2A3
function PAD.GET_IS_USING_ALTERNATE_HANDBRAKE()
  return native.invoke(
    Type.Bool, 3768, false
  )
end

-- BOOL GET_IS_USING_ALTERNATE_DRIVEBY() // 0x0F70731BACCFBB96
--[[
Returns profile setting 225.
--]]
function PAD.GET_IS_USING_ALTERNATE_DRIVEBY()
  return native.invoke(
    Type.Bool, 3769, false
  )
end

-- BOOL GET_ALLOW_MOVEMENT_WHILE_ZOOMED() // 0xFC859E2374407556
--[[
Returns profile setting 17.
--]]
function PAD.GET_ALLOW_MOVEMENT_WHILE_ZOOMED()
  return native.invoke(
    Type.Bool, 3770, false
  )
end

-- void SET_PLAYERPAD_SHAKES_WHEN_CONTROLLER_DISABLED(BOOL toggle) // 0x798FDEB5B1575088
function PAD.SET_PLAYERPAD_SHAKES_WHEN_CONTROLLER_DISABLED(toggle)
  native.invoke(
    Type.Void, 3771, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_INPUT_EXCLUSIVE(int control, int action) // 0xEDE476E5EE29EDB1
--[[
control: see IS_CONTROL_ENABLED
--]]
function PAD.SET_INPUT_EXCLUSIVE(control, action)
  native.invoke(
    Type.Void, 3772, false,
    arg(Type.Int, control),
    arg(Type.Int, action)
  )
end

-- void DISABLE_CONTROL_ACTION(int control, int action, BOOL disableRelatedActions) // 0xFE99B66D079CF6BC
--[[
control: see IS_CONTROL_ENABLED
--]]
function PAD.DISABLE_CONTROL_ACTION(control, action, disableRelatedActions)
  native.invoke(
    Type.Void, 3773, false,
    arg(Type.Int, control),
    arg(Type.Int, action),
    arg(Type.Bool, disableRelatedActions)
  )
end

-- void ENABLE_CONTROL_ACTION(int control, int action, BOOL enableRelatedActions) // 0x351220255D64C155
--[[
control: see IS_CONTROL_ENABLED
--]]
function PAD.ENABLE_CONTROL_ACTION(control, action, enableRelatedActions)
  native.invoke(
    Type.Void, 3774, false,
    arg(Type.Int, control),
    arg(Type.Int, action),
    arg(Type.Bool, enableRelatedActions)
  )
end

-- void DISABLE_ALL_CONTROL_ACTIONS(int control) // 0x5F4B6931816E599B
--[[
control: see IS_CONTROL_ENABLED
--]]
function PAD.DISABLE_ALL_CONTROL_ACTIONS(control)
  native.invoke(
    Type.Void, 3775, false,
    arg(Type.Int, control)
  )
end

-- void ENABLE_ALL_CONTROL_ACTIONS(int control) // 0xA5FFE9B05F199DE7
--[[
control: see IS_CONTROL_ENABLED
--]]
function PAD.ENABLE_ALL_CONTROL_ACTIONS(control)
  native.invoke(
    Type.Void, 3776, false,
    arg(Type.Int, control)
  )
end

-- BOOL INIT_PC_SCRIPTED_CONTROLS(const char* schemeName) // 0x3D42B92563939375
--[[
Used in carsteal3 script with schemeName = "Carsteal4_spycar".
--]]
function PAD.INIT_PC_SCRIPTED_CONTROLS(schemeName)
  return native.invoke(
    Type.Bool, 3777, false,
    arg(Type.String, schemeName)
  )
end

-- BOOL SWITCH_PC_SCRIPTED_CONTROLS(const char* schemeName) // 0x4683149ED1DDE7A1
--[[
Same as INIT_PC_SCRIPTED_CONTROLS
--]]
function PAD.SWITCH_PC_SCRIPTED_CONTROLS(schemeName)
  return native.invoke(
    Type.Bool, 3778, false,
    arg(Type.String, schemeName)
  )
end

-- void SHUTDOWN_PC_SCRIPTED_CONTROLS() // 0x643ED62D5EA3BEBD
function PAD.SHUTDOWN_PC_SCRIPTED_CONTROLS()
  native.invoke(
    Type.Void, 3779, false
  )
end

-- void ALLOW_ALTERNATIVE_SCRIPT_CONTROLS_LAYOUT(int control) // 0x7F4724035FDCA1DD
--[[
control: see IS_CONTROL_ENABLED
--]]
function PAD.ALLOW_ALTERNATIVE_SCRIPT_CONTROLS_LAYOUT(control)
  native.invoke(
    Type.Void, 3780, false,
    arg(Type.Int, control)
  )
end


PATHFIND = {}

-- void SET_ROADS_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, BOOL nodeEnabled, BOOL unknown2) // 0xBF1A602B5BA52FEE
--[[
When nodeEnabled is set to false, all nodes in the area get disabled.
`GET_VEHICLE_NODE_IS_SWITCHED_OFF` returns true afterwards.
If it's true, `GET_VEHICLE_NODE_IS_SWITCHED_OFF` returns false.
--]]
function PATHFIND.SET_ROADS_IN_AREA(x1, y1, z1, x2, y2, z2, nodeEnabled, unknown2)
  native.invoke(
    Type.Void, 3781, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Bool, nodeEnabled),
    arg(Type.Bool, unknown2)
  )
end

-- void SET_ROADS_IN_ANGLED_AREA(float x1, float y1, float z1, float x2, float y2, float z2, float width, BOOL unknown1, BOOL unknown2, BOOL unknown3) // 0x1A5AA1208AF5DB59
--[[
unknown3 is related to `SEND_SCRIPT_WORLD_STATE_EVENT > CNetworkRoadNodeWorldStateData` in networked environments.
See IS_POINT_IN_ANGLED_AREA for the definition of an angled area.
--]]
function PATHFIND.SET_ROADS_IN_ANGLED_AREA(x1, y1, z1, x2, y2, z2, width, unknown1, unknown2, unknown3)
  native.invoke(
    Type.Void, 3782, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Float, width),
    arg(Type.Bool, unknown1),
    arg(Type.Bool, unknown2),
    arg(Type.Bool, unknown3)
  )
end

-- void SET_PED_PATHS_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, BOOL p6, Any p7) // 0x34F060F4BF92E018
function PATHFIND.SET_PED_PATHS_IN_AREA(x1, y1, z1, x2, y2, z2, p6, p7)
  native.invoke(
    Type.Void, 3783, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Bool, p6),
    arg(Type.Any, p7)
  )
end

-- BOOL GET_SAFE_COORD_FOR_PED(float x, float y, float z, BOOL onGround, Vector3* outPosition, int flags) // 0xB61C8E878A4199CA
--[[
Flags are:
1 = 1 = B02_IsFootpath
2 = 4 = !B15_InteractionUnk
4 = 0x20 = !B14_IsInterior
8 = 0x40 = !B07_IsWater
16 = 0x200 = B17_IsFlatGround
When onGround == true outPosition is a position located on the nearest pavement.

When a safe coord could not be found the result of a function is false and outPosition == Vector3.Zero.

In the scripts these flags are used: 0, 14, 12, 16, 20, 21, 28. 0 is most commonly used, then 16. 

16 works for me, 0 crashed the script.
--]]
function PATHFIND.GET_SAFE_COORD_FOR_PED(x, y, z, onGround, outPosition, flags)
  return native.invoke(
    Type.Bool, 3784, true,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Bool, onGround),
    arg(Type.Vector3, outPosition),
    arg(Type.Int, flags)
  )
end

-- BOOL GET_CLOSEST_VEHICLE_NODE(float x, float y, float z, Vector3* outPosition, int nodeFlags, float p5, float p6) // 0x240A18690AE96513
--[[
https://gtaforums.com/topic/843561-pathfind-node-types
--]]
function PATHFIND.GET_CLOSEST_VEHICLE_NODE(x, y, z, outPosition, nodeFlags, p5, p6)
  return native.invoke(
    Type.Bool, 3785, true,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Vector3, outPosition),
    arg(Type.Int, nodeFlags),
    arg(Type.Float, p5),
    arg(Type.Float, p6)
  )
end

-- BOOL GET_CLOSEST_MAJOR_VEHICLE_NODE(float x, float y, float z, Vector3* outPosition, float unknown1, float unknown2) // 0x2EABE3B06F58C1BE
--[[
Get the closest vehicle node to a given position.
--]]
function PATHFIND.GET_CLOSEST_MAJOR_VEHICLE_NODE(x, y, z, outPosition, unknown1, unknown2)
  return native.invoke(
    Type.Bool, 3786, true,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Vector3, outPosition),
    arg(Type.Float, unknown1),
    arg(Type.Float, unknown2)
  )
end

-- BOOL GET_CLOSEST_VEHICLE_NODE_WITH_HEADING(float x, float y, float z, Vector3* outPosition, float* outHeading, int nodeType, float p6, float p7) // 0xFF071FB798B803B0
--[[
p5, p6 and p7 seems to be about the same as p4, p5 and p6 for GET_CLOSEST_VEHICLE_NODE. p6 and/or p7 has something to do with finding a node on the same path/road and same direction(at least for this native, something to do with the heading maybe). Edit this when you find out more.

nodeType: 0 = main roads, 1 = any dry path, 3 = water
p6 is always 3.0
p7 is always 0

gtaforums.com/topic/843561-pathfind-node-types

Example of usage, moving vehicle to closest path/road:
Vector3 coords = ENTITY::GET_ENTITY_COORDS(playerVeh, true);
Vector3 closestVehicleNodeCoords; 
float roadHeading; 
PATHFIND::GET_CLOSEST_VEHICLE_NODE_WITH_HEADING(coords.x, coords.y, coords.z, &closestVehicleNodeCoords, &roadHeading, 1, 3, 0); 
ENTITY::SET_ENTITY_HEADING(playerVeh, roadHeading);
ENTITY::SET_ENTITY_COORDS(playerVeh, closestVehicleNodeCoords.x, closestVehicleNodeCoords.y, closestVehicleNodeCoords.z, 1, 0, 0, 1);
VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(playerVeh);

------------------------------------------------------------------
C# Example (ins1de) : https://pastebin.com/fxtMWAHD
--]]
function PATHFIND.GET_CLOSEST_VEHICLE_NODE_WITH_HEADING(x, y, z, outPosition, outHeading, nodeType, p6, p7)
  return native.invoke(
    Type.Bool, 3787, true,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Vector3, outPosition),
    arg(Type.Float, outHeading),
    arg(Type.Int, nodeType),
    arg(Type.Float, p6),
    arg(Type.Float, p7)
  )
end

-- BOOL GET_NTH_CLOSEST_VEHICLE_NODE(float x, float y, float z, int nthClosest, Vector3* outPosition, int nodeFlags, float unknown1, float unknown2) // 0xE50E52416CCF948B
function PATHFIND.GET_NTH_CLOSEST_VEHICLE_NODE(x, y, z, nthClosest, outPosition, nodeFlags, unknown1, unknown2)
  return native.invoke(
    Type.Bool, 3788, true,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, nthClosest),
    arg(Type.Vector3, outPosition),
    arg(Type.Int, nodeFlags),
    arg(Type.Float, unknown1),
    arg(Type.Float, unknown2)
  )
end

-- int GET_NTH_CLOSEST_VEHICLE_NODE_ID(float x, float y, float z, int nth, int nodeFlags, float p5, float p6) // 0x22D7275A79FE8215
--[[
Returns the id.
--]]
function PATHFIND.GET_NTH_CLOSEST_VEHICLE_NODE_ID(x, y, z, nth, nodeFlags, p5, p6)
  return native.invoke(
    Type.Int, 3789, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, nth),
    arg(Type.Int, nodeFlags),
    arg(Type.Float, p5),
    arg(Type.Float, p6)
  )
end

-- BOOL GET_NTH_CLOSEST_VEHICLE_NODE_WITH_HEADING(float x, float y, float z, int nthClosest, Vector3* outPosition, float* outHeading, int* outNumLanes, int nodeFlags, float unknown3, float unknown4) // 0x80CA6A8B6C094CC4
--[[
Get the nth closest vehicle node and its heading.
--]]
function PATHFIND.GET_NTH_CLOSEST_VEHICLE_NODE_WITH_HEADING(x, y, z, nthClosest, outPosition, outHeading, outNumLanes, nodeFlags, unknown3, unknown4)
  return native.invoke(
    Type.Bool, 3790, true,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, nthClosest),
    arg(Type.Vector3, outPosition),
    arg(Type.Float, outHeading),
    arg(Type.Int, outNumLanes),
    arg(Type.Int, nodeFlags),
    arg(Type.Float, unknown3),
    arg(Type.Float, unknown4)
  )
end

-- int GET_NTH_CLOSEST_VEHICLE_NODE_ID_WITH_HEADING(float x, float y, float z, int nthClosest, Vector3* outPosition, float* outHeading, int nodeFlags, float p7, float p8) // 0x6448050E9C2A7207
function PATHFIND.GET_NTH_CLOSEST_VEHICLE_NODE_ID_WITH_HEADING(x, y, z, nthClosest, outPosition, outHeading, nodeFlags, p7, p8)
  return native.invoke(
    Type.Int, 3791, true,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, nthClosest),
    arg(Type.Vector3, outPosition),
    arg(Type.Float, outHeading),
    arg(Type.Int, nodeFlags),
    arg(Type.Float, p7),
    arg(Type.Float, p8)
  )
end

-- BOOL GET_NTH_CLOSEST_VEHICLE_NODE_FAVOUR_DIRECTION(float x, float y, float z, float desiredX, float desiredY, float desiredZ, int nthClosest, Vector3* outPosition, float* outHeading, int nodeFlags, float p10, float p11) // 0x45905BE8654AE067
--[[
See gtaforums.com/topic/843561-pathfind-node-types for node type info. 0 = paved road only, 1 = any road, 3 = water

p10 always equals 3.0
p11 always equals 0
--]]
function PATHFIND.GET_NTH_CLOSEST_VEHICLE_NODE_FAVOUR_DIRECTION(x, y, z, desiredX, desiredY, desiredZ, nthClosest, outPosition, outHeading, nodeFlags, p10, p11)
  return native.invoke(
    Type.Bool, 3792, true,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, desiredX),
    arg(Type.Float, desiredY),
    arg(Type.Float, desiredZ),
    arg(Type.Int, nthClosest),
    arg(Type.Vector3, outPosition),
    arg(Type.Float, outHeading),
    arg(Type.Int, nodeFlags),
    arg(Type.Float, p10),
    arg(Type.Float, p11)
  )
end

-- BOOL GET_VEHICLE_NODE_PROPERTIES(float x, float y, float z, int* density, int* flags) // 0x0568566ACBB5DEDC
--[[
Gets the density and flags of the closest node to the specified position.
Density is a value between 0 and 15, indicating how busy the road is.
Flags is a bit field.
--]]
function PATHFIND.GET_VEHICLE_NODE_PROPERTIES(x, y, z, density, flags)
  return native.invoke(
    Type.Bool, 3793, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, density),
    arg(Type.Int, flags)
  )
end

-- BOOL IS_VEHICLE_NODE_ID_VALID(int vehicleNodeId) // 0x1EAF30FCFBF5AF74
--[[
Returns true if the id is non zero.
--]]
function PATHFIND.IS_VEHICLE_NODE_ID_VALID(vehicleNodeId)
  return native.invoke(
    Type.Bool, 3794, false,
    arg(Type.Int, vehicleNodeId)
  )
end

-- void GET_VEHICLE_NODE_POSITION(int nodeId, Vector3* outPosition) // 0x703123E5E7D429C2
--[[
Calling this with an invalid node id, will crash the game.
Note that IS_VEHICLE_NODE_ID_VALID simply checks if nodeId is not zero. It does not actually ensure that the id is valid.
Eg. IS_VEHICLE_NODE_ID_VALID(1) will return true, but will crash when calling GET_VEHICLE_NODE_POSITION().
--]]
function PATHFIND.GET_VEHICLE_NODE_POSITION(nodeId, outPosition)
  native.invoke(
    Type.Void, 3795, true,
    arg(Type.Int, nodeId),
    arg(Type.Vector3, outPosition)
  )
end

-- BOOL GET_VEHICLE_NODE_IS_GPS_ALLOWED(int nodeID) // 0xA2AE5C478B96E3B6
--[[
Returns false for nodes that aren't used for GPS routes.
Example:
Nodes in Fort Zancudo and LSIA are false
--]]
function PATHFIND.GET_VEHICLE_NODE_IS_GPS_ALLOWED(nodeID)
  return native.invoke(
    Type.Bool, 3796, false,
    arg(Type.Int, nodeID)
  )
end

-- BOOL GET_VEHICLE_NODE_IS_SWITCHED_OFF(int nodeID) // 0x4F5070AA58F69279
--[[
Returns true when the node is Offroad. Alleys, some dirt roads, and carparks return true.
Normal roads where plenty of Peds spawn will return false
--]]
function PATHFIND.GET_VEHICLE_NODE_IS_SWITCHED_OFF(nodeID)
  return native.invoke(
    Type.Bool, 3797, false,
    arg(Type.Int, nodeID)
  )
end

-- BOOL GET_CLOSEST_ROAD(float x, float y, float z, float p3, int p4, Vector3* p5, Vector3* p6, Any* p7, Any* p8, float* p9, BOOL p10) // 0x132F52BBA570FE92
--[[
p1 seems to be always 1.0f in the scripts
--]]
function PATHFIND.GET_CLOSEST_ROAD(x, y, z, p3, p4, p5, p6, p7, p8, p9, p10)
  return native.invoke(
    Type.Bool, 3798, true,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, p3),
    arg(Type.Int, p4),
    arg(Type.Vector3, p5),
    arg(Type.Vector3, p6),
    arg(Type.Any, p7),
    arg(Type.Any, p8),
    arg(Type.Float, p9),
    arg(Type.Bool, p10)
  )
end

-- BOOL LOAD_ALL_PATH_NODES(BOOL set) // 0xC2AB6BFE34E92F8B
function PATHFIND.LOAD_ALL_PATH_NODES(set)
  return native.invoke(
    Type.Bool, 3799, false,
    arg(Type.Bool, set)
  )
end

-- void SET_ALLOW_STREAM_PROLOGUE_NODES(BOOL toggle) // 0x228E5C6AD4D74BFD
function PATHFIND.SET_ALLOW_STREAM_PROLOGUE_NODES(toggle)
  native.invoke(
    Type.Void, 3800, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_ALLOW_STREAM_HEIST_ISLAND_NODES(int type) // 0xF74B1FFA4A15FBEA
--[[
Activates Cayo Perico path nodes if passed `1`. GPS navigation will start working, maybe more stuff will change, not sure. It seems if you try to unload (pass `0`) when close to the island, your game might crash.
--]]
function PATHFIND.SET_ALLOW_STREAM_HEIST_ISLAND_NODES(type)
  native.invoke(
    Type.Void, 3801, false,
    arg(Type.Int, type)
  )
end

-- BOOL ARE_NODES_LOADED_FOR_AREA(float x1, float y1, float x2, float y2) // 0xF7B79A50B905A30D
function PATHFIND.ARE_NODES_LOADED_FOR_AREA(x1, y1, x2, y2)
  return native.invoke(
    Type.Bool, 3802, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, x2),
    arg(Type.Float, y2)
  )
end

-- BOOL REQUEST_PATH_NODES_IN_AREA_THIS_FRAME(float x1, float y1, float x2, float y2) // 0x07FB139B592FA687
--[[
Used internally for long range tasks
--]]
function PATHFIND.REQUEST_PATH_NODES_IN_AREA_THIS_FRAME(x1, y1, x2, y2)
  return native.invoke(
    Type.Bool, 3803, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, x2),
    arg(Type.Float, y2)
  )
end

-- void SET_ROADS_BACK_TO_ORIGINAL(float p0, float p1, float p2, float p3, float p4, float p5, Any p6) // 0x1EE7063B80FFC77C
function PATHFIND.SET_ROADS_BACK_TO_ORIGINAL(p0, p1, p2, p3, p4, p5, p6)
  native.invoke(
    Type.Void, 3804, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Any, p6)
  )
end

-- void SET_ROADS_BACK_TO_ORIGINAL_IN_ANGLED_AREA(float x1, float y1, float z1, float x2, float y2, float z2, float width, Any p7) // 0x0027501B9F3B407E
--[[
See IS_POINT_IN_ANGLED_AREA for the definition of an angled area.
bool p7 - always 1
--]]
function PATHFIND.SET_ROADS_BACK_TO_ORIGINAL_IN_ANGLED_AREA(x1, y1, z1, x2, y2, z2, width, p7)
  native.invoke(
    Type.Void, 3805, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Float, width),
    arg(Type.Any, p7)
  )
end

-- void SET_AMBIENT_PED_RANGE_MULTIPLIER_THIS_FRAME(float multiplier) // 0x0B919E1FB47CC4E0
function PATHFIND.SET_AMBIENT_PED_RANGE_MULTIPLIER_THIS_FRAME(multiplier)
  native.invoke(
    Type.Void, 3806, false,
    arg(Type.Float, multiplier)
  )
end

-- void ADJUST_AMBIENT_PED_SPAWN_DENSITIES_THIS_FRAME(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) // 0xAA76052DDA9BFC3E
function PATHFIND.ADJUST_AMBIENT_PED_SPAWN_DENSITIES_THIS_FRAME(p0, p1, p2, p3, p4, p5, p6)
  native.invoke(
    Type.Void, 3807, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5),
    arg(Type.Any, p6)
  )
end

-- void SET_PED_PATHS_BACK_TO_ORIGINAL(float x1, float y1, float z1, float x2, float y2, float z2, Any p6) // 0xE04B48F2CC926253
--[[
p6 is always 0
--]]
function PATHFIND.SET_PED_PATHS_BACK_TO_ORIGINAL(x1, y1, z1, x2, y2, z2, p6)
  native.invoke(
    Type.Void, 3808, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Any, p6)
  )
end

-- BOOL GET_RANDOM_VEHICLE_NODE(float x, float y, float z, float radius, BOOL p4, BOOL p5, BOOL p6, Vector3* outPosition, int* nodeId) // 0x93E0DB8440B73A7D
function PATHFIND.GET_RANDOM_VEHICLE_NODE(x, y, z, radius, p4, p5, p6, outPosition, nodeId)
  return native.invoke(
    Type.Bool, 3809, true,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Bool, p4),
    arg(Type.Bool, p5),
    arg(Type.Bool, p6),
    arg(Type.Vector3, outPosition),
    arg(Type.Int, nodeId)
  )
end

-- Vector3 GET_SPAWN_COORDS_FOR_VEHICLE_NODE(int nodeAddress, float towardsCoorsX, float towardsCoorsY, float towardsCoorsZ, Vector3* centrePoint, float* heading) // 0x809549AFC7AEC597
function PATHFIND.GET_SPAWN_COORDS_FOR_VEHICLE_NODE(nodeAddress, towardsCoorsX, towardsCoorsY, towardsCoorsZ, centrePoint, heading)
  return native.invoke(
    Type.Vector3, 3810, true,
    arg(Type.Int, nodeAddress),
    arg(Type.Float, towardsCoorsX),
    arg(Type.Float, towardsCoorsY),
    arg(Type.Float, towardsCoorsZ),
    arg(Type.Vector3, centrePoint),
    arg(Type.Float, heading)
  )
end

-- void GET_STREET_NAME_AT_COORD(float x, float y, float z, Hash* streetName, Hash* crossingRoad) // 0x2EB41072B4C1E4C0
--[[
Determines the name of the street which is the closest to the given coordinates.

x,y,z - the coordinates of the street
streetName - returns a hash to the name of the street the coords are on
crossingRoad - if the coordinates are on an intersection, a hash to the name of the crossing road

Note: the names are returned as hashes, the strings can be returned using the function HUD::GET_STREET_NAME_FROM_HASH_KEY.
--]]
function PATHFIND.GET_STREET_NAME_AT_COORD(x, y, z, streetName, crossingRoad)
  native.invoke(
    Type.Void, 3811, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Hash, streetName),
    arg(Type.Hash, crossingRoad)
  )
end

-- int GENERATE_DIRECTIONS_TO_COORD(float x, float y, float z, BOOL p3, int* direction, float* p5, float* distToNxJunction) // 0xF90125F1F79ECDF8
--[[
p3 is 0 in the only game script occurrence (trevor3) but 1 doesn't seem to make a difference

distToNxJunction seems to be the distance in metres * 10.0f

direction:
0 = This happens randomly during the drive for seemingly no reason but if you consider that this native is only used in trevor3, it seems to mean "Next frame, stop whatever's being said and tell the player the direction."
1 = Route is being calculated or the player is going in the wrong direction
2 = Please Proceed the Highlighted Route
3 = In (distToNxJunction) Turn Left
4 = In (distToNxJunction) Turn Right
5 = In (distToNxJunction) Keep Straight
6 = In (distToNxJunction) Turn Sharply To The Left
7 = In (distToNxJunction) Turn Sharply To The Right
8 = Route is being recalculated or the navmesh is confusing. This happens randomly during the drive but consistently at {2044.0358, 2996.6116, 44.9717} if you face towards the bar and the route needs you to turn right. In that particular case, it could be a bug with how the turn appears to be 270 deg. CCW instead of "right." Either way, this seems to be the engine saying "I don't know the route right now."

return value set to 0 always
--]]
function PATHFIND.GENERATE_DIRECTIONS_TO_COORD(x, y, z, p3, direction, p5, distToNxJunction)
  return native.invoke(
    Type.Int, 3812, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Bool, p3),
    arg(Type.Int, direction),
    arg(Type.Float, p5),
    arg(Type.Float, distToNxJunction)
  )
end

-- void SET_IGNORE_NO_GPS_FLAG(BOOL toggle) // 0x72751156E7678833
function PATHFIND.SET_IGNORE_NO_GPS_FLAG(toggle)
  native.invoke(
    Type.Void, 3813, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_IGNORE_NO_GPS_FLAG_UNTIL_FIRST_NORMAL_NODE(BOOL toggle) // 0x1FC289A0C3FF470F
--[[
See: SET_BLIP_ROUTE
--]]
function PATHFIND.SET_IGNORE_NO_GPS_FLAG_UNTIL_FIRST_NORMAL_NODE(toggle)
  native.invoke(
    Type.Void, 3814, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_GPS_DISABLED_ZONE(float x1, float y1, float z1, float x2, float y2, float z3) // 0xDC20483CD3DD5201
function PATHFIND.SET_GPS_DISABLED_ZONE(x1, y1, z1, x2, y2, z3)
  native.invoke(
    Type.Void, 3815, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z3)
  )
end

-- int GET_GPS_BLIP_ROUTE_LENGTH() // 0xBBB45C3CF5C8AA85
function PATHFIND.GET_GPS_BLIP_ROUTE_LENGTH()
  return native.invoke(
    Type.Int, 3816, false
  )
end

-- BOOL GET_POS_ALONG_GPS_TYPE_ROUTE(Vector3* result, BOOL p1, float p2, int p3) // 0xF3162836C28F9DA5
--[[
p3 can be 0, 1 or 2.
--]]
function PATHFIND.GET_POS_ALONG_GPS_TYPE_ROUTE(result, p1, p2, p3)
  return native.invoke(
    Type.Bool, 3817, true,
    arg(Type.Vector3, result),
    arg(Type.Bool, p1),
    arg(Type.Float, p2),
    arg(Type.Int, p3)
  )
end

-- BOOL GET_GPS_BLIP_ROUTE_FOUND() // 0x869DAACBBE9FA006
function PATHFIND.GET_GPS_BLIP_ROUTE_FOUND()
  return native.invoke(
    Type.Bool, 3818, false
  )
end

-- BOOL GET_ROAD_BOUNDARY_USING_HEADING(float x, float y, float z, float heading, Vector3* outPosition) // 0xA0F8A7517A273C05
function PATHFIND.GET_ROAD_BOUNDARY_USING_HEADING(x, y, z, heading, outPosition)
  return native.invoke(
    Type.Bool, 3819, true,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, heading),
    arg(Type.Vector3, outPosition)
  )
end

-- BOOL GET_POSITION_BY_SIDE_OF_ROAD(float x, float y, float z, int p3, Vector3* outPosition) // 0x16F46FB18C8009E4
function PATHFIND.GET_POSITION_BY_SIDE_OF_ROAD(x, y, z, p3, outPosition)
  return native.invoke(
    Type.Bool, 3820, true,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, p3),
    arg(Type.Vector3, outPosition)
  )
end

-- BOOL IS_POINT_ON_ROAD(float x, float y, float z, Vehicle vehicle) // 0x125BF4ABFC536B09
--[[
Gets a value indicating whether the specified position is on a road.
The vehicle parameter is not implemented (ignored).
--]]
function PATHFIND.IS_POINT_ON_ROAD(x, y, z, vehicle)
  return native.invoke(
    Type.Bool, 3821, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Vehicle, vehicle)
  )
end

-- int GET_NEXT_GPS_DISABLED_ZONE_INDEX() // 0xD3A6A0EF48823A8C
--[[
Gets the next zone that has been disabled using SET_GPS_DISABLED_ZONE_AT_INDEX.
--]]
function PATHFIND.GET_NEXT_GPS_DISABLED_ZONE_INDEX()
  return native.invoke(
    Type.Int, 3822, false
  )
end

-- void SET_GPS_DISABLED_ZONE_AT_INDEX(float x1, float y1, float z1, float x2, float y2, float z2, int index) // 0xD0BC1C6FB18EE154
--[[
Disables the GPS route displayed on the minimap while within a certain zone (area). When in a disabled zone and creating a waypoint, the GPS route is not shown on the minimap until you are outside of the zone. When disabled, the direct distance is shown on minimap opposed to distance to travel. Seems to only work before setting a waypoint.
You can clear the disabled zone with CLEAR_GPS_DISABLED_ZONE_AT_INDEX.

**Setting a waypoint at the same coordinate:**
Disabled Zone: https://i.imgur.com/P9VUuxM.png
Enabled Zone (normal): https://i.imgur.com/BPi24aw.png
--]]
function PATHFIND.SET_GPS_DISABLED_ZONE_AT_INDEX(x1, y1, z1, x2, y2, z2, index)
  native.invoke(
    Type.Void, 3823, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Int, index)
  )
end

-- void CLEAR_GPS_DISABLED_ZONE_AT_INDEX(int index) // 0x2801D0012266DF07
--[[
Clears a disabled GPS route area from a certain index previously set using `SET_GPS_DISABLED_ZONE_AT_INDEX`.
--]]
function PATHFIND.CLEAR_GPS_DISABLED_ZONE_AT_INDEX(index)
  native.invoke(
    Type.Void, 3824, false,
    arg(Type.Int, index)
  )
end

-- void ADD_NAVMESH_REQUIRED_REGION(float x, float y, float radius) // 0x387EAD7EE42F6685
function PATHFIND.ADD_NAVMESH_REQUIRED_REGION(x, y, radius)
  native.invoke(
    Type.Void, 3825, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, radius)
  )
end

-- void REMOVE_NAVMESH_REQUIRED_REGIONS() // 0x916F0A3CDEC3445E
function PATHFIND.REMOVE_NAVMESH_REQUIRED_REGIONS()
  native.invoke(
    Type.Void, 3826, false
  )
end

-- BOOL IS_NAVMESH_REQUIRED_REGION_IN_USE() // 0x705A844002B39DC0
function PATHFIND.IS_NAVMESH_REQUIRED_REGION_IN_USE()
  return native.invoke(
    Type.Bool, 3827, false
  )
end

-- void DISABLE_NAVMESH_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, BOOL toggle) // 0x4C8872D8CDBE1B8B
--[[
Set toggle true to disable navmesh.
Set toggle false to enable navmesh.
--]]
function PATHFIND.DISABLE_NAVMESH_IN_AREA(x1, y1, z1, x2, y2, z2, toggle)
  native.invoke(
    Type.Void, 3828, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Bool, toggle)
  )
end

-- BOOL ARE_ALL_NAVMESH_REGIONS_LOADED() // 0x8415D95B194A3AEA
function PATHFIND.ARE_ALL_NAVMESH_REGIONS_LOADED()
  return native.invoke(
    Type.Bool, 3829, false
  )
end

-- BOOL IS_NAVMESH_LOADED_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2) // 0xF813C7E63F9062A5
--[[
Returns whether navmesh for the region is loaded. The region is a rectangular prism defined by it's top left deepest corner to it's bottom right shallowest corner.

If you can re-word this so it makes more sense, please do. I'm horrible with words sometimes...
--]]
function PATHFIND.IS_NAVMESH_LOADED_IN_AREA(x1, y1, z1, x2, y2, z2)
  return native.invoke(
    Type.Bool, 3830, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2)
  )
end

-- int GET_NUM_NAVMESHES_EXISTING_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2) // 0x01708E8DD3FF8C65
function PATHFIND.GET_NUM_NAVMESHES_EXISTING_IN_AREA(x1, y1, z1, x2, y2, z2)
  return native.invoke(
    Type.Int, 3831, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2)
  )
end

-- int ADD_NAVMESH_BLOCKING_OBJECT(float p0, float p1, float p2, float p3, float p4, float p5, float p6, BOOL p7, Any p8) // 0xFCD5C8E06E502F5A
function PATHFIND.ADD_NAVMESH_BLOCKING_OBJECT(p0, p1, p2, p3, p4, p5, p6, p7, p8)
  return native.invoke(
    Type.Int, 3832, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Float, p6),
    arg(Type.Bool, p7),
    arg(Type.Any, p8)
  )
end

-- void UPDATE_NAVMESH_BLOCKING_OBJECT(Any p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, Any p8) // 0x109E99373F290687
function PATHFIND.UPDATE_NAVMESH_BLOCKING_OBJECT(p0, p1, p2, p3, p4, p5, p6, p7, p8)
  native.invoke(
    Type.Void, 3833, false,
    arg(Type.Any, p0),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Float, p6),
    arg(Type.Float, p7),
    arg(Type.Any, p8)
  )
end

-- void REMOVE_NAVMESH_BLOCKING_OBJECT(Any p0) // 0x46399A7895957C0E
function PATHFIND.REMOVE_NAVMESH_BLOCKING_OBJECT(p0)
  native.invoke(
    Type.Void, 3834, false,
    arg(Type.Any, p0)
  )
end

-- BOOL DOES_NAVMESH_BLOCKING_OBJECT_EXIST(Any p0) // 0x0EAEB0DB4B132399
function PATHFIND.DOES_NAVMESH_BLOCKING_OBJECT_EXIST(p0)
  return native.invoke(
    Type.Bool, 3835, false,
    arg(Type.Any, p0)
  )
end

-- float GET_APPROX_HEIGHT_FOR_POINT(float x, float y) // 0x29C24BFBED8AB8FB
--[[
Returns CGameWorldHeightMap's maximum Z value at specified point (grid node).
--]]
function PATHFIND.GET_APPROX_HEIGHT_FOR_POINT(x, y)
  return native.invoke(
    Type.Float, 3836, false,
    arg(Type.Float, x),
    arg(Type.Float, y)
  )
end

-- float GET_APPROX_HEIGHT_FOR_AREA(float x1, float y1, float x2, float y2) // 0x8ABE8608576D9CE3
--[[
Returns CGameWorldHeightMap's maximum Z among all grid nodes that intersect with the specified rectangle.
--]]
function PATHFIND.GET_APPROX_HEIGHT_FOR_AREA(x1, y1, x2, y2)
  return native.invoke(
    Type.Float, 3837, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, x2),
    arg(Type.Float, y2)
  )
end

-- float GET_APPROX_FLOOR_FOR_POINT(float x, float y) // 0x336511A34F2E5185
--[[
Returns CGameWorldHeightMap's minimum Z value at specified point (grid node).
--]]
function PATHFIND.GET_APPROX_FLOOR_FOR_POINT(x, y)
  return native.invoke(
    Type.Float, 3838, false,
    arg(Type.Float, x),
    arg(Type.Float, y)
  )
end

-- float GET_APPROX_FLOOR_FOR_AREA(float x1, float y1, float x2, float y2) // 0x3599D741C9AC6310
--[[
Returns CGameWorldHeightMap's minimum Z among all grid nodes that intersect with the specified rectangle.
--]]
function PATHFIND.GET_APPROX_FLOOR_FOR_AREA(x1, y1, x2, y2)
  return native.invoke(
    Type.Float, 3839, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, x2),
    arg(Type.Float, y2)
  )
end

-- float CALCULATE_TRAVEL_DISTANCE_BETWEEN_POINTS(float x1, float y1, float z1, float x2, float y2, float z2) // 0xADD95C7005C4A197
--[[
Calculates the travel distance between a set of points.

Doesn't seem to correlate with distance on gps sometimes.
This function returns the value 100000.0 over long distances, seems to be a failure mode result, potentially occurring when not all path nodes are loaded into pathfind.
--]]
function PATHFIND.CALCULATE_TRAVEL_DISTANCE_BETWEEN_POINTS(x1, y1, z1, x2, y2, z2)
  return native.invoke(
    Type.Float, 3840, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2)
  )
end


PED = {}

-- Ped CREATE_PED(int pedType, Hash modelHash, float x, float y, float z, float heading, BOOL isNetwork, BOOL bScriptHostPed) // 0xD49F9B0955C367DE
--[[
https://alloc8or.re/gta5/doc/enums/ePedType.txt

Full list of peds by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/peds.json
--]]
function PED.CREATE_PED(pedType, modelHash, x, y, z, heading, isNetwork, bScriptHostPed)
  return native.invoke(
    Type.Ped, 3841, false,
    arg(Type.Int, pedType),
    arg(Type.Hash, modelHash),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, heading),
    arg(Type.Bool, isNetwork),
    arg(Type.Bool, bScriptHostPed)
  )
end

-- void DELETE_PED(Ped* ped) // 0x9614299DCB53E54B
--[[
Deletes the specified ped, then sets the handle pointed to by the pointer to NULL.
--]]
function PED.DELETE_PED(ped)
  native.invoke(
    Type.Void, 3842, false,
    arg(Type.Ped, ped)
  )
end

-- Ped CLONE_PED(Ped ped, BOOL isNetwork, BOOL bScriptHostPed, BOOL copyHeadBlendFlag) // 0xEF29A16337FACADB
function PED.CLONE_PED(ped, isNetwork, bScriptHostPed, copyHeadBlendFlag)
  return native.invoke(
    Type.Ped, 3843, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, isNetwork),
    arg(Type.Bool, bScriptHostPed),
    arg(Type.Bool, copyHeadBlendFlag)
  )
end

-- Ped CLONE_PED_ALT(Ped ped, BOOL isNetwork, BOOL bScriptHostPed, BOOL copyHeadBlendFlag, BOOL p4) // 0x668FD40BCBA5DE48
function PED.CLONE_PED_ALT(ped, isNetwork, bScriptHostPed, copyHeadBlendFlag, p4)
  return native.invoke(
    Type.Ped, 3844, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, isNetwork),
    arg(Type.Bool, bScriptHostPed),
    arg(Type.Bool, copyHeadBlendFlag),
    arg(Type.Bool, p4)
  )
end

-- void CLONE_PED_TO_TARGET(Ped ped, Ped targetPed) // 0xE952D6431689AD9A
--[[
Copies ped's components and props to targetPed.
--]]
function PED.CLONE_PED_TO_TARGET(ped, targetPed)
  native.invoke(
    Type.Void, 3845, false,
    arg(Type.Ped, ped),
    arg(Type.Ped, targetPed)
  )
end

-- void CLONE_PED_TO_TARGET_ALT(Ped ped, Ped targetPed, BOOL p2) // 0x148B08C2D2ACB884
function PED.CLONE_PED_TO_TARGET_ALT(ped, targetPed, p2)
  native.invoke(
    Type.Void, 3846, false,
    arg(Type.Ped, ped),
    arg(Type.Ped, targetPed),
    arg(Type.Bool, p2)
  )
end

-- BOOL IS_PED_IN_VEHICLE(Ped ped, Vehicle vehicle, BOOL atGetIn) // 0xA3EE4A07279BB9DB
--[[
Gets a value indicating whether the specified ped is in the specified vehicle.

If 'atGetIn' is false, the function will not return true until the ped is sitting in the vehicle and is about to close the door. If it's true, the function returns true the moment the ped starts to get onto the seat (after opening the door). Eg. if false, and the ped is getting into a submersible, the function will not return true until the ped has descended down into the submersible and gotten into the seat, while if it's true, it'll return true the moment the hatch has been opened and the ped is about to descend into the submersible.
--]]
function PED.IS_PED_IN_VEHICLE(ped, vehicle, atGetIn)
  return native.invoke(
    Type.Bool, 3847, false,
    arg(Type.Ped, ped),
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, atGetIn)
  )
end

-- BOOL IS_PED_IN_MODEL(Ped ped, Hash modelHash) // 0x796D90EFB19AA332
function PED.IS_PED_IN_MODEL(ped, modelHash)
  return native.invoke(
    Type.Bool, 3848, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, modelHash)
  )
end

-- BOOL IS_PED_IN_ANY_VEHICLE(Ped ped, BOOL atGetIn) // 0x997ABD671D25CA0B
--[[
Gets a value indicating whether the specified ped is in any vehicle.

If 'atGetIn' is false, the function will not return true until the ped is sitting in the vehicle and is about to close the door. If it's true, the function returns true the moment the ped starts to get onto the seat (after opening the door). Eg. if false, and the ped is getting into a submersible, the function will not return true until the ped has descended down into the submersible and gotten into the seat, while if it's true, it'll return true the moment the hatch has been opened and the ped is about to descend into the submersible.
--]]
function PED.IS_PED_IN_ANY_VEHICLE(ped, atGetIn)
  return native.invoke(
    Type.Bool, 3849, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, atGetIn)
  )
end

-- BOOL IS_COP_PED_IN_AREA_3D(float x1, float y1, float z1, float x2, float y2, float z2) // 0x16EC4839969F9F5E
--[[
xyz - relative to the world origin.
--]]
function PED.IS_COP_PED_IN_AREA_3D(x1, y1, z1, x2, y2, z2)
  return native.invoke(
    Type.Bool, 3850, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2)
  )
end

-- BOOL IS_PED_INJURED(Ped ped) // 0x84A2DD9AC37C35C1
--[[
Gets a value indicating whether this ped's health is below its injured threshold.

The default threshold is 100.
--]]
function PED.IS_PED_INJURED(ped)
  return native.invoke(
    Type.Bool, 3851, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_HURT(Ped ped) // 0x5983BB449D7FDB12
--[[
Returns whether the specified ped is hurt.
--]]
function PED.IS_PED_HURT(ped)
  return native.invoke(
    Type.Bool, 3852, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_FATALLY_INJURED(Ped ped) // 0xD839450756ED5A80
--[[
Gets a value indicating whether this ped's health is below its fatally injured threshold. The default threshold is 100.
If the handle is invalid, the function returns true.
--]]
function PED.IS_PED_FATALLY_INJURED(ped)
  return native.invoke(
    Type.Bool, 3853, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_DEAD_OR_DYING(Ped ped, BOOL p1) // 0x3317DEDB88C95038
--[[
Seems to consistently return true if the ped is dead.

p1 is always passed 1 in the scripts.

I suggest to remove "OR_DYING" part, because it does not detect dying phase.

That's what the devs call it, cry about it.

lol
--]]
function PED.IS_PED_DEAD_OR_DYING(ped, p1)
  return native.invoke(
    Type.Bool, 3854, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1)
  )
end

-- BOOL IS_CONVERSATION_PED_DEAD(Ped ped) // 0xE0A0AEC214B1FABA
function PED.IS_CONVERSATION_PED_DEAD(ped)
  return native.invoke(
    Type.Bool, 3855, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_AIMING_FROM_COVER(Ped ped) // 0x3998B1276A3300E5
function PED.IS_PED_AIMING_FROM_COVER(ped)
  return native.invoke(
    Type.Bool, 3856, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_RELOADING(Ped ped) // 0x24B100C68C645951
--[[
Returns whether the specified ped is reloading.
--]]
function PED.IS_PED_RELOADING(ped)
  return native.invoke(
    Type.Bool, 3857, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_A_PLAYER(Ped ped) // 0x12534C348C6CB68B
--[[
Returns true if the given ped has a valid pointer to CPlayerInfo in its CPed class. That's all.
--]]
function PED.IS_PED_A_PLAYER(ped)
  return native.invoke(
    Type.Bool, 3858, false,
    arg(Type.Ped, ped)
  )
end

-- Ped CREATE_PED_INSIDE_VEHICLE(Vehicle vehicle, int pedType, Hash modelHash, int seat, BOOL isNetwork, BOOL bScriptHostPed) // 0x7DD959874C1FD534
--[[
pedType: see CREATE_PED

Full list of peds by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/peds.json
--]]
function PED.CREATE_PED_INSIDE_VEHICLE(vehicle, pedType, modelHash, seat, isNetwork, bScriptHostPed)
  return native.invoke(
    Type.Ped, 3859, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, pedType),
    arg(Type.Hash, modelHash),
    arg(Type.Int, seat),
    arg(Type.Bool, isNetwork),
    arg(Type.Bool, bScriptHostPed)
  )
end

-- void SET_PED_DESIRED_HEADING(Ped ped, float heading) // 0xAA5A7ECE2AA8FE70
function PED.SET_PED_DESIRED_HEADING(ped, heading)
  native.invoke(
    Type.Void, 3860, false,
    arg(Type.Ped, ped),
    arg(Type.Float, heading)
  )
end

-- void FORCE_ALL_HEADING_VALUES_TO_ALIGN(Ped ped) // 0xFF287323B0E2C69A
function PED.FORCE_ALL_HEADING_VALUES_TO_ALIGN(ped)
  native.invoke(
    Type.Void, 3861, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_FACING_PED(Ped ped, Ped otherPed, float angle) // 0xD71649DB0A545AA3
--[[
angle is ped's view cone
--]]
function PED.IS_PED_FACING_PED(ped, otherPed, angle)
  return native.invoke(
    Type.Bool, 3862, false,
    arg(Type.Ped, ped),
    arg(Type.Ped, otherPed),
    arg(Type.Float, angle)
  )
end

-- BOOL IS_PED_IN_MELEE_COMBAT(Ped ped) // 0x4E209B2C1EAD5159
--[[
Notes: The function only returns true while the ped is: 
A.) Swinging a random melee attack (including pistol-whipping)

B.) Reacting to being hit by a melee attack (including pistol-whipping)

C.) Is locked-on to an enemy (arms up, strafing/skipping in the default fighting-stance, ready to dodge+counter). 

You don't have to be holding the melee-targetting button to be in this stance; you stay in it by default for a few seconds after swinging at someone. If you do a sprinting punch, it returns true for the duration of the punch animation and then returns false again, even if you've punched and made-angry many peds
--]]
function PED.IS_PED_IN_MELEE_COMBAT(ped)
  return native.invoke(
    Type.Bool, 3863, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_STOPPED(Ped ped) // 0x530944F6F4B8A214
--[[
Returns true if the ped doesn't do any movement. If the ped is being pushed forwards by using APPLY_FORCE_TO_ENTITY for example, the function returns false.
--]]
function PED.IS_PED_STOPPED(ped)
  return native.invoke(
    Type.Bool, 3864, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_SHOOTING_IN_AREA(Ped ped, float x1, float y1, float z1, float x2, float y2, float z2, BOOL p7, BOOL p8) // 0x7E9DFE24AC1E58EF
function PED.IS_PED_SHOOTING_IN_AREA(ped, x1, y1, z1, x2, y2, z2, p7, p8)
  return native.invoke(
    Type.Bool, 3865, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Bool, p7),
    arg(Type.Bool, p8)
  )
end

-- BOOL IS_ANY_PED_SHOOTING_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, BOOL p6, BOOL p7) // 0xA0D3D71EA1086C55
function PED.IS_ANY_PED_SHOOTING_IN_AREA(x1, y1, z1, x2, y2, z2, p6, p7)
  return native.invoke(
    Type.Bool, 3866, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Bool, p6),
    arg(Type.Bool, p7)
  )
end

-- BOOL IS_PED_SHOOTING(Ped ped) // 0x34616828CD07F1A1
--[[
Returns whether the specified ped is shooting.
--]]
function PED.IS_PED_SHOOTING(ped)
  return native.invoke(
    Type.Bool, 3867, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_ACCURACY(Ped ped, int accuracy) // 0x7AEFB85C1D49DEB6
--[[
accuracy = 0-100, 100 being perfectly accurate
--]]
function PED.SET_PED_ACCURACY(ped, accuracy)
  native.invoke(
    Type.Void, 3868, false,
    arg(Type.Ped, ped),
    arg(Type.Int, accuracy)
  )
end

-- int GET_PED_ACCURACY(Ped ped) // 0x37F4AD56ECBC0CD6
function PED.GET_PED_ACCURACY(ped)
  return native.invoke(
    Type.Int, 3869, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_AMBIENT_LAW_PED_ACCURACY_MODIFIER(float multiplier) // 0x87DDEB611B329A9C
function PED.SET_AMBIENT_LAW_PED_ACCURACY_MODIFIER(multiplier)
  native.invoke(
    Type.Void, 3870, false,
    arg(Type.Float, multiplier)
  )
end

-- BOOL IS_PED_MODEL(Ped ped, Hash modelHash) // 0xC9D55B1A358A5BF7
function PED.IS_PED_MODEL(ped, modelHash)
  return native.invoke(
    Type.Bool, 3871, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, modelHash)
  )
end

-- void EXPLODE_PED_HEAD(Ped ped, Hash weaponHash) // 0x2D05CED3A38D0F3A
--[[
Forces the ped to fall back and kills it.

It doesn't really explode the ped's head but it kills the ped
--]]
function PED.EXPLODE_PED_HEAD(ped, weaponHash)
  native.invoke(
    Type.Void, 3872, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash)
  )
end

-- void REMOVE_PED_ELEGANTLY(Ped* ped) // 0xAC6D445B994DF95E
--[[
Judging purely from a quick disassembly, if the ped is in a vehicle, the ped will be deleted immediately. If not, it'll be marked as no longer needed. - very elegant..
--]]
function PED.REMOVE_PED_ELEGANTLY(ped)
  native.invoke(
    Type.Void, 3873, false,
    arg(Type.Ped, ped)
  )
end

-- void ADD_ARMOUR_TO_PED(Ped ped, int amount) // 0x5BA652A0CD14DF2F
--[[
Same as SET_PED_ARMOUR, but ADDS 'amount' to the armor the Ped already has.
--]]
function PED.ADD_ARMOUR_TO_PED(ped, amount)
  native.invoke(
    Type.Void, 3874, false,
    arg(Type.Ped, ped),
    arg(Type.Int, amount)
  )
end

-- void SET_PED_ARMOUR(Ped ped, int amount) // 0xCEA04D83135264CC
--[[
Sets the armor of the specified ped.

ped: The Ped to set the armor of.
amount: A value between 0 and 100 indicating the value to set the Ped's armor to.
--]]
function PED.SET_PED_ARMOUR(ped, amount)
  native.invoke(
    Type.Void, 3875, false,
    arg(Type.Ped, ped),
    arg(Type.Int, amount)
  )
end

-- void SET_PED_INTO_VEHICLE(Ped ped, Vehicle vehicle, int seatIndex) // 0xF75B0D629E1C063D
--[[
Ped: The ped to warp.
vehicle: The vehicle to warp the ped into.
Seat_Index: [-1 is driver seat, -2 first free passenger seat]

Moreinfo of Seat Index
DriverSeat = -1
Passenger = 0
Left Rear = 1
RightRear = 2
--]]
function PED.SET_PED_INTO_VEHICLE(ped, vehicle, seatIndex)
  native.invoke(
    Type.Void, 3876, false,
    arg(Type.Ped, ped),
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, seatIndex)
  )
end

-- void SET_PED_ALLOW_VEHICLES_OVERRIDE(Ped ped, BOOL toggle) // 0x3C028C636A414ED9
function PED.SET_PED_ALLOW_VEHICLES_OVERRIDE(ped, toggle)
  native.invoke(
    Type.Void, 3877, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- BOOL CAN_CREATE_RANDOM_PED(BOOL p0) // 0x3E8349C08E4B82E4
function PED.CAN_CREATE_RANDOM_PED(p0)
  return native.invoke(
    Type.Bool, 3878, false,
    arg(Type.Bool, p0)
  )
end

-- Ped CREATE_RANDOM_PED(float posX, float posY, float posZ) // 0xB4AC7D0CF06BFE8F
--[[
vb.net
Dim ped_handle As Integer
                    With Game.Player.Character
                        Dim pos As Vector3 = .Position + .ForwardVector * 3
                        ped_handle = Native.Function.Call(Of Integer)(Hash.CREATE_RANDOM_PED, pos.X, pos.Y, pos.Z)
                    End With

Creates a Ped at the specified location, returns the Ped Handle.  
Ped will not act until SET_PED_AS_NO_LONGER_NEEDED is called.
--]]
function PED.CREATE_RANDOM_PED(posX, posY, posZ)
  return native.invoke(
    Type.Ped, 3879, false,
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ)
  )
end

-- Ped CREATE_RANDOM_PED_AS_DRIVER(Vehicle vehicle, BOOL returnHandle) // 0x9B62392B474F44A0
function PED.CREATE_RANDOM_PED_AS_DRIVER(vehicle, returnHandle)
  return native.invoke(
    Type.Ped, 3880, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, returnHandle)
  )
end

-- BOOL CAN_CREATE_RANDOM_DRIVER() // 0xB8EB95E5B4E56978
function PED.CAN_CREATE_RANDOM_DRIVER()
  return native.invoke(
    Type.Bool, 3881, false
  )
end

-- BOOL CAN_CREATE_RANDOM_BIKE_RIDER() // 0xEACEEDA81751915C
function PED.CAN_CREATE_RANDOM_BIKE_RIDER()
  return native.invoke(
    Type.Bool, 3882, false
  )
end

-- void SET_PED_MOVE_ANIMS_BLEND_OUT(Ped ped) // 0x9E8C908F41584ECD
function PED.SET_PED_MOVE_ANIMS_BLEND_OUT(ped)
  native.invoke(
    Type.Void, 3883, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_CAN_BE_DRAGGED_OUT(Ped ped, BOOL toggle) // 0xC1670E958EEE24E5
function PED.SET_PED_CAN_BE_DRAGGED_OUT(ped, toggle)
  native.invoke(
    Type.Void, 3884, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_ALLOW_HURT_COMBAT_FOR_ALL_MISSION_PEDS(BOOL toggle) // 0xF2BEBCDFAFDAA19E
--[[
ntoggle was always false except in one instance (b678).

The one time this is set to true seems to do with when you fail the mission.
--]]
function PED.SET_PED_ALLOW_HURT_COMBAT_FOR_ALL_MISSION_PEDS(toggle)
  native.invoke(
    Type.Void, 3885, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_PED_MALE(Ped ped) // 0x6D9F5FAA7488BA46
--[[
Returns true/false if the ped is/isn't male.
--]]
function PED.IS_PED_MALE(ped)
  return native.invoke(
    Type.Bool, 3886, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_HUMAN(Ped ped) // 0xB980061DA992779D
--[[
Returns true/false if the ped is/isn't humanoid.
--]]
function PED.IS_PED_HUMAN(ped)
  return native.invoke(
    Type.Bool, 3887, false,
    arg(Type.Ped, ped)
  )
end

-- Vehicle GET_VEHICLE_PED_IS_IN(Ped ped, BOOL includeEntering) // 0x9A9112A0FE9A4713
--[[
Gets the vehicle the specified Ped is in. Returns 0 if the ped is/was not in a vehicle.
--]]
function PED.GET_VEHICLE_PED_IS_IN(ped, includeEntering)
  return native.invoke(
    Type.Vehicle, 3888, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, includeEntering)
  )
end

-- void RESET_PED_LAST_VEHICLE(Ped ped) // 0xBB8DE8CF6A8DD8BB
--[[
Resets the value for the last vehicle driven by the Ped.
--]]
function PED.RESET_PED_LAST_VEHICLE(ped)
  native.invoke(
    Type.Void, 3889, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_DENSITY_MULTIPLIER_THIS_FRAME(float multiplier) // 0x95E3D6257B166CF2
function PED.SET_PED_DENSITY_MULTIPLIER_THIS_FRAME(multiplier)
  native.invoke(
    Type.Void, 3890, false,
    arg(Type.Float, multiplier)
  )
end

-- void SET_SCENARIO_PED_DENSITY_MULTIPLIER_THIS_FRAME(float p0, float p1) // 0x7A556143A1C03898
function PED.SET_SCENARIO_PED_DENSITY_MULTIPLIER_THIS_FRAME(p0, p1)
  native.invoke(
    Type.Void, 3891, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1)
  )
end

-- void SUPPRESS_AMBIENT_PED_AGGRESSIVE_CLEANUP_THIS_FRAME() // 0x5A7F62FDA59759BD
function PED.SUPPRESS_AMBIENT_PED_AGGRESSIVE_CLEANUP_THIS_FRAME()
  native.invoke(
    Type.Void, 3892, false
  )
end

-- void SET_SCRIPTED_CONVERSION_COORD_THIS_FRAME(float x, float y, float z) // 0x5086C7843552CF85
function PED.SET_SCRIPTED_CONVERSION_COORD_THIS_FRAME(x, y, z)
  native.invoke(
    Type.Void, 3893, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void SET_PED_NON_CREATION_AREA(float x1, float y1, float z1, float x2, float y2, float z2) // 0xEE01041D559983EA
--[[
The distance between these points, is the diagonal of a box (remember it's 3D).
--]]
function PED.SET_PED_NON_CREATION_AREA(x1, y1, z1, x2, y2, z2)
  native.invoke(
    Type.Void, 3894, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2)
  )
end

-- void CLEAR_PED_NON_CREATION_AREA() // 0x2E05208086BA0651
function PED.CLEAR_PED_NON_CREATION_AREA()
  native.invoke(
    Type.Void, 3895, false
  )
end

-- void INSTANTLY_FILL_PED_POPULATION() // 0x4759CC730F947C81
function PED.INSTANTLY_FILL_PED_POPULATION()
  native.invoke(
    Type.Void, 3896, false
  )
end

-- BOOL IS_PED_ON_MOUNT(Ped ped) // 0x460BC76A0E10655E
--[[
Same function call as PED::GET_MOUNT, aka just returns 0
--]]
function PED.IS_PED_ON_MOUNT(ped)
  return native.invoke(
    Type.Bool, 3897, false,
    arg(Type.Ped, ped)
  )
end

-- Ped GET_MOUNT(Ped ped) // 0xE7E11B8DCBED1058
--[[

Function just returns 0
void __fastcall ped__get_mount(NativeContext *a1)
{
  NativeContext *v1; // rbx@1

  v1 = a1;
  GetAddressOfPedFromScriptHandle(a1->Args->Arg1);
  v1->Returns->Item1= 0;
}
--]]
function PED.GET_MOUNT(ped)
  return native.invoke(
    Type.Ped, 3898, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_ON_VEHICLE(Ped ped) // 0x67722AEB798E5FAB
--[[
Gets a value indicating whether the specified ped is on top of any vehicle.

Return 1 when ped is on vehicle.
Return 0 when ped is not on a vehicle.

--]]
function PED.IS_PED_ON_VEHICLE(ped)
  return native.invoke(
    Type.Bool, 3899, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_ON_SPECIFIC_VEHICLE(Ped ped, Vehicle vehicle) // 0xEC5F66E459AF3BB2
function PED.IS_PED_ON_SPECIFIC_VEHICLE(ped, vehicle)
  return native.invoke(
    Type.Bool, 3900, false,
    arg(Type.Ped, ped),
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_PED_MONEY(Ped ped, int amount) // 0xA9C8960E8684C1B5
--[[
Maximum possible amount of money on MP is 2000. ~JX

-----------------------------------------------------------------------------

Maximum amount that a ped can theoretically have is 65535 (0xFFFF) since the amount is stored as an unsigned short (uint16_t) value.
--]]
function PED.SET_PED_MONEY(ped, amount)
  native.invoke(
    Type.Void, 3901, false,
    arg(Type.Ped, ped),
    arg(Type.Int, amount)
  )
end

-- int GET_PED_MONEY(Ped ped) // 0x3F69145BBA87BAE7
function PED.GET_PED_MONEY(ped)
  return native.invoke(
    Type.Int, 3902, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_HEALTH_SNACKS_CARRIED_BY_ALL_NEW_PEDS(float p0, Any p1) // 0xFF4803BC019852D9
--[[
Related to Peds dropping pickup_health_snack; p0 is a value between [0.0, 1.0] that corresponds to drop rate
--]]
function PED.SET_HEALTH_SNACKS_CARRIED_BY_ALL_NEW_PEDS(p0, p1)
  native.invoke(
    Type.Void, 3903, false,
    arg(Type.Float, p0),
    arg(Type.Any, p1)
  )
end

-- void SET_AMBIENT_PEDS_DROP_MONEY(BOOL p0) // 0x6B0E6172C9A4D902
function PED.SET_AMBIENT_PEDS_DROP_MONEY(p0)
  native.invoke(
    Type.Void, 3904, false,
    arg(Type.Bool, p0)
  )
end

-- void SET_BLOCKING_OF_NON_TEMPORARY_EVENTS_FOR_AMBIENT_PEDS_THIS_FRAME(BOOL p0) // 0x9911F4A24485F653
function PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS_FOR_AMBIENT_PEDS_THIS_FRAME(p0)
  native.invoke(
    Type.Void, 3905, false,
    arg(Type.Bool, p0)
  )
end

-- void SET_PED_SUFFERS_CRITICAL_HITS(Ped ped, BOOL toggle) // 0xEBD76F2359F190AC
--[[
Ped no longer takes critical damage modifiers if set to FALSE.
Example: Headshotting a player no longer one shots them. Instead they will take the same damage as a torso shot.
--]]
function PED.SET_PED_SUFFERS_CRITICAL_HITS(ped, toggle)
  native.invoke(
    Type.Void, 3906, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_UPPER_BODY_DAMAGE_ONLY(Ped ped, BOOL toggle) // 0xAFC976FD0580C7B3
function PED.SET_PED_UPPER_BODY_DAMAGE_ONLY(ped, toggle)
  native.invoke(
    Type.Void, 3907, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_PED_SITTING_IN_VEHICLE(Ped ped, Vehicle vehicle) // 0xA808AA1D79230FC2
--[[
Detect if ped is sitting in the specified vehicle
[True/False]
--]]
function PED.IS_PED_SITTING_IN_VEHICLE(ped, vehicle)
  return native.invoke(
    Type.Bool, 3908, false,
    arg(Type.Ped, ped),
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL IS_PED_SITTING_IN_ANY_VEHICLE(Ped ped) // 0x826AA586EDB9FEF8
--[[
Detect if ped is in any vehicle
[True/False]
--]]
function PED.IS_PED_SITTING_IN_ANY_VEHICLE(ped)
  return native.invoke(
    Type.Bool, 3909, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_ON_FOOT(Ped ped) // 0x01FEE67DB37F59B2
function PED.IS_PED_ON_FOOT(ped)
  return native.invoke(
    Type.Bool, 3910, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_ON_ANY_BIKE(Ped ped) // 0x94495889E22C6479
function PED.IS_PED_ON_ANY_BIKE(ped)
  return native.invoke(
    Type.Bool, 3911, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_PLANTING_BOMB(Ped ped) // 0xC70B5FAE151982D8
function PED.IS_PED_PLANTING_BOMB(ped)
  return native.invoke(
    Type.Bool, 3912, false,
    arg(Type.Ped, ped)
  )
end

-- Vector3 GET_DEAD_PED_PICKUP_COORDS(Ped ped, float p1, float p2) // 0xCD5003B097200F36
function PED.GET_DEAD_PED_PICKUP_COORDS(ped, p1, p2)
  return native.invoke(
    Type.Vector3, 3913, false,
    arg(Type.Ped, ped),
    arg(Type.Float, p1),
    arg(Type.Float, p2)
  )
end

-- BOOL IS_PED_IN_ANY_BOAT(Ped ped) // 0x2E0E1C2B4F6CB339
function PED.IS_PED_IN_ANY_BOAT(ped)
  return native.invoke(
    Type.Bool, 3914, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_IN_ANY_SUB(Ped ped) // 0xFBFC01CCFB35D99E
function PED.IS_PED_IN_ANY_SUB(ped)
  return native.invoke(
    Type.Bool, 3915, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_IN_ANY_HELI(Ped ped) // 0x298B91AE825E5705
function PED.IS_PED_IN_ANY_HELI(ped)
  return native.invoke(
    Type.Bool, 3916, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_IN_ANY_PLANE(Ped ped) // 0x5FFF4CFC74D8FB80
function PED.IS_PED_IN_ANY_PLANE(ped)
  return native.invoke(
    Type.Bool, 3917, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_IN_FLYING_VEHICLE(Ped ped) // 0x9134873537FA419C
function PED.IS_PED_IN_FLYING_VEHICLE(ped)
  return native.invoke(
    Type.Bool, 3918, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_DIES_IN_WATER(Ped ped, BOOL toggle) // 0x56CEF0AC79073BDE
function PED.SET_PED_DIES_IN_WATER(ped, toggle)
  native.invoke(
    Type.Void, 3919, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- BOOL GET_PED_DIES_IN_WATER(Ped ped) // 0x65671A4FB8218930
function PED.GET_PED_DIES_IN_WATER(ped)
  return native.invoke(
    Type.Bool, 3920, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_DIES_IN_SINKING_VEHICLE(Ped ped, BOOL toggle) // 0xD718A22995E2B4BC
function PED.SET_PED_DIES_IN_SINKING_VEHICLE(ped, toggle)
  native.invoke(
    Type.Void, 3921, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- int GET_PED_ARMOUR(Ped ped) // 0x9483AF821605B1D8
function PED.GET_PED_ARMOUR(ped)
  return native.invoke(
    Type.Int, 3922, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_STAY_IN_VEHICLE_WHEN_JACKED(Ped ped, BOOL toggle) // 0xEDF4079F9D54C9A1
function PED.SET_PED_STAY_IN_VEHICLE_WHEN_JACKED(ped, toggle)
  native.invoke(
    Type.Void, 3923, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_CAN_BE_SHOT_IN_VEHICLE(Ped ped, BOOL toggle) // 0xC7EF1BA83230BA07
function PED.SET_PED_CAN_BE_SHOT_IN_VEHICLE(ped, toggle)
  native.invoke(
    Type.Void, 3924, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- BOOL GET_PED_LAST_DAMAGE_BONE(Ped ped, int* outBone) // 0xD75960F6BD9EA49C
function PED.GET_PED_LAST_DAMAGE_BONE(ped, outBone)
  return native.invoke(
    Type.Bool, 3925, false,
    arg(Type.Ped, ped),
    arg(Type.Int, outBone)
  )
end

-- void CLEAR_PED_LAST_DAMAGE_BONE(Ped ped) // 0x8EF6B7AC68E2F01B
function PED.CLEAR_PED_LAST_DAMAGE_BONE(ped)
  native.invoke(
    Type.Void, 3926, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_AI_WEAPON_DAMAGE_MODIFIER(float value) // 0x1B1E2A40A65B8521
function PED.SET_AI_WEAPON_DAMAGE_MODIFIER(value)
  native.invoke(
    Type.Void, 3927, false,
    arg(Type.Float, value)
  )
end

-- void RESET_AI_WEAPON_DAMAGE_MODIFIER() // 0xEA16670E7BA4743C
function PED.RESET_AI_WEAPON_DAMAGE_MODIFIER()
  native.invoke(
    Type.Void, 3928, false
  )
end

-- void SET_AI_MELEE_WEAPON_DAMAGE_MODIFIER(float modifier) // 0x66460DEDDD417254
function PED.SET_AI_MELEE_WEAPON_DAMAGE_MODIFIER(modifier)
  native.invoke(
    Type.Void, 3929, false,
    arg(Type.Float, modifier)
  )
end

-- void RESET_AI_MELEE_WEAPON_DAMAGE_MODIFIER() // 0x46E56A7CD1D63C3F
function PED.RESET_AI_MELEE_WEAPON_DAMAGE_MODIFIER()
  native.invoke(
    Type.Void, 3930, false
  )
end

-- void SET_TREAT_AS_AMBIENT_PED_FOR_DRIVER_LOCKON(Ped ped, BOOL p1) // 0x2F3C3D9F50681DE4
function PED.SET_TREAT_AS_AMBIENT_PED_FOR_DRIVER_LOCKON(ped, p1)
  native.invoke(
    Type.Void, 3931, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1)
  )
end

-- void SET_PED_CAN_BE_TARGETTED(Ped ped, BOOL toggle) // 0x63F58F7C80513AAD
function PED.SET_PED_CAN_BE_TARGETTED(ped, toggle)
  native.invoke(
    Type.Void, 3932, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_CAN_BE_TARGETTED_BY_TEAM(Ped ped, int team, BOOL toggle) // 0xBF1CA77833E58F2C
function PED.SET_PED_CAN_BE_TARGETTED_BY_TEAM(ped, team, toggle)
  native.invoke(
    Type.Void, 3933, false,
    arg(Type.Ped, ped),
    arg(Type.Int, team),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_CAN_BE_TARGETTED_BY_PLAYER(Ped ped, Player player, BOOL toggle) // 0x66B57B72E0836A76
function PED.SET_PED_CAN_BE_TARGETTED_BY_PLAYER(ped, player, toggle)
  native.invoke(
    Type.Void, 3934, false,
    arg(Type.Ped, ped),
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- void SET_ALLOW_LOCKON_TO_PED_IF_FRIENDLY(Ped ped, BOOL toggle) // 0x061CB768363D6424
function PED.SET_ALLOW_LOCKON_TO_PED_IF_FRIENDLY(ped, toggle)
  native.invoke(
    Type.Void, 3935, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_USE_CAMERA_HEADING_FOR_DESIRED_DIRECTION_LOCK_ON_TEST(Ped ped, BOOL toggle) // 0xFD325494792302D7
function PED.SET_USE_CAMERA_HEADING_FOR_DESIRED_DIRECTION_LOCK_ON_TEST(ped, toggle)
  native.invoke(
    Type.Void, 3936, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_PED_IN_ANY_POLICE_VEHICLE(Ped ped) // 0x0BD04E29640C9C12
function PED.IS_PED_IN_ANY_POLICE_VEHICLE(ped)
  return native.invoke(
    Type.Bool, 3937, false,
    arg(Type.Ped, ped)
  )
end

-- void FORCE_PED_TO_OPEN_PARACHUTE(Ped ped) // 0x16E42E800B472221
function PED.FORCE_PED_TO_OPEN_PARACHUTE(ped)
  native.invoke(
    Type.Void, 3938, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_IN_PARACHUTE_FREE_FALL(Ped ped) // 0x7DCE8BDA0F1C1200
function PED.IS_PED_IN_PARACHUTE_FREE_FALL(ped)
  return native.invoke(
    Type.Bool, 3939, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_FALLING(Ped ped) // 0xFB92A102F1C4DFA3
function PED.IS_PED_FALLING(ped)
  return native.invoke(
    Type.Bool, 3940, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_JUMPING(Ped ped) // 0xCEDABC5900A0BF97
function PED.IS_PED_JUMPING(ped)
  return native.invoke(
    Type.Bool, 3941, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_LANDING(Any p0) // 0x412F1364FA066CFB
function PED.IS_PED_LANDING(p0)
  return native.invoke(
    Type.Bool, 3942, false,
    arg(Type.Any, p0)
  )
end

-- BOOL IS_PED_DOING_A_BEAST_JUMP(Any p0) // 0x451D05012CCEC234
function PED.IS_PED_DOING_A_BEAST_JUMP(p0)
  return native.invoke(
    Type.Bool, 3943, false,
    arg(Type.Any, p0)
  )
end

-- BOOL IS_PED_CLIMBING(Ped ped) // 0x53E8CB4F48BFE623
function PED.IS_PED_CLIMBING(ped)
  return native.invoke(
    Type.Bool, 3944, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_VAULTING(Ped ped) // 0x117C70D1F5730B5E
function PED.IS_PED_VAULTING(ped)
  return native.invoke(
    Type.Bool, 3945, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_DIVING(Ped ped) // 0x5527B8246FEF9B11
function PED.IS_PED_DIVING(ped)
  return native.invoke(
    Type.Bool, 3946, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_JUMPING_OUT_OF_VEHICLE(Ped ped) // 0x433DDFFE2044B636
function PED.IS_PED_JUMPING_OUT_OF_VEHICLE(ped)
  return native.invoke(
    Type.Bool, 3947, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_OPENING_DOOR(Ped ped) // 0x26AF0E8E30BD2A2C
--[[
Returns true if the ped is currently opening a door (CTaskOpenDoor).
--]]
function PED.IS_PED_OPENING_DOOR(ped)
  return native.invoke(
    Type.Bool, 3948, false,
    arg(Type.Ped, ped)
  )
end

-- int GET_PED_PARACHUTE_STATE(Ped ped) // 0x79CFD9827CC979B6
--[[
Returns:

-1: Normal
0: Wearing parachute on back
1: Parachute opening
2: Parachute open
3: Falling to doom (e.g. after exiting parachute)

Normal means no parachute?
--]]
function PED.GET_PED_PARACHUTE_STATE(ped)
  return native.invoke(
    Type.Int, 3949, false,
    arg(Type.Ped, ped)
  )
end

-- int GET_PED_PARACHUTE_LANDING_TYPE(Ped ped) // 0x8B9F1FC6AE8166C0
--[[
-1: no landing
0: landing on both feet
1: stumbling
2: rolling
3: ragdoll
--]]
function PED.GET_PED_PARACHUTE_LANDING_TYPE(ped)
  return native.invoke(
    Type.Int, 3950, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_PARACHUTE_TINT_INDEX(Ped ped, int tintIndex) // 0x333FC8DB079B7186
function PED.SET_PED_PARACHUTE_TINT_INDEX(ped, tintIndex)
  native.invoke(
    Type.Void, 3951, false,
    arg(Type.Ped, ped),
    arg(Type.Int, tintIndex)
  )
end

-- void GET_PED_PARACHUTE_TINT_INDEX(Ped ped, int* outTintIndex) // 0xEAF5F7E5AE7C6C9D
function PED.GET_PED_PARACHUTE_TINT_INDEX(ped, outTintIndex)
  native.invoke(
    Type.Void, 3952, false,
    arg(Type.Ped, ped),
    arg(Type.Int, outTintIndex)
  )
end

-- void SET_PED_RESERVE_PARACHUTE_TINT_INDEX(Ped ped, Any p1) // 0xE88DA0751C22A2AD
function PED.SET_PED_RESERVE_PARACHUTE_TINT_INDEX(ped, p1)
  native.invoke(
    Type.Void, 3953, false,
    arg(Type.Ped, ped),
    arg(Type.Any, p1)
  )
end

-- Object CREATE_PARACHUTE_BAG_OBJECT(Ped ped, BOOL p1, BOOL p2) // 0x8C4F3BF23B6237DB
function PED.CREATE_PARACHUTE_BAG_OBJECT(ped, p1, p2)
  return native.invoke(
    Type.Object, 3954, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void SET_PED_DUCKING(Ped ped, BOOL toggle) // 0x030983CA930B692D
--[[
This is the SET_CHAR_DUCKING from GTA IV, that makes Peds duck. This function does nothing in GTA V. It cannot set the ped as ducking in vehicles, and IS_PED_DUCKING will always return false.
--]]
function PED.SET_PED_DUCKING(ped, toggle)
  native.invoke(
    Type.Void, 3955, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_PED_DUCKING(Ped ped) // 0xD125AE748725C6BC
function PED.IS_PED_DUCKING(ped)
  return native.invoke(
    Type.Bool, 3956, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_IN_ANY_TAXI(Ped ped) // 0x6E575D6A898AB852
function PED.IS_PED_IN_ANY_TAXI(ped)
  return native.invoke(
    Type.Bool, 3957, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_ID_RANGE(Ped ped, float value) // 0xF107E836A70DCE05
function PED.SET_PED_ID_RANGE(ped, value)
  native.invoke(
    Type.Void, 3958, false,
    arg(Type.Ped, ped),
    arg(Type.Float, value)
  )
end

-- void SET_PED_HIGHLY_PERCEPTIVE(Ped ped, BOOL toggle) // 0x52D59AB61DDC05DD
function PED.SET_PED_HIGHLY_PERCEPTIVE(ped, toggle)
  native.invoke(
    Type.Void, 3959, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_COP_PERCEPTION_OVERRIDES(float seeingRange, float seeingRangePeripheral, float hearingRange, float visualFieldMinAzimuthAngle, float visualFieldMaxAzimuthAngle, float fieldOfGazeMaxAngle, float p6) // 0x2F074C904D85129E
function PED.SET_COP_PERCEPTION_OVERRIDES(seeingRange, seeingRangePeripheral, hearingRange, visualFieldMinAzimuthAngle, visualFieldMaxAzimuthAngle, fieldOfGazeMaxAngle, p6)
  native.invoke(
    Type.Void, 3960, false,
    arg(Type.Float, seeingRange),
    arg(Type.Float, seeingRangePeripheral),
    arg(Type.Float, hearingRange),
    arg(Type.Float, visualFieldMinAzimuthAngle),
    arg(Type.Float, visualFieldMaxAzimuthAngle),
    arg(Type.Float, fieldOfGazeMaxAngle),
    arg(Type.Float, p6)
  )
end

-- void SET_PED_INJURED_ON_GROUND_BEHAVIOUR(Ped ped, float p1) // 0xEC4B4B3B9908052A
function PED.SET_PED_INJURED_ON_GROUND_BEHAVIOUR(ped, p1)
  native.invoke(
    Type.Void, 3961, false,
    arg(Type.Ped, ped),
    arg(Type.Float, p1)
  )
end

-- void DISABLE_PED_INJURED_ON_GROUND_BEHAVIOUR(Ped ped) // 0x733C87D4CE22BEA2
function PED.DISABLE_PED_INJURED_ON_GROUND_BEHAVIOUR(ped)
  native.invoke(
    Type.Void, 3962, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_SEEING_RANGE(Ped ped, float value) // 0xF29CF591C4BF6CEE
function PED.SET_PED_SEEING_RANGE(ped, value)
  native.invoke(
    Type.Void, 3963, false,
    arg(Type.Ped, ped),
    arg(Type.Float, value)
  )
end

-- void SET_PED_HEARING_RANGE(Ped ped, float value) // 0x33A8F7F7D5F7F33C
function PED.SET_PED_HEARING_RANGE(ped, value)
  native.invoke(
    Type.Void, 3964, false,
    arg(Type.Ped, ped),
    arg(Type.Float, value)
  )
end

-- void SET_PED_VISUAL_FIELD_MIN_ANGLE(Ped ped, float value) // 0x2DB492222FB21E26
function PED.SET_PED_VISUAL_FIELD_MIN_ANGLE(ped, value)
  native.invoke(
    Type.Void, 3965, false,
    arg(Type.Ped, ped),
    arg(Type.Float, value)
  )
end

-- void SET_PED_VISUAL_FIELD_MAX_ANGLE(Ped ped, float value) // 0x70793BDCA1E854D4
function PED.SET_PED_VISUAL_FIELD_MAX_ANGLE(ped, value)
  native.invoke(
    Type.Void, 3966, false,
    arg(Type.Ped, ped),
    arg(Type.Float, value)
  )
end

-- void SET_PED_VISUAL_FIELD_MIN_ELEVATION_ANGLE(Ped ped, float angle) // 0x7A276EB2C224D70F
--[[
This native refers to the field of vision the ped has below them, starting at 0 degrees. The angle value should be negative.
-90f should let the ped see 90 degrees below them, for example.
--]]
function PED.SET_PED_VISUAL_FIELD_MIN_ELEVATION_ANGLE(ped, angle)
  native.invoke(
    Type.Void, 3967, false,
    arg(Type.Ped, ped),
    arg(Type.Float, angle)
  )
end

-- void SET_PED_VISUAL_FIELD_MAX_ELEVATION_ANGLE(Ped ped, float angle) // 0x78D0B67629D75856
--[[
This native refers to the field of vision the ped has above them, starting at 0 degrees. 90f would let the ped see enemies directly above of them.
--]]
function PED.SET_PED_VISUAL_FIELD_MAX_ELEVATION_ANGLE(ped, angle)
  native.invoke(
    Type.Void, 3968, false,
    arg(Type.Ped, ped),
    arg(Type.Float, angle)
  )
end

-- void SET_PED_VISUAL_FIELD_PERIPHERAL_RANGE(Ped ped, float range) // 0x9C74B0BC831B753A
function PED.SET_PED_VISUAL_FIELD_PERIPHERAL_RANGE(ped, range)
  native.invoke(
    Type.Void, 3969, false,
    arg(Type.Ped, ped),
    arg(Type.Float, range)
  )
end

-- void SET_PED_VISUAL_FIELD_CENTER_ANGLE(Ped ped, float angle) // 0x3B6405E8AB34A907
function PED.SET_PED_VISUAL_FIELD_CENTER_ANGLE(ped, angle)
  native.invoke(
    Type.Void, 3970, false,
    arg(Type.Ped, ped),
    arg(Type.Float, angle)
  )
end

-- float GET_PED_VISUAL_FIELD_CENTER_ANGLE(Ped ped) // 0xEF2C71A32CAD5FBD
function PED.GET_PED_VISUAL_FIELD_CENTER_ANGLE(ped)
  return native.invoke(
    Type.Float, 3971, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_STEALTH_MOVEMENT(Ped ped, BOOL p1, const char* action) // 0x88CBB5CEB96B7BD2
--[[
p1 is usually 0 in the scripts. action is either 0 or a pointer to "DEFAULT_ACTION".
--]]
function PED.SET_PED_STEALTH_MOVEMENT(ped, p1, action)
  native.invoke(
    Type.Void, 3972, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1),
    arg(Type.String, action)
  )
end

-- BOOL GET_PED_STEALTH_MOVEMENT(Ped ped) // 0x7C2AC9CA66575FBF
--[[
Returns whether the entity is in stealth mode
--]]
function PED.GET_PED_STEALTH_MOVEMENT(ped)
  return native.invoke(
    Type.Bool, 3973, false,
    arg(Type.Ped, ped)
  )
end

-- int CREATE_GROUP(int unused) // 0x90370EBE0FEE1A3D
--[[
Creates a new ped group.
Groups can contain up to 8 peds.

The parameter is unused.

Returns a handle to the created group, or 0 if a group couldn't be created.
--]]
function PED.CREATE_GROUP(unused)
  return native.invoke(
    Type.Int, 3974, false,
    arg(Type.Int, unused)
  )
end

-- void SET_PED_AS_GROUP_LEADER(Ped ped, int groupId) // 0x2A7819605465FBCE
function PED.SET_PED_AS_GROUP_LEADER(ped, groupId)
  native.invoke(
    Type.Void, 3975, false,
    arg(Type.Ped, ped),
    arg(Type.Int, groupId)
  )
end

-- void SET_PED_AS_GROUP_MEMBER(Ped ped, int groupId) // 0x9F3480FE65DB31B5
function PED.SET_PED_AS_GROUP_MEMBER(ped, groupId)
  native.invoke(
    Type.Void, 3976, false,
    arg(Type.Ped, ped),
    arg(Type.Int, groupId)
  )
end

-- void SET_PED_CAN_TELEPORT_TO_GROUP_LEADER(Ped pedHandle, int groupHandle, BOOL toggle) // 0x2E2F4240B3F24647
--[[
This only will teleport the ped to the group leader if the group leader teleports (sets coords).

Only works in singleplayer
--]]
function PED.SET_PED_CAN_TELEPORT_TO_GROUP_LEADER(pedHandle, groupHandle, toggle)
  native.invoke(
    Type.Void, 3977, false,
    arg(Type.Ped, pedHandle),
    arg(Type.Int, groupHandle),
    arg(Type.Bool, toggle)
  )
end

-- void REMOVE_GROUP(int groupId) // 0x8EB2F69076AF7053
function PED.REMOVE_GROUP(groupId)
  native.invoke(
    Type.Void, 3978, false,
    arg(Type.Int, groupId)
  )
end

-- void REMOVE_PED_FROM_GROUP(Ped ped) // 0xED74007FFB146BC2
function PED.REMOVE_PED_FROM_GROUP(ped)
  native.invoke(
    Type.Void, 3979, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_GROUP_MEMBER(Ped ped, int groupId) // 0x9BB01E3834671191
function PED.IS_PED_GROUP_MEMBER(ped, groupId)
  return native.invoke(
    Type.Bool, 3980, false,
    arg(Type.Ped, ped),
    arg(Type.Int, groupId)
  )
end

-- BOOL IS_PED_HANGING_ON_TO_VEHICLE(Ped ped) // 0x1C86D8AEF8254B78
function PED.IS_PED_HANGING_ON_TO_VEHICLE(ped)
  return native.invoke(
    Type.Bool, 3981, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_GROUP_SEPARATION_RANGE(int groupHandle, float separationRange) // 0x4102C7858CFEE4E4
--[[
Sets the range at which members will automatically leave the group.
--]]
function PED.SET_GROUP_SEPARATION_RANGE(groupHandle, separationRange)
  native.invoke(
    Type.Void, 3982, false,
    arg(Type.Int, groupHandle),
    arg(Type.Float, separationRange)
  )
end

-- void SET_PED_MIN_GROUND_TIME_FOR_STUNGUN(Ped ped, int ms) // 0xFA0675AB151073FA
--[[
Ped will stay on the ground after being stunned for at lest ms time. (in milliseconds)
--]]
function PED.SET_PED_MIN_GROUND_TIME_FOR_STUNGUN(ped, ms)
  native.invoke(
    Type.Void, 3983, false,
    arg(Type.Ped, ped),
    arg(Type.Int, ms)
  )
end

-- BOOL IS_PED_PRONE(Ped ped) // 0xD6A86331A537A7B9
function PED.IS_PED_PRONE(ped)
  return native.invoke(
    Type.Bool, 3984, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_IN_COMBAT(Ped ped, Ped target) // 0x4859F1FC66A6278E
--[[
Checks to see if ped and target are in combat with eachother. Only goes one-way: if target is engaged in combat with ped but ped has not yet reacted, the function will return false until ped starts fighting back.

p1 is usually 0 in the scripts because it gets the ped id during the task sequence. For instance: PED::IS_PED_IN_COMBAT(l_42E[4/*14*/], PLAYER::PLAYER_PED_ID()) // armenian2.ct4: 43794
--]]
function PED.IS_PED_IN_COMBAT(ped, target)
  return native.invoke(
    Type.Bool, 3985, false,
    arg(Type.Ped, ped),
    arg(Type.Ped, target)
  )
end

-- Entity GET_PED_TARGET_FROM_COMBAT_PED(Ped ped, Any p1) // 0x32C27A11307B01CC
function PED.GET_PED_TARGET_FROM_COMBAT_PED(ped, p1)
  return native.invoke(
    Type.Entity, 3986, false,
    arg(Type.Ped, ped),
    arg(Type.Any, p1)
  )
end

-- BOOL CAN_PED_IN_COMBAT_SEE_TARGET(Ped ped, Ped target) // 0xEAD42DE3610D0721
function PED.CAN_PED_IN_COMBAT_SEE_TARGET(ped, target)
  return native.invoke(
    Type.Bool, 3987, false,
    arg(Type.Ped, ped),
    arg(Type.Ped, target)
  )
end

-- BOOL IS_PED_DOING_DRIVEBY(Ped ped) // 0xB2C086CC1BF8F2BF
function PED.IS_PED_DOING_DRIVEBY(ped)
  return native.invoke(
    Type.Bool, 3988, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_JACKING(Ped ped) // 0x4AE4FF911DFB61DA
function PED.IS_PED_JACKING(ped)
  return native.invoke(
    Type.Bool, 3989, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_BEING_JACKED(Ped ped) // 0x9A497FE2DF198913
function PED.IS_PED_BEING_JACKED(ped)
  return native.invoke(
    Type.Bool, 3990, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_BEING_STUNNED(Ped ped, int p1) // 0x4FBACCE3B4138EE8
--[[
p1 is always 0
--]]
function PED.IS_PED_BEING_STUNNED(ped, p1)
  return native.invoke(
    Type.Bool, 3991, false,
    arg(Type.Ped, ped),
    arg(Type.Int, p1)
  )
end

-- Ped GET_PEDS_JACKER(Ped ped) // 0x9B128DC36C1E04CF
function PED.GET_PEDS_JACKER(ped)
  return native.invoke(
    Type.Ped, 3992, false,
    arg(Type.Ped, ped)
  )
end

-- Ped GET_JACK_TARGET(Ped ped) // 0x5486A79D9FBD342D
function PED.GET_JACK_TARGET(ped)
  return native.invoke(
    Type.Ped, 3993, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_FLEEING(Ped ped) // 0xBBCCE00B381F8482
function PED.IS_PED_FLEEING(ped)
  return native.invoke(
    Type.Bool, 3994, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_IN_COVER(Ped ped, BOOL exceptUseWeapon) // 0x60DFD0691A170B88
--[[
p1 is nearly always 0 in the scripts. 
--]]
function PED.IS_PED_IN_COVER(ped, exceptUseWeapon)
  return native.invoke(
    Type.Bool, 3995, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, exceptUseWeapon)
  )
end

-- BOOL IS_PED_IN_COVER_FACING_LEFT(Ped ped) // 0x845333B3150583AB
function PED.IS_PED_IN_COVER_FACING_LEFT(ped)
  return native.invoke(
    Type.Bool, 3996, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_IN_HIGH_COVER(Ped ped) // 0x6A03BF943D767C93
function PED.IS_PED_IN_HIGH_COVER(ped)
  return native.invoke(
    Type.Bool, 3997, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_GOING_INTO_COVER(Ped ped) // 0x9F65DBC537E59AD5
function PED.IS_PED_GOING_INTO_COVER(ped)
  return native.invoke(
    Type.Bool, 3998, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL SET_PED_PINNED_DOWN(Ped ped, BOOL pinned, int i) // 0xAAD6D1ACF08F4612
--[[
i could be time. Only example in the decompiled scripts uses it as -1.
--]]
function PED.SET_PED_PINNED_DOWN(ped, pinned, i)
  return native.invoke(
    Type.Bool, 3999, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, pinned),
    arg(Type.Int, i)
  )
end

-- BOOL _HAS_PED_CLEAR_LOS_TO_ENTITY(Ped ped, Entity entity, float x, float y, float z, int p5, BOOL p6, BOOL p7) // 0xA32ABFEB2A03B306
function PED._HAS_PED_CLEAR_LOS_TO_ENTITY(ped, entity, x, y, z, p5, p6, p7)
  return native.invoke(
    Type.Bool, 4000, false,
    arg(Type.Ped, ped),
    arg(Type.Entity, entity),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, p5),
    arg(Type.Bool, p6),
    arg(Type.Bool, p7)
  )
end

-- int GET_SEAT_PED_IS_TRYING_TO_ENTER(Ped ped) // 0x6F4C85ACD641BCD2
function PED.GET_SEAT_PED_IS_TRYING_TO_ENTER(ped)
  return native.invoke(
    Type.Int, 4001, false,
    arg(Type.Ped, ped)
  )
end

-- Vehicle GET_VEHICLE_PED_IS_TRYING_TO_ENTER(Ped ped) // 0x814FA8BE5449445D
function PED.GET_VEHICLE_PED_IS_TRYING_TO_ENTER(ped)
  return native.invoke(
    Type.Vehicle, 4002, false,
    arg(Type.Ped, ped)
  )
end

-- Entity GET_PED_SOURCE_OF_DEATH(Ped ped) // 0x93C8B64DEB84728C
--[[
Returns the Entity (Ped, Vehicle, or ?Object?) that killed the 'ped'

Is best to check if the Ped is dead before asking for its killer.
--]]
function PED.GET_PED_SOURCE_OF_DEATH(ped)
  return native.invoke(
    Type.Entity, 4003, false,
    arg(Type.Ped, ped)
  )
end

-- Hash GET_PED_CAUSE_OF_DEATH(Ped ped) // 0x16FFE42AB2D2DC59
--[[
Returns the hash of the weapon/model/object that killed the ped.
--]]
function PED.GET_PED_CAUSE_OF_DEATH(ped)
  return native.invoke(
    Type.Hash, 4004, false,
    arg(Type.Ped, ped)
  )
end

-- int GET_PED_TIME_OF_DEATH(Ped ped) // 0x1E98817B311AE98A
function PED.GET_PED_TIME_OF_DEATH(ped)
  return native.invoke(
    Type.Int, 4005, false,
    arg(Type.Ped, ped)
  )
end

-- int COUNT_PEDS_IN_COMBAT_WITH_TARGET(Ped ped) // 0x5407B7288D0478B7
function PED.COUNT_PEDS_IN_COMBAT_WITH_TARGET(ped)
  return native.invoke(
    Type.Int, 4006, false,
    arg(Type.Ped, ped)
  )
end

-- int COUNT_PEDS_IN_COMBAT_WITH_TARGET_WITHIN_RADIUS(Ped ped, float x, float y, float z, float radius) // 0x336B3D200AB007CB
function PED.COUNT_PEDS_IN_COMBAT_WITH_TARGET_WITHIN_RADIUS(ped, x, y, z, radius)
  return native.invoke(
    Type.Int, 4007, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius)
  )
end

-- void SET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH(Ped ped, Hash hash) // 0xADB3F206518799E8
function PED.SET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH(ped, hash)
  native.invoke(
    Type.Void, 4008, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, hash)
  )
end

-- void SET_PED_RELATIONSHIP_GROUP_HASH(Ped ped, Hash hash) // 0xC80A74AC829DDD92
function PED.SET_PED_RELATIONSHIP_GROUP_HASH(ped, hash)
  native.invoke(
    Type.Void, 4009, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, hash)
  )
end

-- void SET_RELATIONSHIP_BETWEEN_GROUPS(int relationship, Hash group1, Hash group2) // 0xBF25EB89375A37AD
--[[
Sets the relationship between two groups. This should be called twice (once for each group).

Relationship types:
0 = Companion
1 = Respect
2 = Like
3 = Neutral
4 = Dislike
5 = Hate
255 = Pedestrians

Example:
PED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, l_1017, 0xA49E591C);
PED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, 0xA49E591C, l_1017);
--]]
function PED.SET_RELATIONSHIP_BETWEEN_GROUPS(relationship, group1, group2)
  native.invoke(
    Type.Void, 4010, false,
    arg(Type.Int, relationship),
    arg(Type.Hash, group1),
    arg(Type.Hash, group2)
  )
end

-- void CLEAR_RELATIONSHIP_BETWEEN_GROUPS(int relationship, Hash group1, Hash group2) // 0x5E29243FB56FC6D4
--[[
Clears the relationship between two groups. This should be called twice (once for each group).

Relationship types:
0 = Companion
1 = Respect
2 = Like
3 = Neutral
4 = Dislike
5 = Hate
255 = Pedestrians
(Credits: Inco)

Example:
PED::CLEAR_RELATIONSHIP_BETWEEN_GROUPS(2, l_1017, 0xA49E591C);
PED::CLEAR_RELATIONSHIP_BETWEEN_GROUPS(2, 0xA49E591C, l_1017);
--]]
function PED.CLEAR_RELATIONSHIP_BETWEEN_GROUPS(relationship, group1, group2)
  native.invoke(
    Type.Void, 4011, false,
    arg(Type.Int, relationship),
    arg(Type.Hash, group1),
    arg(Type.Hash, group2)
  )
end

-- BOOL ADD_RELATIONSHIP_GROUP(const char* name, Hash* groupHash) // 0xF372BC22FCB88606
--[[
Can't select void. This function returns nothing. The hash of the created relationship group is output in the second parameter.
--]]
function PED.ADD_RELATIONSHIP_GROUP(name, groupHash)
  return native.invoke(
    Type.Bool, 4012, false,
    arg(Type.String, name),
    arg(Type.Hash, groupHash)
  )
end

-- void REMOVE_RELATIONSHIP_GROUP(Hash groupHash) // 0xB6BA2444AB393DA2
function PED.REMOVE_RELATIONSHIP_GROUP(groupHash)
  native.invoke(
    Type.Void, 4013, false,
    arg(Type.Hash, groupHash)
  )
end

-- BOOL DOES_RELATIONSHIP_GROUP_EXIST(Hash groupHash) // 0xCC6E3B6BB69501F1
function PED.DOES_RELATIONSHIP_GROUP_EXIST(groupHash)
  return native.invoke(
    Type.Bool, 4014, false,
    arg(Type.Hash, groupHash)
  )
end

-- int GET_RELATIONSHIP_BETWEEN_PEDS(Ped ped1, Ped ped2) // 0xEBA5AD3A0EAF7121
--[[
Gets the relationship between two peds. This should be called twice (once for each ped).

Relationship types:
0 = Companion
1 = Respect
2 = Like
3 = Neutral
4 = Dislike
5 = Hate
255 = Pedestrians
(Credits: Inco)

Example:
PED::GET_RELATIONSHIP_BETWEEN_PEDS(2, l_1017, 0xA49E591C);
PED::GET_RELATIONSHIP_BETWEEN_PEDS(2, 0xA49E591C, l_1017);
--]]
function PED.GET_RELATIONSHIP_BETWEEN_PEDS(ped1, ped2)
  return native.invoke(
    Type.Int, 4015, false,
    arg(Type.Ped, ped1),
    arg(Type.Ped, ped2)
  )
end

-- Hash GET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH(Ped ped) // 0x42FDD0F017B1E38E
function PED.GET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH(ped)
  return native.invoke(
    Type.Hash, 4016, false,
    arg(Type.Ped, ped)
  )
end

-- Hash GET_PED_RELATIONSHIP_GROUP_HASH(Ped ped) // 0x7DBDD04862D95F04
function PED.GET_PED_RELATIONSHIP_GROUP_HASH(ped)
  return native.invoke(
    Type.Hash, 4017, false,
    arg(Type.Ped, ped)
  )
end

-- int GET_RELATIONSHIP_BETWEEN_GROUPS(Hash group1, Hash group2) // 0x9E6B70061662AE5C
--[[
Gets the relationship between two groups. This should be called twice (once for each group).

Relationship types:
0 = Companion
1 = Respect
2 = Like
3 = Neutral
4 = Dislike
5 = Hate
255 = Pedestrians

Example:
PED::GET_RELATIONSHIP_BETWEEN_GROUPS(l_1017, 0xA49E591C);
PED::GET_RELATIONSHIP_BETWEEN_GROUPS(0xA49E591C, l_1017);
--]]
function PED.GET_RELATIONSHIP_BETWEEN_GROUPS(group1, group2)
  return native.invoke(
    Type.Int, 4018, false,
    arg(Type.Hash, group1),
    arg(Type.Hash, group2)
  )
end

-- void SET_RELATIONSHIP_GROUP_AFFECTS_WANTED_LEVEL(Hash group, BOOL p1) // 0x5615E0C5EB2BC6E2
function PED.SET_RELATIONSHIP_GROUP_AFFECTS_WANTED_LEVEL(group, p1)
  native.invoke(
    Type.Void, 4019, false,
    arg(Type.Hash, group),
    arg(Type.Bool, p1)
  )
end

-- void TELL_GROUP_PEDS_IN_AREA_TO_ATTACK(Ped ped, Any p1, float p2, Hash hash, Any p4, Any p5) // 0xAD27D957598E49E9
function PED.TELL_GROUP_PEDS_IN_AREA_TO_ATTACK(ped, p1, p2, hash, p4, p5)
  native.invoke(
    Type.Void, 4020, false,
    arg(Type.Ped, ped),
    arg(Type.Any, p1),
    arg(Type.Float, p2),
    arg(Type.Hash, hash),
    arg(Type.Any, p4),
    arg(Type.Any, p5)
  )
end

-- void SET_PED_CAN_BE_TARGETED_WITHOUT_LOS(Ped ped, BOOL toggle) // 0x4328652AE5769C71
function PED.SET_PED_CAN_BE_TARGETED_WITHOUT_LOS(ped, toggle)
  native.invoke(
    Type.Void, 4021, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_TO_INFORM_RESPECTED_FRIENDS(Ped ped, float radius, int maxFriends) // 0x112942C6E708F70B
function PED.SET_PED_TO_INFORM_RESPECTED_FRIENDS(ped, radius, maxFriends)
  native.invoke(
    Type.Void, 4022, false,
    arg(Type.Ped, ped),
    arg(Type.Float, radius),
    arg(Type.Int, maxFriends)
  )
end

-- BOOL IS_PED_RESPONDING_TO_EVENT(Ped ped, Any event) // 0x625B774D75C87068
function PED.IS_PED_RESPONDING_TO_EVENT(ped, event)
  return native.invoke(
    Type.Bool, 4023, false,
    arg(Type.Ped, ped),
    arg(Type.Any, event)
  )
end

-- BOOL GET_POS_FROM_FIRED_EVENT(Ped ped, int eventType, Any* outData) // 0xBA656A3BB01BDEA3
function PED.GET_POS_FROM_FIRED_EVENT(ped, eventType, outData)
  return native.invoke(
    Type.Bool, 4024, false,
    arg(Type.Ped, ped),
    arg(Type.Int, eventType),
    arg(Type.Any, outData)
  )
end

-- void SET_PED_FIRING_PATTERN(Ped ped, Hash patternHash) // 0x9AC577F5A12AD8A9
--[[
FIRING_PATTERN_BURST_FIRE = 0xD6FF6D61 ( 1073727030 )
FIRING_PATTERN_BURST_FIRE_IN_COVER = 0x026321F1 ( 40051185 )
FIRING_PATTERN_BURST_FIRE_DRIVEBY = 0xD31265F2 ( -753768974 )
FIRING_PATTERN_FROM_GROUND = 0x2264E5D6 ( 577037782 )
FIRING_PATTERN_DELAY_FIRE_BY_ONE_SEC = 0x7A845691 ( 2055493265 )
FIRING_PATTERN_FULL_AUTO = 0xC6EE6B4C ( -957453492 )
FIRING_PATTERN_SINGLE_SHOT = 0x5D60E4E0 ( 1566631136 )
FIRING_PATTERN_BURST_FIRE_PISTOL = 0xA018DB8A ( -1608983670 )
FIRING_PATTERN_BURST_FIRE_SMG = 0xD10DADEE ( 1863348768 )
FIRING_PATTERN_BURST_FIRE_RIFLE = 0x9C74B406 ( -1670073338 )
FIRING_PATTERN_BURST_FIRE_MG = 0xB573C5B4 ( -1250703948 )
FIRING_PATTERN_BURST_FIRE_PUMPSHOTGUN = 0x00BAC39B ( 12239771 )
FIRING_PATTERN_BURST_FIRE_HELI = 0x914E786F ( -1857128337 )
FIRING_PATTERN_BURST_FIRE_MICRO = 0x42EF03FD ( 1122960381 )
FIRING_PATTERN_SHORT_BURSTS = 0x1A92D7DF ( 445831135 )
FIRING_PATTERN_SLOW_FIRE_TANK = 0xE2CA3A71 ( -490063247 )

Firing pattern info: https://pastebin.com/Px036isB
--]]
function PED.SET_PED_FIRING_PATTERN(ped, patternHash)
  native.invoke(
    Type.Void, 4025, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, patternHash)
  )
end

-- void SET_PED_SHOOT_RATE(Ped ped, int shootRate) // 0x614DA022990752DC
--[[
shootRate 0-1000
--]]
function PED.SET_PED_SHOOT_RATE(ped, shootRate)
  native.invoke(
    Type.Void, 4026, false,
    arg(Type.Ped, ped),
    arg(Type.Int, shootRate)
  )
end

-- void SET_COMBAT_FLOAT(Ped ped, int combatType, float p2) // 0xFF41B4B141ED981C
--[[
combatType can be between 0-14. See GET_COMBAT_FLOAT below for a list of possible parameters.
--]]
function PED.SET_COMBAT_FLOAT(ped, combatType, p2)
  native.invoke(
    Type.Void, 4027, false,
    arg(Type.Ped, ped),
    arg(Type.Int, combatType),
    arg(Type.Float, p2)
  )
end

-- float GET_COMBAT_FLOAT(Ped ped, int p1) // 0x52DFF8A10508090A
--[[
p0: Ped Handle
p1: int i | 0 <= i <= 27

p1 probably refers to the attributes configured in combatbehavior.meta. There are 13. Example:

<BlindFireChance value="0.1"/>
<WeaponShootRateModifier value="1.0"/>
<TimeBetweenBurstsInCover value="1.25"/>
<BurstDurationInCover value="2.0"/>
<TimeBetweenPeeks value="10.0"/>
<WeaponAccuracy value="0.18"/>
<FightProficiency value="0.8"/>
<StrafeWhenMovingChance value="1.0"/>
<WalkWhenStrafingChance value="0.0"/>
<AttackWindowDistanceForCover value="55.0"/>
<TimeToInvalidateInjuredTarget value="9.0"/>
<TriggerChargeTime_Near value="4.0"/>
<TriggerChargeTime_Far value="10.0"/>

-------------Confirmed by editing combatbehavior.meta:
p1:
0=BlindFireChance
1=BurstDurationInCover
3=TimeBetweenBurstsInCover
4=TimeBetweenPeeks
5=StrafeWhenMovingChance
8=WalkWhenStrafingChance
11=AttackWindowDistanceForCover
12=TimeToInvalidateInjuredTarget
16=OptimalCoverDistance

--]]
function PED.GET_COMBAT_FLOAT(ped, p1)
  return native.invoke(
    Type.Float, 4028, false,
    arg(Type.Ped, ped),
    arg(Type.Int, p1)
  )
end

-- void GET_GROUP_SIZE(int groupID, Any* p1, int* sizeInMembers) // 0x8DE69FE35CA09A45
--[[
p1 may be a BOOL representing whether or not the group even exists
--]]
function PED.GET_GROUP_SIZE(groupID, p1, sizeInMembers)
  native.invoke(
    Type.Void, 4029, false,
    arg(Type.Int, groupID),
    arg(Type.Any, p1),
    arg(Type.Int, sizeInMembers)
  )
end

-- BOOL DOES_GROUP_EXIST(int groupId) // 0x7C6B0C22F9F40BBE
function PED.DOES_GROUP_EXIST(groupId)
  return native.invoke(
    Type.Bool, 4030, false,
    arg(Type.Int, groupId)
  )
end

-- int GET_PED_GROUP_INDEX(Ped ped) // 0xF162E133B4E7A675
--[[
Returns the group id of which the specified ped is a member of.
--]]
function PED.GET_PED_GROUP_INDEX(ped)
  return native.invoke(
    Type.Int, 4031, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_IN_GROUP(Ped ped) // 0x5891CAC5D4ACFF74
function PED.IS_PED_IN_GROUP(ped)
  return native.invoke(
    Type.Bool, 4032, false,
    arg(Type.Ped, ped)
  )
end

-- Player GET_PLAYER_PED_IS_FOLLOWING(Ped ped) // 0x6A3975DEA89F9A17
function PED.GET_PLAYER_PED_IS_FOLLOWING(ped)
  return native.invoke(
    Type.Player, 4033, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_GROUP_FORMATION(int groupId, int formationType) // 0xCE2F5FC3AF7E8C1E
--[[
0: Default
1: Circle Around Leader
2: Alternative Circle Around Leader
3: Line, with Leader at center
--]]
function PED.SET_GROUP_FORMATION(groupId, formationType)
  native.invoke(
    Type.Void, 4034, false,
    arg(Type.Int, groupId),
    arg(Type.Int, formationType)
  )
end

-- void SET_GROUP_FORMATION_SPACING(int groupId, float x, float y, float z) // 0x1D9D45004C28C916
function PED.SET_GROUP_FORMATION_SPACING(groupId, x, y, z)
  native.invoke(
    Type.Void, 4035, false,
    arg(Type.Int, groupId),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void RESET_GROUP_FORMATION_DEFAULT_SPACING(int groupHandle) // 0x63DAB4CCB3273205
function PED.RESET_GROUP_FORMATION_DEFAULT_SPACING(groupHandle)
  native.invoke(
    Type.Void, 4036, false,
    arg(Type.Int, groupHandle)
  )
end

-- Vehicle GET_VEHICLE_PED_IS_USING(Ped ped) // 0x6094AD011A2EA87D
--[[
Gets ID of vehicle player using. It means it can get ID at any interaction with vehicle. Enter\exit for example. And that means it is faster than GET_VEHICLE_PED_IS_IN but less safe.
--]]
function PED.GET_VEHICLE_PED_IS_USING(ped)
  return native.invoke(
    Type.Vehicle, 4037, false,
    arg(Type.Ped, ped)
  )
end

-- Vehicle GET_VEHICLE_PED_IS_ENTERING(Ped ped) // 0xF92691AED837A5FC
function PED.GET_VEHICLE_PED_IS_ENTERING(ped)
  return native.invoke(
    Type.Vehicle, 4038, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_GRAVITY(Ped ped, BOOL toggle) // 0x9FF447B6B6AD960A
--[[
enable or disable the gravity of a ped

Examples:
PED::SET_PED_GRAVITY(PLAYER::PLAYER_PED_ID(), 0x00000001);
PED::SET_PED_GRAVITY(Local_289[iVar0 /*20*/], 0x00000001);
--]]
function PED.SET_PED_GRAVITY(ped, toggle)
  native.invoke(
    Type.Void, 4039, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void APPLY_DAMAGE_TO_PED(Ped ped, int damageAmount, BOOL p2, Any p3, Hash weaponType) // 0x697157CED63F18D4
--[[
damages a ped with the given amount
--]]
function PED.APPLY_DAMAGE_TO_PED(ped, damageAmount, p2, p3, weaponType)
  native.invoke(
    Type.Void, 4040, false,
    arg(Type.Ped, ped),
    arg(Type.Int, damageAmount),
    arg(Type.Bool, p2),
    arg(Type.Any, p3),
    arg(Type.Hash, weaponType)
  )
end

-- int GET_TIME_PED_DAMAGED_BY_WEAPON(Ped ped, Hash weaponHash) // 0x36B77BB84687C318
function PED.GET_TIME_PED_DAMAGED_BY_WEAPON(ped, weaponHash)
  return native.invoke(
    Type.Int, 4041, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash)
  )
end

-- void SET_PED_ALLOWED_TO_DUCK(Ped ped, BOOL toggle) // 0xDA1F1B7BE1A8766F
function PED.SET_PED_ALLOWED_TO_DUCK(ped, toggle)
  native.invoke(
    Type.Void, 4042, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_NEVER_LEAVES_GROUP(Ped ped, BOOL toggle) // 0x3DBFC55D5C9BB447
function PED.SET_PED_NEVER_LEAVES_GROUP(ped, toggle)
  native.invoke(
    Type.Void, 4043, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- int GET_PED_TYPE(Ped ped) // 0xFF059E1E4C01E63C
--[[
https://alloc8or.re/gta5/doc/enums/ePedType.txt
--]]
function PED.GET_PED_TYPE(ped)
  return native.invoke(
    Type.Int, 4044, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_AS_COP(Ped ped, BOOL toggle) // 0xBB03C38DD3FB7FFD
--[[
Turns the desired ped into a cop. If you use this on the player ped, you will become almost invisible to cops dispatched for you. You will also report your own crimes, get a generic cop voice, get a cop-vision-cone on the radar, and you will be unable to shoot at other cops. SWAT and Army will still shoot at you. Toggling ped as "false" has no effect; you must change p0's ped model to disable the effect.
--]]
function PED.SET_PED_AS_COP(ped, toggle)
  native.invoke(
    Type.Void, 4045, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_HEALTH_PENDING_LAST_DAMAGE_EVENT_OVERRIDE_FLAG(BOOL toggle) // 0xB3352E018D6F89DF
function PED.SET_PED_HEALTH_PENDING_LAST_DAMAGE_EVENT_OVERRIDE_FLAG(toggle)
  native.invoke(
    Type.Void, 4046, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_MAX_HEALTH(Ped ped, int value) // 0xF5F6378C4F3419D3
--[[
Sets the maximum health of a ped.
--]]
function PED.SET_PED_MAX_HEALTH(ped, value)
  native.invoke(
    Type.Void, 4047, false,
    arg(Type.Ped, ped),
    arg(Type.Int, value)
  )
end

-- int GET_PED_MAX_HEALTH(Ped ped) // 0x4700A416E8324EF3
function PED.GET_PED_MAX_HEALTH(ped)
  return native.invoke(
    Type.Int, 4048, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_MAX_TIME_IN_WATER(Ped ped, float value) // 0x43C851690662113D
function PED.SET_PED_MAX_TIME_IN_WATER(ped, value)
  native.invoke(
    Type.Void, 4049, false,
    arg(Type.Ped, ped),
    arg(Type.Float, value)
  )
end

-- void SET_PED_MAX_TIME_UNDERWATER(Ped ped, float value) // 0x6BA428C528D9E522
function PED.SET_PED_MAX_TIME_UNDERWATER(ped, value)
  native.invoke(
    Type.Void, 4050, false,
    arg(Type.Ped, ped),
    arg(Type.Float, value)
  )
end

-- void SET_CORPSE_RAGDOLL_FRICTION(Ped ped, float p1) // 0x2735233A786B1BEF
function PED.SET_CORPSE_RAGDOLL_FRICTION(ped, p1)
  native.invoke(
    Type.Void, 4051, false,
    arg(Type.Ped, ped),
    arg(Type.Float, p1)
  )
end

-- void SET_PED_VEHICLE_FORCED_SEAT_USAGE(Ped ped, Vehicle vehicle, int seatIndex, int flags, Any p4) // 0x952F06BEECD775CC
--[[
seatIndex must be <= 2
--]]
function PED.SET_PED_VEHICLE_FORCED_SEAT_USAGE(ped, vehicle, seatIndex, flags, p4)
  native.invoke(
    Type.Void, 4052, false,
    arg(Type.Ped, ped),
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, seatIndex),
    arg(Type.Int, flags),
    arg(Type.Any, p4)
  )
end

-- void CLEAR_ALL_PED_VEHICLE_FORCED_SEAT_USAGE(Ped ped) // 0xE6CA85E7259CE16B
function PED.CLEAR_ALL_PED_VEHICLE_FORCED_SEAT_USAGE(ped)
  native.invoke(
    Type.Void, 4053, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_CAN_BE_KNOCKED_OFF_BIKE(Any p0, Any p1) // 0xB282749D5E028163
--[[
This native does absolutely nothing, just a nullsub
--]]
function PED.SET_PED_CAN_BE_KNOCKED_OFF_BIKE(p0, p1)
  native.invoke(
    Type.Void, 4054, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void SET_PED_CAN_BE_KNOCKED_OFF_VEHICLE(Ped ped, int state) // 0x7A6535691B477C48
--[[
state: https://alloc8or.re/gta5/doc/enums/eKnockOffVehicle.txt
--]]
function PED.SET_PED_CAN_BE_KNOCKED_OFF_VEHICLE(ped, state)
  native.invoke(
    Type.Void, 4055, false,
    arg(Type.Ped, ped),
    arg(Type.Int, state)
  )
end

-- BOOL CAN_KNOCK_PED_OFF_VEHICLE(Ped ped) // 0x51AC07A44D4F5B8A
function PED.CAN_KNOCK_PED_OFF_VEHICLE(ped)
  return native.invoke(
    Type.Bool, 4056, false,
    arg(Type.Ped, ped)
  )
end

-- void KNOCK_PED_OFF_VEHICLE(Ped ped) // 0x45BBCBA77C29A841
function PED.KNOCK_PED_OFF_VEHICLE(ped)
  native.invoke(
    Type.Void, 4057, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_COORDS_NO_GANG(Ped ped, float posX, float posY, float posZ) // 0x87052FE446E07247
function PED.SET_PED_COORDS_NO_GANG(ped, posX, posY, posZ)
  native.invoke(
    Type.Void, 4058, false,
    arg(Type.Ped, ped),
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ)
  )
end

-- Ped GET_PED_AS_GROUP_MEMBER(int groupID, int memberNumber) // 0x51455483CF23ED97
--[[
from fm_mission_controller.c4 (variable names changed for clarity):

int groupID = PLAYER::GET_PLAYER_GROUP(PLAYER::PLAYER_ID());
PED::GET_GROUP_SIZE(group, &unused, &groupSize);
if (groupSize >= 1) {
. . . . for (int memberNumber = 0; memberNumber < groupSize; memberNumber++) {
. . . . . . . . Ped ped1 = PED::GET_PED_AS_GROUP_MEMBER(groupID, memberNumber);
. . . . . . . . //and so on
--]]
function PED.GET_PED_AS_GROUP_MEMBER(groupID, memberNumber)
  return native.invoke(
    Type.Ped, 4059, false,
    arg(Type.Int, groupID),
    arg(Type.Int, memberNumber)
  )
end

-- Ped GET_PED_AS_GROUP_LEADER(int groupID) // 0x5CCE68DBD5FE93EC
function PED.GET_PED_AS_GROUP_LEADER(groupID)
  return native.invoke(
    Type.Ped, 4060, false,
    arg(Type.Int, groupID)
  )
end

-- void SET_PED_KEEP_TASK(Ped ped, BOOL toggle) // 0x971D38760FBC02EF
function PED.SET_PED_KEEP_TASK(ped, toggle)
  native.invoke(
    Type.Void, 4061, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_ALLOW_MINOR_REACTIONS_AS_MISSION_PED(Ped ped, BOOL toggle) // 0x49E50BDB8BA4DAB2
function PED.SET_PED_ALLOW_MINOR_REACTIONS_AS_MISSION_PED(ped, toggle)
  native.invoke(
    Type.Void, 4062, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_PED_SWIMMING(Ped ped) // 0x9DE327631295B4C2
function PED.IS_PED_SWIMMING(ped)
  return native.invoke(
    Type.Bool, 4063, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_SWIMMING_UNDER_WATER(Ped ped) // 0xC024869A53992F34
function PED.IS_PED_SWIMMING_UNDER_WATER(ped)
  return native.invoke(
    Type.Bool, 4064, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_COORDS_KEEP_VEHICLE(Ped ped, float posX, float posY, float posZ) // 0x9AFEFF481A85AB2E
--[[
teleports ped to coords along with the vehicle ped is in
--]]
function PED.SET_PED_COORDS_KEEP_VEHICLE(ped, posX, posY, posZ)
  native.invoke(
    Type.Void, 4065, false,
    arg(Type.Ped, ped),
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ)
  )
end

-- void SET_PED_DIES_IN_VEHICLE(Ped ped, BOOL toggle) // 0x2A30922C90C9B42C
function PED.SET_PED_DIES_IN_VEHICLE(ped, toggle)
  native.invoke(
    Type.Void, 4066, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_CREATE_RANDOM_COPS(BOOL toggle) // 0x102E68B2024D536D
function PED.SET_CREATE_RANDOM_COPS(toggle)
  native.invoke(
    Type.Void, 4067, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_CREATE_RANDOM_COPS_NOT_ON_SCENARIOS(BOOL toggle) // 0x8A4986851C4EF6E7
function PED.SET_CREATE_RANDOM_COPS_NOT_ON_SCENARIOS(toggle)
  native.invoke(
    Type.Void, 4068, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_CREATE_RANDOM_COPS_ON_SCENARIOS(BOOL toggle) // 0x444CB7D7DBE6973D
function PED.SET_CREATE_RANDOM_COPS_ON_SCENARIOS(toggle)
  native.invoke(
    Type.Void, 4069, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL CAN_CREATE_RANDOM_COPS() // 0x5EE2CAFF7F17770D
function PED.CAN_CREATE_RANDOM_COPS()
  return native.invoke(
    Type.Bool, 4070, false
  )
end

-- void SET_PED_AS_ENEMY(Ped ped, BOOL toggle) // 0x02A0C9720B854BFA
function PED.SET_PED_AS_ENEMY(ped, toggle)
  native.invoke(
    Type.Void, 4071, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_CAN_SMASH_GLASS(Ped ped, BOOL p1, BOOL p2) // 0x1CCE141467FF42A2
function PED.SET_PED_CAN_SMASH_GLASS(ped, p1, p2)
  native.invoke(
    Type.Void, 4072, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- BOOL IS_PED_IN_ANY_TRAIN(Ped ped) // 0x6F972C1AB75A1ED0
function PED.IS_PED_IN_ANY_TRAIN(ped)
  return native.invoke(
    Type.Bool, 4073, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_GETTING_INTO_A_VEHICLE(Ped ped) // 0xBB062B2B5722478E
function PED.IS_PED_GETTING_INTO_A_VEHICLE(ped)
  return native.invoke(
    Type.Bool, 4074, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_TRYING_TO_ENTER_A_LOCKED_VEHICLE(Ped ped) // 0x44D28D5DDFE5F68C
function PED.IS_PED_TRYING_TO_ENTER_A_LOCKED_VEHICLE(ped)
  return native.invoke(
    Type.Bool, 4075, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_ENABLE_HANDCUFFS(Ped ped, BOOL toggle) // 0xDF1AF8B5D56542FA
--[[
ped can not pull out a weapon when true
--]]
function PED.SET_ENABLE_HANDCUFFS(ped, toggle)
  native.invoke(
    Type.Void, 4076, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_ENABLE_BOUND_ANKLES(Ped ped, BOOL toggle) // 0xC52E0F855C58FC2E
--[[
Used with SET_ENABLE_HANDCUFFS in decompiled scripts. From my observations, I have noticed that while being ragdolled you are not able to get up but you can still run. Your legs can also bend.
--]]
function PED.SET_ENABLE_BOUND_ANKLES(ped, toggle)
  native.invoke(
    Type.Void, 4077, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_ENABLE_SCUBA(Ped ped, BOOL toggle) // 0xF99F62004024D506
--[[
Enables diving motion when underwater.
--]]
function PED.SET_ENABLE_SCUBA(ped, toggle)
  native.invoke(
    Type.Void, 4078, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_CAN_ATTACK_FRIENDLY(Ped ped, BOOL toggle, BOOL p2) // 0xB3B1CB349FF9C75D
--[[
Setting ped to true allows the ped to shoot "friendlies".

p2 set to true when toggle is also true seams to make peds permanently unable to aim at, even if you set p2 back to false.

p1 = false & p2 = false for unable to aim at.
p1 = true & p2 = false for able to aim at. 
--]]
function PED.SET_CAN_ATTACK_FRIENDLY(ped, toggle, p2)
  native.invoke(
    Type.Void, 4079, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle),
    arg(Type.Bool, p2)
  )
end

-- int GET_PED_ALERTNESS(Ped ped) // 0xF6AA118530443FD2
--[[
Returns the ped's alertness (0-3).

Values : 

0 : Neutral
1 : Heard something (gun shot, hit, etc)
2 : Knows (the origin of the event)
3 : Fully alerted (is facing the event?)

If the Ped does not exist, returns -1.
--]]
function PED.GET_PED_ALERTNESS(ped)
  return native.invoke(
    Type.Int, 4080, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_ALERTNESS(Ped ped, int value) // 0xDBA71115ED9941A6
--[[
value ranges from 0 to 3.
--]]
function PED.SET_PED_ALERTNESS(ped, value)
  native.invoke(
    Type.Void, 4081, false,
    arg(Type.Ped, ped),
    arg(Type.Int, value)
  )
end

-- void SET_PED_GET_OUT_UPSIDE_DOWN_VEHICLE(Ped ped, BOOL toggle) // 0xBC0ED94165A48BC2
function PED.SET_PED_GET_OUT_UPSIDE_DOWN_VEHICLE(ped, toggle)
  native.invoke(
    Type.Void, 4082, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_MOVEMENT_CLIPSET(Ped ped, const char* clipSet, float transitionSpeed) // 0xAF8A94EDE7712BEF
--[[
transitionSpeed is the time in seconds it takes to transition from one movement clipset to another.	ransitionSpeed is usually 1.0f

List of movement clipsets:
Thanks to elsewhat for list.

 "ANIM_GROUP_MOVE_BALLISTIC"
 "ANIM_GROUP_MOVE_LEMAR_ALLEY"
 "clipset@move@trash_fast_turn"
 "FEMALE_FAST_RUNNER"
 "missfbi4prepp1_garbageman"
 "move_characters@franklin@fire"
 "move_characters@Jimmy@slow@"
 "move_characters@michael@fire"
 "move_f@flee@a"
 "move_f@scared"
 "move_f@sexy@a"
 "move_heist_lester"
 "move_injured_generic"
 "move_lester_CaneUp"
 "move_m@bag"
 "MOVE_M@BAIL_BOND_NOT_TAZERED"
 "MOVE_M@BAIL_BOND_TAZERED"
 "move_m@brave"
 "move_m@casual@d"
 "move_m@drunk@moderatedrunk"
 "MOVE_M@DRUNK@MODERATEDRUNK"
 "MOVE_M@DRUNK@MODERATEDRUNK_HEAD_UP"
 "MOVE_M@DRUNK@SLIGHTLYDRUNK"
 "MOVE_M@DRUNK@VERYDRUNK"
 "move_m@fire"
 "move_m@gangster@var_e"
 "move_m@gangster@var_f"
 "move_m@gangster@var_i"
 "move_m@JOG@"
 "MOVE_M@PRISON_GAURD"
 "MOVE_P_M_ONE"
 "MOVE_P_M_ONE_BRIEFCASE"
 "move_p_m_zero_janitor"
 "move_p_m_zero_slow"
 "move_ped_bucket"
 "move_ped_crouched"
 "move_ped_mop"
 "MOVE_M@FEMME@"
 "MOVE_F@FEMME@"
 "MOVE_M@GANGSTER@NG"
 "MOVE_F@GANGSTER@NG"
 "MOVE_M@POSH@"
 "MOVE_F@POSH@"
 "MOVE_M@TOUGH_GUY@"
 "MOVE_F@TOUGH_GUY@"

~ NotCrunchyTaco

Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
--]]
function PED.SET_PED_MOVEMENT_CLIPSET(ped, clipSet, transitionSpeed)
  native.invoke(
    Type.Void, 4083, false,
    arg(Type.Ped, ped),
    arg(Type.String, clipSet),
    arg(Type.Float, transitionSpeed)
  )
end

-- void RESET_PED_MOVEMENT_CLIPSET(Ped ped, float p1) // 0xAA74EC0CB0AAEA2C
--[[
If p1 is 0.0, I believe you are back to normal. 
If p1 is 1.0, it looks like you can only rotate the ped, not walk.

Using the following code to reset back to normal
PED::RESET_PED_MOVEMENT_CLIPSET(PLAYER::PLAYER_PED_ID(), 0.0);
--]]
function PED.RESET_PED_MOVEMENT_CLIPSET(ped, p1)
  native.invoke(
    Type.Void, 4084, false,
    arg(Type.Ped, ped),
    arg(Type.Float, p1)
  )
end

-- void SET_PED_STRAFE_CLIPSET(Ped ped, const char* clipSet) // 0x29A28F3F8CF6D854
--[[
Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
--]]
function PED.SET_PED_STRAFE_CLIPSET(ped, clipSet)
  native.invoke(
    Type.Void, 4085, false,
    arg(Type.Ped, ped),
    arg(Type.String, clipSet)
  )
end

-- void RESET_PED_STRAFE_CLIPSET(Ped ped) // 0x20510814175EA477
function PED.RESET_PED_STRAFE_CLIPSET(ped)
  native.invoke(
    Type.Void, 4086, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_WEAPON_MOVEMENT_CLIPSET(Ped ped, const char* clipSet) // 0x2622E35B77D3ACA2
function PED.SET_PED_WEAPON_MOVEMENT_CLIPSET(ped, clipSet)
  native.invoke(
    Type.Void, 4087, false,
    arg(Type.Ped, ped),
    arg(Type.String, clipSet)
  )
end

-- void RESET_PED_WEAPON_MOVEMENT_CLIPSET(Ped ped) // 0x97B0DB5B4AA74E77
function PED.RESET_PED_WEAPON_MOVEMENT_CLIPSET(ped)
  native.invoke(
    Type.Void, 4088, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_DRIVE_BY_CLIPSET_OVERRIDE(Ped ped, const char* clipset) // 0xED34AB6C5CB36520
function PED.SET_PED_DRIVE_BY_CLIPSET_OVERRIDE(ped, clipset)
  native.invoke(
    Type.Void, 4089, false,
    arg(Type.Ped, ped),
    arg(Type.String, clipset)
  )
end

-- void CLEAR_PED_DRIVE_BY_CLIPSET_OVERRIDE(Ped ped) // 0x4AFE3690D7E0B5AC
function PED.CLEAR_PED_DRIVE_BY_CLIPSET_OVERRIDE(ped)
  native.invoke(
    Type.Void, 4090, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_MOTION_IN_COVER_CLIPSET_OVERRIDE(Ped ped, const char* p1) // 0x9DBA107B4937F809
--[[
Found in the b617d scripts:
PED::SET_PED_MOTION_IN_COVER_CLIPSET_OVERRIDE(v_7, "trevor_heist_cover_2h");
--]]
function PED.SET_PED_MOTION_IN_COVER_CLIPSET_OVERRIDE(ped, p1)
  native.invoke(
    Type.Void, 4091, false,
    arg(Type.Ped, ped),
    arg(Type.String, p1)
  )
end

-- void CLEAR_PED_MOTION_IN_COVER_CLIPSET_OVERRIDE(Ped ped) // 0xC79196DCB36F6121
function PED.CLEAR_PED_MOTION_IN_COVER_CLIPSET_OVERRIDE(ped)
  native.invoke(
    Type.Void, 4092, false,
    arg(Type.Ped, ped)
  )
end

-- void CLEAR_PED_FALL_UPPER_BODY_CLIPSET_OVERRIDE(Ped ped) // 0x80054D7FCC70EEC6
function PED.CLEAR_PED_FALL_UPPER_BODY_CLIPSET_OVERRIDE(ped)
  native.invoke(
    Type.Void, 4093, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_IN_VEHICLE_CONTEXT(Ped ped, Hash context) // 0x530071295899A8C6
--[[
PED::SET_PED_IN_VEHICLE_CONTEXT(l_128, MISC::GET_HASH_KEY("MINI_PROSTITUTE_LOW_PASSENGER"));
PED::SET_PED_IN_VEHICLE_CONTEXT(l_128, MISC::GET_HASH_KEY("MINI_PROSTITUTE_LOW_RESTRICTED_PASSENGER"));
PED::SET_PED_IN_VEHICLE_CONTEXT(l_3212, MISC::GET_HASH_KEY("MISS_FAMILY1_JIMMY_SIT"));
PED::SET_PED_IN_VEHICLE_CONTEXT(l_3212, MISC::GET_HASH_KEY("MISS_FAMILY1_JIMMY_SIT_REAR"));
PED::SET_PED_IN_VEHICLE_CONTEXT(l_95, MISC::GET_HASH_KEY("MISS_FAMILY2_JIMMY_BICYCLE"));
PED::SET_PED_IN_VEHICLE_CONTEXT(num3, MISC::GET_HASH_KEY("MISSFBI2_MICHAEL_DRIVEBY"));
PED::SET_PED_IN_VEHICLE_CONTEXT(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("MISS_ARMENIAN3_FRANKLIN_TENSE"));
PED::SET_PED_IN_VEHICLE_CONTEXT(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("MISSFBI5_TREVOR_DRIVING"));
--]]
function PED.SET_PED_IN_VEHICLE_CONTEXT(ped, context)
  native.invoke(
    Type.Void, 4094, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, context)
  )
end

-- void RESET_PED_IN_VEHICLE_CONTEXT(Ped ped) // 0x22EF8FF8778030EB
function PED.RESET_PED_IN_VEHICLE_CONTEXT(ped)
  native.invoke(
    Type.Void, 4095, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_SCRIPTED_SCENARIO_PED_USING_CONDITIONAL_ANIM(Ped ped, const char* animDict, const char* anim) // 0x6EC47A344923E1ED
--[[
Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
--]]
function PED.IS_SCRIPTED_SCENARIO_PED_USING_CONDITIONAL_ANIM(ped, animDict, anim)
  return native.invoke(
    Type.Bool, 4096, false,
    arg(Type.Ped, ped),
    arg(Type.String, animDict),
    arg(Type.String, anim)
  )
end

-- void SET_PED_ALTERNATE_WALK_ANIM(Ped ped, const char* animDict, const char* animName, float p3, BOOL p4) // 0x6C60394CB4F75E9A
--[[
Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json

Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
--]]
function PED.SET_PED_ALTERNATE_WALK_ANIM(ped, animDict, animName, p3, p4)
  native.invoke(
    Type.Void, 4097, false,
    arg(Type.Ped, ped),
    arg(Type.String, animDict),
    arg(Type.String, animName),
    arg(Type.Float, p3),
    arg(Type.Bool, p4)
  )
end

-- void CLEAR_PED_ALTERNATE_WALK_ANIM(Ped ped, float p1) // 0x8844BBFCE30AA9E9
function PED.CLEAR_PED_ALTERNATE_WALK_ANIM(ped, p1)
  native.invoke(
    Type.Void, 4098, false,
    arg(Type.Ped, ped),
    arg(Type.Float, p1)
  )
end

-- void SET_PED_ALTERNATE_MOVEMENT_ANIM(Ped ped, int stance, const char* animDictionary, const char* animationName, float p4, BOOL p5) // 0x90A43CC281FFAB46
--[[
stance:
0 = idle
1 = walk
2 = running

p5 = usually set to true

Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json

Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
--]]
function PED.SET_PED_ALTERNATE_MOVEMENT_ANIM(ped, stance, animDictionary, animationName, p4, p5)
  native.invoke(
    Type.Void, 4099, false,
    arg(Type.Ped, ped),
    arg(Type.Int, stance),
    arg(Type.String, animDictionary),
    arg(Type.String, animationName),
    arg(Type.Float, p4),
    arg(Type.Bool, p5)
  )
end

-- void CLEAR_PED_ALTERNATE_MOVEMENT_ANIM(Ped ped, int stance, float p2) // 0xD8D19675ED5FBDCE
function PED.CLEAR_PED_ALTERNATE_MOVEMENT_ANIM(ped, stance, p2)
  native.invoke(
    Type.Void, 4100, false,
    arg(Type.Ped, ped),
    arg(Type.Int, stance),
    arg(Type.Float, p2)
  )
end

-- void SET_PED_GESTURE_GROUP(Ped ped, const char* animGroupGesture) // 0xDDF803377F94AAA8
--[[
From the scripts:
PED::SET_PED_GESTURE_GROUP(PLAYER::PLAYER_PED_ID(),
"ANIM_GROUP_GESTURE_MISS_FRA0");
PED::SET_PED_GESTURE_GROUP(PLAYER::PLAYER_PED_ID(),
"ANIM_GROUP_GESTURE_MISS_DocksSetup1");
--]]
function PED.SET_PED_GESTURE_GROUP(ped, animGroupGesture)
  native.invoke(
    Type.Void, 4101, false,
    arg(Type.Ped, ped),
    arg(Type.String, animGroupGesture)
  )
end

-- Vector3 GET_ANIM_INITIAL_OFFSET_POSITION(const char* animDict, const char* animName, float x, float y, float z, float xRot, float yRot, float zRot, float p8, int p9) // 0xBE22B26DD764C040
--[[
Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
--]]
function PED.GET_ANIM_INITIAL_OFFSET_POSITION(animDict, animName, x, y, z, xRot, yRot, zRot, p8, p9)
  return native.invoke(
    Type.Vector3, 4102, false,
    arg(Type.String, animDict),
    arg(Type.String, animName),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, xRot),
    arg(Type.Float, yRot),
    arg(Type.Float, zRot),
    arg(Type.Float, p8),
    arg(Type.Int, p9)
  )
end

-- Vector3 GET_ANIM_INITIAL_OFFSET_ROTATION(const char* animDict, const char* animName, float x, float y, float z, float xRot, float yRot, float zRot, float p8, int p9) // 0x4B805E6046EE9E47
--[[
Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
--]]
function PED.GET_ANIM_INITIAL_OFFSET_ROTATION(animDict, animName, x, y, z, xRot, yRot, zRot, p8, p9)
  return native.invoke(
    Type.Vector3, 4103, false,
    arg(Type.String, animDict),
    arg(Type.String, animName),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, xRot),
    arg(Type.Float, yRot),
    arg(Type.Float, zRot),
    arg(Type.Float, p8),
    arg(Type.Int, p9)
  )
end

-- int GET_PED_DRAWABLE_VARIATION(Ped ped, int componentId) // 0x67F3780DD425D4FC
--[[
Ids
0 - Head
1 - Beard
2 - Hair
3 - Torso
4 - Legs
5 - Hands
6 - Foot
7 - ------
8 - Accessories 1
9 - Accessories 2
10- Decals
11 - Auxiliary parts for torso
--]]
function PED.GET_PED_DRAWABLE_VARIATION(ped, componentId)
  return native.invoke(
    Type.Int, 4104, false,
    arg(Type.Ped, ped),
    arg(Type.Int, componentId)
  )
end

-- int GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS(Ped ped, int componentId) // 0x27561561732A7842
--[[
List of component/props ID
gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
--]]
function PED.GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS(ped, componentId)
  return native.invoke(
    Type.Int, 4105, false,
    arg(Type.Ped, ped),
    arg(Type.Int, componentId)
  )
end

-- int GET_PED_TEXTURE_VARIATION(Ped ped, int componentId) // 0x04A355E041E004E6
--[[
List of component/props ID
gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
--]]
function PED.GET_PED_TEXTURE_VARIATION(ped, componentId)
  return native.invoke(
    Type.Int, 4106, false,
    arg(Type.Ped, ped),
    arg(Type.Int, componentId)
  )
end

-- int GET_NUMBER_OF_PED_TEXTURE_VARIATIONS(Ped ped, int componentId, int drawableId) // 0x8F7156A3142A6BAD
--[[
List of component/props ID
gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
--]]
function PED.GET_NUMBER_OF_PED_TEXTURE_VARIATIONS(ped, componentId, drawableId)
  return native.invoke(
    Type.Int, 4107, false,
    arg(Type.Ped, ped),
    arg(Type.Int, componentId),
    arg(Type.Int, drawableId)
  )
end

-- int GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS(Ped ped, int propId) // 0x5FAF9754E789FB47
--[[
List of component/props ID
gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
--]]
function PED.GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS(ped, propId)
  return native.invoke(
    Type.Int, 4108, false,
    arg(Type.Ped, ped),
    arg(Type.Int, propId)
  )
end

-- int GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS(Ped ped, int propId, int drawableId) // 0xA6E7F1CEB523E171
--[[
Need to check behavior when drawableId = -1

- Doofy.Ass
Why this function doesn't work and return nill value?
GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS(PLAYER.PLAYER_PED_ID(), 0, 5)

tick: scripts/addins/menu_execute.lua:51: attempt to call field 'GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS' (a nil value)


List of component/props ID
gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
--]]
function PED.GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS(ped, propId, drawableId)
  return native.invoke(
    Type.Int, 4109, false,
    arg(Type.Ped, ped),
    arg(Type.Int, propId),
    arg(Type.Int, drawableId)
  )
end

-- int GET_PED_PALETTE_VARIATION(Ped ped, int componentId) // 0xE3DD5F2A84B42281
--[[
List of component/props ID
gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
--]]
function PED.GET_PED_PALETTE_VARIATION(ped, componentId)
  return native.invoke(
    Type.Int, 4110, false,
    arg(Type.Ped, ped),
    arg(Type.Int, componentId)
  )
end

-- BOOL GET_MP_OUTFIT_DATA_FROM_METADATA(Any* p0, Any* p1) // 0x9E30E91FB03A2CAF
function PED.GET_MP_OUTFIT_DATA_FROM_METADATA(p0, p1)
  return native.invoke(
    Type.Bool, 4111, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- int GET_FM_MALE_SHOP_PED_APPAREL_ITEM_INDEX(int p0) // 0x1E77FA7A62EE6C4C
function PED.GET_FM_MALE_SHOP_PED_APPAREL_ITEM_INDEX(p0)
  return native.invoke(
    Type.Int, 4112, false,
    arg(Type.Int, p0)
  )
end

-- int GET_FM_FEMALE_SHOP_PED_APPAREL_ITEM_INDEX(int p0) // 0xF033419D1B81FAE8
function PED.GET_FM_FEMALE_SHOP_PED_APPAREL_ITEM_INDEX(p0)
  return native.invoke(
    Type.Int, 4113, false,
    arg(Type.Int, p0)
  )
end

-- BOOL IS_PED_COMPONENT_VARIATION_VALID(Ped ped, int componentId, int drawableId, int textureId) // 0xE825F6B6CEA7671D
--[[
Checks if the component variation is valid, this works great for randomizing components using loops.

List of component/props ID
gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html

Full list of ped components by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pedComponentVariations.json
--]]
function PED.IS_PED_COMPONENT_VARIATION_VALID(ped, componentId, drawableId, textureId)
  return native.invoke(
    Type.Bool, 4114, false,
    arg(Type.Ped, ped),
    arg(Type.Int, componentId),
    arg(Type.Int, drawableId),
    arg(Type.Int, textureId)
  )
end

-- void SET_PED_COMPONENT_VARIATION(Ped ped, int componentId, int drawableId, int textureId, int paletteId) // 0x262B14F48D29DE80
--[[
paletteId: 0 to 3.

componentId:
enum ePedVarComp
{
	PV_COMP_INVALID = -1,
	PV_COMP_HEAD,
	PV_COMP_BERD,
	PV_COMP_HAIR,
	PV_COMP_UPPR,
	PV_COMP_LOWR,
	PV_COMP_HAND,
	PV_COMP_FEET,
	PV_COMP_TEEF,
	PV_COMP_ACCS,
	PV_COMP_TASK,
	PV_COMP_DECL,
	PV_COMP_JBIB,
	PV_COMP_MAX
};

Examples: https://gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html

Full list of ped components by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pedComponentVariations.json
--]]
function PED.SET_PED_COMPONENT_VARIATION(ped, componentId, drawableId, textureId, paletteId)
  native.invoke(
    Type.Void, 4115, false,
    arg(Type.Ped, ped),
    arg(Type.Int, componentId),
    arg(Type.Int, drawableId),
    arg(Type.Int, textureId),
    arg(Type.Int, paletteId)
  )
end

-- void SET_PED_RANDOM_COMPONENT_VARIATION(Ped ped, int p1) // 0xC8A9481A01E63C28
--[[
p1 is always 0 in R* scripts.

List of component/props ID
gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
--]]
function PED.SET_PED_RANDOM_COMPONENT_VARIATION(ped, p1)
  native.invoke(
    Type.Void, 4116, false,
    arg(Type.Ped, ped),
    arg(Type.Int, p1)
  )
end

-- void SET_PED_RANDOM_PROPS(Ped ped) // 0xC44AA05345C992C6
--[[
List of component/props ID
gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
--]]
function PED.SET_PED_RANDOM_PROPS(ped)
  native.invoke(
    Type.Void, 4117, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_DEFAULT_COMPONENT_VARIATION(Ped ped) // 0x45EEE61580806D63
--[[
Sets Ped Default Clothes
--]]
function PED.SET_PED_DEFAULT_COMPONENT_VARIATION(ped)
  native.invoke(
    Type.Void, 4118, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_BLEND_FROM_PARENTS(Ped ped, Any p1, Any p2, float p3, float p4) // 0x137BBD05230DB22D
function PED.SET_PED_BLEND_FROM_PARENTS(ped, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 4119, false,
    arg(Type.Ped, ped),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4)
  )
end

-- void SET_PED_HEAD_BLEND_DATA(Ped ped, int shapeFirstID, int shapeSecondID, int shapeThirdID, int skinFirstID, int skinSecondID, int skinThirdID, float shapeMix, float skinMix, float thirdMix, BOOL isParent) // 0x9414E18B9434C2FE
--[[
The "shape" parameters control the shape of the ped's face. The "skin" parameters control the skin tone. ShapeMix and skinMix control how much the first and second IDs contribute,(typically mother and father.) ThirdMix overrides the others in favor of the third IDs. IsParent is set for "children" of the player character's grandparents during old-gen character creation. It has unknown effect otherwise.

The IDs start at zero and go Male Non-DLC, Female Non-DLC, Male DLC, and Female DLC.

!!!Can someone add working example for this???

try this:
       headBlendData headData;
       GET_PED_HEAD_BLEND_DATA(PLAYER_PED_ID(), &headData);

       SET_PED_HEAD_BLEND_DATA(PLAYER_PED_ID(), headData.shapeFirst, headData.shapeSecond, headData.shapeThird, headData.skinFirst, headData.skinSecond
          , headData.skinThird, headData.shapeMix, headData.skinMix, headData.skinThird, 0);


For more info please refer to this topic. 
gtaforums.com/topic/858970-all-gtao-face-ids-pedset-ped-head-blend-data-explained
--]]
function PED.SET_PED_HEAD_BLEND_DATA(ped, shapeFirstID, shapeSecondID, shapeThirdID, skinFirstID, skinSecondID, skinThirdID, shapeMix, skinMix, thirdMix, isParent)
  native.invoke(
    Type.Void, 4120, false,
    arg(Type.Ped, ped),
    arg(Type.Int, shapeFirstID),
    arg(Type.Int, shapeSecondID),
    arg(Type.Int, shapeThirdID),
    arg(Type.Int, skinFirstID),
    arg(Type.Int, skinSecondID),
    arg(Type.Int, skinThirdID),
    arg(Type.Float, shapeMix),
    arg(Type.Float, skinMix),
    arg(Type.Float, thirdMix),
    arg(Type.Bool, isParent)
  )
end

-- BOOL GET_PED_HEAD_BLEND_DATA(Ped ped, Any* headBlendData) // 0x2746BD9D88C5C5D0
--[[
The pointer is to a padded struct that matches the arguments to SET_PED_HEAD_BLEND_DATA(...). There are 4 bytes of padding after each field.
pass this struct in the second parameter 
struct headBlendData
{
    int shapeFirst;
    int padding1;
    int shapeSecond;
    int padding2;
    int shapeThird;
    int padding3;
    int skinFirst;
    int padding4;
    int skinSecond;
    int padding5;
    int skinThird;
    int padding6;
    float shapeMix;
    int padding7;
    float skinMix;
    int padding8;
    float thirdMix;
    int padding9;
    bool isParent;
};
--]]
function PED.GET_PED_HEAD_BLEND_DATA(ped, headBlendData)
  return native.invoke(
    Type.Bool, 4121, false,
    arg(Type.Ped, ped),
    arg(Type.Any, headBlendData)
  )
end

-- void UPDATE_PED_HEAD_BLEND_DATA(Ped ped, float shapeMix, float skinMix, float thirdMix) // 0x723538F61C647C5A
--[[
See SET_PED_HEAD_BLEND_DATA().
--]]
function PED.UPDATE_PED_HEAD_BLEND_DATA(ped, shapeMix, skinMix, thirdMix)
  native.invoke(
    Type.Void, 4122, false,
    arg(Type.Ped, ped),
    arg(Type.Float, shapeMix),
    arg(Type.Float, skinMix),
    arg(Type.Float, thirdMix)
  )
end

-- void SET_HEAD_BLEND_EYE_COLOR(Ped ped, int index) // 0x50B56988B170AFDF
--[[
Used for freemode (online) characters.

For some reason, the scripts use a rounded float for the index.
Indexes:
1. black
2. very light blue/green
3. dark blue
4. brown
5. darker brown
6. light brown
7. blue
8. light blue
9. pink
10. yellow
11. purple
12. black
13. dark green
14. light brown
15. yellow/black pattern
16. light colored spiral pattern
17. shiny red
18. shiny half blue/half red
19. half black/half light blue
20. white/red perimter
21. green snake
22. red snake
23. dark blue snake
24. dark yellow
25. bright yellow
26. all black
28. red small pupil
29. devil blue/black
30. white small pupil
31. glossed over
--]]
function PED.SET_HEAD_BLEND_EYE_COLOR(ped, index)
  native.invoke(
    Type.Void, 4123, false,
    arg(Type.Ped, ped),
    arg(Type.Int, index)
  )
end

-- int GET_HEAD_BLEND_EYE_COLOR(Ped ped) // 0x76BBA2CEE66D47E9
--[[
A getter for _SET_PED_EYE_COLOR. Returns -1 if fails to get.
--]]
function PED.GET_HEAD_BLEND_EYE_COLOR(ped)
  return native.invoke(
    Type.Int, 4124, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_HEAD_OVERLAY(Ped ped, int overlayID, int index, float opacity) // 0x48F44967FA05CC1E
--[[
OverlayID ranges from 0 to 12, index from 0 to _GET_NUM_OVERLAY_VALUES(overlayID)-1, and opacity from 0.0 to 1.0. 

overlayID       Part                  Index, to disable
0               Blemishes             0 - 23, 255
1               Facial Hair           0 - 28, 255
2               Eyebrows              0 - 33, 255
3               Ageing                0 - 14, 255
4               Makeup                0 - 74, 255
5               Blush                 0 - 6, 255
6               Complexion            0 - 11, 255
7               Sun Damage            0 - 10, 255
8               Lipstick              0 - 9, 255
9               Moles/Freckles        0 - 17, 255
10              Chest Hair            0 - 16, 255
11              Body Blemishes        0 - 11, 255
12              Add Body Blemishes    0 - 1, 255
--]]
function PED.SET_PED_HEAD_OVERLAY(ped, overlayID, index, opacity)
  native.invoke(
    Type.Void, 4125, false,
    arg(Type.Ped, ped),
    arg(Type.Int, overlayID),
    arg(Type.Int, index),
    arg(Type.Float, opacity)
  )
end

-- int GET_PED_HEAD_OVERLAY(Ped ped, int overlayID) // 0xA60EF3B6461A4D43
--[[
Likely a char, if that overlay is not set, e.i. "None" option, returns 255;

This might be the once removed native GET_PED_HEAD_OVERLAY.
--]]
function PED.GET_PED_HEAD_OVERLAY(ped, overlayID)
  return native.invoke(
    Type.Int, 4126, false,
    arg(Type.Ped, ped),
    arg(Type.Int, overlayID)
  )
end

-- int GET_PED_HEAD_OVERLAY_NUM(int overlayID) // 0xCF1CE768BB43480E
function PED.GET_PED_HEAD_OVERLAY_NUM(overlayID)
  return native.invoke(
    Type.Int, 4127, false,
    arg(Type.Int, overlayID)
  )
end

-- void SET_PED_HEAD_OVERLAY_TINT(Ped ped, int overlayID, int colorType, int colorID, int secondColorID) // 0x497BF74A7B9CB952
--[[


ColorType is 1 for eyebrows, beards, and chest hair; 2 for blush and lipstick; and 0 otherwise, though not called in those cases.

Called after SET_PED_HEAD_OVERLAY().
--]]
function PED.SET_PED_HEAD_OVERLAY_TINT(ped, overlayID, colorType, colorID, secondColorID)
  native.invoke(
    Type.Void, 4128, false,
    arg(Type.Ped, ped),
    arg(Type.Int, overlayID),
    arg(Type.Int, colorType),
    arg(Type.Int, colorID),
    arg(Type.Int, secondColorID)
  )
end

-- void SET_PED_HAIR_TINT(Ped ped, int colorID, int highlightColorID) // 0x4CFFC65454C93A49
function PED.SET_PED_HAIR_TINT(ped, colorID, highlightColorID)
  native.invoke(
    Type.Void, 4129, false,
    arg(Type.Ped, ped),
    arg(Type.Int, colorID),
    arg(Type.Int, highlightColorID)
  )
end

-- int GET_NUM_PED_HAIR_TINTS() // 0xE5C0CF872C2AD150
function PED.GET_NUM_PED_HAIR_TINTS()
  return native.invoke(
    Type.Int, 4130, false
  )
end

-- int GET_NUM_PED_MAKEUP_TINTS() // 0xD1F7CA1535D22818
function PED.GET_NUM_PED_MAKEUP_TINTS()
  return native.invoke(
    Type.Int, 4131, false
  )
end

-- void GET_PED_HAIR_TINT_COLOR(int hairColorIndex, int* outR, int* outG, int* outB) // 0x4852FC386E2E1BB5
--[[
Input: Haircolor index, value between 0 and 63 (inclusive).
Output: RGB values for the haircolor specified in the input.

This is used with the hair color swatches scaleform.
Use `GET_PED_MAKEUP_TINT_COLOR` to get the makeup colors.
--]]
function PED.GET_PED_HAIR_TINT_COLOR(hairColorIndex, outR, outG, outB)
  native.invoke(
    Type.Void, 4132, false,
    arg(Type.Int, hairColorIndex),
    arg(Type.Int, outR),
    arg(Type.Int, outG),
    arg(Type.Int, outB)
  )
end

-- void GET_PED_MAKEUP_TINT_COLOR(int makeupColorIndex, int* outR, int* outG, int* outB) // 0x013E5CFC38CD5387
--[[
Input: Makeup color index, value between 0 and 63 (inclusive).
Output: RGB values for the makeup color specified in the input.

This is used with the makeup color swatches scaleform.
Use `GET_PED_HAIR_TINT_COLOR` to get the hair colors.
--]]
function PED.GET_PED_MAKEUP_TINT_COLOR(makeupColorIndex, outR, outG, outB)
  native.invoke(
    Type.Void, 4133, false,
    arg(Type.Int, makeupColorIndex),
    arg(Type.Int, outR),
    arg(Type.Int, outG),
    arg(Type.Int, outB)
  )
end

-- BOOL IS_PED_HAIR_TINT_FOR_CREATOR(int colorId) // 0xED6D8E27A43B8CDE
function PED.IS_PED_HAIR_TINT_FOR_CREATOR(colorId)
  return native.invoke(
    Type.Bool, 4134, false,
    arg(Type.Int, colorId)
  )
end

-- int GET_DEFAULT_SECONDARY_TINT_FOR_CREATOR(int colorId) // 0xEA9960D07DADCF10
function PED.GET_DEFAULT_SECONDARY_TINT_FOR_CREATOR(colorId)
  return native.invoke(
    Type.Int, 4135, false,
    arg(Type.Int, colorId)
  )
end

-- BOOL IS_PED_LIPSTICK_TINT_FOR_CREATOR(int colorId) // 0x3E802F11FBE27674
function PED.IS_PED_LIPSTICK_TINT_FOR_CREATOR(colorId)
  return native.invoke(
    Type.Bool, 4136, false,
    arg(Type.Int, colorId)
  )
end

-- BOOL IS_PED_BLUSH_TINT_FOR_CREATOR(int colorId) // 0xF41B5D290C99A3D6
function PED.IS_PED_BLUSH_TINT_FOR_CREATOR(colorId)
  return native.invoke(
    Type.Bool, 4137, false,
    arg(Type.Int, colorId)
  )
end

-- BOOL IS_PED_HAIR_TINT_FOR_BARBER(int colorID) // 0xE0D36E5D9E99CC21
function PED.IS_PED_HAIR_TINT_FOR_BARBER(colorID)
  return native.invoke(
    Type.Bool, 4138, false,
    arg(Type.Int, colorID)
  )
end

-- int GET_DEFAULT_SECONDARY_TINT_FOR_BARBER(int colorID) // 0xAAA6A3698A69E048
function PED.GET_DEFAULT_SECONDARY_TINT_FOR_BARBER(colorID)
  return native.invoke(
    Type.Int, 4139, false,
    arg(Type.Int, colorID)
  )
end

-- BOOL IS_PED_LIPSTICK_TINT_FOR_BARBER(int colorID) // 0x0525A2C2562F3CD4
function PED.IS_PED_LIPSTICK_TINT_FOR_BARBER(colorID)
  return native.invoke(
    Type.Bool, 4140, false,
    arg(Type.Int, colorID)
  )
end

-- BOOL IS_PED_BLUSH_TINT_FOR_BARBER(int colorID) // 0x604E810189EE3A59
function PED.IS_PED_BLUSH_TINT_FOR_BARBER(colorID)
  return native.invoke(
    Type.Bool, 4141, false,
    arg(Type.Int, colorID)
  )
end

-- BOOL IS_PED_BLUSH_FACEPAINT_TINT_FOR_BARBER(int colorId) // 0x09E7ECA981D9B210
function PED.IS_PED_BLUSH_FACEPAINT_TINT_FOR_BARBER(colorId)
  return native.invoke(
    Type.Bool, 4142, false,
    arg(Type.Int, colorId)
  )
end

-- int GET_TINT_INDEX_FOR_LAST_GEN_HAIR_TEXTURE(Hash modelHash, int drawableId, int textureId) // 0xC56FBF2F228E1DAC
function PED.GET_TINT_INDEX_FOR_LAST_GEN_HAIR_TEXTURE(modelHash, drawableId, textureId)
  return native.invoke(
    Type.Int, 4143, false,
    arg(Type.Hash, modelHash),
    arg(Type.Int, drawableId),
    arg(Type.Int, textureId)
  )
end

-- void SET_PED_MICRO_MORPH(Ped ped, int index, float scale) // 0x71A5C1DBA060049E
--[[
Sets the various freemode face features, e.g. nose length, chin shape. Scale ranges from -1.0 to 1.0.



0 - Nose Width (Thin/Wide)

1 - Nose Peak (Up/Down)

2 - Nose Length (Long/Short)

3 - Nose Bone Curveness (Crooked/Curved)

4 - Nose Tip (Up/Down)

5 - Nose Bone Twist (Left/Right)

6 - Eyebrow (Up/Down)

7 - Eyebrow (In/Out)

8 - Cheek Bones (Up/Down)

9 - Cheek Sideways Bone Size (In/Out)

10 - Cheek Bones Width (Puffed/Gaunt)

11 - Eye Opening (Both) (Wide/Squinted)

12 - Lip Thickness (Both) (Fat/Thin)

13 - Jaw Bone Width (Narrow/Wide)

14 - Jaw Bone Shape (Round/Square)

15 - Chin Bone (Up/Down)

16 - Chin Bone Length (In/Out or Backward/Forward)

17 - Chin Bone Shape (Pointed/Square)

18 - Chin Hole (Chin Bum)

19 - Neck Thickness (Thin/Thick)
--]]
function PED.SET_PED_MICRO_MORPH(ped, index, scale)
  native.invoke(
    Type.Void, 4144, false,
    arg(Type.Ped, ped),
    arg(Type.Int, index),
    arg(Type.Float, scale)
  )
end

-- BOOL HAS_PED_HEAD_BLEND_FINISHED(Ped ped) // 0x654CD0A825161131
function PED.HAS_PED_HEAD_BLEND_FINISHED(ped)
  return native.invoke(
    Type.Bool, 4145, false,
    arg(Type.Ped, ped)
  )
end

-- void FINALIZE_HEAD_BLEND(Ped ped) // 0x4668D80430D6C299
function PED.FINALIZE_HEAD_BLEND(ped)
  native.invoke(
    Type.Void, 4146, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_HEAD_BLEND_PALETTE_COLOR(Ped ped, int r, int g, int b, int id) // 0xCC9682B8951C5229
--[[
p4 seems to vary from 0 to 3.
Preview: https://gfycat.com/MaleRareAmazonparrot
--]]
function PED.SET_HEAD_BLEND_PALETTE_COLOR(ped, r, g, b, id)
  native.invoke(
    Type.Void, 4147, false,
    arg(Type.Ped, ped),
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b),
    arg(Type.Int, id)
  )
end

-- void DISABLE_HEAD_BLEND_PALETTE_COLOR(Ped ped) // 0xA21C118553BBDF02
function PED.DISABLE_HEAD_BLEND_PALETTE_COLOR(ped)
  native.invoke(
    Type.Void, 4148, false,
    arg(Type.Ped, ped)
  )
end

-- int GET_PED_HEAD_BLEND_FIRST_INDEX(int type) // 0x68D353AB88B97E0C
--[[
Type equals 0 for male non-dlc, 1 for female non-dlc, 2 for male dlc, and 3 for female dlc.

Used when calling SET_PED_HEAD_BLEND_DATA.
--]]
function PED.GET_PED_HEAD_BLEND_FIRST_INDEX(type)
  return native.invoke(
    Type.Int, 4149, false,
    arg(Type.Int, type)
  )
end

-- int GET_PED_HEAD_BLEND_NUM_HEADS(int type) // 0x5EF37013A6539C9D
--[[
Type equals 0 for male non-dlc, 1 for female non-dlc, 2 for male dlc, and 3 for female dlc.
--]]
function PED.GET_PED_HEAD_BLEND_NUM_HEADS(type)
  return native.invoke(
    Type.Int, 4150, false,
    arg(Type.Int, type)
  )
end

-- int SET_PED_PRELOAD_VARIATION_DATA(Ped ped, int slot, int drawableId, int textureId) // 0x39D55A620FCB6A3A
--[[
from extreme3.c4
PED::SET_PED_PRELOAD_VARIATION_DATA(PLAYER::PLAYER_PED_ID(), 8, PED::GET_PED_DRAWABLE_VARIATION(PLAYER::PLAYER_PED_ID(), 8), PED::GET_PED_TEXTURE_VARIATION(PLAYER::PLAYER_PED_ID(), 8));

p1 is probably componentId
--]]
function PED.SET_PED_PRELOAD_VARIATION_DATA(ped, slot, drawableId, textureId)
  return native.invoke(
    Type.Int, 4151, false,
    arg(Type.Ped, ped),
    arg(Type.Int, slot),
    arg(Type.Int, drawableId),
    arg(Type.Int, textureId)
  )
end

-- BOOL HAS_PED_PRELOAD_VARIATION_DATA_FINISHED(Ped ped) // 0x66680A92700F43DF
function PED.HAS_PED_PRELOAD_VARIATION_DATA_FINISHED(ped)
  return native.invoke(
    Type.Bool, 4152, false,
    arg(Type.Ped, ped)
  )
end

-- void RELEASE_PED_PRELOAD_VARIATION_DATA(Ped ped) // 0x5AAB586FFEC0FD96
function PED.RELEASE_PED_PRELOAD_VARIATION_DATA(ped)
  native.invoke(
    Type.Void, 4153, false,
    arg(Type.Ped, ped)
  )
end

-- int SET_PED_PRELOAD_PROP_DATA(Ped ped, int componentId, int drawableId, int TextureId) // 0x2B16A3BFF1FBCE49
--[[
List of component/props ID
gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
--]]
function PED.SET_PED_PRELOAD_PROP_DATA(ped, componentId, drawableId, TextureId)
  return native.invoke(
    Type.Int, 4154, false,
    arg(Type.Ped, ped),
    arg(Type.Int, componentId),
    arg(Type.Int, drawableId),
    arg(Type.Int, TextureId)
  )
end

-- BOOL HAS_PED_PRELOAD_PROP_DATA_FINISHED(Ped ped) // 0x784002A632822099
function PED.HAS_PED_PRELOAD_PROP_DATA_FINISHED(ped)
  return native.invoke(
    Type.Bool, 4155, false,
    arg(Type.Ped, ped)
  )
end

-- void RELEASE_PED_PRELOAD_PROP_DATA(Ped ped) // 0xF79F9DEF0AADE61A
function PED.RELEASE_PED_PRELOAD_PROP_DATA(ped)
  native.invoke(
    Type.Void, 4156, false,
    arg(Type.Ped, ped)
  )
end

-- int GET_PED_PROP_INDEX(Ped ped, int componentId, Any p2) // 0x898CC20EA75BACD8
--[[
List of component/props ID
gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
--]]
function PED.GET_PED_PROP_INDEX(ped, componentId, p2)
  return native.invoke(
    Type.Int, 4157, false,
    arg(Type.Ped, ped),
    arg(Type.Int, componentId),
    arg(Type.Any, p2)
  )
end

-- void SET_PED_PROP_INDEX(Ped ped, int componentId, int drawableId, int TextureId, BOOL attach, Any p5) // 0x93376B65A266EB5F
--[[
ComponentId can be set to various things based on what category you're wanting to set
enum PedPropsData
{
    PED_PROP_HATS = 0,
    PED_PROP_GLASSES = 1,
 PED_PROP_EARS = 2,
    PED_PROP_WATCHES = 3,
};
Usage: SET_PED_PROP_INDEX(playerPed, PED_PROP_HATS, GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS(playerPed, PED_PROP_HATS), GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS(playerPed, PED_PROP_HATS, 0), TRUE);

List of component/props ID
gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
--]]
function PED.SET_PED_PROP_INDEX(ped, componentId, drawableId, TextureId, attach, p5)
  native.invoke(
    Type.Void, 4158, false,
    arg(Type.Ped, ped),
    arg(Type.Int, componentId),
    arg(Type.Int, drawableId),
    arg(Type.Int, TextureId),
    arg(Type.Bool, attach),
    arg(Type.Any, p5)
  )
end

-- void KNOCK_OFF_PED_PROP(Ped ped, BOOL p1, BOOL p2, BOOL p3, BOOL p4) // 0x6FD7816A36615F48
--[[
List of component/props ID
gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
--]]
function PED.KNOCK_OFF_PED_PROP(ped, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 4159, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3),
    arg(Type.Bool, p4)
  )
end

-- void CLEAR_PED_PROP(Ped ped, int propId, Any p2) // 0x0943E5B8E078E76E
--[[
List of component/props ID
gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
--]]
function PED.CLEAR_PED_PROP(ped, propId, p2)
  native.invoke(
    Type.Void, 4160, false,
    arg(Type.Ped, ped),
    arg(Type.Int, propId),
    arg(Type.Any, p2)
  )
end

-- void CLEAR_ALL_PED_PROPS(Ped ped, Any p1) // 0xCD8A7537A9B52F06
--[[
List of component/props ID
gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
--]]
function PED.CLEAR_ALL_PED_PROPS(ped, p1)
  native.invoke(
    Type.Void, 4161, false,
    arg(Type.Ped, ped),
    arg(Type.Any, p1)
  )
end

-- void DROP_AMBIENT_PROP(Ped ped) // 0xAFF4710E2A0A6C12
function PED.DROP_AMBIENT_PROP(ped)
  native.invoke(
    Type.Void, 4162, false,
    arg(Type.Ped, ped)
  )
end

-- int GET_PED_PROP_TEXTURE_INDEX(Ped ped, int componentId) // 0xE131A28626F81AB2
--[[
List of component/props ID
gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
--]]
function PED.GET_PED_PROP_TEXTURE_INDEX(ped, componentId)
  return native.invoke(
    Type.Int, 4163, false,
    arg(Type.Ped, ped),
    arg(Type.Int, componentId)
  )
end

-- void CLEAR_PED_PARACHUTE_PACK_VARIATION(Ped ped) // 0x1280804F7CFD2D6C
function PED.CLEAR_PED_PARACHUTE_PACK_VARIATION(ped)
  native.invoke(
    Type.Void, 4164, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_SCUBA_GEAR_VARIATION(Ped ped) // 0x36C6984C3ED0C911
--[[
This native sets a scuba mask for freemode models and an oxygen bottle for player_* models. It works on freemode and player_* models.
--]]
function PED.SET_PED_SCUBA_GEAR_VARIATION(ped)
  native.invoke(
    Type.Void, 4165, false,
    arg(Type.Ped, ped)
  )
end

-- void CLEAR_PED_SCUBA_GEAR_VARIATION(Ped ped) // 0xB50EB4CCB29704AC
--[[
Removes the scubagear (for mp male: component id: 8, drawableId: 123, textureId: any) from peds. Does not play the 'remove scuba gear' animation, but instantly removes it.
--]]
function PED.CLEAR_PED_SCUBA_GEAR_VARIATION(ped)
  native.invoke(
    Type.Void, 4166, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_USING_PED_SCUBA_GEAR_VARIATION(Any p0) // 0xFEC9A3B1820F3331
function PED.IS_USING_PED_SCUBA_GEAR_VARIATION(p0)
  return native.invoke(
    Type.Bool, 4167, false,
    arg(Type.Any, p0)
  )
end

-- void SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(Ped ped, BOOL toggle) // 0x9F8AA94D6D97DBF4
--[[
works with TASK::TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS to make a ped completely oblivious to all events going on around him
--]]
function PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(ped, toggle)
  native.invoke(
    Type.Void, 4168, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_BOUNDS_ORIENTATION(Ped ped, float p1, float p2, float x, float y, float z) // 0x4F5F651ACCC9C4CF
function PED.SET_PED_BOUNDS_ORIENTATION(ped, p1, p2, x, y, z)
  native.invoke(
    Type.Void, 4169, false,
    arg(Type.Ped, ped),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void REGISTER_TARGET(Ped ped, Ped target) // 0x2F25D9AEFA34FBA2
--[[
PED::REGISTER_TARGET(l_216, PLAYER::PLAYER_PED_ID()); from re_prisonbreak.txt.

l_216 = RECSBRobber1
--]]
function PED.REGISTER_TARGET(ped, target)
  native.invoke(
    Type.Void, 4170, false,
    arg(Type.Ped, ped),
    arg(Type.Ped, target)
  )
end

-- void REGISTER_HATED_TARGETS_AROUND_PED(Ped ped, float radius) // 0x9222F300BF8354FE
--[[
Based on TASK_COMBAT_HATED_TARGETS_AROUND_PED, the parameters are likely similar (PedHandle, and area to attack in).
--]]
function PED.REGISTER_HATED_TARGETS_AROUND_PED(ped, radius)
  native.invoke(
    Type.Void, 4171, false,
    arg(Type.Ped, ped),
    arg(Type.Float, radius)
  )
end

-- Ped GET_RANDOM_PED_AT_COORD(float x, float y, float z, float xRadius, float yRadius, float zRadius, int pedType) // 0x876046A8E3A4B71C
--[[
Gets a random ped in the x/y/zRadius near the x/y/z coordinates passed. 

Ped Types:
Any = -1
Player = 1
Male = 4 
Female = 5 
Cop = 6
Human = 26
SWAT = 27 
Animal = 28
Army = 29
--]]
function PED.GET_RANDOM_PED_AT_COORD(x, y, z, xRadius, yRadius, zRadius, pedType)
  return native.invoke(
    Type.Ped, 4172, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, xRadius),
    arg(Type.Float, yRadius),
    arg(Type.Float, zRadius),
    arg(Type.Int, pedType)
  )
end

-- BOOL GET_CLOSEST_PED(float x, float y, float z, float radius, BOOL p4, BOOL p5, Ped* outPed, BOOL p7, BOOL p8, int pedType) // 0xC33AB876A77F8164
--[[
Gets the closest ped in a radius.

Ped Types:
Any ped = -1
Player = 1
Male = 4 
Female = 5 
Cop = 6
Human = 26
SWAT = 27 
Animal = 28
Army = 29

------------------
P4 P5 P7 P8
1  0  x  x  = return nearest walking Ped
1  x  0  x  = return nearest walking Ped
x  1  1  x  = return Ped you are using
0  0  x  x  = no effect
0  x  0  x  = no effect

x = can be 1 or 0. Does not have any obvious changes.

This function does not return ped who is:
1. Standing still
2. Driving
3. Fleeing
4. Attacking

This function only work if the ped is:
1. walking normally.
2. waiting to cross a road.

Note: PED::GET_PED_NEARBY_PEDS works for more peds.
--]]
function PED.GET_CLOSEST_PED(x, y, z, radius, p4, p5, outPed, p7, p8, pedType)
  return native.invoke(
    Type.Bool, 4173, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Bool, p4),
    arg(Type.Bool, p5),
    arg(Type.Ped, outPed),
    arg(Type.Bool, p7),
    arg(Type.Bool, p8),
    arg(Type.Int, pedType)
  )
end

-- void SET_SCENARIO_PEDS_TO_BE_RETURNED_BY_NEXT_COMMAND(BOOL value) // 0x14F19A8782C8071E
--[[
Sets a value indicating whether scenario peds should be returned by the next call to a command that returns peds. Eg. GET_CLOSEST_PED.
--]]
function PED.SET_SCENARIO_PEDS_TO_BE_RETURNED_BY_NEXT_COMMAND(value)
  native.invoke(
    Type.Void, 4174, false,
    arg(Type.Bool, value)
  )
end

-- BOOL GET_CAN_PED_BE_GRABBED_BY_SCRIPT(Ped ped, BOOL p1, BOOL p2, BOOL p3, BOOL p4, BOOL p5, BOOL p6, BOOL p7, Any p8) // 0x03EA03AF85A85CB7
function PED.GET_CAN_PED_BE_GRABBED_BY_SCRIPT(ped, p1, p2, p3, p4, p5, p6, p7, p8)
  return native.invoke(
    Type.Bool, 4175, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3),
    arg(Type.Bool, p4),
    arg(Type.Bool, p5),
    arg(Type.Bool, p6),
    arg(Type.Bool, p7),
    arg(Type.Any, p8)
  )
end

-- void SET_DRIVER_RACING_MODIFIER(Ped driver, float modifier) // 0xDED5AF5A0EA4B297
--[[
Scripts use 0.2, 0.5 and 1.0. Value must be >= 0.0 && <= 1.0
--]]
function PED.SET_DRIVER_RACING_MODIFIER(driver, modifier)
  native.invoke(
    Type.Void, 4176, false,
    arg(Type.Ped, driver),
    arg(Type.Float, modifier)
  )
end

-- void SET_DRIVER_ABILITY(Ped driver, float ability) // 0xB195FFA8042FC5C3
--[[
The function specifically verifies the value is equal to, or less than 1.0f. If it is greater than 1.0f, the function does nothing at all.
--]]
function PED.SET_DRIVER_ABILITY(driver, ability)
  native.invoke(
    Type.Void, 4177, false,
    arg(Type.Ped, driver),
    arg(Type.Float, ability)
  )
end

-- void SET_DRIVER_AGGRESSIVENESS(Ped driver, float aggressiveness) // 0xA731F608CA104E3C
--[[
range 0.0f - 1.0f
--]]
function PED.SET_DRIVER_AGGRESSIVENESS(driver, aggressiveness)
  native.invoke(
    Type.Void, 4178, false,
    arg(Type.Ped, driver),
    arg(Type.Float, aggressiveness)
  )
end

-- BOOL CAN_PED_RAGDOLL(Ped ped) // 0x128F79EDCECE4FD5
--[[
Prevents the ped from going limp.

[Example: Can prevent peds from falling when standing on moving vehicles.]
--]]
function PED.CAN_PED_RAGDOLL(ped)
  return native.invoke(
    Type.Bool, 4179, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL SET_PED_TO_RAGDOLL(Ped ped, int time1, int time2, int ragdollType, BOOL p4, BOOL p5, BOOL p6) // 0xAE99FB955581844A
--[[
p4/p5: Unused in TU27
Ragdoll Types:
**0**: CTaskNMRelax
**1**: CTaskNMScriptControl: Hardcoded not to work in networked environments.
**Else**: CTaskNMBalance
time1- Time(ms) Ped is in ragdoll mode; only applies to ragdoll types 0 and not 1.

time2- Unknown time, in milliseconds

ragdollType-
0 : Normal ragdoll
1 : Falls with stiff legs/body
2 : Narrow leg stumble(may not fall)
3 : Wide leg stumble(may not fall)

p4, p5, p6- No idea. In R*'s scripts they are usually either "true, true, false" or "false, false, false".




EDIT 3/11/16: unclear what 'mircoseconds' mean-- a microsecond is 1000x a ms, so time2 must be 1000x time1?  more testing needed.  -sob

Edit Mar 21, 2017: removed part about time2 being the microseconds version of time1. this just isn't correct. time2 is in milliseconds, and time1 and time2 don't seem to be connected in any way.
--]]
function PED.SET_PED_TO_RAGDOLL(ped, time1, time2, ragdollType, p4, p5, p6)
  return native.invoke(
    Type.Bool, 4180, false,
    arg(Type.Ped, ped),
    arg(Type.Int, time1),
    arg(Type.Int, time2),
    arg(Type.Int, ragdollType),
    arg(Type.Bool, p4),
    arg(Type.Bool, p5),
    arg(Type.Bool, p6)
  )
end

-- BOOL SET_PED_TO_RAGDOLL_WITH_FALL(Ped ped, int time, int p2, int ragdollType, float x, float y, float z, float velocity, float p8, float p9, float p10, float p11, float p12, float p13) // 0xD76632D99E4966C8
--[[
Return variable is never used in R*'s scripts.

Not sure what p2 does. It seems like it would be a time judging by it's usage in R*'s scripts, but didn't seem to affect anything in my testings.

enum eRagdollType
{
 RD_MALE=0,
 RD_FEMALE = 1,
 RD_MALE_LARGE = 2,
 RD_CUSTOM = 3,
}

x, y, and z are coordinates, most likely to where the ped will fall.

p8 to p13 are always 0f in R*'s scripts.

(Simplified) Example of the usage of the function from R*'s scripts:
ped::set_ped_to_ragdoll_with_fall(ped, 1500, 2000, 1, -entity::get_entity_forward_vector(ped), 1f, 0f, 0f, 0f, 0f, 0f, 0f);

--]]
function PED.SET_PED_TO_RAGDOLL_WITH_FALL(ped, time, p2, ragdollType, x, y, z, velocity, p8, p9, p10, p11, p12, p13)
  return native.invoke(
    Type.Bool, 4181, false,
    arg(Type.Ped, ped),
    arg(Type.Int, time),
    arg(Type.Int, p2),
    arg(Type.Int, ragdollType),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, velocity),
    arg(Type.Float, p8),
    arg(Type.Float, p9),
    arg(Type.Float, p10),
    arg(Type.Float, p11),
    arg(Type.Float, p12),
    arg(Type.Float, p13)
  )
end

-- void SET_PED_RAGDOLL_ON_COLLISION(Ped ped, BOOL toggle) // 0xF0A4F1BBF4FA7497
--[[
Causes Ped to ragdoll on collision with any object (e.g Running into trashcan). If applied to player you will sometimes trip on the sidewalk.
--]]
function PED.SET_PED_RAGDOLL_ON_COLLISION(ped, toggle)
  native.invoke(
    Type.Void, 4182, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_PED_RAGDOLL(Ped ped) // 0x47E4E977581C5B55
--[[
If the ped handle passed through the parenthesis is in a ragdoll state this will return true.
--]]
function PED.IS_PED_RAGDOLL(ped)
  return native.invoke(
    Type.Bool, 4183, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_RUNNING_RAGDOLL_TASK(Ped ped) // 0xE3B6097CC25AA69E
function PED.IS_PED_RUNNING_RAGDOLL_TASK(ped)
  return native.invoke(
    Type.Bool, 4184, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_RAGDOLL_FORCE_FALL(Ped ped) // 0x01F6594B923B9251
function PED.SET_PED_RAGDOLL_FORCE_FALL(ped)
  native.invoke(
    Type.Void, 4185, false,
    arg(Type.Ped, ped)
  )
end

-- void RESET_PED_RAGDOLL_TIMER(Ped ped) // 0x9FA4664CF62E47E8
function PED.RESET_PED_RAGDOLL_TIMER(ped)
  native.invoke(
    Type.Void, 4186, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_CAN_RAGDOLL(Ped ped, BOOL toggle) // 0xB128377056A54E2A
function PED.SET_PED_CAN_RAGDOLL(ped, toggle)
  native.invoke(
    Type.Void, 4187, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_PED_RUNNING_MELEE_TASK(Ped ped) // 0xD1871251F3B5ACD7
function PED.IS_PED_RUNNING_MELEE_TASK(ped)
  return native.invoke(
    Type.Bool, 4188, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_RUNNING_MOBILE_PHONE_TASK(Ped ped) // 0x2AFE52F782F25775
function PED.IS_PED_RUNNING_MOBILE_PHONE_TASK(ped)
  return native.invoke(
    Type.Bool, 4189, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_MOBILE_PHONE_TO_PED_EAR(Ped ped) // 0xA3F3564A5B3646C0
function PED.IS_MOBILE_PHONE_TO_PED_EAR(ped)
  return native.invoke(
    Type.Bool, 4190, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_RAGDOLL_BLOCKING_FLAGS(Ped ped, int blockingFlag) // 0x26695EC767728D84
--[[
Works for both player and peds,

enum eRagdollBlockingFlags
{
 RBF_BULLET_IMPACT = 0,
 RBF_VEHICLE_IMPACT = 1,
 RBF_FIRE = 2,
 RBF_ELECTROCUTION = 3,
 RBF_PLAYER_IMPACT = 4,
 RBF_EXPLOSION = 5,0
 RBF_IMPACT_OBJECT = 6,
 RBF_MELEE = 7,
 RBF_RUBBER_BULLET = 8,
 RBF_FALLING = 9,
 RBF_WATER_JET = 10,
 RBF_DROWNING = 11,
 _0x9F52E2C4 = 12,
 RBF_PLAYER_BUMP = 13,
 RBF_PLAYER_RAGDOLL_BUMP = 14,
 RBF_PED_RAGDOLL_BUMP = 15,
 RBF_VEHICLE_GRAB = 16,
 RBF_SMOKE_GRENADE = 17,
};


--]]
function PED.SET_RAGDOLL_BLOCKING_FLAGS(ped, blockingFlag)
  native.invoke(
    Type.Void, 4191, false,
    arg(Type.Ped, ped),
    arg(Type.Int, blockingFlag)
  )
end

-- void CLEAR_RAGDOLL_BLOCKING_FLAGS(Ped ped, int blockingFlag) // 0xD86D101FCFD00A4B
--[[
See SET_RAGDOLL_BLOCKING_FLAGS for flags
--]]
function PED.CLEAR_RAGDOLL_BLOCKING_FLAGS(ped, blockingFlag)
  native.invoke(
    Type.Void, 4192, false,
    arg(Type.Ped, ped),
    arg(Type.Int, blockingFlag)
  )
end

-- void SET_PED_ANGLED_DEFENSIVE_AREA(Ped ped, float p1, float p2, float p3, float p4, float p5, float p6, float p7, BOOL p8, BOOL p9) // 0xC7F76DF27A5045A1
function PED.SET_PED_ANGLED_DEFENSIVE_AREA(ped, p1, p2, p3, p4, p5, p6, p7, p8, p9)
  native.invoke(
    Type.Void, 4193, false,
    arg(Type.Ped, ped),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Float, p6),
    arg(Type.Float, p7),
    arg(Type.Bool, p8),
    arg(Type.Bool, p9)
  )
end

-- void SET_PED_SPHERE_DEFENSIVE_AREA(Ped ped, float x, float y, float z, float radius, BOOL p5, BOOL p6) // 0x9D3151A373974804
function PED.SET_PED_SPHERE_DEFENSIVE_AREA(ped, x, y, z, radius, p5, p6)
  native.invoke(
    Type.Void, 4194, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Bool, p5),
    arg(Type.Bool, p6)
  )
end

-- void SET_PED_DEFENSIVE_SPHERE_ATTACHED_TO_PED(Ped ped, Ped target, float xOffset, float yOffset, float zOffset, float radius, BOOL p6) // 0xF9B8F91AAD3B953E
function PED.SET_PED_DEFENSIVE_SPHERE_ATTACHED_TO_PED(ped, target, xOffset, yOffset, zOffset, radius, p6)
  native.invoke(
    Type.Void, 4195, false,
    arg(Type.Ped, ped),
    arg(Type.Ped, target),
    arg(Type.Float, xOffset),
    arg(Type.Float, yOffset),
    arg(Type.Float, zOffset),
    arg(Type.Float, radius),
    arg(Type.Bool, p6)
  )
end

-- void SET_PED_DEFENSIVE_SPHERE_ATTACHED_TO_VEHICLE(Ped ped, Vehicle target, float xOffset, float yOffset, float zOffset, float radius, BOOL p6) // 0xE4723DB6E736CCFF
function PED.SET_PED_DEFENSIVE_SPHERE_ATTACHED_TO_VEHICLE(ped, target, xOffset, yOffset, zOffset, radius, p6)
  native.invoke(
    Type.Void, 4196, false,
    arg(Type.Ped, ped),
    arg(Type.Vehicle, target),
    arg(Type.Float, xOffset),
    arg(Type.Float, yOffset),
    arg(Type.Float, zOffset),
    arg(Type.Float, radius),
    arg(Type.Bool, p6)
  )
end

-- void SET_PED_DEFENSIVE_AREA_ATTACHED_TO_PED(Ped ped, Ped attachPed, float p2, float p3, float p4, float p5, float p6, float p7, float p8, BOOL p9, BOOL p10) // 0x4EF47FE21698A8B6
function PED.SET_PED_DEFENSIVE_AREA_ATTACHED_TO_PED(ped, attachPed, p2, p3, p4, p5, p6, p7, p8, p9, p10)
  native.invoke(
    Type.Void, 4197, false,
    arg(Type.Ped, ped),
    arg(Type.Ped, attachPed),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Float, p6),
    arg(Type.Float, p7),
    arg(Type.Float, p8),
    arg(Type.Bool, p9),
    arg(Type.Bool, p10)
  )
end

-- void SET_PED_DEFENSIVE_AREA_DIRECTION(Ped ped, float p1, float p2, float p3, BOOL p4) // 0x413C6C763A4AFFAD
function PED.SET_PED_DEFENSIVE_AREA_DIRECTION(ped, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 4198, false,
    arg(Type.Ped, ped),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Bool, p4)
  )
end

-- void REMOVE_PED_DEFENSIVE_AREA(Ped ped, BOOL toggle) // 0x74D4E028107450A9
--[[
Ped will no longer get angry when you stay near him.
--]]
function PED.REMOVE_PED_DEFENSIVE_AREA(ped, toggle)
  native.invoke(
    Type.Void, 4199, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- Vector3 GET_PED_DEFENSIVE_AREA_POSITION(Ped ped, BOOL p1) // 0x3C06B8786DD94CD1
function PED.GET_PED_DEFENSIVE_AREA_POSITION(ped, p1)
  return native.invoke(
    Type.Vector3, 4200, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1)
  )
end

-- BOOL IS_PED_DEFENSIVE_AREA_ACTIVE(Ped ped, BOOL p1) // 0xBA63D9FE45412247
function PED.IS_PED_DEFENSIVE_AREA_ACTIVE(ped, p1)
  return native.invoke(
    Type.Bool, 4201, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1)
  )
end

-- void SET_PED_PREFERRED_COVER_SET(Ped ped, Any itemSet) // 0x8421EB4DA7E391B9
function PED.SET_PED_PREFERRED_COVER_SET(ped, itemSet)
  native.invoke(
    Type.Void, 4202, false,
    arg(Type.Ped, ped),
    arg(Type.Any, itemSet)
  )
end

-- void REMOVE_PED_PREFERRED_COVER_SET(Ped ped) // 0xFDDB234CF74073D9
function PED.REMOVE_PED_PREFERRED_COVER_SET(ped)
  native.invoke(
    Type.Void, 4203, false,
    arg(Type.Ped, ped)
  )
end

-- void REVIVE_INJURED_PED(Ped ped) // 0x8D8ACD8388CD99CE
--[[
It will revive/cure the injured ped. The condition is ped must not be dead.

Upon setting and converting the health int, found, if health falls below 5, the ped will lay on the ground in pain(Maximum default health is 100).

This function is well suited there.
--]]
function PED.REVIVE_INJURED_PED(ped)
  native.invoke(
    Type.Void, 4204, false,
    arg(Type.Ped, ped)
  )
end

-- void RESURRECT_PED(Ped ped) // 0x71BC8E838B9C6035
--[[
This function will simply bring the dead person back to life.

Try not to use it alone, since using this function alone, will make peds fall through ground in hell(well for the most of the times).

Instead, before calling this function, you may want to declare the position, where your Resurrected ped to be spawn at.(For instance, Around 2 floats of Player's current position.) 

Also, disabling any assigned task immediately helped in the number of scenarios, where If you want peds to perform certain decided tasks.
--]]
function PED.RESURRECT_PED(ped)
  native.invoke(
    Type.Void, 4205, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_NAME_DEBUG(Ped ped, const char* name) // 0x98EFA132A4117BE1
--[[
NOTE: Debugging functions are not present in the retail version of the game.

*untested but char *name could also be a hash for a localized string
--]]
function PED.SET_PED_NAME_DEBUG(ped, name)
  native.invoke(
    Type.Void, 4206, false,
    arg(Type.Ped, ped),
    arg(Type.String, name)
  )
end

-- Vector3 GET_PED_EXTRACTED_DISPLACEMENT(Ped ped, BOOL worldSpace) // 0xE0AF41401ADF87E3
--[[
Gets the offset the specified ped has moved since the previous tick.

If worldSpace is false, the returned offset is relative to the ped. That is, if the ped has moved 1 meter right and 5 meters forward, it'll return 1,5,0.

If worldSpace is true, the returned offset is relative to the world. That is, if the ped has moved 1 meter on the X axis and 5 meters on the Y axis, it'll return 1,5,0.
--]]
function PED.GET_PED_EXTRACTED_DISPLACEMENT(ped, worldSpace)
  return native.invoke(
    Type.Vector3, 4207, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, worldSpace)
  )
end

-- void SET_PED_DIES_WHEN_INJURED(Ped ped, BOOL toggle) // 0x5BA7919BED300023
function PED.SET_PED_DIES_WHEN_INJURED(ped, toggle)
  native.invoke(
    Type.Void, 4208, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_ENABLE_WEAPON_BLOCKING(Ped ped, BOOL toggle) // 0x97A790315D3831FD
function PED.SET_PED_ENABLE_WEAPON_BLOCKING(ped, toggle)
  native.invoke(
    Type.Void, 4209, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SPECIAL_FUNCTION_DO_NOT_USE(Ped ped, BOOL p1) // 0xF9ACF4A08098EA25
--[[
p1 was always 1 (true).

Kicks the ped from the current vehicle and keeps the rendering-focus on this ped (also disables its collision). If doing this for your player ped, you'll still be able to drive the vehicle.
--]]
function PED.SPECIAL_FUNCTION_DO_NOT_USE(ped, p1)
  native.invoke(
    Type.Void, 4210, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1)
  )
end

-- void RESET_PED_VISIBLE_DAMAGE(Ped ped) // 0x3AC1F7B898F30C05
function PED.RESET_PED_VISIBLE_DAMAGE(ped)
  native.invoke(
    Type.Void, 4211, false,
    arg(Type.Ped, ped)
  )
end

-- void APPLY_PED_BLOOD_DAMAGE_BY_ZONE(Ped ped, Any p1, float p2, float p3, Any p4) // 0x816F6981C60BF53B
function PED.APPLY_PED_BLOOD_DAMAGE_BY_ZONE(ped, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 4212, false,
    arg(Type.Ped, ped),
    arg(Type.Any, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Any, p4)
  )
end

-- void APPLY_PED_BLOOD(Ped ped, int boneIndex, float xRot, float yRot, float zRot, const char* woundType) // 0x83F7E01C7B769A26
--[[
woundTypes:
- soak_splat
- wound_sheet
- BulletSmall
- BulletLarge
- ShotgunSmall
- ShotgunSmallMonolithic
- ShotgunLarge
- ShotgunLargeMonolithic
- NonFatalHeadshot
- stab
- BasicSlash
- Scripted_Ped_Splash_Back
- BackSplash
--]]
function PED.APPLY_PED_BLOOD(ped, boneIndex, xRot, yRot, zRot, woundType)
  native.invoke(
    Type.Void, 4213, false,
    arg(Type.Ped, ped),
    arg(Type.Int, boneIndex),
    arg(Type.Float, xRot),
    arg(Type.Float, yRot),
    arg(Type.Float, zRot),
    arg(Type.String, woundType)
  )
end

-- void APPLY_PED_BLOOD_BY_ZONE(Ped ped, int p1, float p2, float p3, const char* p4) // 0x3311E47B91EDCBBC
function PED.APPLY_PED_BLOOD_BY_ZONE(ped, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 4214, false,
    arg(Type.Ped, ped),
    arg(Type.Int, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.String, p4)
  )
end

-- void APPLY_PED_BLOOD_SPECIFIC(Ped ped, int p1, float p2, float p3, float p4, float p5, int p6, float p7, const char* p8) // 0xEF0D582CBF2D9B0F
function PED.APPLY_PED_BLOOD_SPECIFIC(ped, p1, p2, p3, p4, p5, p6, p7, p8)
  native.invoke(
    Type.Void, 4215, false,
    arg(Type.Ped, ped),
    arg(Type.Int, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Int, p6),
    arg(Type.Float, p7),
    arg(Type.String, p8)
  )
end

-- void APPLY_PED_DAMAGE_DECAL(Ped ped, int damageZone, float xOffset, float yOffset, float heading, float scale, float alpha, int variation, BOOL fadeIn, const char* decalName) // 0x397C38AA7B4A5F83
--[[
enum eDamageZone
{
	DZ_Torso = 0,
	DZ_Head,
	DZ_LeftArm,
	DZ_RightArm,
	DZ_LeftLeg,
	DZ_RightLeg,
};

Decal Names:
scar
blushing
cs_flush_anger
cs_flush_anger_face
bruise
bruise_large
herpes
ArmorBullet
basic_dirt_cloth
basic_dirt_skin
cs_trev1_dirt

APPLY_PED_DAMAGE_DECAL(ped, 1, 0.5f, 0.513f, 0f, 1f, unk, 0, 0, "blushing");
--]]
function PED.APPLY_PED_DAMAGE_DECAL(ped, damageZone, xOffset, yOffset, heading, scale, alpha, variation, fadeIn, decalName)
  native.invoke(
    Type.Void, 4216, false,
    arg(Type.Ped, ped),
    arg(Type.Int, damageZone),
    arg(Type.Float, xOffset),
    arg(Type.Float, yOffset),
    arg(Type.Float, heading),
    arg(Type.Float, scale),
    arg(Type.Float, alpha),
    arg(Type.Int, variation),
    arg(Type.Bool, fadeIn),
    arg(Type.String, decalName)
  )
end

-- void APPLY_PED_DAMAGE_PACK(Ped ped, const char* damagePack, float damage, float mult) // 0x46DF918788CB093F
--[[
Damage Packs:

"SCR_TrevorTreeBang"
"HOSPITAL_0"
"HOSPITAL_1"
"HOSPITAL_2"
"HOSPITAL_3"
"HOSPITAL_4"
"HOSPITAL_5"
"HOSPITAL_6"
"HOSPITAL_7"
"HOSPITAL_8"
"HOSPITAL_9"
"SCR_Dumpster"
"BigHitByVehicle"
"SCR_Finale_Michael_Face"
"SCR_Franklin_finb"
"SCR_Finale_Michael"
"SCR_Franklin_finb2"
"Explosion_Med"
"SCR_Torture"
"SCR_TracySplash"
"Skin_Melee_0"

Additional damage packs:

gist.github.com/alexguirre/f3f47f75ddcf617f416f3c8a55ae2227
Full list of ped damage packs by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pedDamagePacks.json
--]]
function PED.APPLY_PED_DAMAGE_PACK(ped, damagePack, damage, mult)
  native.invoke(
    Type.Void, 4217, false,
    arg(Type.Ped, ped),
    arg(Type.String, damagePack),
    arg(Type.Float, damage),
    arg(Type.Float, mult)
  )
end

-- void CLEAR_PED_BLOOD_DAMAGE(Ped ped) // 0x8FE22675A5A45817
function PED.CLEAR_PED_BLOOD_DAMAGE(ped)
  native.invoke(
    Type.Void, 4218, false,
    arg(Type.Ped, ped)
  )
end

-- void CLEAR_PED_BLOOD_DAMAGE_BY_ZONE(Ped ped, int p1) // 0x56E3B78C5408D9F4
--[[
Somehow related to changing ped's clothes.
--]]
function PED.CLEAR_PED_BLOOD_DAMAGE_BY_ZONE(ped, p1)
  native.invoke(
    Type.Void, 4219, false,
    arg(Type.Ped, ped),
    arg(Type.Int, p1)
  )
end

-- void HIDE_PED_BLOOD_DAMAGE_BY_ZONE(Ped ped, Any p1, BOOL p2) // 0x62AB793144DE75DC
function PED.HIDE_PED_BLOOD_DAMAGE_BY_ZONE(ped, p1, p2)
  native.invoke(
    Type.Void, 4220, false,
    arg(Type.Ped, ped),
    arg(Type.Any, p1),
    arg(Type.Bool, p2)
  )
end

-- void CLEAR_PED_DAMAGE_DECAL_BY_ZONE(Ped ped, int p1, const char* p2) // 0x523C79AEEFCC4A2A
--[[
p1: from 0 to 5 in the b617d scripts.
p2: "blushing" and "ALL" found in the b617d scripts.
--]]
function PED.CLEAR_PED_DAMAGE_DECAL_BY_ZONE(ped, p1, p2)
  native.invoke(
    Type.Void, 4221, false,
    arg(Type.Ped, ped),
    arg(Type.Int, p1),
    arg(Type.String, p2)
  )
end

-- int GET_PED_DECORATIONS_STATE(Ped ped) // 0x71EAB450D86954A1
function PED.GET_PED_DECORATIONS_STATE(ped)
  return native.invoke(
    Type.Int, 4222, false,
    arg(Type.Ped, ped)
  )
end

-- void MARK_PED_DECORATIONS_AS_CLONED_FROM_LOCAL_PLAYER(Ped ped, BOOL p1) // 0x2B694AFCF64E6994
function PED.MARK_PED_DECORATIONS_AS_CLONED_FROM_LOCAL_PLAYER(ped, p1)
  native.invoke(
    Type.Void, 4223, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1)
  )
end

-- void CLEAR_PED_WETNESS(Ped ped) // 0x9C720776DAA43E7E
--[[
It clears the wetness of the selected Ped/Player. Clothes have to be wet to notice the difference.
--]]
function PED.CLEAR_PED_WETNESS(ped)
  native.invoke(
    Type.Void, 4224, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_WETNESS_HEIGHT(Ped ped, float height) // 0x44CB6447D2571AA0
--[[
It adds the wetness level to the player clothing/outfit. As if player just got out from water surface.


--]]
function PED.SET_PED_WETNESS_HEIGHT(ped, height)
  native.invoke(
    Type.Void, 4225, false,
    arg(Type.Ped, ped),
    arg(Type.Float, height)
  )
end

-- void SET_PED_WETNESS_ENABLED_THIS_FRAME(Ped ped) // 0xB5485E4907B53019
--[[
combined with PED::SET_PED_WETNESS_HEIGHT(), this native makes the ped drenched in water up to the height specified in the other function
--]]
function PED.SET_PED_WETNESS_ENABLED_THIS_FRAME(ped)
  native.invoke(
    Type.Void, 4226, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_WETNESS(Ped ped, float wetLevel) // 0xAC0BB4D87777CAE2
function PED.SET_PED_WETNESS(ped, wetLevel)
  native.invoke(
    Type.Void, 4227, false,
    arg(Type.Ped, ped),
    arg(Type.Float, wetLevel)
  )
end

-- void CLEAR_PED_ENV_DIRT(Ped ped) // 0x6585D955A68452A5
function PED.CLEAR_PED_ENV_DIRT(ped)
  native.invoke(
    Type.Void, 4228, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_SWEAT(Ped ped, float sweat) // 0x27B0405F59637D1F
--[[
Sweat is set to 100.0 or 0.0 in the decompiled scripts.
--]]
function PED.SET_PED_SWEAT(ped, sweat)
  native.invoke(
    Type.Void, 4229, false,
    arg(Type.Ped, ped),
    arg(Type.Float, sweat)
  )
end

-- void ADD_PED_DECORATION_FROM_HASHES(Ped ped, Hash collection, Hash overlay) // 0x5F5D1665E352A839
--[[
Applies an Item from a PedDecorationCollection to a ped. These include tattoos and shirt decals.

collection - PedDecorationCollection filename hash
overlay - Item name hash

Example:
Entry inside "mpbeach_overlays.xml" -
<Item>
  <uvPos x="0.500000" y="0.500000" />
  <scale x="0.600000" y="0.500000" />
  <rotation value="0.000000" />
  <nameHash>FM_Hair_Fuzz</nameHash>
  <txdHash>mp_hair_fuzz</txdHash>
  <txtHash>mp_hair_fuzz</txtHash>
  <zone>ZONE_HEAD</zone>
  <type>TYPE_TATTOO</type>
  <faction>FM</faction>
  <garment>All</garment>
  <gender>GENDER_DONTCARE</gender>
  <award />
  <awardLevel />
</Item>

Code:
PED::ADD_PED_DECORATION_FROM_HASHES(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("mpbeach_overlays"), MISC::GET_HASH_KEY("fm_hair_fuzz"))

Full list of ped overlays / decorations by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pedOverlayCollections.json
--]]
function PED.ADD_PED_DECORATION_FROM_HASHES(ped, collection, overlay)
  native.invoke(
    Type.Void, 4230, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, collection),
    arg(Type.Hash, overlay)
  )
end

-- void ADD_PED_DECORATION_FROM_HASHES_IN_CORONA(Ped ped, Hash collection, Hash overlay) // 0x5619BFA07CFD7833
--[[
Full list of ped overlays / decorations by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pedOverlayCollections.json
--]]
function PED.ADD_PED_DECORATION_FROM_HASHES_IN_CORONA(ped, collection, overlay)
  native.invoke(
    Type.Void, 4231, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, collection),
    arg(Type.Hash, overlay)
  )
end

-- int GET_PED_DECORATION_ZONE_FROM_HASHES(Hash collection, Hash overlay) // 0x9FD452BFBE7A7A8B
--[[
Returns the zoneID for the overlay if it is a member of collection.
enum ePedDecorationZone
{
	ZONE_TORSO = 0,
	ZONE_HEAD = 1,
	ZONE_LEFT_ARM = 2,
	ZONE_RIGHT_ARM = 3,
	ZONE_LEFT_LEG = 4,
	ZONE_RIGHT_LEG = 5,
	ZONE_MEDALS = 6,
	ZONE_INVALID = 7
};

Full list of ped overlays / decorations by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pedOverlayCollections.json
--]]
function PED.GET_PED_DECORATION_ZONE_FROM_HASHES(collection, overlay)
  return native.invoke(
    Type.Int, 4232, false,
    arg(Type.Hash, collection),
    arg(Type.Hash, overlay)
  )
end

-- void CLEAR_PED_DECORATIONS(Ped ped) // 0x0E5173C163976E38
function PED.CLEAR_PED_DECORATIONS(ped)
  native.invoke(
    Type.Void, 4233, false,
    arg(Type.Ped, ped)
  )
end

-- void CLEAR_PED_DECORATIONS_LEAVE_SCARS(Ped ped) // 0xE3B27E70CEAB9F0C
function PED.CLEAR_PED_DECORATIONS_LEAVE_SCARS(ped)
  native.invoke(
    Type.Void, 4234, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL WAS_PED_SKELETON_UPDATED(Ped ped) // 0x11B499C1E0FF8559
--[[
Despite this function's name, it simply returns whether the specified handle is a Ped.
--]]
function PED.WAS_PED_SKELETON_UPDATED(ped)
  return native.invoke(
    Type.Bool, 4235, false,
    arg(Type.Ped, ped)
  )
end

-- Vector3 GET_PED_BONE_COORDS(Ped ped, int boneId, float offsetX, float offsetY, float offsetZ) // 0x17C07FC640E86B4E
--[[
Gets the position of the specified bone of the specified ped.

ped: The ped to get the position of a bone from.
boneId: The ID of the bone to get the position from. This is NOT the index.
offsetX: The X-component of the offset to add to the position relative to the bone's rotation.
offsetY: The Y-component of the offset to add to the position relative to the bone's rotation.
offsetZ: The Z-component of the offset to add to the position relative to the bone's rotation.
--]]
function PED.GET_PED_BONE_COORDS(ped, boneId, offsetX, offsetY, offsetZ)
  return native.invoke(
    Type.Vector3, 4236, false,
    arg(Type.Ped, ped),
    arg(Type.Int, boneId),
    arg(Type.Float, offsetX),
    arg(Type.Float, offsetY),
    arg(Type.Float, offsetZ)
  )
end

-- void CREATE_NM_MESSAGE(BOOL startImmediately, int messageId) // 0x418EF2A1BCE56685
--[[
Creates a new NaturalMotion message.

startImmediately: If set to true, the character will perform the message the moment it receives it by GIVE_PED_NM_MESSAGE. If false, the Ped will get the message but won't perform it yet. While it's a boolean value, if negative, the message will not be initialized.
messageId: The ID of the NaturalMotion message.

If a message already exists, this function does nothing. A message exists until the point it has been successfully dispatched by GIVE_PED_NM_MESSAGE.
--]]
function PED.CREATE_NM_MESSAGE(startImmediately, messageId)
  native.invoke(
    Type.Void, 4237, false,
    arg(Type.Bool, startImmediately),
    arg(Type.Int, messageId)
  )
end

-- void GIVE_PED_NM_MESSAGE(Ped ped) // 0xB158DFCCC56E5C5B
--[[
Sends the message that was created by a call to CREATE_NM_MESSAGE to the specified Ped.

If a message hasn't been created already, this function does nothing.
If the Ped is not ragdolled with Euphoria enabled, this function does nothing.
The following call can be used to ragdoll the Ped with Euphoria enabled: SET_PED_TO_RAGDOLL(ped, 4000, 5000, 1, 1, 1, 0);

Call order:
SET_PED_TO_RAGDOLL
CREATE_NM_MESSAGE
GIVE_PED_NM_MESSAGE

Multiple messages can be chained. Eg. to make the ped stagger and swing his arms around, the following calls can be made:
SET_PED_TO_RAGDOLL(ped, 4000, 5000, 1, 1, 1, 0);
CREATE_NM_MESSAGE(true, 0); // stopAllBehaviours - Stop all other behaviours, in case the Ped is already doing some Euphoria stuff.
GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.
CREATE_NM_MESSAGE(true, 1151); // staggerFall - Attempt to walk while falling.
GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.
CREATE_NM_MESSAGE(true, 372); // armsWindmill - Swing arms around.
GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.
--]]
function PED.GIVE_PED_NM_MESSAGE(ped)
  native.invoke(
    Type.Void, 4238, false,
    arg(Type.Ped, ped)
  )
end

-- int ADD_SCENARIO_BLOCKING_AREA(float x1, float y1, float z1, float x2, float y2, float z2, BOOL p6, BOOL p7, BOOL p8, BOOL p9, Any p10) // 0x1B5C85C612E5256E
function PED.ADD_SCENARIO_BLOCKING_AREA(x1, y1, z1, x2, y2, z2, p6, p7, p8, p9, p10)
  return native.invoke(
    Type.Int, 4239, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Bool, p6),
    arg(Type.Bool, p7),
    arg(Type.Bool, p8),
    arg(Type.Bool, p9),
    arg(Type.Any, p10)
  )
end

-- void REMOVE_SCENARIO_BLOCKING_AREAS() // 0xD37401D78A929A49
function PED.REMOVE_SCENARIO_BLOCKING_AREAS()
  native.invoke(
    Type.Void, 4240, false
  )
end

-- void REMOVE_SCENARIO_BLOCKING_AREA(Any p0, BOOL p1) // 0x31D16B74C6E29D66
function PED.REMOVE_SCENARIO_BLOCKING_AREA(p0, p1)
  native.invoke(
    Type.Void, 4241, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1)
  )
end

-- void SET_SCENARIO_PEDS_SPAWN_IN_SPHERE_AREA(float x, float y, float z, float range, int p4) // 0x28157D43CF600981
function PED.SET_SCENARIO_PEDS_SPAWN_IN_SPHERE_AREA(x, y, z, range, p4)
  native.invoke(
    Type.Void, 4242, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, range),
    arg(Type.Int, p4)
  )
end

-- BOOL DOES_SCENARIO_BLOCKING_AREA_EXISTS(float x1, float y1, float z1, float x2, float y2, float z2) // 0x8A24B067D175A7BD
function PED.DOES_SCENARIO_BLOCKING_AREA_EXISTS(x1, y1, z1, x2, y2, z2)
  return native.invoke(
    Type.Bool, 4243, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2)
  )
end

-- BOOL IS_PED_USING_SCENARIO(Ped ped, const char* scenario) // 0x1BF094736DD62C2E
--[[
Full list of ped scenarios by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scenariosCompact.json
--]]
function PED.IS_PED_USING_SCENARIO(ped, scenario)
  return native.invoke(
    Type.Bool, 4244, false,
    arg(Type.Ped, ped),
    arg(Type.String, scenario)
  )
end

-- BOOL IS_PED_USING_ANY_SCENARIO(Ped ped) // 0x57AB4A3080F85143
function PED.IS_PED_USING_ANY_SCENARIO(ped)
  return native.invoke(
    Type.Bool, 4245, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL SET_PED_PANIC_EXIT_SCENARIO(Any p0, Any p1, Any p2, Any p3) // 0xFE07FF6495D52E2A
function PED.SET_PED_PANIC_EXIT_SCENARIO(p0, p1, p2, p3)
  return native.invoke(
    Type.Bool, 4246, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void TOGGLE_SCENARIO_PED_COWER_IN_PLACE(Ped ped, BOOL toggle) // 0x9A77DFD295E29B09
function PED.TOGGLE_SCENARIO_PED_COWER_IN_PLACE(ped, toggle)
  native.invoke(
    Type.Void, 4247, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- BOOL TRIGGER_PED_SCENARIO_PANICEXITTOFLEE(Any p0, Any p1, Any p2, Any p3) // 0x25361A96E0F7E419
function PED.TRIGGER_PED_SCENARIO_PANICEXITTOFLEE(p0, p1, p2, p3)
  return native.invoke(
    Type.Bool, 4248, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- BOOL SET_PED_SHOULD_PLAY_DIRECTED_NORMAL_SCENARIO_EXIT(Any p0, Any p1, Any p2, Any p3) // 0xEC6935EBE0847B90
function PED.SET_PED_SHOULD_PLAY_DIRECTED_NORMAL_SCENARIO_EXIT(p0, p1, p2, p3)
  return native.invoke(
    Type.Bool, 4249, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void SET_PED_SHOULD_PLAY_NORMAL_SCENARIO_EXIT(Ped ped) // 0xA3A9299C4F2ADB98
function PED.SET_PED_SHOULD_PLAY_NORMAL_SCENARIO_EXIT(ped)
  native.invoke(
    Type.Void, 4250, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_SHOULD_PLAY_IMMEDIATE_SCENARIO_EXIT(Ped ped) // 0xF1C03A5352243A30
function PED.SET_PED_SHOULD_PLAY_IMMEDIATE_SCENARIO_EXIT(ped)
  native.invoke(
    Type.Void, 4251, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT(Ped ped, Any p1, Any p2, Any p3) // 0xEEED8FAFEC331A70
function PED.SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT(ped, p1, p2, p3)
  return native.invoke(
    Type.Bool, 4252, false,
    arg(Type.Ped, ped),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void SET_PED_SHOULD_IGNORE_SCENARIO_EXIT_COLLISION_CHECKS(Ped ped, BOOL p1) // 0x425AECF167663F48
function PED.SET_PED_SHOULD_IGNORE_SCENARIO_EXIT_COLLISION_CHECKS(ped, p1)
  native.invoke(
    Type.Void, 4253, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1)
  )
end

-- void SET_PED_SHOULD_IGNORE_SCENARIO_NAV_CHECKS(Any p0, BOOL p1) // 0x5B6010B3CBC29095
function PED.SET_PED_SHOULD_IGNORE_SCENARIO_NAV_CHECKS(p0, p1)
  native.invoke(
    Type.Void, 4254, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1)
  )
end

-- void SET_PED_SHOULD_PROBE_FOR_SCENARIO_EXITS_IN_ONE_FRAME(Any p0, BOOL p1) // 0xCEDA60A74219D064
function PED.SET_PED_SHOULD_PROBE_FOR_SCENARIO_EXITS_IN_ONE_FRAME(p0, p1)
  native.invoke(
    Type.Void, 4255, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1)
  )
end

-- BOOL IS_PED_GESTURING(Any p0) // 0xC30BDAEE47256C13
function PED.IS_PED_GESTURING(p0)
  return native.invoke(
    Type.Bool, 4256, false,
    arg(Type.Any, p0)
  )
end

-- void RESET_FACIAL_IDLE_ANIM(Ped ped) // 0x007FDE5A7897E426
function PED.RESET_FACIAL_IDLE_ANIM(ped)
  native.invoke(
    Type.Void, 4257, false,
    arg(Type.Ped, ped)
  )
end

-- void PLAY_FACIAL_ANIM(Ped ped, const char* animName, const char* animDict) // 0xE1E65CA8AC9C00ED
--[[
Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
--]]
function PED.PLAY_FACIAL_ANIM(ped, animName, animDict)
  native.invoke(
    Type.Void, 4258, false,
    arg(Type.Ped, ped),
    arg(Type.String, animName),
    arg(Type.String, animDict)
  )
end

-- void SET_FACIAL_CLIPSET(Ped ped, const char* animDict) // 0x5687C7F05B39E401
--[[
Clipsets:
facials@gen_female@base
facials@gen_male@base
facials@p_m_zero@base

Typically followed with SET_FACIAL_IDLE_ANIM_OVERRIDE:
mood_drunk_1
mood_stressed_1
mood_happy_1
mood_talking_1

--]]
function PED.SET_FACIAL_CLIPSET(ped, animDict)
  native.invoke(
    Type.Void, 4259, false,
    arg(Type.Ped, ped),
    arg(Type.String, animDict)
  )
end

-- void SET_FACIAL_IDLE_ANIM_OVERRIDE(Ped ped, const char* animName, const char* animDict) // 0xFFC24B988B938B38
--[[
Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
--]]
function PED.SET_FACIAL_IDLE_ANIM_OVERRIDE(ped, animName, animDict)
  native.invoke(
    Type.Void, 4260, false,
    arg(Type.Ped, ped),
    arg(Type.String, animName),
    arg(Type.String, animDict)
  )
end

-- void CLEAR_FACIAL_IDLE_ANIM_OVERRIDE(Ped ped) // 0x726256CC1EEB182F
function PED.CLEAR_FACIAL_IDLE_ANIM_OVERRIDE(ped)
  native.invoke(
    Type.Void, 4261, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_CAN_PLAY_GESTURE_ANIMS(Ped ped, BOOL toggle) // 0xBAF20C5432058024
function PED.SET_PED_CAN_PLAY_GESTURE_ANIMS(ped, toggle)
  native.invoke(
    Type.Void, 4262, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_CAN_PLAY_VISEME_ANIMS(Ped ped, BOOL toggle, BOOL p2) // 0xF833DDBA3B104D43
--[[
p2 usually 0
--]]
function PED.SET_PED_CAN_PLAY_VISEME_ANIMS(ped, toggle, p2)
  native.invoke(
    Type.Void, 4263, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle),
    arg(Type.Bool, p2)
  )
end

-- void SET_PED_IS_IGNORED_BY_AUTO_OPEN_DOORS(Ped ped, BOOL p1) // 0x33A60D8BDD6E508C
function PED.SET_PED_IS_IGNORED_BY_AUTO_OPEN_DOORS(ped, p1)
  native.invoke(
    Type.Void, 4264, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1)
  )
end

-- void SET_PED_CAN_PLAY_AMBIENT_ANIMS(Ped ped, BOOL toggle) // 0x6373D1349925A70E
function PED.SET_PED_CAN_PLAY_AMBIENT_ANIMS(ped, toggle)
  native.invoke(
    Type.Void, 4265, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_CAN_PLAY_AMBIENT_BASE_ANIMS(Ped ped, BOOL toggle) // 0x0EB0585D15254740
function PED.SET_PED_CAN_PLAY_AMBIENT_BASE_ANIMS(ped, toggle)
  native.invoke(
    Type.Void, 4266, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void TRIGGER_IDLE_ANIMATION_ON_PED(Ped ped) // 0xC2EE020F5FB4DB53
function PED.TRIGGER_IDLE_ANIMATION_ON_PED(ped)
  native.invoke(
    Type.Void, 4267, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_CAN_ARM_IK(Ped ped, BOOL toggle) // 0x6C3B4D6D13B4C841
function PED.SET_PED_CAN_ARM_IK(ped, toggle)
  native.invoke(
    Type.Void, 4268, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_CAN_HEAD_IK(Ped ped, BOOL toggle) // 0xC11C18092C5530DC
function PED.SET_PED_CAN_HEAD_IK(ped, toggle)
  native.invoke(
    Type.Void, 4269, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_CAN_LEG_IK(Ped ped, BOOL toggle) // 0x73518ECE2485412B
function PED.SET_PED_CAN_LEG_IK(ped, toggle)
  native.invoke(
    Type.Void, 4270, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_CAN_TORSO_IK(Ped ped, BOOL toggle) // 0xF2B7106D37947CE0
function PED.SET_PED_CAN_TORSO_IK(ped, toggle)
  native.invoke(
    Type.Void, 4271, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_CAN_TORSO_REACT_IK(Ped ped, BOOL p1) // 0xF5846EDB26A98A24
function PED.SET_PED_CAN_TORSO_REACT_IK(ped, p1)
  native.invoke(
    Type.Void, 4272, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1)
  )
end

-- void SET_PED_CAN_TORSO_VEHICLE_IK(Ped ped, BOOL p1) // 0x6647C5F6F5792496
function PED.SET_PED_CAN_TORSO_VEHICLE_IK(ped, p1)
  native.invoke(
    Type.Void, 4273, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1)
  )
end

-- void SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT(Ped ped, BOOL toggle) // 0xEC4686EC06434678
function PED.SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT(ped, toggle)
  native.invoke(
    Type.Void, 4274, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_PED_HEADTRACKING_PED(Ped ped1, Ped ped2) // 0x5CD3CB88A7F8850D
function PED.IS_PED_HEADTRACKING_PED(ped1, ped2)
  return native.invoke(
    Type.Bool, 4275, false,
    arg(Type.Ped, ped1),
    arg(Type.Ped, ped2)
  )
end

-- BOOL IS_PED_HEADTRACKING_ENTITY(Ped ped, Entity entity) // 0x813A0A7C9D2E831F
function PED.IS_PED_HEADTRACKING_ENTITY(ped, entity)
  return native.invoke(
    Type.Bool, 4276, false,
    arg(Type.Ped, ped),
    arg(Type.Entity, entity)
  )
end

-- void SET_PED_PRIMARY_LOOKAT(Ped ped, Ped lookAt) // 0xCD17B554996A8D9E
--[[
This is only called once in the scripts.

sub_1CD9(&l_49, 0, getElem(3, &l_34, 4), "MICHAEL", 0, 1);
                    sub_1CA8("WORLD_HUMAN_SMOKING", 2);
                    PED::SET_PED_PRIMARY_LOOKAT(getElem(3, &l_34, 4), PLAYER::PLAYER_PED_ID());
--]]
function PED.SET_PED_PRIMARY_LOOKAT(ped, lookAt)
  native.invoke(
    Type.Void, 4277, false,
    arg(Type.Ped, ped),
    arg(Type.Ped, lookAt)
  )
end

-- void SET_PED_CLOTH_PIN_FRAMES(Any p0, Any p1) // 0x78C4E9961DB3EB5B
function PED.SET_PED_CLOTH_PIN_FRAMES(p0, p1)
  native.invoke(
    Type.Void, 4278, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void SET_PED_CLOTH_PACKAGE_INDEX(Any p0, Any p1) // 0x82A3D6D9CC2CB8E3
function PED.SET_PED_CLOTH_PACKAGE_INDEX(p0, p1)
  native.invoke(
    Type.Void, 4279, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void SET_PED_CLOTH_PRONE(Any p0, BOOL p1) // 0xA660FAF550EB37E5
function PED.SET_PED_CLOTH_PRONE(p0, p1)
  native.invoke(
    Type.Void, 4280, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1)
  )
end

-- void SET_PED_CONFIG_FLAG(Ped ped, int flagId, BOOL value) // 0x1913FE4CBF41C463
--[[
enum ePedConfigFlags
{
	_CPED_CONFIG_FLAG_0xC63DE95E = 1,
	CPED_CONFIG_FLAG_NoCriticalHits = 2,
	CPED_CONFIG_FLAG_DrownsInWater = 3,
	CPED_CONFIG_FLAG_DisableReticuleFixedLockon = 4,
	_CPED_CONFIG_FLAG_0x37D196F4 = 5,
	_CPED_CONFIG_FLAG_0xE2462399 = 6,
	CPED_CONFIG_FLAG_UpperBodyDamageAnimsOnly = 7,
	_CPED_CONFIG_FLAG_0xEDDEB838 = 8,
	_CPED_CONFIG_FLAG_0xB398B6FD = 9,
	_CPED_CONFIG_FLAG_0xF6664E68 = 10,
	_CPED_CONFIG_FLAG_0xA05E7CA3 = 11,
	_CPED_CONFIG_FLAG_0xCE394045 = 12,
	CPED_CONFIG_FLAG_NeverLeavesGroup = 13,
	_CPED_CONFIG_FLAG_0xCD8D1411 = 14,
	_CPED_CONFIG_FLAG_0xB031F1A9 = 15,
	_CPED_CONFIG_FLAG_0xFE65BEE3 = 16,
	CPED_CONFIG_FLAG_BlockNonTemporaryEvents = 17,
	_CPED_CONFIG_FLAG_0x380165BD = 18,
	_CPED_CONFIG_FLAG_0x07C045C7 = 19,
	_CPED_CONFIG_FLAG_0x583B5E2D = 20,
	_CPED_CONFIG_FLAG_0x475EDA58 = 21,
	_CPED_CONFIG_FLAG_0x8629D05B = 22,
	_CPED_CONFIG_FLAG_0x1522968B = 23,
	CPED_CONFIG_FLAG_IgnoreSeenMelee = 24,
	_CPED_CONFIG_FLAG_0x4CC09C4B = 25,
	_CPED_CONFIG_FLAG_0x034F3053 = 26,
	_CPED_CONFIG_FLAG_0xD91BA7CC = 27,
	_CPED_CONFIG_FLAG_0x5C8DC66E = 28,
	CPED_CONFIG_FLAG_GetOutUndriveableVehicle = 29,
	_CPED_CONFIG_FLAG_0x6580B9D2 = 30,
	_CPED_CONFIG_FLAG_0x0EF7A297 = 31,
	CPED_CONFIG_FLAG_WillFlyThruWindscreen = 32,
	CPED_CONFIG_FLAG_DieWhenRagdoll = 33,
	CPED_CONFIG_FLAG_HasHelmet = 34,
	CPED_CONFIG_FLAG_UseHelmet = 35,
	CPED_CONFIG_FLAG_DontTakeOffHelmet = 36,
	_CPED_CONFIG_FLAG_0xB130D17B = 37,
	_CPED_CONFIG_FLAG_0x5F071200 = 38,
	CPED_CONFIG_FLAG_DisableEvasiveDives = 39,
	_CPED_CONFIG_FLAG_0xC287AAFF = 40,
	_CPED_CONFIG_FLAG_0x203328CC = 41,
	CPED_CONFIG_FLAG_DontInfluenceWantedLevel = 42,
	CPED_CONFIG_FLAG_DisablePlayerLockon = 43,
	CPED_CONFIG_FLAG_DisableLockonToRandomPeds = 44,
	CPED_CONFIG_FLAG_AllowLockonToFriendlyPlayers = 45,
	_CPED_CONFIG_FLAG_0xDB115BFA = 46,
	CPED_CONFIG_FLAG_PedBeingDeleted = 47,
	CPED_CONFIG_FLAG_BlockWeaponSwitching = 48,
	_CPED_CONFIG_FLAG_0xF8E99565 = 49,
	_CPED_CONFIG_FLAG_0xDD17FEE6 = 50,
	_CPED_CONFIG_FLAG_0x7ED9B2C9 = 51,
	_CPED_CONFIG_FLAG_NoCollison = 52,
	_CPED_CONFIG_FLAG_0x5A6C1F6E = 53,
	_CPED_CONFIG_FLAG_0xD749FC41 = 54,
	_CPED_CONFIG_FLAG_0x357F63F3 = 55,
	_CPED_CONFIG_FLAG_0xC5E60961 = 56,
	_CPED_CONFIG_FLAG_0x29275C3E = 57,
	CPED_CONFIG_FLAG_IsFiring = 58,
	CPED_CONFIG_FLAG_WasFiring = 59,
	CPED_CONFIG_FLAG_IsStanding = 60,
	CPED_CONFIG_FLAG_WasStanding = 61,
	CPED_CONFIG_FLAG_InVehicle = 62,
	CPED_CONFIG_FLAG_OnMount = 63,
	CPED_CONFIG_FLAG_AttachedToVehicle = 64,
	CPED_CONFIG_FLAG_IsSwimming = 65,
	CPED_CONFIG_FLAG_WasSwimming = 66,
	CPED_CONFIG_FLAG_IsSkiing = 67,
	CPED_CONFIG_FLAG_IsSitting = 68,
	CPED_CONFIG_FLAG_KilledByStealth = 69,
	CPED_CONFIG_FLAG_KilledByTakedown = 70,
	CPED_CONFIG_FLAG_Knockedout = 71,
	_CPED_CONFIG_FLAG_0x3E3C4560 = 72,
	_CPED_CONFIG_FLAG_0x2994C7B7 = 73,
	_CPED_CONFIG_FLAG_0x6D59D275 = 74,
	CPED_CONFIG_FLAG_UsingCoverPoint = 75,
	CPED_CONFIG_FLAG_IsInTheAir = 76,
	_CPED_CONFIG_FLAG_0x2D493FB7 = 77,
	CPED_CONFIG_FLAG_IsAimingGun = 78,
	_CPED_CONFIG_FLAG_0x14D69875 = 79,
	_CPED_CONFIG_FLAG_0x40B05311 = 80,
	_CPED_CONFIG_FLAG_0x8B230BC5 = 81,
	_CPED_CONFIG_FLAG_0xC74E5842 = 82,
	_CPED_CONFIG_FLAG_0x9EA86147 = 83,
	_CPED_CONFIG_FLAG_0x674C746C = 84,
	_CPED_CONFIG_FLAG_0x3E56A8C2 = 85,
	_CPED_CONFIG_FLAG_0xC144A1EF = 86,
	_CPED_CONFIG_FLAG_0x0548512D = 87,
	_CPED_CONFIG_FLAG_0x31C93909 = 88,
	_CPED_CONFIG_FLAG_0xA0269315 = 89,
	_CPED_CONFIG_FLAG_0xD4D59D4D = 90,
	_CPED_CONFIG_FLAG_0x411D4420 = 91,
	_CPED_CONFIG_FLAG_0xDF4AEF0D = 92,
	CPED_CONFIG_FLAG_ForcePedLoadCover = 93,
	_CPED_CONFIG_FLAG_0x300E4CD3 = 94,
	_CPED_CONFIG_FLAG_0xF1C5BF04 = 95,
	_CPED_CONFIG_FLAG_0x89C2EF13 = 96,
	CPED_CONFIG_FLAG_VaultFromCover = 97,
	_CPED_CONFIG_FLAG_0x02A852C8 = 98,
	_CPED_CONFIG_FLAG_0x3D9407F1 = 99,
	_CPED_CONFIG_FLAG_IsDrunk = 100, // 0x319B4558
	CPED_CONFIG_FLAG_ForcedAim = 101,
	_CPED_CONFIG_FLAG_0xB942D71A = 102,
	_CPED_CONFIG_FLAG_0xD26C55A8 = 103,
	CPED_CONFIG_FLAG_OpenDoorArmIK = 104,
	CPED_CONFIG_FLAG_ForceReload = 105,
	CPED_CONFIG_FLAG_DontActivateRagdollFromVehicleImpact = 106,
	CPED_CONFIG_FLAG_DontActivateRagdollFromBulletImpact = 107,
	CPED_CONFIG_FLAG_DontActivateRagdollFromExplosions = 108,
	CPED_CONFIG_FLAG_DontActivateRagdollFromFire = 109,
	CPED_CONFIG_FLAG_DontActivateRagdollFromElectrocution = 110,
	_CPED_CONFIG_FLAG_0x83C0A4BF = 111,
	_CPED_CONFIG_FLAG_0x0E0FAF8C = 112,
	CPED_CONFIG_FLAG_KeepWeaponHolsteredUnlessFired = 113,
	_CPED_CONFIG_FLAG_0x43B80B79 = 114,
	_CPED_CONFIG_FLAG_0x0D2A9309 = 115,
	CPED_CONFIG_FLAG_GetOutBurningVehicle = 116,
	CPED_CONFIG_FLAG_BumpedByPlayer = 117,
	CPED_CONFIG_FLAG_RunFromFiresAndExplosions = 118,
	CPED_CONFIG_FLAG_TreatAsPlayerDuringTargeting = 119,
	CPED_CONFIG_FLAG_IsHandCuffed = 120,
	CPED_CONFIG_FLAG_IsAnkleCuffed = 121,
	CPED_CONFIG_FLAG_DisableMelee = 122,
	CPED_CONFIG_FLAG_DisableUnarmedDrivebys = 123,
	CPED_CONFIG_FLAG_JustGetsPulledOutWhenElectrocuted = 124,
	_CPED_CONFIG_FLAG_0x5FED6BFD = 125,
	CPED_CONFIG_FLAG_WillNotHotwireLawEnforcementVehicle = 126,
	CPED_CONFIG_FLAG_WillCommandeerRatherThanJack = 127,
	CPED_CONFIG_FLAG_CanBeAgitated = 128,
	CPED_CONFIG_FLAG_ForcePedToFaceLeftInCover = 129,
	CPED_CONFIG_FLAG_ForcePedToFaceRightInCover = 130,
	CPED_CONFIG_FLAG_BlockPedFromTurningInCover = 131,
	CPED_CONFIG_FLAG_KeepRelationshipGroupAfterCleanUp = 132,
	CPED_CONFIG_FLAG_ForcePedToBeDragged = 133,
	CPED_CONFIG_FLAG_PreventPedFromReactingToBeingJacked = 134,
	CPED_CONFIG_FLAG_IsScuba = 135,
	CPED_CONFIG_FLAG_WillArrestRatherThanJack = 136,
	CPED_CONFIG_FLAG_RemoveDeadExtraFarAway = 137,
	CPED_CONFIG_FLAG_RidingTrain = 138,
	CPED_CONFIG_FLAG_ArrestResult = 139,
	CPED_CONFIG_FLAG_CanAttackFriendly = 140,
	CPED_CONFIG_FLAG_WillJackAnyPlayer = 141,
	_CPED_CONFIG_FLAG_0x6901E731 = 142,
	_CPED_CONFIG_FLAG_0x9EC9BF6C = 143,
	CPED_CONFIG_FLAG_WillJackWantedPlayersRatherThanStealCar = 144,
	CPED_CONFIG_FLAG_ShootingAnimFlag = 145,
	CPED_CONFIG_FLAG_DisableLadderClimbing = 146,
	CPED_CONFIG_FLAG_StairsDetected = 147,
	CPED_CONFIG_FLAG_SlopeDetected = 148,
	_CPED_CONFIG_FLAG_0x1A15670B = 149,
	CPED_CONFIG_FLAG_CowerInsteadOfFlee = 150,
	CPED_CONFIG_FLAG_CanActivateRagdollWhenVehicleUpsideDown = 151,
	CPED_CONFIG_FLAG_AlwaysRespondToCriesForHelp = 152,
	CPED_CONFIG_FLAG_DisableBloodPoolCreation = 153,
	CPED_CONFIG_FLAG_ShouldFixIfNoCollision = 154,
	CPED_CONFIG_FLAG_CanPerformArrest = 155,
	CPED_CONFIG_FLAG_CanPerformUncuff = 156,
	CPED_CONFIG_FLAG_CanBeArrested = 157,
	_CPED_CONFIG_FLAG_0xF7960FF5 = 158,
	CPED_CONFIG_FLAG_PlayerPreferFrontSeatMP = 159,
	_CPED_CONFIG_FLAG_0x0C6C3099 = 160,
	_CPED_CONFIG_FLAG_0x645F927A = 161,
	_CPED_CONFIG_FLAG_0xA86549B9 = 162,
	_CPED_CONFIG_FLAG_0x8AAF337A = 163,
	_CPED_CONFIG_FLAG_0x13BAA6E7 = 164,
	_CPED_CONFIG_FLAG_0x5FB9D1F5 = 165,
	CPED_CONFIG_FLAG_IsInjured = 166,
	CPED_CONFIG_FLAG_DontEnterVehiclesInPlayersGroup = 167,
	_CPED_CONFIG_FLAG_0xD8072639 = 168,
	CPED_CONFIG_FLAG_PreventAllMeleeTaunts = 169,
	CPED_CONFIG_FLAG_ForceDirectEntry = 170,
	CPED_CONFIG_FLAG_AlwaysSeeApproachingVehicles = 171,
	CPED_CONFIG_FLAG_CanDiveAwayFromApproachingVehicles = 172,
	CPED_CONFIG_FLAG_AllowPlayerToInterruptVehicleEntryExit = 173,
	CPED_CONFIG_FLAG_OnlyAttackLawIfPlayerIsWanted = 174,
	_CPED_CONFIG_FLAG_0x90008BFA = 175,
	_CPED_CONFIG_FLAG_0x07C7A910 = 176,
	CPED_CONFIG_FLAG_PedsJackingMeDontGetIn = 177,
	_CPED_CONFIG_FLAG_0xCE4E8BE2 = 178,
	CPED_CONFIG_FLAG_PedIgnoresAnimInterruptEvents = 179,
	CPED_CONFIG_FLAG_IsInCustody = 180,
	CPED_CONFIG_FLAG_ForceStandardBumpReactionThresholds = 181,
	CPED_CONFIG_FLAG_LawWillOnlyAttackIfPlayerIsWanted = 182,
	CPED_CONFIG_FLAG_IsAgitated = 183,
	CPED_CONFIG_FLAG_PreventAutoShuffleToDriversSeat = 184,
	CPED_CONFIG_FLAG_UseKinematicModeWhenStationary = 185,
	CPED_CONFIG_FLAG_EnableWeaponBlocking = 186,
	CPED_CONFIG_FLAG_HasHurtStarted = 187,
	CPED_CONFIG_FLAG_DisableHurt = 188,
	CPED_CONFIG_FLAG_PlayerIsWeird = 189,
	_CPED_CONFIG_FLAG_0x32FC208B = 190,
	_CPED_CONFIG_FLAG_0x0C296E5A = 191,
	_CPED_CONFIG_FLAG_0xE63B73EC = 192,
	CPED_CONFIG_FLAG_DoNothingWhenOnFootByDefault = 193,
	CPED_CONFIG_FLAG_UsingScenario = 194,
	CPED_CONFIG_FLAG_VisibleOnScreen = 195,
	_CPED_CONFIG_FLAG_0xD88C58A1 = 196,
	_CPED_CONFIG_FLAG_0x5A3DCF43 = 197,
	_CPED_CONFIG_FLAG_0xEA02B420 = 198,
	CPED_CONFIG_FLAG_DontActivateRagdollOnVehicleCollisionWhenDead = 199,
	CPED_CONFIG_FLAG_HasBeenInArmedCombat = 200,
	_CPED_CONFIG_FLAG_0x5E6466F6 = 201,
	CPED_CONFIG_FLAG_Avoidance_Ignore_All = 202,
	CPED_CONFIG_FLAG_Avoidance_Ignored_by_All = 203,
	CPED_CONFIG_FLAG_Avoidance_Ignore_Group1 = 204,
	CPED_CONFIG_FLAG_Avoidance_Member_of_Group1 = 205,
	CPED_CONFIG_FLAG_ForcedToUseSpecificGroupSeatIndex = 206,
	_CPED_CONFIG_FLAG_0x415B26B9 = 207,
	CPED_CONFIG_FLAG_DisableExplosionReactions = 208,
	CPED_CONFIG_FLAG_DodgedPlayer = 209,
	CPED_CONFIG_FLAG_WaitingForPlayerControlInterrupt = 210,
	CPED_CONFIG_FLAG_ForcedToStayInCover = 211,
	CPED_CONFIG_FLAG_GeneratesSoundEvents = 212,
	CPED_CONFIG_FLAG_ListensToSoundEvents = 213,
	CPED_CONFIG_FLAG_AllowToBeTargetedInAVehicle = 214,
	CPED_CONFIG_FLAG_WaitForDirectEntryPointToBeFreeWhenExiting = 215,
	CPED_CONFIG_FLAG_OnlyRequireOnePressToExitVehicle = 216,
	CPED_CONFIG_FLAG_ForceExitToSkyDive = 217,
	_CPED_CONFIG_FLAG_0x3C7DF9DF = 218,
	_CPED_CONFIG_FLAG_0x848FFEF2 = 219,
	CPED_CONFIG_FLAG_DontEnterLeadersVehicle = 220,
	CPED_CONFIG_FLAG_DisableExitToSkyDive = 221,
	_CPED_CONFIG_FLAG_0x84F722FA = 222,
	_CPED_CONFIG_FLAG_Shrink = 223, // 0xD1B87B1F
	_CPED_CONFIG_FLAG_0x728AA918 = 224,
	CPED_CONFIG_FLAG_DisablePotentialToBeWalkedIntoResponse = 225,
	CPED_CONFIG_FLAG_DisablePedAvoidance = 226,
	CPED_CONFIG_FLAG_ForceRagdollUponDeath = 227,
	_CPED_CONFIG_FLAG_0x1EA7225F = 228,
	CPED_CONFIG_FLAG_DisablePanicInVehicle = 229,
	CPED_CONFIG_FLAG_AllowedToDetachTrailer = 230,
	_CPED_CONFIG_FLAG_0xFC3E572D = 231,
	_CPED_CONFIG_FLAG_0x08E9F9CF = 232,
	_CPED_CONFIG_FLAG_0x2D3BA52D = 233,
	_CPED_CONFIG_FLAG_0xFD2F53EA = 234,
	_CPED_CONFIG_FLAG_0x31A1B03B = 235,
	CPED_CONFIG_FLAG_IsHoldingProp = 236,
	CPED_CONFIG_FLAG_BlocksPathingWhenDead = 237,
	_CPED_CONFIG_FLAG_0xCE57C9A3 = 238,
	_CPED_CONFIG_FLAG_0x26149198 = 239,
	CPED_CONFIG_FLAG_ForceSkinCharacterCloth = 240,
	CPED_CONFIG_FLAG_LeaveEngineOnWhenExitingVehicles = 241,
	CPED_CONFIG_FLAG_PhoneDisableTextingAnimations = 242,
	CPED_CONFIG_FLAG_PhoneDisableTalkingAnimations = 243,
	CPED_CONFIG_FLAG_PhoneDisableCameraAnimations = 244,
	CPED_CONFIG_FLAG_DisableBlindFiringInShotReactions = 245,
	CPED_CONFIG_FLAG_AllowNearbyCoverUsage = 246,
	_CPED_CONFIG_FLAG_0x0C754ACA = 247,
	CPED_CONFIG_FLAG_CanPlayInCarIdles = 248,
	CPED_CONFIG_FLAG_CanAttackNonWantedPlayerAsLaw = 249,
	CPED_CONFIG_FLAG_WillTakeDamageWhenVehicleCrashes = 250,
	CPED_CONFIG_FLAG_AICanDrivePlayerAsRearPassenger = 251,
	CPED_CONFIG_FLAG_PlayerCanJackFriendlyPlayers = 252,
	CPED_CONFIG_FLAG_OnStairs = 253,
	_CPED_CONFIG_FLAG_0xE1A2F73F = 254,
	CPED_CONFIG_FLAG_AIDriverAllowFriendlyPassengerSeatEntry = 255,
	_CPED_CONFIG_FLAG_0xF1EB20A9 = 256,
	CPED_CONFIG_FLAG_AllowMissionPedToUseInjuredMovement = 257,
	_CPED_CONFIG_FLAG_0x329DCF1A = 258,
	_CPED_CONFIG_FLAG_0x8D90DD1B = 259,
	_CPED_CONFIG_FLAG_0xB8A292B7 = 260,
	CPED_CONFIG_FLAG_PreventUsingLowerPrioritySeats = 261,
	_CPED_CONFIG_FLAG_0x2AF558F0 = 262,
	_CPED_CONFIG_FLAG_0x82251455 = 263,
	_CPED_CONFIG_FLAG_0x30CF498B = 264,
	_CPED_CONFIG_FLAG_0xE1CD50AF = 265,
	_CPED_CONFIG_FLAG_0x72E4AE48 = 266,
	_CPED_CONFIG_FLAG_0xC2657EA1 = 267,
	CPED_CONFIG_FLAG_TeleportToLeaderVehicle = 268,
	CPED_CONFIG_FLAG_Avoidance_Ignore_WeirdPedBuffer = 269,
	CPED_CONFIG_FLAG_OnStairSlope = 270,
	_CPED_CONFIG_FLAG_0xA0897933 = 271,
	CPED_CONFIG_FLAG_DontBlipCop = 272,
	CPED_CONFIG_FLAG_ClimbedShiftedFence = 273,
	_CPED_CONFIG_FLAG_0xF7823618 = 274,
	CPED_CONFIG_FLAG_KillWhenTrapped = 275,
	CPED_CONFIG_FLAG_EdgeDetected = 276,
	_CPED_CONFIG_FLAG_0x92B67896 = 277,
	_CPED_CONFIG_FLAG_0xCAD677C9 = 278,
	CPED_CONFIG_FLAG_AvoidTearGas = 279,
	_CPED_CONFIG_FLAG_0x5276AC7B = 280,
	CPED_CONFIG_FLAG_DisableGoToWritheWhenInjured = 281,
	CPED_CONFIG_FLAG_OnlyUseForcedSeatWhenEnteringHeliInGroup = 282,
	_CPED_CONFIG_FLAG_0x9139724D = 283,
	_CPED_CONFIG_FLAG_0xA1457461 = 284,
	CPED_CONFIG_FLAG_DisableWeirdPedEvents = 285,
	CPED_CONFIG_FLAG_ShouldChargeNow = 286,
	CPED_CONFIG_FLAG_RagdollingOnBoat = 287,
	CPED_CONFIG_FLAG_HasBrandishedWeapon = 288,
	_CPED_CONFIG_FLAG_0x1B9EE8A1 = 289,
	_CPED_CONFIG_FLAG_0xF3F5758C = 290,
	_CPED_CONFIG_FLAG_0x2A9307F1 = 291,
	_CPED_CONFIG_FLAG_FreezePosition = 292, // 0x7403D216
	_CPED_CONFIG_FLAG_0xA06A3C6C = 293,
	CPED_CONFIG_FLAG_DisableShockingEvents = 294,
	_CPED_CONFIG_FLAG_0xF8DA25A5 = 295,
	CPED_CONFIG_FLAG_NeverReactToPedOnRoof = 296,
	_CPED_CONFIG_FLAG_0xB31F1187 = 297,
	_CPED_CONFIG_FLAG_0x84315402 = 298,
	CPED_CONFIG_FLAG_DisableShockingDrivingOnPavementEvents = 299,
	_CPED_CONFIG_FLAG_0xC7829B67 = 300,
	CPED_CONFIG_FLAG_DisablePedConstraints = 301,
	CPED_CONFIG_FLAG_ForceInitialPeekInCover = 302,
	_CPED_CONFIG_FLAG_0x2ADA871B = 303,
	_CPED_CONFIG_FLAG_0x47BC8A58 = 304,
	CPED_CONFIG_FLAG_DisableJumpingFromVehiclesAfterLeader = 305,
	_CPED_CONFIG_FLAG_0x4A133C50 = 306,
	_CPED_CONFIG_FLAG_0xC58099C3 = 307,
	_CPED_CONFIG_FLAG_0xF3D76D41 = 308,
	_CPED_CONFIG_FLAG_0xB0EEE9F2 = 309,
	CPED_CONFIG_FLAG_IsInCluster = 310,
	CPED_CONFIG_FLAG_ShoutToGroupOnPlayerMelee = 311,
	CPED_CONFIG_FLAG_IgnoredByAutoOpenDoors = 312,
	_CPED_CONFIG_FLAG_0xD4136C22 = 313,
	CPED_CONFIG_FLAG_ForceIgnoreMeleeActiveCombatant = 314,
	CPED_CONFIG_FLAG_CheckLoSForSoundEvents = 315,
	_CPED_CONFIG_FLAG_0xD5C98277 = 316,
	CPED_CONFIG_FLAG_CanSayFollowedByPlayerAudio = 317,
	CPED_CONFIG_FLAG_ActivateRagdollFromMinorPlayerContact = 318,
	_CPED_CONFIG_FLAG_0xD8BE1D54 = 319,
	CPED_CONFIG_FLAG_ForcePoseCharacterCloth = 320,
	CPED_CONFIG_FLAG_HasClothCollisionBounds = 321,
	CPED_CONFIG_FLAG_HasHighHeels = 322,
	_CPED_CONFIG_FLAG_0x86B01E54 = 323,
	CPED_CONFIG_FLAG_DontBehaveLikeLaw = 324,
	_CPED_CONFIG_FLAG_0xC03B736C = 325, // SpawnedAtScenario?
	CPED_CONFIG_FLAG_DisablePoliceInvestigatingBody = 326,
	CPED_CONFIG_FLAG_DisableWritheShootFromGround = 327,
	CPED_CONFIG_FLAG_LowerPriorityOfWarpSeats = 328,
	CPED_CONFIG_FLAG_DisableTalkTo = 329,
	CPED_CONFIG_FLAG_DontBlip = 330,
	CPED_CONFIG_FLAG_IsSwitchingWeapon = 331,
	CPED_CONFIG_FLAG_IgnoreLegIkRestrictions = 332,
	_CPED_CONFIG_FLAG_0x150468FD = 333,
	_CPED_CONFIG_FLAG_0x914EBD6B = 334,
	_CPED_CONFIG_FLAG_0x79AF3B6D = 335,
	_CPED_CONFIG_FLAG_0x75C7A632 = 336,
	_CPED_CONFIG_FLAG_0x52D530E2 = 337,
	_CPED_CONFIG_FLAG_0xDB2A90E0 = 338,
	CPED_CONFIG_FLAG_AllowTaskDoNothingTimeslicing = 339,
	_CPED_CONFIG_FLAG_0x12ADB567 = 340,
	_CPED_CONFIG_FLAG_0x105C8518 = 341,
	CPED_CONFIG_FLAG_NotAllowedToJackAnyPlayers = 342,
	_CPED_CONFIG_FLAG_0xED152C3E = 343,
	_CPED_CONFIG_FLAG_0xA0EFE6A8 = 344,
	CPED_CONFIG_FLAG_AlwaysLeaveTrainUponArrival = 345,
	_CPED_CONFIG_FLAG_0xCDDFE830 = 346,
	CPED_CONFIG_FLAG_OnlyWritheFromWeaponDamage = 347,
	CPED_CONFIG_FLAG_UseSloMoBloodVfx = 348,
	CPED_CONFIG_FLAG_EquipJetpack = 349,
	CPED_CONFIG_FLAG_PreventDraggedOutOfCarThreatResponse = 350,
	_CPED_CONFIG_FLAG_0xE13D1F7C = 351,
	_CPED_CONFIG_FLAG_0x40E25FB9 = 352,
	_CPED_CONFIG_FLAG_0x930629D9 = 353,
	_CPED_CONFIG_FLAG_0xECCF0C7F = 354,
	_CPED_CONFIG_FLAG_0xB6E9613B = 355,
	CPED_CONFIG_FLAG_ForceDeepSurfaceCheck = 356,
	CPED_CONFIG_FLAG_DisableDeepSurfaceAnims = 357,
	CPED_CONFIG_FLAG_DontBlipNotSynced = 358,
	CPED_CONFIG_FLAG_IsDuckingInVehicle = 359,
	CPED_CONFIG_FLAG_PreventAutoShuffleToTurretSeat = 360,
	CPED_CONFIG_FLAG_DisableEventInteriorStatusCheck = 361,
	CPED_CONFIG_FLAG_HasReserveParachute = 362,
	CPED_CONFIG_FLAG_UseReserveParachute = 363,
	CPED_CONFIG_FLAG_TreatDislikeAsHateWhenInCombat = 364,
	CPED_CONFIG_FLAG_OnlyUpdateTargetWantedIfSeen = 365,
	CPED_CONFIG_FLAG_AllowAutoShuffleToDriversSeat = 366,
	_CPED_CONFIG_FLAG_0xD7E07D37 = 367,
	_CPED_CONFIG_FLAG_0x03C4FD24 = 368,
	_CPED_CONFIG_FLAG_0x7675789A = 369,
	_CPED_CONFIG_FLAG_0xB7288A88 = 370,
	_CPED_CONFIG_FLAG_0xC06B6291 = 371,
	CPED_CONFIG_FLAG_PreventReactingToSilencedCloneBullets = 372,
	CPED_CONFIG_FLAG_DisableInjuredCryForHelpEvents = 373,
	CPED_CONFIG_FLAG_NeverLeaveTrain = 374,
	CPED_CONFIG_FLAG_DontDropJetpackOnDeath = 375,
	_CPED_CONFIG_FLAG_0x147F1FFB = 376,
	_CPED_CONFIG_FLAG_0x4376DD79 = 377,
	_CPED_CONFIG_FLAG_0xCD3DB518 = 378,
	_CPED_CONFIG_FLAG_0xFE4BA4B6 = 379,
	CPED_CONFIG_FLAG_DisableAutoEquipHelmetsInBikes = 380,
	_CPED_CONFIG_FLAG_0xBCD816CD = 381,
	_CPED_CONFIG_FLAG_0xCF02DD69 = 382,
	_CPED_CONFIG_FLAG_0xF73AFA2E = 383,
	_CPED_CONFIG_FLAG_0x80B9A9D0 = 384,
	_CPED_CONFIG_FLAG_0xF601F7EE = 385,
	_CPED_CONFIG_FLAG_0xA91350FC = 386,
	_CPED_CONFIG_FLAG_0x3AB23B96 = 387,
	CPED_CONFIG_FLAG_IsClimbingLadder = 388,
	CPED_CONFIG_FLAG_HasBareFeet = 389,
	CPED_CONFIG_FLAG_UNUSED_REPLACE_ME_2 = 390,
	CPED_CONFIG_FLAG_GoOnWithoutVehicleIfItIsUnableToGetBackToRoad = 391,
	CPED_CONFIG_FLAG_BlockDroppingHealthSnacksOnDeath = 392,
	_CPED_CONFIG_FLAG_0xC11D3E8F = 393,
	CPED_CONFIG_FLAG_ForceThreatResponseToNonFriendToFriendMeleeActions = 394,
	CPED_CONFIG_FLAG_DontRespondToRandomPedsDamage = 395,
	CPED_CONFIG_FLAG_AllowContinuousThreatResponseWantedLevelUpdates = 396,
	CPED_CONFIG_FLAG_KeepTargetLossResponseOnCleanup = 397,
	CPED_CONFIG_FLAG_PlayersDontDragMeOutOfCar = 398,
	CPED_CONFIG_FLAG_BroadcastRepondedToThreatWhenGoingToPointShooting = 399,
	CPED_CONFIG_FLAG_IgnorePedTypeForIsFriendlyWith = 400,
	CPED_CONFIG_FLAG_TreatNonFriendlyAsHateWhenInCombat = 401,
	CPED_CONFIG_FLAG_DontLeaveVehicleIfLeaderNotInVehicle = 402,
	_CPED_CONFIG_FLAG_0x5E5B9591 = 403,
	CPED_CONFIG_FLAG_AllowMeleeReactionIfMeleeProofIsOn = 404,
	_CPED_CONFIG_FLAG_0x77840177 = 405,
	_CPED_CONFIG_FLAG_0x1C7ACAC4 = 406,
	CPED_CONFIG_FLAG_UseNormalExplosionDamageWhenBlownUpInVehicle = 407,
	CPED_CONFIG_FLAG_DisableHomingMissileLockForVehiclePedInside = 408,
	CPED_CONFIG_FLAG_DisableTakeOffScubaGear = 409,
	CPED_CONFIG_FLAG_IgnoreMeleeFistWeaponDamageMult = 410,
	CPED_CONFIG_FLAG_LawPedsCanFleeFromNonWantedPlayer = 411,
	CPED_CONFIG_FLAG_ForceBlipSecurityPedsIfPlayerIsWanted = 412,
	CPED_CONFIG_FLAG_IsHolsteringWeapon = 413,
	CPED_CONFIG_FLAG_UseGoToPointForScenarioNavigation = 414,
	CPED_CONFIG_FLAG_DontClearLocalPassengersWantedLevel = 415,
	CPED_CONFIG_FLAG_BlockAutoSwapOnWeaponPickups = 416,
	CPED_CONFIG_FLAG_ThisPedIsATargetPriorityForAI = 417,
	CPED_CONFIG_FLAG_IsSwitchingHelmetVisor = 418,
	CPED_CONFIG_FLAG_ForceHelmetVisorSwitch = 419,
	_CPED_CONFIG_FLAG_0xCFF5F6DE = 420,
	CPED_CONFIG_FLAG_UseOverrideFootstepPtFx = 421,
	CPED_CONFIG_FLAG_DisableVehicleCombat = 422,
	_CPED_CONFIG_FLAG_0xFE401D26 = 423,
	CPED_CONFIG_FLAG_FallsLikeAircraft = 424,
	_CPED_CONFIG_FLAG_0x2B42AE82 = 425,
	CPED_CONFIG_FLAG_UseLockpickVehicleEntryAnimations = 426,
	CPED_CONFIG_FLAG_IgnoreInteriorCheckForSprinting = 427,
	CPED_CONFIG_FLAG_SwatHeliSpawnWithinLastSpottedLocation = 428,
	CPED_CONFIG_FLAG_DisableStartEngine = 429,
	CPED_CONFIG_FLAG_IgnoreBeingOnFire = 430,
	CPED_CONFIG_FLAG_DisableTurretOrRearSeatPreference = 431,
	CPED_CONFIG_FLAG_DisableWantedHelicopterSpawning = 432,
	CPED_CONFIG_FLAG_UseTargetPerceptionForCreatingAimedAtEvents = 433,
	CPED_CONFIG_FLAG_DisableHomingMissileLockon = 434,
	CPED_CONFIG_FLAG_ForceIgnoreMaxMeleeActiveSupportCombatants = 435,
	CPED_CONFIG_FLAG_StayInDefensiveAreaWhenInVehicle = 436,
	CPED_CONFIG_FLAG_DontShoutTargetPosition = 437,
	CPED_CONFIG_FLAG_DisableHelmetArmor = 438,
	_CPED_CONFIG_FLAG_0xCB7F3A1E = 439,
	_CPED_CONFIG_FLAG_0x50178878 = 440,
	CPED_CONFIG_FLAG_PreventVehExitDueToInvalidWeapon = 441,
	CPED_CONFIG_FLAG_IgnoreNetSessionFriendlyFireCheckForAllowDamage = 442,
	CPED_CONFIG_FLAG_DontLeaveCombatIfTargetPlayerIsAttackedByPolice = 443,
	CPED_CONFIG_FLAG_CheckLockedBeforeWarp = 444,
	CPED_CONFIG_FLAG_DontShuffleInVehicleToMakeRoom = 445,
	CPED_CONFIG_FLAG_GiveWeaponOnGetup = 446,
	CPED_CONFIG_FLAG_DontHitVehicleWithProjectiles = 447,
	CPED_CONFIG_FLAG_DisableForcedEntryForOpenVehiclesFromTryLockedDoor = 448,
	CPED_CONFIG_FLAG_FiresDummyRockets = 449,
	CPED_CONFIG_FLAG_PedIsArresting = 450,
	CPED_CONFIG_FLAG_IsDecoyPed = 451,
	CPED_CONFIG_FLAG_HasEstablishedDecoy = 452,
	CPED_CONFIG_FLAG_BlockDispatchedHelicoptersFromLanding = 453,
	CPED_CONFIG_FLAG_DontCryForHelpOnStun = 454,
	_CPED_CONFIG_FLAG_0xB68D3EAB = 455,
	CPED_CONFIG_FLAG_CanBeIncapacitated = 456,
	_CPED_CONFIG_FLAG_0x4BD5EBAD = 457,
	CPED_CONFIG_FLAG_DontChangeTargetFromMelee = 458,
};
--]]
function PED.SET_PED_CONFIG_FLAG(ped, flagId, value)
  native.invoke(
    Type.Void, 4281, false,
    arg(Type.Ped, ped),
    arg(Type.Int, flagId),
    arg(Type.Bool, value)
  )
end

-- void SET_PED_RESET_FLAG(Ped ped, int flagId, BOOL doReset) // 0xC1E8A365BF3B29F2
--[[
PED::SET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 240, 1);
Known values:
PRF_PreventGoingIntoStillInVehicleState = 236 *(fanatic2.c)*
--]]
function PED.SET_PED_RESET_FLAG(ped, flagId, doReset)
  native.invoke(
    Type.Void, 4282, false,
    arg(Type.Ped, ped),
    arg(Type.Int, flagId),
    arg(Type.Bool, doReset)
  )
end

-- BOOL GET_PED_CONFIG_FLAG(Ped ped, int flagId, BOOL p2) // 0x7EE53118C892B513
--[[
See SET_PED_CONFIG_FLAG
--]]
function PED.GET_PED_CONFIG_FLAG(ped, flagId, p2)
  return native.invoke(
    Type.Bool, 4283, false,
    arg(Type.Ped, ped),
    arg(Type.Int, flagId),
    arg(Type.Bool, p2)
  )
end

-- BOOL GET_PED_RESET_FLAG(Ped ped, int flagId) // 0xAF9E59B1B1FBF2A0
function PED.GET_PED_RESET_FLAG(ped, flagId)
  return native.invoke(
    Type.Bool, 4284, false,
    arg(Type.Ped, ped),
    arg(Type.Int, flagId)
  )
end

-- void SET_PED_GROUP_MEMBER_PASSENGER_INDEX(Ped ped, int index) // 0x0BDDB8D9EC6BCF3C
function PED.SET_PED_GROUP_MEMBER_PASSENGER_INDEX(ped, index)
  native.invoke(
    Type.Void, 4285, false,
    arg(Type.Ped, ped),
    arg(Type.Int, index)
  )
end

-- void SET_PED_CAN_EVASIVE_DIVE(Ped ped, BOOL toggle) // 0x6B7A646C242A7059
function PED.SET_PED_CAN_EVASIVE_DIVE(ped, toggle)
  native.invoke(
    Type.Void, 4286, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_PED_EVASIVE_DIVING(Ped ped, Entity* evadingEntity) // 0x414641C26E105898
--[[
Presumably returns the Entity that the Ped is currently diving out of the way of.

var num3;
    if (PED::IS_PED_EVASIVE_DIVING(A_0, &num3) != 0)
        if (ENTITY::IS_ENTITY_A_VEHICLE(num3) != 0)
--]]
function PED.IS_PED_EVASIVE_DIVING(ped, evadingEntity)
  return native.invoke(
    Type.Bool, 4287, false,
    arg(Type.Ped, ped),
    arg(Type.Entity, evadingEntity)
  )
end

-- void SET_PED_SHOOTS_AT_COORD(Ped ped, float x, float y, float z, BOOL toggle) // 0x96A05E4FB321B1BA
function PED.SET_PED_SHOOTS_AT_COORD(ped, x, y, z, toggle)
  native.invoke(
    Type.Void, 4288, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_MODEL_IS_SUPPRESSED(Hash modelHash, BOOL toggle) // 0xE163A4BCE4DE6F11
--[[
Full list of peds by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/peds.json
--]]
function PED.SET_PED_MODEL_IS_SUPPRESSED(modelHash, toggle)
  native.invoke(
    Type.Void, 4289, false,
    arg(Type.Hash, modelHash),
    arg(Type.Bool, toggle)
  )
end

-- void STOP_ANY_PED_MODEL_BEING_SUPPRESSED() // 0xB47BD05FA66B40CF
function PED.STOP_ANY_PED_MODEL_BEING_SUPPRESSED()
  native.invoke(
    Type.Void, 4290, false
  )
end

-- void SET_PED_CAN_BE_TARGETED_WHEN_INJURED(Ped ped, BOOL toggle) // 0x638C03B0F9878F57
function PED.SET_PED_CAN_BE_TARGETED_WHEN_INJURED(ped, toggle)
  native.invoke(
    Type.Void, 4291, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_GENERATES_DEAD_BODY_EVENTS(Ped ped, BOOL toggle) // 0x7FB17BA2E7DECA5B
function PED.SET_PED_GENERATES_DEAD_BODY_EVENTS(ped, toggle)
  native.invoke(
    Type.Void, 4292, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void BLOCK_PED_FROM_GENERATING_DEAD_BODY_EVENTS_WHEN_DEAD(Ped ped, BOOL toggle) // 0xE43A13C9E4CCCBCF
function PED.BLOCK_PED_FROM_GENERATING_DEAD_BODY_EVENTS_WHEN_DEAD(ped, toggle)
  native.invoke(
    Type.Void, 4293, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_WILL_ONLY_ATTACK_WANTED_PLAYER(Any p0, Any p1) // 0x3E9679C1DFCF422C
function PED.SET_PED_WILL_ONLY_ATTACK_WANTED_PLAYER(p0, p1)
  native.invoke(
    Type.Void, 4294, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT(Ped ped, BOOL toggle) // 0xDF993EE5E90ABA25
function PED.SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT(ped, toggle)
  native.invoke(
    Type.Void, 4295, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void GIVE_PED_HELMET(Ped ped, BOOL cannotRemove, int helmetFlag, int textureIndex) // 0x54C7C4A94367717E
--[[
PoliceMotorcycleHelmet   1024    
RegularMotorcycleHelmet   4096    
FiremanHelmet 16384   
PilotHeadset  32768   
PilotHelmet   65536
--
p2 is generally 4096 or 16384 in the scripts. p1 varies between 1 and 0.
--]]
function PED.GIVE_PED_HELMET(ped, cannotRemove, helmetFlag, textureIndex)
  native.invoke(
    Type.Void, 4296, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, cannotRemove),
    arg(Type.Int, helmetFlag),
    arg(Type.Int, textureIndex)
  )
end

-- void REMOVE_PED_HELMET(Ped ped, BOOL instantly) // 0xA7B2458D0AD6DED8
function PED.REMOVE_PED_HELMET(ped, instantly)
  native.invoke(
    Type.Void, 4297, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, instantly)
  )
end

-- BOOL IS_PED_TAKING_OFF_HELMET(Ped ped) // 0x14590DDBEDB1EC85
function PED.IS_PED_TAKING_OFF_HELMET(ped)
  return native.invoke(
    Type.Bool, 4298, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_HELMET(Ped ped, BOOL canWearHelmet) // 0x560A43136EB58105
function PED.SET_PED_HELMET(ped, canWearHelmet)
  native.invoke(
    Type.Void, 4299, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, canWearHelmet)
  )
end

-- void SET_PED_HELMET_FLAG(Ped ped, int helmetFlag) // 0xC0E78D5C2CE3EB25
function PED.SET_PED_HELMET_FLAG(ped, helmetFlag)
  native.invoke(
    Type.Void, 4300, false,
    arg(Type.Ped, ped),
    arg(Type.Int, helmetFlag)
  )
end

-- void SET_PED_HELMET_PROP_INDEX(Ped ped, int propIndex, BOOL p2) // 0x26D83693ED99291C
--[[
List of component/props ID
gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
--]]
function PED.SET_PED_HELMET_PROP_INDEX(ped, propIndex, p2)
  native.invoke(
    Type.Void, 4301, false,
    arg(Type.Ped, ped),
    arg(Type.Int, propIndex),
    arg(Type.Bool, p2)
  )
end

-- void SET_PED_HELMET_VISOR_PROP_INDICES(Ped ped, BOOL p1, int p2, int p3) // 0x3F7325574E41B44D
function PED.SET_PED_HELMET_VISOR_PROP_INDICES(ped, p1, p2, p3)
  native.invoke(
    Type.Void, 4302, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1),
    arg(Type.Int, p2),
    arg(Type.Int, p3)
  )
end

-- BOOL IS_PED_HELMET_VISOR_UP(Ped ped) // 0xB9496CE47546DB2C
function PED.IS_PED_HELMET_VISOR_UP(ped)
  return native.invoke(
    Type.Bool, 4303, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_HELMET_TEXTURE_INDEX(Ped ped, int textureIndex) // 0xF1550C4BD22582E2
function PED.SET_PED_HELMET_TEXTURE_INDEX(ped, textureIndex)
  native.invoke(
    Type.Void, 4304, false,
    arg(Type.Ped, ped),
    arg(Type.Int, textureIndex)
  )
end

-- BOOL IS_PED_WEARING_HELMET(Ped ped) // 0xF33BDFE19B309B19
--[[
Returns true if the ped passed through the parenthesis is wearing a helmet.
--]]
function PED.IS_PED_WEARING_HELMET(ped)
  return native.invoke(
    Type.Bool, 4305, false,
    arg(Type.Ped, ped)
  )
end

-- void CLEAR_PED_STORED_HAT_PROP(Ped ped) // 0x687C0B594907D2E8
function PED.CLEAR_PED_STORED_HAT_PROP(ped)
  native.invoke(
    Type.Void, 4306, false,
    arg(Type.Ped, ped)
  )
end

-- int GET_PED_HELMET_STORED_HAT_PROP_INDEX(Ped ped) // 0x451294E859ECC018
function PED.GET_PED_HELMET_STORED_HAT_PROP_INDEX(ped)
  return native.invoke(
    Type.Int, 4307, false,
    arg(Type.Ped, ped)
  )
end

-- int GET_PED_HELMET_STORED_HAT_TEX_INDEX(Ped ped) // 0x9D728C1E12BF5518
function PED.GET_PED_HELMET_STORED_HAT_TEX_INDEX(ped)
  return native.invoke(
    Type.Int, 4308, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_CURRENT_HEAD_PROP_A_HELMET(Any p0) // 0xF2385935BFFD4D92
function PED.IS_CURRENT_HEAD_PROP_A_HELMET(p0)
  return native.invoke(
    Type.Bool, 4309, false,
    arg(Type.Any, p0)
  )
end

-- void SET_PED_TO_LOAD_COVER(Ped ped, BOOL toggle) // 0x332B562EEDA62399
function PED.SET_PED_TO_LOAD_COVER(ped, toggle)
  native.invoke(
    Type.Void, 4310, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_CAN_COWER_IN_COVER(Ped ped, BOOL toggle) // 0xCB7553CDCEF4A735
--[[
It simply makes the said ped to cower behind cover object(wall, desk, car)

Peds flee attributes must be set to not to flee, first. Else, most of the peds, will just flee from gunshot sounds or any other panic situations.
--]]
function PED.SET_PED_CAN_COWER_IN_COVER(ped, toggle)
  native.invoke(
    Type.Void, 4311, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_CAN_PEEK_IN_COVER(Ped ped, BOOL toggle) // 0xC514825C507E3736
function PED.SET_PED_CAN_PEEK_IN_COVER(ped, toggle)
  native.invoke(
    Type.Void, 4312, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_PLAYS_HEAD_ON_HORN_ANIM_WHEN_DIES_IN_VEHICLE(Ped ped, BOOL toggle) // 0x94D94BF1A75AED3D
--[[
This native does absolutely nothing, just a nullsub
--]]
function PED.SET_PED_PLAYS_HEAD_ON_HORN_ANIM_WHEN_DIES_IN_VEHICLE(ped, toggle)
  native.invoke(
    Type.Void, 4313, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_LEG_IK_MODE(Ped ped, int mode) // 0xC396F5B86FF9FEBD
--[[
"IK" stands for "Inverse kinematics." I assume this has something to do with how the ped uses his legs to balance. In the scripts, the second parameter is always an int with a value of 2, 0, or sometimes 1
--]]
function PED.SET_PED_LEG_IK_MODE(ped, mode)
  native.invoke(
    Type.Void, 4314, false,
    arg(Type.Ped, ped),
    arg(Type.Int, mode)
  )
end

-- void SET_PED_MOTION_BLUR(Ped ped, BOOL toggle) // 0x0A986918B102B448
function PED.SET_PED_MOTION_BLUR(ped, toggle)
  native.invoke(
    Type.Void, 4315, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_CAN_SWITCH_WEAPON(Ped ped, BOOL toggle) // 0xED7F7EFE9FABF340
function PED.SET_PED_CAN_SWITCH_WEAPON(ped, toggle)
  native.invoke(
    Type.Void, 4316, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_DIES_INSTANTLY_IN_WATER(Ped ped, BOOL toggle) // 0xEEB64139BA29A7CF
function PED.SET_PED_DIES_INSTANTLY_IN_WATER(ped, toggle)
  native.invoke(
    Type.Void, 4317, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_LADDER_CLIMB_INPUT_STATE(Ped ped, int p1) // 0x1A330D297AAC6BC1
--[[
Only appears in lamar1 script.
--]]
function PED.SET_LADDER_CLIMB_INPUT_STATE(ped, p1)
  native.invoke(
    Type.Void, 4318, false,
    arg(Type.Ped, ped),
    arg(Type.Int, p1)
  )
end

-- void STOP_PED_WEAPON_FIRING_WHEN_DROPPED(Ped ped) // 0xC158D28142A34608
function PED.STOP_PED_WEAPON_FIRING_WHEN_DROPPED(ped)
  native.invoke(
    Type.Void, 4319, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_SCRIPTED_ANIM_SEAT_OFFSET(Ped ped, float p1) // 0x5917BBA32D06C230
function PED.SET_SCRIPTED_ANIM_SEAT_OFFSET(ped, p1)
  native.invoke(
    Type.Void, 4320, false,
    arg(Type.Ped, ped),
    arg(Type.Float, p1)
  )
end

-- void SET_PED_COMBAT_MOVEMENT(Ped ped, int combatMovement) // 0x4D9CA1009AFBD057
--[[
enum eCombatMovement // 0x4F456B61
{
	CM_Stationary,
	CM_Defensive,
	CM_WillAdvance,
	CM_WillRetreat
};
--]]
function PED.SET_PED_COMBAT_MOVEMENT(ped, combatMovement)
  native.invoke(
    Type.Void, 4321, false,
    arg(Type.Ped, ped),
    arg(Type.Int, combatMovement)
  )
end

-- int GET_PED_COMBAT_MOVEMENT(Ped ped) // 0xDEA92412FCAEB3F5
--[[
See SET_PED_COMBAT_MOVEMENT
--]]
function PED.GET_PED_COMBAT_MOVEMENT(ped)
  return native.invoke(
    Type.Int, 4322, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_COMBAT_ABILITY(Ped ped, int abilityLevel) // 0xC7622C0D36B2FDA8
--[[
enum eCombatAbility // 0xE793438C
{
	CA_Poor,
	CA_Average,
	CA_Professional,
	CA_NumTypes
};
--]]
function PED.SET_PED_COMBAT_ABILITY(ped, abilityLevel)
  native.invoke(
    Type.Void, 4323, false,
    arg(Type.Ped, ped),
    arg(Type.Int, abilityLevel)
  )
end

-- void SET_PED_COMBAT_RANGE(Ped ped, int combatRange) // 0x3C606747B23E497B
--[[
enum eCombatRange // 0xB69160F5
{
	CR_Near,
	CR_Medium,
	CR_Far,
	CR_VeryFar,
	CR_NumRanges
};
--]]
function PED.SET_PED_COMBAT_RANGE(ped, combatRange)
  native.invoke(
    Type.Void, 4324, false,
    arg(Type.Ped, ped),
    arg(Type.Int, combatRange)
  )
end

-- int GET_PED_COMBAT_RANGE(Ped ped) // 0xF9D9F7F2DB8E2FA0
--[[
See SET_PED_COMBAT_RANGE
--]]
function PED.GET_PED_COMBAT_RANGE(ped)
  return native.invoke(
    Type.Int, 4325, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_COMBAT_ATTRIBUTES(Ped ped, int attributeId, BOOL enabled) // 0x9F7794730795E019
--[[
enum eCombatAttributes // 0x0E8E7201
{
	BF_CanUseCover = 0,
	BF_CanUseVehicles = 1,
	BF_CanDoDrivebys = 2,
	BF_CanLeaveVehicle = 3,
	BF_CanUseDynamicStrafeDecisions = 4,
	BF_AlwaysFight = 5,
	BF_0x66BB9FCC = 6,
	BF_0x6837DA41 = 7,
	BF_0xB4A13A5A = 8,
	BF_0xEE326AAD = 9,
	BF_0x7DF2CCFA = 10,
	BF_0x0036D422 = 11,
	BF_BlindFireWhenInCover = 12,
	BF_Aggressive = 13,
	BF_CanInvestigate = 14,
	BF_HasRadio = 15,
	BF_0x6BDE28D1 = 16,
	BF_AlwaysFlee = 17,
	BF_0x7852797D = 18,
	BF_0x33497B95 = 19,
	BF_CanTauntInVehicle = 20,
	BF_CanChaseTargetOnFoot = 21,
	BF_WillDragInjuredPedsToSafety = 22,
	BF_0xCD7168B8 = 23,
	BF_UseProximityFiringRate = 24,
	BF_0x48F914F8 = 25,
	BF_0x2EA543D0 = 26,
	BF_PerfectAccuracy = 27,
	BF_CanUseFrustratedAdvance = 28,
	BF_0x3D131AC1 = 29,
	BF_0x3AD95F27 = 30,
	BF_MaintainMinDistanceToTarget = 31,
	BF_0xEAD68AD2 = 32,
	BF_0xA206C2E0 = 33,
	BF_CanUsePeekingVariations = 34,
	BF_0xA5715184 = 35,
	BF_0xD5265533 = 36,
	BF_0x2B84C2BF = 37,
	BF_DisableBulletReactions = 38,
	BF_CanBust = 39,
	BF_0xAA525726 = 40,
	BF_CanCommandeerVehicles = 41,
	BF_CanFlank = 42,
	BF_SwitchToAdvanceIfCantFindCover = 43,
	BF_SwitchToDefensiveIfInCover = 44,
	BF_0xEB4786A0 = 45,
	BF_CanFightArmedPedsWhenNotArmed = 46,
	BF_0xA08E9402 = 47,
	BF_0x952EAD7D = 48,
	BF_UseEnemyAccuracyScaling = 49,
	BF_CanCharge = 50,
	BF_0xDA8C2BD3 = 51,
	BF_0x6562F017 = 52,
	BF_0xA2C3D53B = 53,
	BF_AlwaysEquipBestWeapon = 54,
	BF_CanSeeUnderwaterPeds = 55,
	BF_0xF619486B = 56,
	BF_0x61EB63A3 = 57,
	BF_DisableFleeFromCombat = 58,
	BF_0x8976D12B = 59,
	BF_CanThrowSmokeGrenade = 60,
	BF_NonMissionPedsFleeFromThisPedUnlessArmed = 61,
	BF_0x5452A10C = 62,
	BF_FleesFromInvincibleOpponents = 63,
	BF_DisableBlockFromPursueDuringVehicleChase = 64,
	BF_DisableSpinOutDuringVehicleChase = 65,
	BF_DisableCruiseInFrontDuringBlockDuringVehicleChase = 66,
	BF_0x0B404731 = 67,
	BF_DisableReactToBuddyShot = 68,
	BF_0x7FFD6AEB = 69,
	BF_0x51F4AEF8 = 70,
	BF_PermitChargeBeyondDefensiveArea = 71,
	BF_0x63E0A8E2 = 72,
	BF_0xDF974436 = 73,
	BF_0x556C080B = 74,
	BF_0xA4D50035 = 75,
	BF_SetDisableShoutTargetPositionOnCombatStart = 76,
	BF_DisableRespondedToThreatBroadcast = 77,
	BF_0xCBB01765 = 78,
	BF_0x4F862ED4 = 79,
	BF_0xEF9C7C40 = 80,
	BF_0xE51B494F = 81,
	BF_0x054D0199 = 82,
	BF_0xD36BCE94 = 83,
	BF_0xFB11F690 = 84,
	BF_0xD208A9AD = 85,
	BF_AllowDogFighting = 86,
	BF_0x07A6E531 = 87,
	BF_0x34F9317B = 88,
	BF_0x4240F5A9 = 89,
	BF_0xEE129DBD = 90,
	BF_0x053AEAD9 = 91
};
--]]
function PED.SET_PED_COMBAT_ATTRIBUTES(ped, attributeId, enabled)
  native.invoke(
    Type.Void, 4326, false,
    arg(Type.Ped, ped),
    arg(Type.Int, attributeId),
    arg(Type.Bool, enabled)
  )
end

-- void SET_PED_TARGET_LOSS_RESPONSE(Ped ped, int responseType) // 0x0703B9079823DA4A
--[[
enum eTargetLossResponseType
{
	TLR_ExitTask,
	TLR_NeverLoseTarget,
	TLR_SearchForTarget
};
--]]
function PED.SET_PED_TARGET_LOSS_RESPONSE(ped, responseType)
  native.invoke(
    Type.Void, 4327, false,
    arg(Type.Ped, ped),
    arg(Type.Int, responseType)
  )
end

-- BOOL IS_PED_PERFORMING_MELEE_ACTION(Ped ped) // 0xDCCA191DF9980FD7
function PED.IS_PED_PERFORMING_MELEE_ACTION(ped)
  return native.invoke(
    Type.Bool, 4328, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_PERFORMING_STEALTH_KILL(Ped ped) // 0xFD4CCDBCC59941B7
function PED.IS_PED_PERFORMING_STEALTH_KILL(ped)
  return native.invoke(
    Type.Bool, 4329, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_PERFORMING_A_COUNTER_ATTACK(Ped ped) // 0xEBD0EDBA5BE957CF
function PED.IS_PED_PERFORMING_A_COUNTER_ATTACK(ped)
  return native.invoke(
    Type.Bool, 4330, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_BEING_STEALTH_KILLED(Ped ped) // 0x863B23EFDE9C5DF2
function PED.IS_PED_BEING_STEALTH_KILLED(ped)
  return native.invoke(
    Type.Bool, 4331, false,
    arg(Type.Ped, ped)
  )
end

-- Ped GET_MELEE_TARGET_FOR_PED(Ped ped) // 0x18A3E9EE1297FD39
function PED.GET_MELEE_TARGET_FOR_PED(ped)
  return native.invoke(
    Type.Ped, 4332, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL WAS_PED_KILLED_BY_STEALTH(Ped ped) // 0xF9800AA1A771B000
function PED.WAS_PED_KILLED_BY_STEALTH(ped)
  return native.invoke(
    Type.Bool, 4333, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL WAS_PED_KILLED_BY_TAKEDOWN(Ped ped) // 0x7F08E26039C7347C
function PED.WAS_PED_KILLED_BY_TAKEDOWN(ped)
  return native.invoke(
    Type.Bool, 4334, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL WAS_PED_KNOCKED_OUT(Ped ped) // 0x61767F73EACEED21
function PED.WAS_PED_KNOCKED_OUT(ped)
  return native.invoke(
    Type.Bool, 4335, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_FLEE_ATTRIBUTES(Ped ped, int attributeFlags, BOOL enable) // 0x70A2D1137C8ED7C9
--[[
bit 1 (0x2) = use vehicle
bit 15 (0x8000) = force cower
--]]
function PED.SET_PED_FLEE_ATTRIBUTES(ped, attributeFlags, enable)
  native.invoke(
    Type.Void, 4336, false,
    arg(Type.Ped, ped),
    arg(Type.Int, attributeFlags),
    arg(Type.Bool, enable)
  )
end

-- void SET_PED_COWER_HASH(Ped ped, const char* p1) // 0xA549131166868ED3
--[[
p1: Only "CODE_HUMAN_STAND_COWER" found in the b617d scripts.
--]]
function PED.SET_PED_COWER_HASH(ped, p1)
  native.invoke(
    Type.Void, 4337, false,
    arg(Type.Ped, ped),
    arg(Type.String, p1)
  )
end

-- void SET_PED_STEERS_AROUND_DEAD_BODIES(Ped ped, BOOL toggle) // 0x2016C603D6B8987C
function PED.SET_PED_STEERS_AROUND_DEAD_BODIES(ped, toggle)
  native.invoke(
    Type.Void, 4338, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_STEERS_AROUND_PEDS(Ped ped, BOOL toggle) // 0x46F2193B3AD1D891
function PED.SET_PED_STEERS_AROUND_PEDS(ped, toggle)
  native.invoke(
    Type.Void, 4339, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_STEERS_AROUND_OBJECTS(Ped ped, BOOL toggle) // 0x1509C089ADC208BF
function PED.SET_PED_STEERS_AROUND_OBJECTS(ped, toggle)
  native.invoke(
    Type.Void, 4340, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_STEERS_AROUND_VEHICLES(Ped ped, BOOL toggle) // 0xEB6FB9D48DDE23EC
function PED.SET_PED_STEERS_AROUND_VEHICLES(ped, toggle)
  native.invoke(
    Type.Void, 4341, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_IS_AVOIDED_BY_OTHERS(Any p0, BOOL p1) // 0xA9B61A329BFDCBEA
function PED.SET_PED_IS_AVOIDED_BY_OTHERS(p0, p1)
  native.invoke(
    Type.Void, 4342, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1)
  )
end

-- void SET_PED_INCREASED_AVOIDANCE_RADIUS(Ped ped) // 0x570389D1C3DE3C6B
function PED.SET_PED_INCREASED_AVOIDANCE_RADIUS(ped)
  native.invoke(
    Type.Void, 4343, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_BLOCKS_PATHING_WHEN_DEAD(Ped ped, BOOL toggle) // 0x576594E8D64375E2
function PED.SET_PED_BLOCKS_PATHING_WHEN_DEAD(ped, toggle)
  native.invoke(
    Type.Void, 4344, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_NO_TIME_DELAY_BEFORE_SHOT(Any p0) // 0xA52D5247A4227E14
function PED.SET_PED_NO_TIME_DELAY_BEFORE_SHOT(p0)
  native.invoke(
    Type.Void, 4345, false,
    arg(Type.Any, p0)
  )
end

-- BOOL IS_ANY_PED_NEAR_POINT(float x, float y, float z, float radius) // 0x083961498679DC9F
function PED.IS_ANY_PED_NEAR_POINT(x, y, z, radius)
  return native.invoke(
    Type.Bool, 4346, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius)
  )
end

-- void FORCE_PED_AI_AND_ANIMATION_UPDATE(Ped ped, BOOL p1, BOOL p2) // 0x2208438012482A1A
function PED.FORCE_PED_AI_AND_ANIMATION_UPDATE(ped, p1, p2)
  native.invoke(
    Type.Void, 4347, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- BOOL IS_PED_HEADING_TOWARDS_POSITION(Ped ped, float x, float y, float z, float p4) // 0xFCF37A457CB96DC0
function PED.IS_PED_HEADING_TOWARDS_POSITION(ped, x, y, z, p4)
  return native.invoke(
    Type.Bool, 4348, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, p4)
  )
end

-- void REQUEST_PED_VISIBILITY_TRACKING(Ped ped) // 0x7D7A2E43E74E2EB8
function PED.REQUEST_PED_VISIBILITY_TRACKING(ped)
  native.invoke(
    Type.Void, 4349, false,
    arg(Type.Ped, ped)
  )
end

-- void REQUEST_PED_VEHICLE_VISIBILITY_TRACKING(Ped ped, BOOL p1) // 0x2BC338A7B21F4608
function PED.REQUEST_PED_VEHICLE_VISIBILITY_TRACKING(ped, p1)
  native.invoke(
    Type.Void, 4350, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1)
  )
end

-- void REQUEST_PED_RESTRICTED_VEHICLE_VISIBILITY_TRACKING(Ped ped, BOOL p1) // 0xCD018C591F94CB43
function PED.REQUEST_PED_RESTRICTED_VEHICLE_VISIBILITY_TRACKING(ped, p1)
  native.invoke(
    Type.Void, 4351, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1)
  )
end

-- void REQUEST_PED_USE_SMALL_BBOX_VISIBILITY_TRACKING(Ped ped, BOOL p1) // 0x75BA1CB3B7D40CAF
function PED.REQUEST_PED_USE_SMALL_BBOX_VISIBILITY_TRACKING(ped, p1)
  native.invoke(
    Type.Void, 4352, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1)
  )
end

-- BOOL IS_TRACKED_PED_VISIBLE(Ped ped) // 0x91C8E617F64188AC
--[[
returns whether or not a ped is visible within your FOV, not this check auto's to false after a certain distance.


Target needs to be tracked.. won't work otherwise.
--]]
function PED.IS_TRACKED_PED_VISIBLE(ped)
  return native.invoke(
    Type.Bool, 4353, false,
    arg(Type.Ped, ped)
  )
end

-- int GET_TRACKED_PED_PIXELCOUNT(Ped ped) // 0x511F1A683387C7E2
function PED.GET_TRACKED_PED_PIXELCOUNT(ped)
  return native.invoke(
    Type.Int, 4354, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_TRACKED(Ped ped) // 0x4C5E1F087CD10BB7
function PED.IS_PED_TRACKED(ped)
  return native.invoke(
    Type.Bool, 4355, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL HAS_PED_RECEIVED_EVENT(Ped ped, int eventId) // 0x8507BCB710FA6DC0
function PED.HAS_PED_RECEIVED_EVENT(ped, eventId)
  return native.invoke(
    Type.Bool, 4356, false,
    arg(Type.Ped, ped),
    arg(Type.Int, eventId)
  )
end

-- BOOL CAN_PED_SEE_HATED_PED(Ped ped1, Ped ped2) // 0x6CD5A433374D4CFB
function PED.CAN_PED_SEE_HATED_PED(ped1, ped2)
  return native.invoke(
    Type.Bool, 4357, false,
    arg(Type.Ped, ped1),
    arg(Type.Ped, ped2)
  )
end

-- BOOL CAN_PED_SHUFFLE_TO_OR_FROM_TURRET_SEAT(Ped ped, int* p1) // 0x9C6A6C19B6C0C496
function PED.CAN_PED_SHUFFLE_TO_OR_FROM_TURRET_SEAT(ped, p1)
  return native.invoke(
    Type.Bool, 4358, false,
    arg(Type.Ped, ped),
    arg(Type.Int, p1)
  )
end

-- BOOL CAN_PED_SHUFFLE_TO_OR_FROM_EXTRA_SEAT(Ped ped, int* p1) // 0x2DFC81C9B9608549
function PED.CAN_PED_SHUFFLE_TO_OR_FROM_EXTRA_SEAT(ped, p1)
  return native.invoke(
    Type.Bool, 4359, false,
    arg(Type.Ped, ped),
    arg(Type.Int, p1)
  )
end

-- int GET_PED_BONE_INDEX(Ped ped, int boneId) // 0x3F428D08BE5AAE31
--[[
no bone= -1

boneIds:
        SKEL_ROOT = 0x0,
   SKEL_Pelvis = 0x2e28,
 SKEL_L_Thigh = 0xe39f,
    SKEL_L_Calf = 0xf9bb,
 SKEL_L_Foot = 0x3779,
 SKEL_L_Toe0 = 0x83c,
  IK_L_Foot = 0xfedd,
   PH_L_Foot = 0xe175,
   MH_L_Knee = 0xb3fe,
   SKEL_R_Thigh = 0xca72,
    SKEL_R_Calf = 0x9000,
 SKEL_R_Foot = 0xcc4d,
 SKEL_R_Toe0 = 0x512d,
 IK_R_Foot = 0x8aae,
   PH_R_Foot = 0x60e6,
   MH_R_Knee = 0x3fcf,
   RB_L_ThighRoll = 0x5c57,
  RB_R_ThighRoll = 0x192a,
  SKEL_Spine_Root = 0xe0fd,
 SKEL_Spine0 = 0x5c01,
 SKEL_Spine1 = 0x60f0,
 SKEL_Spine2 = 0x60f1,
 SKEL_Spine3 = 0x60f2,
 SKEL_L_Clavicle = 0xfcd9,
 SKEL_L_UpperArm = 0xb1c5,
 SKEL_L_Forearm = 0xeeeb,
  SKEL_L_Hand = 0x49d9,
 SKEL_L_Finger00 = 0x67f2,
 SKEL_L_Finger01 = 0xff9,
  SKEL_L_Finger02 = 0xffa,
  SKEL_L_Finger10 = 0x67f3,
 SKEL_L_Finger11 = 0x1049,
 SKEL_L_Finger12 = 0x104a,
 SKEL_L_Finger20 = 0x67f4,
 SKEL_L_Finger21 = 0x1059,
 SKEL_L_Finger22 = 0x105a,
 SKEL_L_Finger30 = 0x67f5,
 SKEL_L_Finger31 = 0x1029,
 SKEL_L_Finger32 = 0x102a,
 SKEL_L_Finger40 = 0x67f6,
 SKEL_L_Finger41 = 0x1039,
 SKEL_L_Finger42 = 0x103a,
 PH_L_Hand = 0xeb95,
   IK_L_Hand = 0x8cbd,
   RB_L_ForeArmRoll = 0xee4f,
    RB_L_ArmRoll = 0x1470,
    MH_L_Elbow = 0x58b7,
  SKEL_R_Clavicle = 0x29d2,
 SKEL_R_UpperArm = 0x9d4d,
 SKEL_R_Forearm = 0x6e5c,
  SKEL_R_Hand = 0xdead,
 SKEL_R_Finger00 = 0xe5f2,
 SKEL_R_Finger01 = 0xfa10,
 SKEL_R_Finger02 = 0xfa11,
 SKEL_R_Finger10 = 0xe5f3,
 SKEL_R_Finger11 = 0xfa60,
 SKEL_R_Finger12 = 0xfa61,
 SKEL_R_Finger20 = 0xe5f4,
 SKEL_R_Finger21 = 0xfa70,
 SKEL_R_Finger22 = 0xfa71,
 SKEL_R_Finger30 = 0xe5f5,
 SKEL_R_Finger31 = 0xfa40,
 SKEL_R_Finger32 = 0xfa41,
 SKEL_R_Finger40 = 0xe5f6,
 SKEL_R_Finger41 = 0xfa50,
 SKEL_R_Finger42 = 0xfa51,
 PH_R_Hand = 0x6f06,
   IK_R_Hand = 0x188e,
   RB_R_ForeArmRoll = 0xab22,
    RB_R_ArmRoll = 0x90ff,
    MH_R_Elbow = 0xbb0,
   SKEL_Neck_1 = 0x9995,
 SKEL_Head = 0x796e,
   IK_Head = 0x322c,
 FACIAL_facialRoot = 0xfe2c,
   FB_L_Brow_Out_000 = 0xe3db,
   FB_L_Lid_Upper_000 = 0xb2b6,
  FB_L_Eye_000 = 0x62ac,
    FB_L_CheekBone_000 = 0x542e,
  FB_L_Lip_Corner_000 = 0x74ac,
 FB_R_Lid_Upper_000 = 0xaa10,
  FB_R_Eye_000 = 0x6b52,
    FB_R_CheekBone_000 = 0x4b88,
  FB_R_Brow_Out_000 = 0x54c,
    FB_R_Lip_Corner_000 = 0x2ba6,
 FB_Brow_Centre_000 = 0x9149,
  FB_UpperLipRoot_000 = 0x4ed2,
 FB_UpperLip_000 = 0xf18f,
 FB_L_Lip_Top_000 = 0x4f37,
    FB_R_Lip_Top_000 = 0x4537,
    FB_Jaw_000 = 0xb4a0,
  FB_LowerLipRoot_000 = 0x4324,
 FB_LowerLip_000 = 0x508f,
 FB_L_Lip_Bot_000 = 0xb93b,
    FB_R_Lip_Bot_000 = 0xc33b,
    FB_Tongue_000 = 0xb987,
   RB_Neck_1 = 0x8b93,
   IK_Root = 0xdd1c
--]]
function PED.GET_PED_BONE_INDEX(ped, boneId)
  return native.invoke(
    Type.Int, 4360, false,
    arg(Type.Ped, ped),
    arg(Type.Int, boneId)
  )
end

-- int GET_PED_RAGDOLL_BONE_INDEX(Ped ped, int bone) // 0x2057EF813397A772
function PED.GET_PED_RAGDOLL_BONE_INDEX(ped, bone)
  return native.invoke(
    Type.Int, 4361, false,
    arg(Type.Ped, ped),
    arg(Type.Int, bone)
  )
end

-- void SET_PED_ENVEFF_SCALE(Ped ped, float value) // 0xBF29516833893561
--[[
Values look to be between 0.0 and 1.0
From decompiled scripts: 0.0, 0.6, 0.65, 0.8, 1.0

You are correct, just looked in IDA it breaks from the function if it's less than 0.0f or greater than 1.0f.
--]]
function PED.SET_PED_ENVEFF_SCALE(ped, value)
  native.invoke(
    Type.Void, 4362, false,
    arg(Type.Ped, ped),
    arg(Type.Float, value)
  )
end

-- float GET_PED_ENVEFF_SCALE(Ped ped) // 0x9C14D30395A51A3C
function PED.GET_PED_ENVEFF_SCALE(ped)
  return native.invoke(
    Type.Float, 4363, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_ENABLE_PED_ENVEFF_SCALE(Ped ped, BOOL toggle) // 0xD2C5AA0C0E8D0F1E
function PED.SET_ENABLE_PED_ENVEFF_SCALE(ped, toggle)
  native.invoke(
    Type.Void, 4364, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_ENVEFF_CPV_ADD(Ped ped, float p1) // 0x110F526AB784111F
--[[
In agency_heist3b.c4, its like this 90% of the time:

PED::SET_PED_ENVEFF_CPV_ADD(ped, 0.099);
PED::SET_PED_ENVEFF_SCALE(ped, 1.0);
PED::SET_PED_ENVEFF_CPV_ADD(ped, 87, 81, 68);
PED::SET_ENABLE_PED_ENVEFF_SCALE(ped, 1);

and its like this 10% of the time:

PED::SET_PED_ENVEFF_CPV_ADD(ped, 0.2);
PED::SET_PED_ENVEFF_SCALE(ped, 0.65);
PED::SET_PED_ENVEFF_COLOR_MODULATOR(ped, 74, 69, 60);
PED::SET_ENABLE_PED_ENVEFF_SCALE(ped, 1);
--]]
function PED.SET_PED_ENVEFF_CPV_ADD(ped, p1)
  native.invoke(
    Type.Void, 4365, false,
    arg(Type.Ped, ped),
    arg(Type.Float, p1)
  )
end

-- void SET_PED_ENVEFF_COLOR_MODULATOR(Ped ped, int p1, int p2, int p3) // 0xD69411AA0CEBF9E9
--[[
Something related to the environmental effects natives.
In the "agency_heist3b" script, p1 - p3 are always under 100 - usually they are {87, 81, 68}. If SET_PED_ENVEFF_SCALE is set to 0.65 (instead of the usual 1.0), they use {74, 69, 60}
--]]
function PED.SET_PED_ENVEFF_COLOR_MODULATOR(ped, p1, p2, p3)
  native.invoke(
    Type.Void, 4366, false,
    arg(Type.Ped, ped),
    arg(Type.Int, p1),
    arg(Type.Int, p2),
    arg(Type.Int, p3)
  )
end

-- void SET_PED_EMISSIVE_SCALE(Ped ped, float intensity) // 0x4E90D746056E273D
--[[
intensity: 0.0f - 1.0f

This native sets the emissive intensity for the given ped. It is used for different 'glow' levels on illuminated clothing.
--]]
function PED.SET_PED_EMISSIVE_SCALE(ped, intensity)
  native.invoke(
    Type.Void, 4367, false,
    arg(Type.Ped, ped),
    arg(Type.Float, intensity)
  )
end

-- float GET_PED_EMISSIVE_SCALE(Ped ped) // 0x1461B28A06717D68
--[[
Use 0x4E90D746056E273D to set the illuminated clothing glow intensity for a specific ped.
Returns a float between 0.0 and 1.0 representing the current illuminated clothing glow intensity.
--]]
function PED.GET_PED_EMISSIVE_SCALE(ped)
  return native.invoke(
    Type.Float, 4368, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_SHADER_READY(Ped ped) // 0x81AA517FBBA05D39
function PED.IS_PED_SHADER_READY(ped)
  return native.invoke(
    Type.Bool, 4369, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_ENABLE_CREW_EMBLEM(Ped ped, BOOL toggle) // 0xE906EC930F5FE7C8
function PED.SET_PED_ENABLE_CREW_EMBLEM(ped, toggle)
  native.invoke(
    Type.Void, 4370, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void REQUEST_RAGDOLL_BOUNDS_UPDATE(Any p0, Any p1) // 0x1216E0BFA72CC703
--[[
This native does absolutely nothing, just a nullsub
--]]
function PED.REQUEST_RAGDOLL_BOUNDS_UPDATE(p0, p1)
  native.invoke(
    Type.Void, 4371, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void SET_PED_AO_BLOB_RENDERING(Ped ped, BOOL toggle) // 0x2B5AA717A181FB4C
--[[
Enable/disable ped shadow (ambient occlusion). https://gfycat.com/thankfulesteemedgecko
--]]
function PED.SET_PED_AO_BLOB_RENDERING(ped, toggle)
  native.invoke(
    Type.Void, 4372, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_PED_SHELTERED(Ped ped) // 0xB8B52E498014F5B0
function PED.IS_PED_SHELTERED(ped)
  return native.invoke(
    Type.Bool, 4373, false,
    arg(Type.Ped, ped)
  )
end

-- int CREATE_SYNCHRONIZED_SCENE(float x, float y, float z, float roll, float pitch, float yaw, int p6) // 0x8C18E0F9080ADD73
--[[
p6 always 2 (but it doesnt seem to matter...)

roll and pitch 0
yaw to Ped.rotation
--]]
function PED.CREATE_SYNCHRONIZED_SCENE(x, y, z, roll, pitch, yaw, p6)
  return native.invoke(
    Type.Int, 4374, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, roll),
    arg(Type.Float, pitch),
    arg(Type.Float, yaw),
    arg(Type.Int, p6)
  )
end

-- int CREATE_SYNCHRONIZED_SCENE_AT_MAP_OBJECT(float x, float y, float z, float radius, Hash object) // 0x62EC273D00187DCA
function PED.CREATE_SYNCHRONIZED_SCENE_AT_MAP_OBJECT(x, y, z, radius, object)
  return native.invoke(
    Type.Int, 4375, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Hash, object)
  )
end

-- BOOL IS_SYNCHRONIZED_SCENE_RUNNING(int sceneId) // 0x25D39B935A038A26
--[[
Returns true if a synchronized scene is running
--]]
function PED.IS_SYNCHRONIZED_SCENE_RUNNING(sceneId)
  return native.invoke(
    Type.Bool, 4376, false,
    arg(Type.Int, sceneId)
  )
end

-- void SET_SYNCHRONIZED_SCENE_ORIGIN(int sceneID, float x, float y, float z, float roll, float pitch, float yaw, BOOL p7) // 0x6ACF6B7225801CD7
function PED.SET_SYNCHRONIZED_SCENE_ORIGIN(sceneID, x, y, z, roll, pitch, yaw, p7)
  native.invoke(
    Type.Void, 4377, false,
    arg(Type.Int, sceneID),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, roll),
    arg(Type.Float, pitch),
    arg(Type.Float, yaw),
    arg(Type.Bool, p7)
  )
end

-- void SET_SYNCHRONIZED_SCENE_PHASE(int sceneID, float phase) // 0x734292F4F0ABF6D0
function PED.SET_SYNCHRONIZED_SCENE_PHASE(sceneID, phase)
  native.invoke(
    Type.Void, 4378, false,
    arg(Type.Int, sceneID),
    arg(Type.Float, phase)
  )
end

-- float GET_SYNCHRONIZED_SCENE_PHASE(int sceneID) // 0xE4A310B1D7FA73CC
function PED.GET_SYNCHRONIZED_SCENE_PHASE(sceneID)
  return native.invoke(
    Type.Float, 4379, false,
    arg(Type.Int, sceneID)
  )
end

-- void SET_SYNCHRONIZED_SCENE_RATE(int sceneID, float rate) // 0xB6C49F8A5E295A5D
function PED.SET_SYNCHRONIZED_SCENE_RATE(sceneID, rate)
  native.invoke(
    Type.Void, 4380, false,
    arg(Type.Int, sceneID),
    arg(Type.Float, rate)
  )
end

-- float GET_SYNCHRONIZED_SCENE_RATE(int sceneID) // 0xD80932D577274D40
function PED.GET_SYNCHRONIZED_SCENE_RATE(sceneID)
  return native.invoke(
    Type.Float, 4381, false,
    arg(Type.Int, sceneID)
  )
end

-- void SET_SYNCHRONIZED_SCENE_LOOPED(int sceneID, BOOL toggle) // 0xD9A897A4C6C2974F
function PED.SET_SYNCHRONIZED_SCENE_LOOPED(sceneID, toggle)
  native.invoke(
    Type.Void, 4382, false,
    arg(Type.Int, sceneID),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_SYNCHRONIZED_SCENE_LOOPED(int sceneID) // 0x62522002E0C391BA
function PED.IS_SYNCHRONIZED_SCENE_LOOPED(sceneID)
  return native.invoke(
    Type.Bool, 4383, false,
    arg(Type.Int, sceneID)
  )
end

-- void SET_SYNCHRONIZED_SCENE_HOLD_LAST_FRAME(int sceneID, BOOL toggle) // 0x394B9CD12435C981
function PED.SET_SYNCHRONIZED_SCENE_HOLD_LAST_FRAME(sceneID, toggle)
  native.invoke(
    Type.Void, 4384, false,
    arg(Type.Int, sceneID),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_SYNCHRONIZED_SCENE_HOLD_LAST_FRAME(int sceneID) // 0x7F2F4F13AC5257EF
function PED.IS_SYNCHRONIZED_SCENE_HOLD_LAST_FRAME(sceneID)
  return native.invoke(
    Type.Bool, 4385, false,
    arg(Type.Int, sceneID)
  )
end

-- void ATTACH_SYNCHRONIZED_SCENE_TO_ENTITY(int sceneID, Entity entity, int boneIndex) // 0x272E4723B56A3B96
function PED.ATTACH_SYNCHRONIZED_SCENE_TO_ENTITY(sceneID, entity, boneIndex)
  native.invoke(
    Type.Void, 4386, false,
    arg(Type.Int, sceneID),
    arg(Type.Entity, entity),
    arg(Type.Int, boneIndex)
  )
end

-- void DETACH_SYNCHRONIZED_SCENE(int sceneID) // 0x6D38F1F04CBB37EA
function PED.DETACH_SYNCHRONIZED_SCENE(sceneID)
  native.invoke(
    Type.Void, 4387, false,
    arg(Type.Int, sceneID)
  )
end

-- void TAKE_OWNERSHIP_OF_SYNCHRONIZED_SCENE(int scene) // 0xCD9CC7E200A52A6F
function PED.TAKE_OWNERSHIP_OF_SYNCHRONIZED_SCENE(scene)
  native.invoke(
    Type.Void, 4388, false,
    arg(Type.Int, scene)
  )
end

-- BOOL FORCE_PED_MOTION_STATE(Ped ped, Hash motionStateHash, BOOL p2, int p3, BOOL p4) // 0xF28965D04F570DCA
--[[
Regarding p2, p3 and p4: Most common is 0, 0, 0); followed by 0, 1, 0); and 1, 1, 0); in R* scripts. p4 is very rarely something other than 0.

enum eMotionState // 0x92A659FE
{
	MotionState_None = 0xEE717723,
	MotionState_Idle = 0x9072A713,
	MotionState_Walk = 0xD827C3DB,
	MotionState_Run = 0xFFF7E7A4,
	MotionState_Sprint = 0xBD8817DB,
	MotionState_Crouch_Idle = 0x43FB099E,
	MotionState_Crouch_Walk = 0x08C31A98,
	MotionState_Crouch_Run = 0x3593CF09,
	MotionState_DoNothing = 0x0EC17E58,
	MotionState_AnimatedVelocity = 0x551AAC43,
	MotionState_InVehicle = 0x94D9D58D,
	MotionState_Aiming = 0x3F67C6AF,
	MotionState_Diving_Idle = 0x4848CDED,
	MotionState_Diving_Swim = 0x916E828C,
	MotionState_Swimming_TreadWater = 0xD1BF11C7,
	MotionState_Dead = 0x0DBB071C,
	MotionState_Stealth_Idle = 0x422D7A25,
	MotionState_Stealth_Walk = 0x042AB6A2,
	MotionState_Stealth_Run = 0xFB0B79E1,
	MotionState_Parachuting = 0xBAC0F10B,
	MotionState_ActionMode_Idle = 0xDA40A0DC,
	MotionState_ActionMode_Walk = 0xD2905EA7,
	MotionState_ActionMode_Run = 0x31BADE14,
	MotionState_Jetpack = 0x535E6A5E
};
--]]
function PED.FORCE_PED_MOTION_STATE(ped, motionStateHash, p2, p3, p4)
  return native.invoke(
    Type.Bool, 4389, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, motionStateHash),
    arg(Type.Bool, p2),
    arg(Type.Int, p3),
    arg(Type.Bool, p4)
  )
end

-- BOOL GET_PED_CURRENT_MOVE_BLEND_RATIO(Ped ped, float* speedX, float* speedY) // 0xF60165E1D2C5370B
function PED.GET_PED_CURRENT_MOVE_BLEND_RATIO(ped, speedX, speedY)
  return native.invoke(
    Type.Bool, 4390, false,
    arg(Type.Ped, ped),
    arg(Type.Float, speedX),
    arg(Type.Float, speedY)
  )
end

-- void SET_PED_MAX_MOVE_BLEND_RATIO(Ped ped, float value) // 0x433083750C5E064A
function PED.SET_PED_MAX_MOVE_BLEND_RATIO(ped, value)
  native.invoke(
    Type.Void, 4391, false,
    arg(Type.Ped, ped),
    arg(Type.Float, value)
  )
end

-- void SET_PED_MIN_MOVE_BLEND_RATIO(Ped ped, float value) // 0x01A898D26E2333DD
function PED.SET_PED_MIN_MOVE_BLEND_RATIO(ped, value)
  native.invoke(
    Type.Void, 4392, false,
    arg(Type.Ped, ped),
    arg(Type.Float, value)
  )
end

-- void SET_PED_MOVE_RATE_OVERRIDE(Ped ped, float value) // 0x085BF80FA50A39D1
--[[
Min: 0.00
Max: 10.00

Can be used in combo with fast run cheat.

When value is set to 10.00:
Sprinting without fast run cheat: 66 m/s
Sprinting with fast run cheat: 77 m/s

Needs to be looped!

Note: According to IDA for the Xbox360 xex, when they check bgt they seem to have the min to 0.0f, but the max set to 1.15f not 10.0f.
--]]
function PED.SET_PED_MOVE_RATE_OVERRIDE(ped, value)
  native.invoke(
    Type.Void, 4393, false,
    arg(Type.Ped, ped),
    arg(Type.Float, value)
  )
end

-- void SET_PED_MOVE_RATE_IN_WATER_OVERRIDE(Ped ped, float p1) // 0x0B3E35AC043707D9
function PED.SET_PED_MOVE_RATE_IN_WATER_OVERRIDE(ped, p1)
  native.invoke(
    Type.Void, 4394, false,
    arg(Type.Ped, ped),
    arg(Type.Float, p1)
  )
end

-- BOOL PED_HAS_SEXINESS_FLAG_SET(Ped ped, int sexinessFlag) // 0x46B05BCAE43856B0
--[[
Checks if the specified sexiness flag is set

enum eSexinessFlags
{
 SF_JEER_AT_HOT_PED = 0,
 SF_HURRIEDFEMALES_SEXY = 1,
 SF_HOT_PERSON = 2,
 };
--]]
function PED.PED_HAS_SEXINESS_FLAG_SET(ped, sexinessFlag)
  return native.invoke(
    Type.Bool, 4395, false,
    arg(Type.Ped, ped),
    arg(Type.Int, sexinessFlag)
  )
end

-- int GET_PED_NEARBY_VEHICLES(Ped ped, Any* sizeAndVehs) // 0xCFF869CBFA210D82
--[[
Returns size of array, passed into the second variable.

See below for usage information.

This function actually requires a struct, where the first value is the maximum number of elements to return.  Here is a sample of how I was able to get it to work correctly, without yet knowing the struct format.

//Setup the array
 const int numElements = 10;
   const int arrSize = numElements * 2 + 2;
  Any veh[arrSize];
 //0 index is the size of the array
    veh[0] = numElements;

   int count = PED::GET_PED_NEARBY_VEHICLES(PLAYER::PLAYER_PED_ID(), veh);

 if (veh != NULL)
  {
     //Simple loop to go through results
       for (int i = 0; i < count; i++)
        {
         int offsettedID = i * 2 + 2;
          //Make sure it exists
         if (veh[offsettedID] != NULL && ENTITY::DOES_ENTITY_EXIST(veh[offsettedID]))
          {
             //Do something
            }
     }
 }  
--]]
function PED.GET_PED_NEARBY_VEHICLES(ped, sizeAndVehs)
  return native.invoke(
    Type.Int, 4396, false,
    arg(Type.Ped, ped),
    arg(Type.Any, sizeAndVehs)
  )
end

-- int GET_PED_NEARBY_PEDS(Ped ped, Any* sizeAndPeds, int ignore) // 0x23F8F5FC7E8C4A6B
--[[
sizeAndPeds - is a pointer to an array. The array is filled with peds found nearby the ped supplied to the first argument.
ignore - ped type to ignore

Return value is the number of peds found and added to the array passed.

-----------------------------------

To make this work in most menu bases at least in C++ do it like so,

 Formatted Example: https://pastebin.com/D8an9wwp

-----------------------------------

Example: gtaforums.com/topic/789788-function-args-to-pedget-ped-nearby-peds/?p=1067386687
--]]
function PED.GET_PED_NEARBY_PEDS(ped, sizeAndPeds, ignore)
  return native.invoke(
    Type.Int, 4397, false,
    arg(Type.Ped, ped),
    arg(Type.Any, sizeAndPeds),
    arg(Type.Int, ignore)
  )
end

-- BOOL HAVE_ALL_STREAMING_REQUESTS_COMPLETED(Ped ped) // 0x7350823473013C02
function PED.HAVE_ALL_STREAMING_REQUESTS_COMPLETED(ped)
  return native.invoke(
    Type.Bool, 4398, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_USING_ACTION_MODE(Ped ped) // 0x00E73468D085F745
function PED.IS_PED_USING_ACTION_MODE(ped)
  return native.invoke(
    Type.Bool, 4399, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_USING_ACTION_MODE(Ped ped, BOOL p1, int p2, const char* action) // 0xD75ACCF5E0FB5367
--[[
p2 is usually -1 in the scripts. action is either 0 or "DEFAULT_ACTION".
--]]
function PED.SET_PED_USING_ACTION_MODE(ped, p1, p2, action)
  native.invoke(
    Type.Void, 4400, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1),
    arg(Type.Int, p2),
    arg(Type.String, action)
  )
end

-- void SET_MOVEMENT_MODE_OVERRIDE(Ped ped, const char* name) // 0x781DE8FA214E87D2
--[[
name: "MP_FEMALE_ACTION" found multiple times in the b617d scripts.
--]]
function PED.SET_MOVEMENT_MODE_OVERRIDE(ped, name)
  native.invoke(
    Type.Void, 4401, false,
    arg(Type.Ped, ped),
    arg(Type.String, name)
  )
end

-- void SET_PED_CAPSULE(Ped ped, float value) // 0x364DF566EC833DE2
--[[
Overrides the ped's collision capsule radius for the current tick.
Must be called every tick to be effective.

Setting this to 0.001 will allow warping through some objects.
--]]
function PED.SET_PED_CAPSULE(ped, value)
  native.invoke(
    Type.Void, 4402, false,
    arg(Type.Ped, ped),
    arg(Type.Float, value)
  )
end

-- int REGISTER_PEDHEADSHOT(Ped ped) // 0x4462658788425076
--[[
gtaforums.com/topic/885580-ped-headshotmugshot-txd/
--]]
function PED.REGISTER_PEDHEADSHOT(ped)
  return native.invoke(
    Type.Int, 4403, false,
    arg(Type.Ped, ped)
  )
end

-- int REGISTER_PEDHEADSHOT_HIRES(Ped ped) // 0xBA8805A1108A2515
function PED.REGISTER_PEDHEADSHOT_HIRES(ped)
  return native.invoke(
    Type.Int, 4404, false,
    arg(Type.Ped, ped)
  )
end

-- int REGISTER_PEDHEADSHOT_TRANSPARENT(Ped ped) // 0x953563CE563143AF
--[[
Similar to REGISTER_PEDHEADSHOT but creates a transparent background instead of black. Example: https://i.imgur.com/iHz8ztn.png
--]]
function PED.REGISTER_PEDHEADSHOT_TRANSPARENT(ped)
  return native.invoke(
    Type.Int, 4405, false,
    arg(Type.Ped, ped)
  )
end

-- void UNREGISTER_PEDHEADSHOT(int id) // 0x96B1361D9B24C2FF
--[[
gtaforums.com/topic/885580-ped-headshotmugshot-txd/
--]]
function PED.UNREGISTER_PEDHEADSHOT(id)
  native.invoke(
    Type.Void, 4406, false,
    arg(Type.Int, id)
  )
end

-- BOOL IS_PEDHEADSHOT_VALID(int id) // 0xA0A9668F158129A2
--[[
gtaforums.com/topic/885580-ped-headshotmugshot-txd/
--]]
function PED.IS_PEDHEADSHOT_VALID(id)
  return native.invoke(
    Type.Bool, 4407, false,
    arg(Type.Int, id)
  )
end

-- BOOL IS_PEDHEADSHOT_READY(int id) // 0x7085228842B13A67
--[[
gtaforums.com/topic/885580-ped-headshotmugshot-txd/
--]]
function PED.IS_PEDHEADSHOT_READY(id)
  return native.invoke(
    Type.Bool, 4408, false,
    arg(Type.Int, id)
  )
end

-- const char* GET_PEDHEADSHOT_TXD_STRING(int id) // 0xDB4EACD4AD0A5D6B
--[[
gtaforums.com/topic/885580-ped-headshotmugshot-txd/
--]]
function PED.GET_PEDHEADSHOT_TXD_STRING(id)
  return native.invoke(
    Type.Const char, 4409, false,
    arg(Type.Int, id)
  )
end

-- BOOL REQUEST_PEDHEADSHOT_IMG_UPLOAD(int id) // 0xF0DAEF2F545BEE25
function PED.REQUEST_PEDHEADSHOT_IMG_UPLOAD(id)
  return native.invoke(
    Type.Bool, 4410, false,
    arg(Type.Int, id)
  )
end

-- void RELEASE_PEDHEADSHOT_IMG_UPLOAD(int id) // 0x5D517B27CF6ECD04
function PED.RELEASE_PEDHEADSHOT_IMG_UPLOAD(id)
  native.invoke(
    Type.Void, 4411, false,
    arg(Type.Int, id)
  )
end

-- BOOL IS_PEDHEADSHOT_IMG_UPLOAD_AVAILABLE() // 0xEBB376779A760AA8
function PED.IS_PEDHEADSHOT_IMG_UPLOAD_AVAILABLE()
  return native.invoke(
    Type.Bool, 4412, false
  )
end

-- BOOL HAS_PEDHEADSHOT_IMG_UPLOAD_FAILED() // 0x876928DDDFCCC9CD
function PED.HAS_PEDHEADSHOT_IMG_UPLOAD_FAILED()
  return native.invoke(
    Type.Bool, 4413, false
  )
end

-- BOOL HAS_PEDHEADSHOT_IMG_UPLOAD_SUCCEEDED() // 0xE8A169E666CBC541
function PED.HAS_PEDHEADSHOT_IMG_UPLOAD_SUCCEEDED()
  return native.invoke(
    Type.Bool, 4414, false
  )
end

-- void SET_PED_HEATSCALE_OVERRIDE(Ped ped, float heatScale) // 0xC1F6EBF9A3D55538
function PED.SET_PED_HEATSCALE_OVERRIDE(ped, heatScale)
  native.invoke(
    Type.Void, 4415, false,
    arg(Type.Ped, ped),
    arg(Type.Float, heatScale)
  )
end

-- void DISABLE_PED_HEATSCALE_OVERRIDE(Ped ped) // 0x600048C60D5C2C51
function PED.DISABLE_PED_HEATSCALE_OVERRIDE(ped)
  native.invoke(
    Type.Void, 4416, false,
    arg(Type.Ped, ped)
  )
end

-- void SPAWNPOINTS_START_SEARCH(float p0, float p1, float p2, float p3, float p4, int interiorFlags, float scale, int duration) // 0x2DF9038C90AD5264
function PED.SPAWNPOINTS_START_SEARCH(p0, p1, p2, p3, p4, interiorFlags, scale, duration)
  native.invoke(
    Type.Void, 4417, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Int, interiorFlags),
    arg(Type.Float, scale),
    arg(Type.Int, duration)
  )
end

-- void SPAWNPOINTS_START_SEARCH_IN_ANGLED_AREA(float x1, float y1, float z1, float x2, float y2, float z2, float width, int interiorFlags, float scale, int duration) // 0xB2AFF10216DEFA2F
function PED.SPAWNPOINTS_START_SEARCH_IN_ANGLED_AREA(x1, y1, z1, x2, y2, z2, width, interiorFlags, scale, duration)
  native.invoke(
    Type.Void, 4418, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Float, width),
    arg(Type.Int, interiorFlags),
    arg(Type.Float, scale),
    arg(Type.Int, duration)
  )
end

-- void SPAWNPOINTS_CANCEL_SEARCH() // 0xFEE4A5459472A9F8
function PED.SPAWNPOINTS_CANCEL_SEARCH()
  native.invoke(
    Type.Void, 4419, false
  )
end

-- BOOL SPAWNPOINTS_IS_SEARCH_ACTIVE() // 0x3C67506996001F5E
function PED.SPAWNPOINTS_IS_SEARCH_ACTIVE()
  return native.invoke(
    Type.Bool, 4420, false
  )
end

-- BOOL SPAWNPOINTS_IS_SEARCH_COMPLETE() // 0xA586FBEB32A53DBB
function PED.SPAWNPOINTS_IS_SEARCH_COMPLETE()
  return native.invoke(
    Type.Bool, 4421, false
  )
end

-- BOOL SPAWNPOINTS_IS_SEARCH_FAILED() // 0xF445DE8DA80A1792
function PED.SPAWNPOINTS_IS_SEARCH_FAILED()
  return native.invoke(
    Type.Bool, 4422, false
  )
end

-- int SPAWNPOINTS_GET_NUM_SEARCH_RESULTS() // 0xA635C11B8C44AFC2
function PED.SPAWNPOINTS_GET_NUM_SEARCH_RESULTS()
  return native.invoke(
    Type.Int, 4423, false
  )
end

-- void SPAWNPOINTS_GET_SEARCH_RESULT(int randomInt, float* x, float* y, float* z) // 0x280C7E3AC7F56E90
function PED.SPAWNPOINTS_GET_SEARCH_RESULT(randomInt, x, y, z)
  native.invoke(
    Type.Void, 4424, false,
    arg(Type.Int, randomInt),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void SPAWNPOINTS_GET_SEARCH_RESULT_FLAGS(int p0, int* p1) // 0xB782F8238512BAD5
function PED.SPAWNPOINTS_GET_SEARCH_RESULT_FLAGS(p0, p1)
  native.invoke(
    Type.Void, 4425, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1)
  )
end

-- void SET_IK_TARGET(Ped ped, int ikIndex, Entity entityLookAt, int boneLookAt, float offsetX, float offsetY, float offsetZ, Any p7, int blendInDuration, int blendOutDuration) // 0xC32779C16FCEECD9
function PED.SET_IK_TARGET(ped, ikIndex, entityLookAt, boneLookAt, offsetX, offsetY, offsetZ, p7, blendInDuration, blendOutDuration)
  native.invoke(
    Type.Void, 4426, false,
    arg(Type.Ped, ped),
    arg(Type.Int, ikIndex),
    arg(Type.Entity, entityLookAt),
    arg(Type.Int, boneLookAt),
    arg(Type.Float, offsetX),
    arg(Type.Float, offsetY),
    arg(Type.Float, offsetZ),
    arg(Type.Any, p7),
    arg(Type.Int, blendInDuration),
    arg(Type.Int, blendOutDuration)
  )
end

-- void FORCE_INSTANT_LEG_IK_SETUP(Ped ped) // 0xED3C76ADFA6D07C4
function PED.FORCE_INSTANT_LEG_IK_SETUP(ped)
  native.invoke(
    Type.Void, 4427, false,
    arg(Type.Ped, ped)
  )
end

-- void REQUEST_ACTION_MODE_ASSET(const char* asset) // 0x290E2780BB7AA598
function PED.REQUEST_ACTION_MODE_ASSET(asset)
  native.invoke(
    Type.Void, 4428, false,
    arg(Type.String, asset)
  )
end

-- BOOL HAS_ACTION_MODE_ASSET_LOADED(const char* asset) // 0xE4B5F4BF2CB24E65
function PED.HAS_ACTION_MODE_ASSET_LOADED(asset)
  return native.invoke(
    Type.Bool, 4429, false,
    arg(Type.String, asset)
  )
end

-- void REMOVE_ACTION_MODE_ASSET(const char* asset) // 0x13E940F88470FA51
function PED.REMOVE_ACTION_MODE_ASSET(asset)
  native.invoke(
    Type.Void, 4430, false,
    arg(Type.String, asset)
  )
end

-- void REQUEST_STEALTH_MODE_ASSET(const char* asset) // 0x2A0A62FCDEE16D4F
function PED.REQUEST_STEALTH_MODE_ASSET(asset)
  native.invoke(
    Type.Void, 4431, false,
    arg(Type.String, asset)
  )
end

-- BOOL HAS_STEALTH_MODE_ASSET_LOADED(const char* asset) // 0xE977FC5B08AF3441
function PED.HAS_STEALTH_MODE_ASSET_LOADED(asset)
  return native.invoke(
    Type.Bool, 4432, false,
    arg(Type.String, asset)
  )
end

-- void REMOVE_STEALTH_MODE_ASSET(const char* asset) // 0x9219857D21F0E842
function PED.REMOVE_STEALTH_MODE_ASSET(asset)
  native.invoke(
    Type.Void, 4433, false,
    arg(Type.String, asset)
  )
end

-- void SET_PED_LOD_MULTIPLIER(Ped ped, float multiplier) // 0xDC2C5C242AAC342B
function PED.SET_PED_LOD_MULTIPLIER(ped, multiplier)
  native.invoke(
    Type.Void, 4434, false,
    arg(Type.Ped, ped),
    arg(Type.Float, multiplier)
  )
end

-- void SET_PED_CAN_LOSE_PROPS_ON_DAMAGE(Ped ped, BOOL toggle, int p2) // 0xE861D0B05C7662B8
function PED.SET_PED_CAN_LOSE_PROPS_ON_DAMAGE(ped, toggle, p2)
  native.invoke(
    Type.Void, 4435, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle),
    arg(Type.Int, p2)
  )
end

-- void SET_FORCE_FOOTSTEP_UPDATE(Ped ped, BOOL toggle) // 0x129466ED55140F8D
function PED.SET_FORCE_FOOTSTEP_UPDATE(ped, toggle)
  native.invoke(
    Type.Void, 4436, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_FORCE_STEP_TYPE(Ped ped, BOOL p1, int type, int p3) // 0xCB968B53FC7F916D
function PED.SET_FORCE_STEP_TYPE(ped, p1, type, p3)
  native.invoke(
    Type.Void, 4437, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1),
    arg(Type.Int, type),
    arg(Type.Int, p3)
  )
end

-- BOOL IS_ANY_HOSTILE_PED_NEAR_POINT(Ped ped, float x, float y, float z, float radius) // 0x68772DB2B2526F9F
function PED.IS_ANY_HOSTILE_PED_NEAR_POINT(ped, x, y, z, radius)
  return native.invoke(
    Type.Bool, 4438, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius)
  )
end

-- void SET_PED_CAN_PLAY_IN_CAR_IDLES(Ped ped, BOOL toggle) // 0x820E9892A77E97CD
--[[
Toggles config flag CPED_CONFIG_FLAG_CanPlayInCarIdles.
--]]
function PED.SET_PED_CAN_PLAY_IN_CAR_IDLES(ped, toggle)
  native.invoke(
    Type.Void, 4439, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_TARGET_PED_IN_PERCEPTION_AREA(Ped ped, Ped targetPed, float p2, float p3, float p4, float p5) // 0x06087579E7AA85A9
function PED.IS_TARGET_PED_IN_PERCEPTION_AREA(ped, targetPed, p2, p3, p4, p5)
  return native.invoke(
    Type.Bool, 4440, false,
    arg(Type.Ped, ped),
    arg(Type.Ped, targetPed),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Float, p5)
  )
end

-- void SET_POP_CONTROL_SPHERE_THIS_FRAME(float x, float y, float z, float min, float max) // 0xD8C3BE3EE94CAF2D
--[[
Min and max are usually 100.0 and 200.0
--]]
function PED.SET_POP_CONTROL_SPHERE_THIS_FRAME(x, y, z, min, max)
  native.invoke(
    Type.Void, 4441, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, min),
    arg(Type.Float, max)
  )
end

-- void FORCE_ZERO_MASS_IN_COLLISIONS(Ped ped) // 0xD33DAA36272177C4
function PED.FORCE_ZERO_MASS_IN_COLLISIONS(ped)
  native.invoke(
    Type.Void, 4442, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_DISABLE_HIGH_FALL_DEATH(Ped ped, BOOL toggle) // 0x711794453CFD692B
function PED.SET_DISABLE_HIGH_FALL_DEATH(ped, toggle)
  native.invoke(
    Type.Void, 4443, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_PHONE_PALETTE_IDX(Any p0, Any p1) // 0x83A169EABCDB10A2
function PED.SET_PED_PHONE_PALETTE_IDX(p0, p1)
  native.invoke(
    Type.Void, 4444, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void SET_PED_STEER_BIAS(Ped ped, float value) // 0x288DF530C92DAD6F
function PED.SET_PED_STEER_BIAS(ped, value)
  native.invoke(
    Type.Void, 4445, false,
    arg(Type.Ped, ped),
    arg(Type.Float, value)
  )
end

-- BOOL IS_PED_SWITCHING_WEAPON(Ped Ped) // 0x3795688A307E1EB6
function PED.IS_PED_SWITCHING_WEAPON(Ped)
  return native.invoke(
    Type.Bool, 4446, false,
    arg(Type.Ped, Ped)
  )
end

-- void SET_PED_TREATED_AS_FRIENDLY(Any p0, Any p1, Any p2) // 0x0F62619393661D6E
function PED.SET_PED_TREATED_AS_FRIENDLY(p0, p1, p2)
  native.invoke(
    Type.Void, 4447, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void SET_DISABLE_PED_MAP_COLLISION(Ped ped) // 0xDFE68C4B787E1BFB
function PED.SET_DISABLE_PED_MAP_COLLISION(ped)
  native.invoke(
    Type.Void, 4448, false,
    arg(Type.Ped, ped)
  )
end

-- void ENABLE_MP_LIGHT(Ped ped, BOOL toggle) // 0xEE2476B9EE4A094F
function PED.ENABLE_MP_LIGHT(ped, toggle)
  native.invoke(
    Type.Void, 4449, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- BOOL GET_MP_LIGHT_ENABLED(Ped ped) // 0x88274C11CF0D866D
function PED.GET_MP_LIGHT_ENABLED(ped)
  return native.invoke(
    Type.Bool, 4450, false,
    arg(Type.Ped, ped)
  )
end

-- void CLEAR_COVER_POINT_FOR_PED(Ped ped) // 0x637822DC2AFEEBF8
function PED.CLEAR_COVER_POINT_FOR_PED(ped)
  native.invoke(
    Type.Void, 4451, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_ALLOW_STUNT_JUMP_CAMERA(Ped ped, BOOL toggle) // 0xFAB944D4D481ACCB
function PED.SET_ALLOW_STUNT_JUMP_CAMERA(ped, toggle)
  native.invoke(
    Type.Void, 4452, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end


PHYSICS = {}

-- int ADD_ROPE(float x, float y, float z, float rotX, float rotY, float rotZ, float length, int ropeType, float maxLength, float minLength, float windingSpeed, BOOL p11, BOOL p12, BOOL rigid, float p14, BOOL breakWhenShot, Any* unkPtr) // 0xE832D760399EB220
--[[
Creates a rope at the specific position, that extends in the specified direction when not attached to any entities.
__

Add_Rope(pos.x,pos.y,pos.z,0.0,0.0,0.0,20.0,4,20.0,1.0,0.0,false,false,false,5.0,false,NULL)

When attached, Position<vector> does not matter
When attached, Angle<vector> does not matter

Rope Type:
4 and bellow is a thick rope
5 and up are small metal wires
0 crashes the game

Max_length - Rope is forced to this length, generally best to keep this the same as your rope length.

windingSpeed - Speed the Rope is being winded, using native START_ROPE_WINDING. Set positive for winding and negative for unwinding.

Rigid - If max length is zero, and this is set to false the rope will become rigid (it will force a specific distance, what ever length is, between the objects).

breakable - Whether or not shooting the rope will break it.

unkPtr - unknown ptr, always 0 in orig scripts
__

Lengths can be calculated like so:

float distance = abs(x1 - x2) + abs(y1 - y2) + abs(z1 - z2); // Rope length


NOTES:

Rope does NOT interact with anything you attach it to, in some cases it make interact with the world AFTER it breaks (seems to occur if you set the type to -1).

Rope will sometimes contract and fall to the ground like you'd expect it to, but since it doesn't interact with the world the effect is just jaring.
--]]
function PHYSICS.ADD_ROPE(x, y, z, rotX, rotY, rotZ, length, ropeType, maxLength, minLength, windingSpeed, p11, p12, rigid, p14, breakWhenShot, unkPtr)
  return native.invoke(
    Type.Int, 4453, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, rotX),
    arg(Type.Float, rotY),
    arg(Type.Float, rotZ),
    arg(Type.Float, length),
    arg(Type.Int, ropeType),
    arg(Type.Float, maxLength),
    arg(Type.Float, minLength),
    arg(Type.Float, windingSpeed),
    arg(Type.Bool, p11),
    arg(Type.Bool, p12),
    arg(Type.Bool, rigid),
    arg(Type.Float, p14),
    arg(Type.Bool, breakWhenShot),
    arg(Type.Any, unkPtr)
  )
end

-- void DELETE_ROPE(int* ropeId) // 0x52B4829281364649
function PHYSICS.DELETE_ROPE(ropeId)
  native.invoke(
    Type.Void, 4454, false,
    arg(Type.Int, ropeId)
  )
end

-- void DELETE_CHILD_ROPE(int ropeId) // 0xAA5D6B1888E4DB20
function PHYSICS.DELETE_CHILD_ROPE(ropeId)
  native.invoke(
    Type.Void, 4455, false,
    arg(Type.Int, ropeId)
  )
end

-- BOOL DOES_ROPE_EXIST(int* ropeId) // 0xFD5448BE3111ED96
function PHYSICS.DOES_ROPE_EXIST(ropeId)
  return native.invoke(
    Type.Bool, 4456, false,
    arg(Type.Int, ropeId)
  )
end

-- void ROPE_DRAW_ENABLED(int* ropeId, BOOL p1) // 0xA1AE736541B0FCA3
function PHYSICS.ROPE_DRAW_ENABLED(ropeId, p1)
  native.invoke(
    Type.Void, 4457, false,
    arg(Type.Int, ropeId),
    arg(Type.Bool, p1)
  )
end

-- void ROPE_DRAW_SHADOW_ENABLED(int* ropeId, BOOL toggle) // 0xF159A63806BB5BA8
function PHYSICS.ROPE_DRAW_SHADOW_ENABLED(ropeId, toggle)
  native.invoke(
    Type.Void, 4458, false,
    arg(Type.Int, ropeId),
    arg(Type.Bool, toggle)
  )
end

-- void LOAD_ROPE_DATA(int ropeId, const char* rope_preset) // 0xCBB203C04D1ABD27
--[[
Rope presets can be found in the gamefiles. One example is "ropeFamily3", it is NOT a hash but rather a string.
--]]
function PHYSICS.LOAD_ROPE_DATA(ropeId, rope_preset)
  native.invoke(
    Type.Void, 4459, false,
    arg(Type.Int, ropeId),
    arg(Type.String, rope_preset)
  )
end

-- void PIN_ROPE_VERTEX(int ropeId, int vertex, float x, float y, float z) // 0x2B320CF14146B69A
function PHYSICS.PIN_ROPE_VERTEX(ropeId, vertex, x, y, z)
  native.invoke(
    Type.Void, 4460, false,
    arg(Type.Int, ropeId),
    arg(Type.Int, vertex),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void UNPIN_ROPE_VERTEX(int ropeId, int vertex) // 0x4B5AE2EEE4A8F180
function PHYSICS.UNPIN_ROPE_VERTEX(ropeId, vertex)
  native.invoke(
    Type.Void, 4461, false,
    arg(Type.Int, ropeId),
    arg(Type.Int, vertex)
  )
end

-- int GET_ROPE_VERTEX_COUNT(int ropeId) // 0x3655F544CD30F0B5
function PHYSICS.GET_ROPE_VERTEX_COUNT(ropeId)
  return native.invoke(
    Type.Int, 4462, false,
    arg(Type.Int, ropeId)
  )
end

-- void ATTACH_ENTITIES_TO_ROPE(int ropeId, Entity ent1, Entity ent2, float ent1_x, float ent1_y, float ent1_z, float ent2_x, float ent2_y, float ent2_z, float length, BOOL p10, BOOL p11, Any* p12, Any* p13) // 0x3D95EC8B6D940AC3
--[[
Attaches entity 1 to entity 2.
--]]
function PHYSICS.ATTACH_ENTITIES_TO_ROPE(ropeId, ent1, ent2, ent1_x, ent1_y, ent1_z, ent2_x, ent2_y, ent2_z, length, p10, p11, p12, p13)
  native.invoke(
    Type.Void, 4463, false,
    arg(Type.Int, ropeId),
    arg(Type.Entity, ent1),
    arg(Type.Entity, ent2),
    arg(Type.Float, ent1_x),
    arg(Type.Float, ent1_y),
    arg(Type.Float, ent1_z),
    arg(Type.Float, ent2_x),
    arg(Type.Float, ent2_y),
    arg(Type.Float, ent2_z),
    arg(Type.Float, length),
    arg(Type.Bool, p10),
    arg(Type.Bool, p11),
    arg(Type.Any, p12),
    arg(Type.Any, p13)
  )
end

-- void ATTACH_ROPE_TO_ENTITY(int ropeId, Entity entity, float x, float y, float z, BOOL p5) // 0x4B490A6832559A65
--[[
The position supplied can be anywhere, and the entity should anchor relative to that point from it's origin.
--]]
function PHYSICS.ATTACH_ROPE_TO_ENTITY(ropeId, entity, x, y, z, p5)
  native.invoke(
    Type.Void, 4464, false,
    arg(Type.Int, ropeId),
    arg(Type.Entity, entity),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Bool, p5)
  )
end

-- void DETACH_ROPE_FROM_ENTITY(int ropeId, Entity entity) // 0xBCF3026912A8647D
function PHYSICS.DETACH_ROPE_FROM_ENTITY(ropeId, entity)
  native.invoke(
    Type.Void, 4465, false,
    arg(Type.Int, ropeId),
    arg(Type.Entity, entity)
  )
end

-- void ROPE_SET_UPDATE_PINVERTS(int ropeId) // 0xC8D667EE52114ABA
function PHYSICS.ROPE_SET_UPDATE_PINVERTS(ropeId)
  native.invoke(
    Type.Void, 4466, false,
    arg(Type.Int, ropeId)
  )
end

-- void ROPE_SET_UPDATE_ORDER(int ropeId, Any p1) // 0xDC57A637A20006ED
function PHYSICS.ROPE_SET_UPDATE_ORDER(ropeId, p1)
  native.invoke(
    Type.Void, 4467, false,
    arg(Type.Int, ropeId),
    arg(Type.Any, p1)
  )
end

-- void ROPE_SET_SMOOTH_REELIN(int ropeId, BOOL p1) // 0x36CCB9BE67B970FD
function PHYSICS.ROPE_SET_SMOOTH_REELIN(ropeId, p1)
  native.invoke(
    Type.Void, 4468, false,
    arg(Type.Int, ropeId),
    arg(Type.Bool, p1)
  )
end

-- BOOL IS_ROPE_ATTACHED_AT_BOTH_ENDS(int* ropeId) // 0x84DE3B5FB3E666F0
function PHYSICS.IS_ROPE_ATTACHED_AT_BOTH_ENDS(ropeId)
  return native.invoke(
    Type.Bool, 4469, false,
    arg(Type.Int, ropeId)
  )
end

-- Vector3 GET_ROPE_LAST_VERTEX_COORD(int ropeId) // 0x21BB0FBD3E217C2D
function PHYSICS.GET_ROPE_LAST_VERTEX_COORD(ropeId)
  return native.invoke(
    Type.Vector3, 4470, false,
    arg(Type.Int, ropeId)
  )
end

-- Vector3 GET_ROPE_VERTEX_COORD(int ropeId, int vertex) // 0xEA61CA8E80F09E4D
function PHYSICS.GET_ROPE_VERTEX_COORD(ropeId, vertex)
  return native.invoke(
    Type.Vector3, 4471, false,
    arg(Type.Int, ropeId),
    arg(Type.Int, vertex)
  )
end

-- void START_ROPE_WINDING(int ropeId) // 0x1461C72C889E343E
function PHYSICS.START_ROPE_WINDING(ropeId)
  native.invoke(
    Type.Void, 4472, false,
    arg(Type.Int, ropeId)
  )
end

-- void STOP_ROPE_WINDING(int ropeId) // 0xCB2D4AB84A19AA7C
function PHYSICS.STOP_ROPE_WINDING(ropeId)
  native.invoke(
    Type.Void, 4473, false,
    arg(Type.Int, ropeId)
  )
end

-- void START_ROPE_UNWINDING_FRONT(int ropeId) // 0x538D1179EC1AA9A9
function PHYSICS.START_ROPE_UNWINDING_FRONT(ropeId)
  native.invoke(
    Type.Void, 4474, false,
    arg(Type.Int, ropeId)
  )
end

-- void STOP_ROPE_UNWINDING_FRONT(int ropeId) // 0xFFF3A50779EFBBB3
function PHYSICS.STOP_ROPE_UNWINDING_FRONT(ropeId)
  native.invoke(
    Type.Void, 4475, false,
    arg(Type.Int, ropeId)
  )
end

-- void ROPE_CONVERT_TO_SIMPLE(int ropeId) // 0x5389D48EFA2F079A
function PHYSICS.ROPE_CONVERT_TO_SIMPLE(ropeId)
  native.invoke(
    Type.Void, 4476, false,
    arg(Type.Int, ropeId)
  )
end

-- void ROPE_LOAD_TEXTURES() // 0x9B9039DBF2D258C1
--[[
Loads rope textures for all ropes in the current scene.
--]]
function PHYSICS.ROPE_LOAD_TEXTURES()
  native.invoke(
    Type.Void, 4477, false
  )
end

-- BOOL ROPE_ARE_TEXTURES_LOADED() // 0xF2D0E6A75CC05597
function PHYSICS.ROPE_ARE_TEXTURES_LOADED()
  return native.invoke(
    Type.Bool, 4478, false
  )
end

-- void ROPE_UNLOAD_TEXTURES() // 0x6CE36C35C1AC8163
--[[
Unloads rope textures for all ropes in the current scene.
--]]
function PHYSICS.ROPE_UNLOAD_TEXTURES()
  native.invoke(
    Type.Void, 4479, false
  )
end

-- BOOL DOES_SCRIPT_OWN_ROPE(int ropeId) // 0x271C9D3ACA5D6409
function PHYSICS.DOES_SCRIPT_OWN_ROPE(ropeId)
  return native.invoke(
    Type.Bool, 4480, false,
    arg(Type.Int, ropeId)
  )
end

-- void ROPE_ATTACH_VIRTUAL_BOUND_GEOM(int ropeId, int p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, float p11, float p12, float p13) // 0xBC0CE682D4D05650
function PHYSICS.ROPE_ATTACH_VIRTUAL_BOUND_GEOM(ropeId, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13)
  native.invoke(
    Type.Void, 4481, false,
    arg(Type.Int, ropeId),
    arg(Type.Int, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Float, p6),
    arg(Type.Float, p7),
    arg(Type.Float, p8),
    arg(Type.Float, p9),
    arg(Type.Float, p10),
    arg(Type.Float, p11),
    arg(Type.Float, p12),
    arg(Type.Float, p13)
  )
end

-- void ROPE_CHANGE_SCRIPT_OWNER(Any p0, BOOL p1, BOOL p2) // 0xB1B6216CA2E7B55E
function PHYSICS.ROPE_CHANGE_SCRIPT_OWNER(p0, p1, p2)
  native.invoke(
    Type.Void, 4482, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void ROPE_SET_REFFRAMEVELOCITY_COLLIDERORDER(int ropeId, int p1) // 0xB743F735C03D7810
function PHYSICS.ROPE_SET_REFFRAMEVELOCITY_COLLIDERORDER(ropeId, p1)
  native.invoke(
    Type.Void, 4483, false,
    arg(Type.Int, ropeId),
    arg(Type.Int, p1)
  )
end

-- float ROPE_GET_DISTANCE_BETWEEN_ENDS(int ropeId) // 0x73040398DFF9A4A6
function PHYSICS.ROPE_GET_DISTANCE_BETWEEN_ENDS(ropeId)
  return native.invoke(
    Type.Float, 4484, false,
    arg(Type.Int, ropeId)
  )
end

-- void ROPE_FORCE_LENGTH(int ropeId, float length) // 0xD009F759A723DB1B
--[[
Forces a rope to a certain length.
--]]
function PHYSICS.ROPE_FORCE_LENGTH(ropeId, length)
  native.invoke(
    Type.Void, 4485, false,
    arg(Type.Int, ropeId),
    arg(Type.Float, length)
  )
end

-- void ROPE_RESET_LENGTH(int ropeId, float length) // 0xC16DE94D9BEA14A0
--[[
Reset a rope to a certain length.
--]]
function PHYSICS.ROPE_RESET_LENGTH(ropeId, length)
  native.invoke(
    Type.Void, 4486, false,
    arg(Type.Int, ropeId),
    arg(Type.Float, length)
  )
end

-- void APPLY_IMPULSE_TO_CLOTH(float posX, float posY, float posZ, float vecX, float vecY, float vecZ, float impulse) // 0xE37F721824571784
function PHYSICS.APPLY_IMPULSE_TO_CLOTH(posX, posY, posZ, vecX, vecY, vecZ, impulse)
  native.invoke(
    Type.Void, 4487, false,
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ),
    arg(Type.Float, vecX),
    arg(Type.Float, vecY),
    arg(Type.Float, vecZ),
    arg(Type.Float, impulse)
  )
end

-- void SET_DAMPING(Entity entity, int vertex, float value) // 0xEEA3B200A6FEB65B
function PHYSICS.SET_DAMPING(entity, vertex, value)
  native.invoke(
    Type.Void, 4488, false,
    arg(Type.Entity, entity),
    arg(Type.Int, vertex),
    arg(Type.Float, value)
  )
end

-- void ACTIVATE_PHYSICS(Entity entity) // 0x710311ADF0E20730
function PHYSICS.ACTIVATE_PHYSICS(entity)
  native.invoke(
    Type.Void, 4489, false,
    arg(Type.Entity, entity)
  )
end

-- void SET_CGOFFSET(Entity entity, float x, float y, float z) // 0xD8FA3908D7B86904
function PHYSICS.SET_CGOFFSET(entity, x, y, z)
  native.invoke(
    Type.Void, 4490, false,
    arg(Type.Entity, entity),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- Vector3 GET_CGOFFSET(Entity entity) // 0x8214A4B5A7A33612
function PHYSICS.GET_CGOFFSET(entity)
  return native.invoke(
    Type.Vector3, 4491, false,
    arg(Type.Entity, entity)
  )
end

-- void SET_CG_AT_BOUNDCENTER(Entity entity) // 0xBE520D9761FF811F
function PHYSICS.SET_CG_AT_BOUNDCENTER(entity)
  native.invoke(
    Type.Void, 4492, false,
    arg(Type.Entity, entity)
  )
end

-- void BREAK_ENTITY_GLASS(Entity entity, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, Any p9, BOOL p10) // 0x2E648D16F6E308F3
function PHYSICS.BREAK_ENTITY_GLASS(entity, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10)
  native.invoke(
    Type.Void, 4493, false,
    arg(Type.Entity, entity),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Float, p6),
    arg(Type.Float, p7),
    arg(Type.Float, p8),
    arg(Type.Any, p9),
    arg(Type.Bool, p10)
  )
end

-- BOOL GET_IS_ENTITY_A_FRAG(Object object) // 0x0C112765300C7E1E
function PHYSICS.GET_IS_ENTITY_A_FRAG(object)
  return native.invoke(
    Type.Bool, 4494, false,
    arg(Type.Object, object)
  )
end

-- void SET_DISABLE_BREAKING(Object object, BOOL toggle) // 0x5CEC1A84620E7D5B
function PHYSICS.SET_DISABLE_BREAKING(object, toggle)
  native.invoke(
    Type.Void, 4495, false,
    arg(Type.Object, object),
    arg(Type.Bool, toggle)
  )
end

-- void RESET_DISABLE_BREAKING(Object object) // 0xCC6E963682533882
function PHYSICS.RESET_DISABLE_BREAKING(object)
  native.invoke(
    Type.Void, 4496, false,
    arg(Type.Object, object)
  )
end

-- void SET_DISABLE_FRAG_DAMAGE(Object object, BOOL toggle) // 0x01BA3AED21C16CFB
function PHYSICS.SET_DISABLE_FRAG_DAMAGE(object, toggle)
  native.invoke(
    Type.Void, 4497, false,
    arg(Type.Object, object),
    arg(Type.Bool, toggle)
  )
end

-- void SET_USE_KINEMATIC_PHYSICS(Entity entity, BOOL toggle) // 0x15F944730C832252
--[[
PED_RAGDOLL_BUMP Proof?
--]]
function PHYSICS.SET_USE_KINEMATIC_PHYSICS(entity, toggle)
  native.invoke(
    Type.Void, 4498, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, toggle)
  )
end

-- void SET_IN_STUNT_MODE(BOOL p0) // 0x9EBD751E5787BAF2
function PHYSICS.SET_IN_STUNT_MODE(p0)
  native.invoke(
    Type.Void, 4499, false,
    arg(Type.Bool, p0)
  )
end

-- void SET_IN_ARENA_MODE(BOOL toggle) // 0xAA6A6098851C396F
--[[
Related to the lower-end of a vehicles fTractionCurve, e.g., from standing starts and acceleration from low/zero speeds.
--]]
function PHYSICS.SET_IN_ARENA_MODE(toggle)
  native.invoke(
    Type.Void, 4500, false,
    arg(Type.Bool, toggle)
  )
end


PLAYER = {}

-- Ped GET_PLAYER_PED(Player player) // 0x43A66C31C68491C0
--[[
Gets the ped for a specified player index.
--]]
function PLAYER.GET_PLAYER_PED(player)
  return native.invoke(
    Type.Ped, 4501, false,
    arg(Type.Player, player)
  )
end

-- Ped GET_PLAYER_PED_SCRIPT_INDEX(Player player) // 0x50FAC3A3E030A6E1
--[[
Does the same like PLAYER::GET_PLAYER_PED
--]]
function PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(player)
  return native.invoke(
    Type.Ped, 4502, false,
    arg(Type.Player, player)
  )
end

-- void SET_PLAYER_MODEL(Player player, Hash model) // 0x00A1CADD00108836
--[[
Set the model for a specific Player. Be aware that this will destroy the current Ped for the Player and create a new one, any reference to the old ped should be reset
Make sure to request the model first and wait until it has loaded.
--]]
function PLAYER.SET_PLAYER_MODEL(player, model)
  native.invoke(
    Type.Void, 4503, false,
    arg(Type.Player, player),
    arg(Type.Hash, model)
  )
end

-- void CHANGE_PLAYER_PED(Player player, Ped ped, BOOL p2, BOOL resetDamage) // 0x048189FAC643DEEE
function PLAYER.CHANGE_PLAYER_PED(player, ped, p2, resetDamage)
  native.invoke(
    Type.Void, 4504, false,
    arg(Type.Player, player),
    arg(Type.Ped, ped),
    arg(Type.Bool, p2),
    arg(Type.Bool, resetDamage)
  )
end

-- void GET_PLAYER_RGB_COLOUR(Player player, int* r, int* g, int* b) // 0xE902EF951DCE178F
function PLAYER.GET_PLAYER_RGB_COLOUR(player, r, g, b)
  native.invoke(
    Type.Void, 4505, false,
    arg(Type.Player, player),
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b)
  )
end

-- int GET_NUMBER_OF_PLAYERS() // 0x407C7F91DDB46C16
--[[
Gets the number of players in the current session.
If not multiplayer, always returns 1.
--]]
function PLAYER.GET_NUMBER_OF_PLAYERS()
  return native.invoke(
    Type.Int, 4506, false
  )
end

-- int GET_PLAYER_TEAM(Player player) // 0x37039302F4E0A008
--[[
Gets the player's team.
Does nothing in singleplayer.
--]]
function PLAYER.GET_PLAYER_TEAM(player)
  return native.invoke(
    Type.Int, 4507, false,
    arg(Type.Player, player)
  )
end

-- void SET_PLAYER_TEAM(Player player, int team) // 0x0299FA38396A4940
--[[
Set player team on deathmatch and last team standing..
--]]
function PLAYER.SET_PLAYER_TEAM(player, team)
  native.invoke(
    Type.Void, 4508, false,
    arg(Type.Player, player),
    arg(Type.Int, team)
  )
end

-- int GET_NUMBER_OF_PLAYERS_IN_TEAM(int team) // 0x1FC200409F10E6F1
function PLAYER.GET_NUMBER_OF_PLAYERS_IN_TEAM(team)
  return native.invoke(
    Type.Int, 4509, false,
    arg(Type.Int, team)
  )
end

-- const char* GET_PLAYER_NAME(Player player) // 0x6D0DE6A7B5DA71F8
function PLAYER.GET_PLAYER_NAME(player)
  return native.invoke(
    Type.Const char, 4510, false,
    arg(Type.Player, player)
  )
end

-- float GET_WANTED_LEVEL_RADIUS(Player player) // 0x085DEB493BE80812
--[[
Remnant from GTA IV. Does nothing in GTA V.
--]]
function PLAYER.GET_WANTED_LEVEL_RADIUS(player)
  return native.invoke(
    Type.Float, 4511, false,
    arg(Type.Player, player)
  )
end

-- Vector3 GET_PLAYER_WANTED_CENTRE_POSITION(Player player) // 0x0C92BA89F1AF26F8
function PLAYER.GET_PLAYER_WANTED_CENTRE_POSITION(player)
  return native.invoke(
    Type.Vector3, 4512, false,
    arg(Type.Player, player)
  )
end

-- void SET_PLAYER_WANTED_CENTRE_POSITION(Player player, Vector3* position, BOOL p2, BOOL p3) // 0x520E541A97A13354
--[[
# Predominant call signatures
PLAYER::SET_PLAYER_WANTED_CENTRE_POSITION(PLAYER::PLAYER_ID(), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1));

# Parameter value ranges
P0: PLAYER::PLAYER_ID()
P1: ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1)
P2: Not set by any call
--]]
function PLAYER.SET_PLAYER_WANTED_CENTRE_POSITION(player, position, p2, p3)
  native.invoke(
    Type.Void, 4513, true,
    arg(Type.Player, player),
    arg(Type.Vector3, position),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3)
  )
end

-- int GET_WANTED_LEVEL_THRESHOLD(int wantedLevel) // 0xFDD179EAF45B556C
--[[
Drft
--]]
function PLAYER.GET_WANTED_LEVEL_THRESHOLD(wantedLevel)
  return native.invoke(
    Type.Int, 4514, false,
    arg(Type.Int, wantedLevel)
  )
end

-- void SET_PLAYER_WANTED_LEVEL(Player player, int wantedLevel, BOOL disableNoMission) // 0x39FF19C64EF7DA5B
--[[
Call SET_PLAYER_WANTED_LEVEL_NOW for immediate effect

wantedLevel is an integer value representing 0 to 5 stars even though the game supports the 6th wanted level but no police will appear since no definitions are present for it in the game files

disableNoMission-  Disables When Off Mission- appears to always be false

--]]
function PLAYER.SET_PLAYER_WANTED_LEVEL(player, wantedLevel, disableNoMission)
  native.invoke(
    Type.Void, 4515, false,
    arg(Type.Player, player),
    arg(Type.Int, wantedLevel),
    arg(Type.Bool, disableNoMission)
  )
end

-- void SET_PLAYER_WANTED_LEVEL_NO_DROP(Player player, int wantedLevel, BOOL p2) // 0x340E61DE7F471565
--[[
p2 is always false in R* scripts
--]]
function PLAYER.SET_PLAYER_WANTED_LEVEL_NO_DROP(player, wantedLevel, p2)
  native.invoke(
    Type.Void, 4516, false,
    arg(Type.Player, player),
    arg(Type.Int, wantedLevel),
    arg(Type.Bool, p2)
  )
end

-- void SET_PLAYER_WANTED_LEVEL_NOW(Player player, BOOL p1) // 0xE0A7D1E497FFCD6F
--[[
Forces any pending wanted level to be applied to the specified player immediately.

Call SET_PLAYER_WANTED_LEVEL with the desired wanted level, followed by SET_PLAYER_WANTED_LEVEL_NOW.

Second parameter is unknown (always false).
--]]
function PLAYER.SET_PLAYER_WANTED_LEVEL_NOW(player, p1)
  native.invoke(
    Type.Void, 4517, false,
    arg(Type.Player, player),
    arg(Type.Bool, p1)
  )
end

-- BOOL ARE_PLAYER_FLASHING_STARS_ABOUT_TO_DROP(Player player) // 0xAFAF86043E5874E9
function PLAYER.ARE_PLAYER_FLASHING_STARS_ABOUT_TO_DROP(player)
  return native.invoke(
    Type.Bool, 4518, false,
    arg(Type.Player, player)
  )
end

-- BOOL ARE_PLAYER_STARS_GREYED_OUT(Player player) // 0x0A6EB355EE14A2DB
function PLAYER.ARE_PLAYER_STARS_GREYED_OUT(player)
  return native.invoke(
    Type.Bool, 4519, false,
    arg(Type.Player, player)
  )
end

-- BOOL IS_WANTED_AND_HAS_BEEN_SEEN_BY_COPS(Player player) // 0x7E07C78925D5FD96
function PLAYER.IS_WANTED_AND_HAS_BEEN_SEEN_BY_COPS(player)
  return native.invoke(
    Type.Bool, 4520, false,
    arg(Type.Player, player)
  )
end

-- void SET_DISPATCH_COPS_FOR_PLAYER(Player player, BOOL toggle) // 0xDB172424876553F4
function PLAYER.SET_DISPATCH_COPS_FOR_PLAYER(player, toggle)
  native.invoke(
    Type.Void, 4521, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_PLAYER_WANTED_LEVEL_GREATER(Player player, int wantedLevel) // 0x238DB2A2C23EE9EF
function PLAYER.IS_PLAYER_WANTED_LEVEL_GREATER(player, wantedLevel)
  return native.invoke(
    Type.Bool, 4522, false,
    arg(Type.Player, player),
    arg(Type.Int, wantedLevel)
  )
end

-- void CLEAR_PLAYER_WANTED_LEVEL(Player player) // 0xB302540597885499
--[[
This executes at the same as speed as PLAYER::SET_PLAYER_WANTED_LEVEL(player, 0, false);

PLAYER::GET_PLAYER_WANTED_LEVEL(player); executes in less than half the time. Which means that it's worth first checking if the wanted level needs to be cleared before clearing. However, this is mostly about good code practice and can important in other situations. The difference in time in this example is negligible. 
--]]
function PLAYER.CLEAR_PLAYER_WANTED_LEVEL(player)
  native.invoke(
    Type.Void, 4523, false,
    arg(Type.Player, player)
  )
end

-- BOOL IS_PLAYER_DEAD(Player player) // 0x424D4687FA1E5652
function PLAYER.IS_PLAYER_DEAD(player)
  return native.invoke(
    Type.Bool, 4524, false,
    arg(Type.Player, player)
  )
end

-- BOOL IS_PLAYER_PRESSING_HORN(Player player) // 0xFA1E2BF8B10598F9
function PLAYER.IS_PLAYER_PRESSING_HORN(player)
  return native.invoke(
    Type.Bool, 4525, false,
    arg(Type.Player, player)
  )
end

-- void SET_PLAYER_CONTROL(Player player, BOOL bHasControl, int flags) // 0x8D32347D6D4C40A2
--[[
Flags:
SPC_AMBIENT_SCRIPT = (1 << 1),
SPC_CLEAR_TASKS = (1 << 2),
SPC_REMOVE_FIRES = (1 << 3),
SPC_REMOVE_EXPLOSIONS = (1 << 4),
SPC_REMOVE_PROJECTILES = (1 << 5),
SPC_DEACTIVATE_GADGETS = (1 << 6),
SPC_REENABLE_CONTROL_ON_DEATH = (1 << 7),
SPC_LEAVE_CAMERA_CONTROL_ON = (1 << 8),
SPC_ALLOW_PLAYER_DAMAGE = (1 << 9),
SPC_DONT_STOP_OTHER_CARS_AROUND_PLAYER = (1 << 10),
SPC_PREVENT_EVERYBODY_BACKOFF = (1 << 11),
SPC_ALLOW_PAD_SHAKE = (1 << 12)

See: https://alloc8or.re/gta5/doc/enums/eSetPlayerControlFlag.txt
--]]
function PLAYER.SET_PLAYER_CONTROL(player, bHasControl, flags)
  native.invoke(
    Type.Void, 4526, false,
    arg(Type.Player, player),
    arg(Type.Bool, bHasControl),
    arg(Type.Int, flags)
  )
end

-- int GET_PLAYER_WANTED_LEVEL(Player player) // 0xE28E54788CE8F12D
function PLAYER.GET_PLAYER_WANTED_LEVEL(player)
  return native.invoke(
    Type.Int, 4527, false,
    arg(Type.Player, player)
  )
end

-- void SET_MAX_WANTED_LEVEL(int maxWantedLevel) // 0xAA5F02DB48D704B9
function PLAYER.SET_MAX_WANTED_LEVEL(maxWantedLevel)
  native.invoke(
    Type.Void, 4528, false,
    arg(Type.Int, maxWantedLevel)
  )
end

-- void SET_POLICE_RADAR_BLIPS(BOOL toggle) // 0x43286D561B72B8BF
--[[
If toggle is set to false:
 The police won't be shown on the (mini)map

If toggle is set to true:
 The police will be shown on the (mini)map
--]]
function PLAYER.SET_POLICE_RADAR_BLIPS(toggle)
  native.invoke(
    Type.Void, 4529, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_POLICE_IGNORE_PLAYER(Player player, BOOL toggle) // 0x32C62AA929C2DA6A
--[[
The player will be ignored by the police if toggle is set to true
--]]
function PLAYER.SET_POLICE_IGNORE_PLAYER(player, toggle)
  native.invoke(
    Type.Void, 4530, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_PLAYER_PLAYING(Player player) // 0x5E9564D8246B909A
--[[
Checks whether the specified player has a Ped, the Ped is not dead, is not injured and is not arrested.
--]]
function PLAYER.IS_PLAYER_PLAYING(player)
  return native.invoke(
    Type.Bool, 4531, false,
    arg(Type.Player, player)
  )
end

-- void SET_EVERYONE_IGNORE_PLAYER(Player player, BOOL toggle) // 0x8EEDA153AD141BA4
function PLAYER.SET_EVERYONE_IGNORE_PLAYER(player, toggle)
  native.invoke(
    Type.Void, 4532, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- void SET_ALL_RANDOM_PEDS_FLEE(Player player, BOOL toggle) // 0x056E0FE8534C2949
function PLAYER.SET_ALL_RANDOM_PEDS_FLEE(player, toggle)
  native.invoke(
    Type.Void, 4533, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- void SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME(Player player) // 0x471D2FF42A94B4F2
function PLAYER.SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME(player)
  native.invoke(
    Type.Void, 4534, false,
    arg(Type.Player, player)
  )
end

-- void SET_ALL_NEUTRAL_RANDOM_PEDS_FLEE(Player player, BOOL toggle) // 0xDE45D1A1EF45EE61
function PLAYER.SET_ALL_NEUTRAL_RANDOM_PEDS_FLEE(player, toggle)
  native.invoke(
    Type.Void, 4535, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- void SET_ALL_NEUTRAL_RANDOM_PEDS_FLEE_THIS_FRAME(Player player) // 0xC3376F42B1FACCC6
--[[
- This is called after SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME

--]]
function PLAYER.SET_ALL_NEUTRAL_RANDOM_PEDS_FLEE_THIS_FRAME(player)
  native.invoke(
    Type.Void, 4536, false,
    arg(Type.Player, player)
  )
end

-- void SET_LAW_PEDS_CAN_ATTACK_NON_WANTED_PLAYER_THIS_FRAME(Player player) // 0xFAC75988A7D078D3
function PLAYER.SET_LAW_PEDS_CAN_ATTACK_NON_WANTED_PLAYER_THIS_FRAME(player)
  native.invoke(
    Type.Void, 4537, false,
    arg(Type.Player, player)
  )
end

-- void SET_IGNORE_LOW_PRIORITY_SHOCKING_EVENTS(Player player, BOOL toggle) // 0x596976B02B6B5700
function PLAYER.SET_IGNORE_LOW_PRIORITY_SHOCKING_EVENTS(player, toggle)
  native.invoke(
    Type.Void, 4538, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- void SET_WANTED_LEVEL_MULTIPLIER(float multiplier) // 0x020E5F00CDA207BA
function PLAYER.SET_WANTED_LEVEL_MULTIPLIER(multiplier)
  native.invoke(
    Type.Void, 4539, false,
    arg(Type.Float, multiplier)
  )
end

-- void SET_WANTED_LEVEL_DIFFICULTY(Player player, float difficulty) // 0x9B0BB33B04405E7A
--[[
Max value is 1.0
--]]
function PLAYER.SET_WANTED_LEVEL_DIFFICULTY(player, difficulty)
  native.invoke(
    Type.Void, 4540, false,
    arg(Type.Player, player),
    arg(Type.Float, difficulty)
  )
end

-- void RESET_WANTED_LEVEL_DIFFICULTY(Player player) // 0xB9D0DD990DC141DD
function PLAYER.RESET_WANTED_LEVEL_DIFFICULTY(player)
  native.invoke(
    Type.Void, 4541, false,
    arg(Type.Player, player)
  )
end

-- int GET_WANTED_LEVEL_TIME_TO_ESCAPE() // 0xA72200F51875FEA4
function PLAYER.GET_WANTED_LEVEL_TIME_TO_ESCAPE()
  return native.invoke(
    Type.Int, 4542, false
  )
end

-- void SET_WANTED_LEVEL_HIDDEN_ESCAPE_TIME(Player player, int wantedLevel, int lossTime) // 0x49B856B1360C47C7
function PLAYER.SET_WANTED_LEVEL_HIDDEN_ESCAPE_TIME(player, wantedLevel, lossTime)
  native.invoke(
    Type.Void, 4543, false,
    arg(Type.Player, player),
    arg(Type.Int, wantedLevel),
    arg(Type.Int, lossTime)
  )
end

-- void RESET_WANTED_LEVEL_HIDDEN_ESCAPE_TIME(Player player) // 0x823EC8E82BA45986
function PLAYER.RESET_WANTED_LEVEL_HIDDEN_ESCAPE_TIME(player)
  native.invoke(
    Type.Void, 4544, false,
    arg(Type.Player, player)
  )
end

-- void START_FIRING_AMNESTY(int duration) // 0xBF9BD71691857E48
function PLAYER.START_FIRING_AMNESTY(duration)
  native.invoke(
    Type.Void, 4545, false,
    arg(Type.Int, duration)
  )
end

-- void REPORT_CRIME(Player player, int crimeType, int wantedLvlThresh) // 0xE9B09589827545E7
--[[
PLAYER::REPORT_CRIME(PLAYER::PLAYER_ID(), 37, PLAYER::GET_WANTED_LEVEL_THRESHOLD(1));

From am_armybase.ysc.c4:

PLAYER::REPORT_CRIME(PLAYER::PLAYER_ID(4), 36, PLAYER::GET_WANTED_LEVEL_THRESHOLD(4));

-----

This was taken from the GTAV.exe v1.334. The function is called sub_140592CE8. For a full decompilation of the function, see here: https://pastebin.com/09qSMsN7 

-----
crimeType:
1: Firearms possession
2: Person running a red light ("5-0-5")
3: Reckless driver
4: Speeding vehicle (a "5-10")
5: Traffic violation (a "5-0-5")
6: Motorcycle rider without a helmet
7: Vehicle theft (a "5-0-3")
8: Grand Theft Auto
9: ???
10: ???
11: Assault on a civilian (a "2-40")
12: Assault on an officer
13: Assault with a deadly weapon (a "2-45")
14: Officer shot (a "2-45")
15: Pedestrian struck by a vehicle
16: Officer struck by a vehicle
17: Helicopter down (an "AC"?)
18: Civilian on fire (a "2-40")
19: Officer set on fire (a "10-99")
20: Car on fire
21: Air unit down (an "AC"?)
22: An explosion (a "9-96")
23: A stabbing (a "2-45") (also something else I couldn't understand)
24: Officer stabbed (also something else I couldn't understand)
25: Attack on a vehicle ("MDV"?)
26: Damage to property
27: Suspect threatening officer with a firearm
28: Shots fired
29: ???
30: ???
31: ???
32: ???
33: ???
34: A "2-45"
35: ???
36: A "9-25"
37: ???
38: ???
39: ???
40: ???
41: ???
42: ???
43: Possible disturbance
44: Civilian in need of assistance
45: ???
46: ???
--]]
function PLAYER.REPORT_CRIME(player, crimeType, wantedLvlThresh)
  native.invoke(
    Type.Void, 4546, false,
    arg(Type.Player, player),
    arg(Type.Int, crimeType),
    arg(Type.Int, wantedLvlThresh)
  )
end

-- void SUPPRESS_CRIME_THIS_FRAME(Player player, int crimeType) // 0x9A987297ED8BD838
--[[
crimeType: see REPORT_CRIME
--]]
function PLAYER.SUPPRESS_CRIME_THIS_FRAME(player, crimeType)
  native.invoke(
    Type.Void, 4547, false,
    arg(Type.Player, player),
    arg(Type.Int, crimeType)
  )
end

-- void UPDATE_WANTED_POSITION_THIS_FRAME(Player player) // 0xBC9490CA15AEA8FB
--[[
This native is used in both singleplayer and multiplayer scripts.

Always used like this in scripts
PLAYER::UPDATE_WANTED_POSITION_THIS_FRAME(PLAYER::PLAYER_ID());
--]]
function PLAYER.UPDATE_WANTED_POSITION_THIS_FRAME(player)
  native.invoke(
    Type.Void, 4548, false,
    arg(Type.Player, player)
  )
end

-- void SUPPRESS_LOSING_WANTED_LEVEL_IF_HIDDEN_THIS_FRAME(Player player) // 0x4669B3ED80F24B4E
--[[
This has been found in use in the decompiled files.
--]]
function PLAYER.SUPPRESS_LOSING_WANTED_LEVEL_IF_HIDDEN_THIS_FRAME(player)
  native.invoke(
    Type.Void, 4549, false,
    arg(Type.Player, player)
  )
end

-- void ALLOW_EVASION_HUD_IF_DISABLING_HIDDEN_EVASION_THIS_FRAME(Player player, Any p1) // 0x2F41A3BAE005E5FA
function PLAYER.ALLOW_EVASION_HUD_IF_DISABLING_HIDDEN_EVASION_THIS_FRAME(player, p1)
  native.invoke(
    Type.Void, 4550, false,
    arg(Type.Player, player),
    arg(Type.Any, p1)
  )
end

-- void FORCE_START_HIDDEN_EVASION(Player player) // 0xAD73CE5A09E42D12
--[[
This has been found in use in the decompiled files.
--]]
function PLAYER.FORCE_START_HIDDEN_EVASION(player)
  native.invoke(
    Type.Void, 4551, false,
    arg(Type.Player, player)
  )
end

-- void SUPPRESS_WITNESSES_CALLING_POLICE_THIS_FRAME(Player player) // 0x36F1B38855F2A8DF
function PLAYER.SUPPRESS_WITNESSES_CALLING_POLICE_THIS_FRAME(player)
  native.invoke(
    Type.Void, 4552, false,
    arg(Type.Player, player)
  )
end

-- void REPORT_POLICE_SPOTTED_PLAYER(Player player) // 0xDC64D2C53493ED12
function PLAYER.REPORT_POLICE_SPOTTED_PLAYER(player)
  native.invoke(
    Type.Void, 4553, false,
    arg(Type.Player, player)
  )
end

-- void SET_LAW_RESPONSE_DELAY_OVERRIDE(float p0) // 0xB45EFF719D8427A6
--[[
PLAYER::SET_LAW_RESPONSE_DELAY_OVERRIDE(rPtr((&l_122) + 71)); // Found in decompilation

***

In "am_hold_up.ysc" used once:

l_8d._f47 = MISC::GET_RANDOM_FLOAT_IN_RANGE(18.0, 28.0);
PLAYER::SET_LAW_RESPONSE_DELAY_OVERRIDE((l_8d._f47));
--]]
function PLAYER.SET_LAW_RESPONSE_DELAY_OVERRIDE(p0)
  native.invoke(
    Type.Void, 4554, false,
    arg(Type.Float, p0)
  )
end

-- void RESET_LAW_RESPONSE_DELAY_OVERRIDE() // 0x0032A6DBA562C518
--[[
2 matches in 1 script - am_hold_up

Used in multiplayer scripts?
--]]
function PLAYER.RESET_LAW_RESPONSE_DELAY_OVERRIDE()
  native.invoke(
    Type.Void, 4555, false
  )
end

-- BOOL CAN_PLAYER_START_MISSION(Player player) // 0xDE7465A27D403C06
function PLAYER.CAN_PLAYER_START_MISSION(player)
  return native.invoke(
    Type.Bool, 4556, false,
    arg(Type.Player, player)
  )
end

-- BOOL IS_PLAYER_READY_FOR_CUTSCENE(Player player) // 0x908CBECC2CAA3690
function PLAYER.IS_PLAYER_READY_FOR_CUTSCENE(player)
  return native.invoke(
    Type.Bool, 4557, false,
    arg(Type.Player, player)
  )
end

-- BOOL IS_PLAYER_TARGETTING_ENTITY(Player player, Entity entity) // 0x7912F7FC4F6264B6
function PLAYER.IS_PLAYER_TARGETTING_ENTITY(player, entity)
  return native.invoke(
    Type.Bool, 4558, false,
    arg(Type.Player, player),
    arg(Type.Entity, entity)
  )
end

-- BOOL GET_PLAYER_TARGET_ENTITY(Player player, Entity* entity) // 0x13EDE1A5DBF797C9
--[[
Assigns the handle of locked-on melee target to *entity that you pass it.
Returns false if no entity found.
--]]
function PLAYER.GET_PLAYER_TARGET_ENTITY(player, entity)
  return native.invoke(
    Type.Bool, 4559, false,
    arg(Type.Player, player),
    arg(Type.Entity, entity)
  )
end

-- BOOL IS_PLAYER_FREE_AIMING(Player player) // 0x2E397FD2ECD37C87
--[[
Gets a value indicating whether the specified player is currently aiming freely.
--]]
function PLAYER.IS_PLAYER_FREE_AIMING(player)
  return native.invoke(
    Type.Bool, 4560, false,
    arg(Type.Player, player)
  )
end

-- BOOL IS_PLAYER_FREE_AIMING_AT_ENTITY(Player player, Entity entity) // 0x3C06B5C839B38F7B
--[[
Gets a value indicating whether the specified player is currently aiming freely at the specified entity.
--]]
function PLAYER.IS_PLAYER_FREE_AIMING_AT_ENTITY(player, entity)
  return native.invoke(
    Type.Bool, 4561, false,
    arg(Type.Player, player),
    arg(Type.Entity, entity)
  )
end

-- BOOL GET_ENTITY_PLAYER_IS_FREE_AIMING_AT(Player player, Entity* entity) // 0x2975C866E6713290
--[[
Returns TRUE if it found an entity in your crosshair within range of your weapon. Assigns the handle of the target to the *entity that you pass it.
Returns false if no entity found.
--]]
function PLAYER.GET_ENTITY_PLAYER_IS_FREE_AIMING_AT(player, entity)
  return native.invoke(
    Type.Bool, 4562, false,
    arg(Type.Player, player),
    arg(Type.Entity, entity)
  )
end

-- void SET_PLAYER_LOCKON_RANGE_OVERRIDE(Player player, float range) // 0x29961D490E5814FD
--[[
Affects the range of auto aim target.
--]]
function PLAYER.SET_PLAYER_LOCKON_RANGE_OVERRIDE(player, range)
  native.invoke(
    Type.Void, 4563, false,
    arg(Type.Player, player),
    arg(Type.Float, range)
  )
end

-- void SET_PLAYER_CAN_DO_DRIVE_BY(Player player, BOOL toggle) // 0x6E8834B52EC20C77
--[[
Set whether this player should be able to do drive-bys.

"A drive-by is when a ped is aiming/shooting from vehicle. This includes middle finger taunts. By setting this value to false I confirm the player is unable to do all that. Tested on tick."

--]]
function PLAYER.SET_PLAYER_CAN_DO_DRIVE_BY(player, toggle)
  native.invoke(
    Type.Void, 4564, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PLAYER_CAN_BE_HASSLED_BY_GANGS(Player player, BOOL toggle) // 0xD5E460AD7020A246
--[[
Sets whether this player can be hassled by gangs.
--]]
function PLAYER.SET_PLAYER_CAN_BE_HASSLED_BY_GANGS(player, toggle)
  native.invoke(
    Type.Void, 4565, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PLAYER_CAN_USE_COVER(Player player, BOOL toggle) // 0xD465A8599DFF6814
--[[
Sets whether this player can take cover.
--]]
function PLAYER.SET_PLAYER_CAN_USE_COVER(player, toggle)
  native.invoke(
    Type.Void, 4566, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- int GET_MAX_WANTED_LEVEL() // 0x462E0DB9B137DC5F
--[[
Gets the maximum wanted level the player can get.
Ranges from 0 to 5.
--]]
function PLAYER.GET_MAX_WANTED_LEVEL()
  return native.invoke(
    Type.Int, 4567, false
  )
end

-- BOOL IS_PLAYER_TARGETTING_ANYTHING(Player player) // 0x78CFE51896B6B8A4
function PLAYER.IS_PLAYER_TARGETTING_ANYTHING(player)
  return native.invoke(
    Type.Bool, 4568, false,
    arg(Type.Player, player)
  )
end

-- void SET_PLAYER_SPRINT(Player player, BOOL toggle) // 0xA01B8075D8B92DF4
function PLAYER.SET_PLAYER_SPRINT(player, toggle)
  native.invoke(
    Type.Void, 4569, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- void RESET_PLAYER_STAMINA(Player player) // 0xA6F312FCCE9C1DFE
function PLAYER.RESET_PLAYER_STAMINA(player)
  native.invoke(
    Type.Void, 4570, false,
    arg(Type.Player, player)
  )
end

-- void RESTORE_PLAYER_STAMINA(Player player, float p1) // 0xA352C1B864CAFD33
function PLAYER.RESTORE_PLAYER_STAMINA(player, p1)
  native.invoke(
    Type.Void, 4571, false,
    arg(Type.Player, player),
    arg(Type.Float, p1)
  )
end

-- float GET_PLAYER_SPRINT_STAMINA_REMAINING(Player player) // 0x3F9F16F8E65A7ED7
function PLAYER.GET_PLAYER_SPRINT_STAMINA_REMAINING(player)
  return native.invoke(
    Type.Float, 4572, false,
    arg(Type.Player, player)
  )
end

-- float GET_PLAYER_SPRINT_TIME_REMAINING(Player player) // 0x1885BC9B108B4C99
function PLAYER.GET_PLAYER_SPRINT_TIME_REMAINING(player)
  return native.invoke(
    Type.Float, 4573, false,
    arg(Type.Player, player)
  )
end

-- float GET_PLAYER_UNDERWATER_TIME_REMAINING(Player player) // 0xA1FCF8E6AF40B731
function PLAYER.GET_PLAYER_UNDERWATER_TIME_REMAINING(player)
  return native.invoke(
    Type.Float, 4574, false,
    arg(Type.Player, player)
  )
end

-- float SET_PLAYER_UNDERWATER_BREATH_PERCENT_REMAINING(Player player, float time) // 0xA0D3E4F7AAFB7E78
function PLAYER.SET_PLAYER_UNDERWATER_BREATH_PERCENT_REMAINING(player, time)
  return native.invoke(
    Type.Float, 4575, false,
    arg(Type.Player, player),
    arg(Type.Float, time)
  )
end

-- int GET_PLAYER_GROUP(Player player) // 0x0D127585F77030AF
--[[
Returns the group ID the player is member of.
--]]
function PLAYER.GET_PLAYER_GROUP(player)
  return native.invoke(
    Type.Int, 4576, false,
    arg(Type.Player, player)
  )
end

-- int GET_PLAYER_MAX_ARMOUR(Player player) // 0x92659B4CE1863CB3
function PLAYER.GET_PLAYER_MAX_ARMOUR(player)
  return native.invoke(
    Type.Int, 4577, false,
    arg(Type.Player, player)
  )
end

-- BOOL IS_PLAYER_CONTROL_ON(Player player) // 0x49C32D60007AFA47
--[[
Can the player control himself, used to disable controls for player for things like a cutscene.

---

You can't disable controls with this, use SET_PLAYER_CONTROL(...) for this. 
--]]
function PLAYER.IS_PLAYER_CONTROL_ON(player)
  return native.invoke(
    Type.Bool, 4578, false,
    arg(Type.Player, player)
  )
end

-- BOOL GET_ARE_CAMERA_CONTROLS_DISABLED() // 0x7C814D2FB49F40C0
--[[
Returns true when the player is not able to control the cam i.e. when running a benchmark test, switching the player or viewing a cutscene.

Note: I am not 100% sure if the native actually checks if the cam control is disabled but it seems promising.
--]]
function PLAYER.GET_ARE_CAMERA_CONTROLS_DISABLED()
  return native.invoke(
    Type.Bool, 4579, false
  )
end

-- BOOL IS_PLAYER_SCRIPT_CONTROL_ON(Player player) // 0x8A876A65283DD7D7
function PLAYER.IS_PLAYER_SCRIPT_CONTROL_ON(player)
  return native.invoke(
    Type.Bool, 4580, false,
    arg(Type.Player, player)
  )
end

-- BOOL IS_PLAYER_CLIMBING(Player player) // 0x95E8F73DC65EFB9C
--[[
Returns TRUE if the player ('s ped) is climbing at the moment.
--]]
function PLAYER.IS_PLAYER_CLIMBING(player)
  return native.invoke(
    Type.Bool, 4581, false,
    arg(Type.Player, player)
  )
end

-- BOOL IS_PLAYER_BEING_ARRESTED(Player player, BOOL atArresting) // 0x388A47C51ABDAC8E
--[[
Return true while player is being arrested / busted.

If atArresting is set to 1, this function will return 1 when player is being arrested (while player is putting his hand up, but still have control)

If atArresting is set to 0, this function will return 1 only when the busted screen is shown.
--]]
function PLAYER.IS_PLAYER_BEING_ARRESTED(player, atArresting)
  return native.invoke(
    Type.Bool, 4582, false,
    arg(Type.Player, player),
    arg(Type.Bool, atArresting)
  )
end

-- void RESET_PLAYER_ARREST_STATE(Player player) // 0x2D03E13C460760D6
function PLAYER.RESET_PLAYER_ARREST_STATE(player)
  native.invoke(
    Type.Void, 4583, false,
    arg(Type.Player, player)
  )
end

-- Vehicle GET_PLAYERS_LAST_VEHICLE() // 0xB6997A7EB3F5C8C0
--[[
Alternative: GET_VEHICLE_PED_IS_IN(PLAYER_PED_ID(), 1);
--]]
function PLAYER.GET_PLAYERS_LAST_VEHICLE()
  return native.invoke(
    Type.Vehicle, 4584, false
  )
end

-- Player GET_PLAYER_INDEX() // 0xA5EDC40EF369B48D
--[[
Returns the same as PLAYER_ID and NETWORK_PLAYER_ID_TO_INT
--]]
function PLAYER.GET_PLAYER_INDEX()
  return native.invoke(
    Type.Player, 4585, false
  )
end

-- Player INT_TO_PLAYERINDEX(int value) // 0x41BD2A6B006AF756
--[[
Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
--]]
function PLAYER.INT_TO_PLAYERINDEX(value)
  return native.invoke(
    Type.Player, 4586, false,
    arg(Type.Int, value)
  )
end

-- int INT_TO_PARTICIPANTINDEX(int value) // 0x9EC6603812C24710
--[[
Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
--------------------------------------------------------
if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(i)))

--]]
function PLAYER.INT_TO_PARTICIPANTINDEX(value)
  return native.invoke(
    Type.Int, 4587, false,
    arg(Type.Int, value)
  )
end

-- int GET_TIME_SINCE_PLAYER_HIT_VEHICLE(Player player) // 0x5D35ECF3A81A0EE0
function PLAYER.GET_TIME_SINCE_PLAYER_HIT_VEHICLE(player)
  return native.invoke(
    Type.Int, 4588, false,
    arg(Type.Player, player)
  )
end

-- int GET_TIME_SINCE_PLAYER_HIT_PED(Player player) // 0xE36A25322DC35F42
function PLAYER.GET_TIME_SINCE_PLAYER_HIT_PED(player)
  return native.invoke(
    Type.Int, 4589, false,
    arg(Type.Player, player)
  )
end

-- int GET_TIME_SINCE_PLAYER_DROVE_ON_PAVEMENT(Player player) // 0xD559D2BE9E37853B
function PLAYER.GET_TIME_SINCE_PLAYER_DROVE_ON_PAVEMENT(player)
  return native.invoke(
    Type.Int, 4590, false,
    arg(Type.Player, player)
  )
end

-- int GET_TIME_SINCE_PLAYER_DROVE_AGAINST_TRAFFIC(Player player) // 0xDB89591E290D9182
function PLAYER.GET_TIME_SINCE_PLAYER_DROVE_AGAINST_TRAFFIC(player)
  return native.invoke(
    Type.Int, 4591, false,
    arg(Type.Player, player)
  )
end

-- BOOL IS_PLAYER_FREE_FOR_AMBIENT_TASK(Player player) // 0xDCCFD3F106C36AB4
function PLAYER.IS_PLAYER_FREE_FOR_AMBIENT_TASK(player)
  return native.invoke(
    Type.Bool, 4592, false,
    arg(Type.Player, player)
  )
end

-- Player PLAYER_ID() // 0x4F8644AF03D0E0D6
--[[
This returns YOUR 'identity' as a Player type.

Always returns 0 in story mode.
--]]
function PLAYER.PLAYER_ID()
  return native.invoke(
    Type.Player, 4593, false
  )
end

-- Ped PLAYER_PED_ID() // 0xD80958FC74E988A6
--[[
Returns current player ped
--]]
function PLAYER.PLAYER_PED_ID()
  return native.invoke(
    Type.Ped, 4594, false
  )
end

-- int NETWORK_PLAYER_ID_TO_INT() // 0xEE68096F9F37341E
--[[
Does exactly the same thing as PLAYER_ID()
--]]
function PLAYER.NETWORK_PLAYER_ID_TO_INT()
  return native.invoke(
    Type.Int, 4595, false
  )
end

-- BOOL HAS_FORCE_CLEANUP_OCCURRED(int cleanupFlags) // 0xC968670BFACE42D9
function PLAYER.HAS_FORCE_CLEANUP_OCCURRED(cleanupFlags)
  return native.invoke(
    Type.Bool, 4596, false,
    arg(Type.Int, cleanupFlags)
  )
end

-- void FORCE_CLEANUP(int cleanupFlags) // 0xBC8983F38F78ED51
--[[
used with 1,2,8,64,128 in the scripts
--]]
function PLAYER.FORCE_CLEANUP(cleanupFlags)
  native.invoke(
    Type.Void, 4597, false,
    arg(Type.Int, cleanupFlags)
  )
end

-- void FORCE_CLEANUP_FOR_ALL_THREADS_WITH_THIS_NAME(const char* name, int cleanupFlags) // 0x4C68DDDDF0097317
--[[
PLAYER::FORCE_CLEANUP_FOR_ALL_THREADS_WITH_THIS_NAME("pb_prostitute", 1); // Found in decompilation
--]]
function PLAYER.FORCE_CLEANUP_FOR_ALL_THREADS_WITH_THIS_NAME(name, cleanupFlags)
  native.invoke(
    Type.Void, 4598, false,
    arg(Type.String, name),
    arg(Type.Int, cleanupFlags)
  )
end

-- void FORCE_CLEANUP_FOR_THREAD_WITH_THIS_ID(int id, int cleanupFlags) // 0xF745B37630DF176B
function PLAYER.FORCE_CLEANUP_FOR_THREAD_WITH_THIS_ID(id, cleanupFlags)
  native.invoke(
    Type.Void, 4599, false,
    arg(Type.Int, id),
    arg(Type.Int, cleanupFlags)
  )
end

-- int GET_CAUSE_OF_MOST_RECENT_FORCE_CLEANUP() // 0x9A41CF4674A12272
function PLAYER.GET_CAUSE_OF_MOST_RECENT_FORCE_CLEANUP()
  return native.invoke(
    Type.Int, 4600, false
  )
end

-- void SET_PLAYER_MAY_ONLY_ENTER_THIS_VEHICLE(Player player, Vehicle vehicle) // 0x8026FF78F208978A
function PLAYER.SET_PLAYER_MAY_ONLY_ENTER_THIS_VEHICLE(player, vehicle)
  native.invoke(
    Type.Void, 4601, false,
    arg(Type.Player, player),
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_PLAYER_MAY_NOT_ENTER_ANY_VEHICLE(Player player) // 0x1DE37BBF9E9CC14A
function PLAYER.SET_PLAYER_MAY_NOT_ENTER_ANY_VEHICLE(player)
  native.invoke(
    Type.Void, 4602, false,
    arg(Type.Player, player)
  )
end

-- BOOL GIVE_ACHIEVEMENT_TO_PLAYER(int achievementId) // 0xBEC7076D64130195
--[[
1 - Welcome to Los Santos
2 - A Friendship Resurrected
3 - A Fair Day's Pay
4 - The Moment of Truth
5 - To Live or Die in Los Santos
6 - Diamond Hard
7 - Subversive
8 - Blitzed
9 - Small Town, Big Job
10 - The Government Gimps
11 - The Big One!
12 - Solid Gold, Baby!
13 - Career Criminal
14 - San Andreas Sightseer
15 - All's Fare in Love and War
16 - TP Industries Arms Race
17 - Multi-Disciplined
18 - From Beyond the Stars
19 - A Mystery, Solved
20 - Waste Management
21 - Red Mist
22 - Show Off
23 - Kifflom!
24 - Three Man Army
25 - Out of Your Depth
26 - Altruist Acolyte
27 - A Lot of Cheddar
28 - Trading Pure Alpha
29 - Pimp My Sidearm
30 - Wanted: Alive Or Alive
31 - Los Santos Customs
32 - Close Shave
33 - Off the Plane
34 - Three-Bit Gangster
35 - Making Moves
36 - Above the Law
37 - Numero Uno
38 - The Midnight Club
39 - Unnatural Selection
40 - Backseat Driver
41 - Run Like The Wind
42 - Clean Sweep
43 - Decorated
44 - Stick Up Kid
45 - Enjoy Your Stay
46 - Crew Cut
47 - Full Refund
48 - Dialling Digits
49 - American Dream
50 - A New Perspective
51 - Be Prepared
52 - In the Name of Science
53 - Dead Presidents
54 - Parole Day
55 - Shot Caller
56 - Four Way
57 - Live a Little
58 - Can't Touch This
59 - Mastermind
60 - Vinewood Visionary
61 - Majestic
62 - Humans of Los Santos
63 - First Time Director
64 - Animal Lover
65 - Ensemble Piece
66 - Cult Movie
67 - Location Scout
68 - Method Actor
69 - Cryptozoologist
70 - Getting Started
71 - The Data Breaches
72 - The Bogdan Problem
73 - The Doomsday Scenario
74 - A World Worth Saving
75 - Orbital Obliteration
76 - Elitist
77 - Masterminds
--]]
function PLAYER.GIVE_ACHIEVEMENT_TO_PLAYER(achievementId)
  return native.invoke(
    Type.Bool, 4603, false,
    arg(Type.Int, achievementId)
  )
end

-- BOOL SET_ACHIEVEMENT_PROGRESS(int achievementId, int progress) // 0xC2AFFFDABBDC2C5C
--[[
For Steam.
Does nothing and always returns false in the retail version of the game.
--]]
function PLAYER.SET_ACHIEVEMENT_PROGRESS(achievementId, progress)
  return native.invoke(
    Type.Bool, 4604, false,
    arg(Type.Int, achievementId),
    arg(Type.Int, progress)
  )
end

-- int GET_ACHIEVEMENT_PROGRESS(int achievementId) // 0x1C186837D0619335
--[[
For Steam.
Always returns 0 in retail version of the game.
--]]
function PLAYER.GET_ACHIEVEMENT_PROGRESS(achievementId)
  return native.invoke(
    Type.Int, 4605, false,
    arg(Type.Int, achievementId)
  )
end

-- BOOL HAS_ACHIEVEMENT_BEEN_PASSED(int achievementId) // 0x867365E111A3B6EB
--[[
See GIVE_ACHIEVEMENT_TO_PLAYER
--]]
function PLAYER.HAS_ACHIEVEMENT_BEEN_PASSED(achievementId)
  return native.invoke(
    Type.Bool, 4606, false,
    arg(Type.Int, achievementId)
  )
end

-- BOOL IS_PLAYER_ONLINE() // 0xF25D331DC2627BBC
--[[
Returns TRUE if the game is in online mode and FALSE if in offline mode.

This is an alias for NETWORK_IS_SIGNED_ONLINE.
--]]
function PLAYER.IS_PLAYER_ONLINE()
  return native.invoke(
    Type.Bool, 4607, false
  )
end

-- BOOL IS_PLAYER_LOGGING_IN_NP() // 0x74556E1420867ECA
--[[
this function is hard-coded to always return 0.
--]]
function PLAYER.IS_PLAYER_LOGGING_IN_NP()
  return native.invoke(
    Type.Bool, 4608, false
  )
end

-- void DISPLAY_SYSTEM_SIGNIN_UI(BOOL p0) // 0x94DD7888C10A979E
--[[
Purpose of the BOOL currently unknown.
Both, true and false, work
--]]
function PLAYER.DISPLAY_SYSTEM_SIGNIN_UI(p0)
  native.invoke(
    Type.Void, 4609, false,
    arg(Type.Bool, p0)
  )
end

-- BOOL IS_SYSTEM_UI_BEING_DISPLAYED() // 0x5D511E3867C87139
function PLAYER.IS_SYSTEM_UI_BEING_DISPLAYED()
  return native.invoke(
    Type.Bool, 4610, false
  )
end

-- void SET_PLAYER_INVINCIBLE(Player player, BOOL toggle) // 0x239528EACDC3E7DE
--[[
Simply sets you as invincible (Health will not deplete).

Use 0x733A643B5B0C53C1 instead if you want Ragdoll enabled, which is equal to:
*(DWORD *)(playerPedAddress + 0x188) |= (1 << 9);
--]]
function PLAYER.SET_PLAYER_INVINCIBLE(player, toggle)
  native.invoke(
    Type.Void, 4611, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- BOOL GET_PLAYER_INVINCIBLE(Player player) // 0xB721981B2B939E07
--[[
Returns the Player's Invincible status.

This function will always return false if 0x733A643B5B0C53C1 is used to set the invincibility status. To always get the correct result, use this:

 bool IsPlayerInvincible(Player player)
    {
     auto addr = getScriptHandleBaseAddress(GET_PLAYER_PED(player)); 

        if (addr)
     {
         DWORD flag = *(DWORD *)(addr + 0x188);
            return ((flag & (1 << 8)) != 0) || ((flag & (1 << 9)) != 0);
      }

       return false;
 }


--]]
function PLAYER.GET_PLAYER_INVINCIBLE(player)
  return native.invoke(
    Type.Bool, 4612, false,
    arg(Type.Player, player)
  )
end

-- BOOL GET_PLAYER_DEBUG_INVINCIBLE(Player player) // 0xDCC07526B8EC45AF
--[[
Always returns false.
--]]
function PLAYER.GET_PLAYER_DEBUG_INVINCIBLE(player)
  return native.invoke(
    Type.Bool, 4613, false,
    arg(Type.Player, player)
  )
end

-- void SET_PLAYER_INVINCIBLE_BUT_HAS_REACTIONS(Player player, BOOL toggle) // 0x6BC97F4F4BB3C04B
function PLAYER.SET_PLAYER_INVINCIBLE_BUT_HAS_REACTIONS(player, toggle)
  native.invoke(
    Type.Void, 4614, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PLAYER_CAN_COLLECT_DROPPED_MONEY(Player player, BOOL p1) // 0xCAC57395B151135F
function PLAYER.SET_PLAYER_CAN_COLLECT_DROPPED_MONEY(player, p1)
  native.invoke(
    Type.Void, 4615, false,
    arg(Type.Player, player),
    arg(Type.Bool, p1)
  )
end

-- void REMOVE_PLAYER_HELMET(Player player, BOOL p2) // 0xF3AC26D3CC576528
function PLAYER.REMOVE_PLAYER_HELMET(player, p2)
  native.invoke(
    Type.Void, 4616, false,
    arg(Type.Player, player),
    arg(Type.Bool, p2)
  )
end

-- void GIVE_PLAYER_RAGDOLL_CONTROL(Player player, BOOL toggle) // 0x3C49C870E66F0A28
function PLAYER.GIVE_PLAYER_RAGDOLL_CONTROL(player, toggle)
  native.invoke(
    Type.Void, 4617, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PLAYER_LOCKON(Player player, BOOL toggle) // 0x5C8B2F450EE4328E
--[[
Example from fm_mission_controler.ysc.c4:

PLAYER::SET_PLAYER_LOCKON(PLAYER::PLAYER_ID(), 1);

All other decompiled scripts using this seem to be using the player id as the first parameter, so I feel the need to confirm it as so.

No need to confirm it says PLAYER_ID() so it uses PLAYER_ID() lol.
--]]
function PLAYER.SET_PLAYER_LOCKON(player, toggle)
  native.invoke(
    Type.Void, 4618, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PLAYER_TARGETING_MODE(int targetMode) // 0xB1906895227793F3
--[[
Sets your targeting mode.
0 = Assisted Aim - Full
1 = Assisted Aim - Partial
2 = Free Aim - Assisted
3 = Free Aim
--]]
function PLAYER.SET_PLAYER_TARGETING_MODE(targetMode)
  native.invoke(
    Type.Void, 4619, false,
    arg(Type.Int, targetMode)
  )
end

-- int GET_PLAYER_TARGETING_MODE() // 0x875BDD898B99C8CE
--[[
Returns targeting mode. See SET_PLAYER_TARGETING_MODE
--]]
function PLAYER.GET_PLAYER_TARGETING_MODE()
  return native.invoke(
    Type.Int, 4620, false
  )
end

-- void SET_PLAYER_TARGET_LEVEL(int targetLevel) // 0x5702B917B99DB1CD
function PLAYER.SET_PLAYER_TARGET_LEVEL(targetLevel)
  native.invoke(
    Type.Void, 4621, false,
    arg(Type.Int, targetLevel)
  )
end

-- BOOL GET_IS_USING_FPS_THIRD_PERSON_COVER() // 0xB9CF1F793A9F1BF1
--[[
Returns profile setting 237.
--]]
function PLAYER.GET_IS_USING_FPS_THIRD_PERSON_COVER()
  return native.invoke(
    Type.Bool, 4622, false
  )
end

-- BOOL GET_IS_USING_HOOD_CAMERA() // 0xCB645E85E97EA48B
--[[
Returns profile setting 243.
--]]
function PLAYER.GET_IS_USING_HOOD_CAMERA()
  return native.invoke(
    Type.Bool, 4623, false
  )
end

-- void CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_PED(Player player) // 0xF0B67A4DE6AB5F98
function PLAYER.CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_PED(player)
  native.invoke(
    Type.Void, 4624, false,
    arg(Type.Player, player)
  )
end

-- BOOL HAS_PLAYER_DAMAGED_AT_LEAST_ONE_PED(Player player) // 0x20CE80B0C2BF4ACC
function PLAYER.HAS_PLAYER_DAMAGED_AT_LEAST_ONE_PED(player)
  return native.invoke(
    Type.Bool, 4625, false,
    arg(Type.Player, player)
  )
end

-- void CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED(Player player) // 0x4AACB96203D11A31
function PLAYER.CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED(player)
  native.invoke(
    Type.Void, 4626, false,
    arg(Type.Player, player)
  )
end

-- BOOL HAS_PLAYER_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED(Player player) // 0xE4B90F367BD81752
function PLAYER.HAS_PLAYER_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED(player)
  return native.invoke(
    Type.Bool, 4627, false,
    arg(Type.Player, player)
  )
end

-- void SET_AIR_DRAG_MULTIPLIER_FOR_PLAYERS_VEHICLE(Player player, float multiplier) // 0xCA7DC8329F0A1E9E
--[[
This can be between 1.0f - 14.9f 

You can change the max in IDA from 15.0. I say 15.0 as the function blrs if what you input is greater than or equal to 15.0 hence why it's 14.9 max default.


--]]
function PLAYER.SET_AIR_DRAG_MULTIPLIER_FOR_PLAYERS_VEHICLE(player, multiplier)
  native.invoke(
    Type.Void, 4628, false,
    arg(Type.Player, player),
    arg(Type.Float, multiplier)
  )
end

-- void SET_SWIM_MULTIPLIER_FOR_PLAYER(Player player, float multiplier) // 0xA91C6F0FF7D16A13
--[[
Swim speed multiplier.
Multiplier goes up to 1.49

Just call it one time, it is not required to be called once every tick. - Note copied from below native.

Note: At least the IDA method if you change the max float multiplier from 1.5 it will change it for both this and RUN_SPRINT below. I say 1.5 as the function blrs if what you input is greater than or equal to 1.5 hence why it's 1.49 max default.
--]]
function PLAYER.SET_SWIM_MULTIPLIER_FOR_PLAYER(player, multiplier)
  native.invoke(
    Type.Void, 4629, false,
    arg(Type.Player, player),
    arg(Type.Float, multiplier)
  )
end

-- void SET_RUN_SPRINT_MULTIPLIER_FOR_PLAYER(Player player, float multiplier) // 0x6DB47AA77FD94E09
--[[
Multiplier goes up to 1.49 any value above will be completely overruled by the game and the multiplier will not take effect, this can be edited in memory however.

Just call it one time, it is not required to be called once every tick.

Note: At least the IDA method if you change the max float multiplier from 1.5 it will change it for both this and SWIM above. I say 1.5 as the function blrs if what you input is greater than or equal to 1.5 hence why it's 1.49 max default.
--]]
function PLAYER.SET_RUN_SPRINT_MULTIPLIER_FOR_PLAYER(player, multiplier)
  native.invoke(
    Type.Void, 4630, false,
    arg(Type.Player, player),
    arg(Type.Float, multiplier)
  )
end

-- int GET_TIME_SINCE_LAST_ARREST() // 0x5063F92F07C2A316
--[[
Returns the time since the character was arrested in (ms) milliseconds.

example

var time = Function.call<int>(Hash.GET_TIME_SINCE_LAST_ARREST();

UI.DrawSubtitle(time.ToString());

if player has not been arrested, the int returned will be -1.
--]]
function PLAYER.GET_TIME_SINCE_LAST_ARREST()
  return native.invoke(
    Type.Int, 4631, false
  )
end

-- int GET_TIME_SINCE_LAST_DEATH() // 0xC7034807558DDFCA
--[[
Returns the time since the character died in (ms) milliseconds.

example

var time = Function.call<int>(Hash.GET_TIME_SINCE_LAST_DEATH();

UI.DrawSubtitle(time.ToString());

if player has not died, the int returned will be -1.
--]]
function PLAYER.GET_TIME_SINCE_LAST_DEATH()
  return native.invoke(
    Type.Int, 4632, false
  )
end

-- void ASSISTED_MOVEMENT_CLOSE_ROUTE() // 0xAEBF081FFC0A0E5E
function PLAYER.ASSISTED_MOVEMENT_CLOSE_ROUTE()
  native.invoke(
    Type.Void, 4633, false
  )
end

-- void ASSISTED_MOVEMENT_FLUSH_ROUTE() // 0x8621390F0CDCFE1F
function PLAYER.ASSISTED_MOVEMENT_FLUSH_ROUTE()
  native.invoke(
    Type.Void, 4634, false
  )
end

-- void SET_PLAYER_FORCED_AIM(Player player, BOOL toggle) // 0x0FEE4F80AC44A726
function PLAYER.SET_PLAYER_FORCED_AIM(player, toggle)
  native.invoke(
    Type.Void, 4635, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PLAYER_FORCED_ZOOM(Player player, BOOL toggle) // 0x75E7D505F2B15902
function PLAYER.SET_PLAYER_FORCED_ZOOM(player, toggle)
  native.invoke(
    Type.Void, 4636, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PLAYER_FORCE_SKIP_AIM_INTRO(Player player, BOOL toggle) // 0x7651BC64AE59E128
function PLAYER.SET_PLAYER_FORCE_SKIP_AIM_INTRO(player, toggle)
  native.invoke(
    Type.Void, 4637, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- void DISABLE_PLAYER_FIRING(Player player, BOOL toggle) // 0x5E6CC07646BBEAB8
--[[
Inhibits the player from using any method of combat including melee and firearms.

NOTE: Only disables the firing for one frame
--]]
function PLAYER.DISABLE_PLAYER_FIRING(player, toggle)
  native.invoke(
    Type.Void, 4638, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- void DISABLE_PLAYER_THROW_GRENADE_WHILE_USING_GUN() // 0xB885852C39CC265D
--[[
Used only once in R* scripts (freemode.ysc).
--]]
function PLAYER.DISABLE_PLAYER_THROW_GRENADE_WHILE_USING_GUN()
  native.invoke(
    Type.Void, 4639, false
  )
end

-- void SET_DISABLE_AMBIENT_MELEE_MOVE(Player player, BOOL toggle) // 0x2E8AABFA40A84F8C
function PLAYER.SET_DISABLE_AMBIENT_MELEE_MOVE(player, toggle)
  native.invoke(
    Type.Void, 4640, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PLAYER_MAX_ARMOUR(Player player, int value) // 0x77DFCCF5948B8C71
--[[
Default is 100. Use player id and not ped id. For instance: PLAYER::SET_PLAYER_MAX_ARMOUR(PLAYER::PLAYER_ID(), 100); // main_persistent.ct4
--]]
function PLAYER.SET_PLAYER_MAX_ARMOUR(player, value)
  native.invoke(
    Type.Void, 4641, false,
    arg(Type.Player, player),
    arg(Type.Int, value)
  )
end

-- void SPECIAL_ABILITY_ACTIVATE(Player player, int p1) // 0x821FDC827D6F4090
--[[
p1 is always 0 in the scripts
--]]
function PLAYER.SPECIAL_ABILITY_ACTIVATE(player, p1)
  native.invoke(
    Type.Void, 4642, false,
    arg(Type.Player, player),
    arg(Type.Int, p1)
  )
end

-- void SET_SPECIAL_ABILITY_MP(Player player, int p1, Any p2) // 0xB214D570EAD7F81A
function PLAYER.SET_SPECIAL_ABILITY_MP(player, p1, p2)
  native.invoke(
    Type.Void, 4643, false,
    arg(Type.Player, player),
    arg(Type.Int, p1),
    arg(Type.Any, p2)
  )
end

-- void SPECIAL_ABILITY_DEACTIVATE_MP(Player player, int p1) // 0x17F7471EACA78290
--[[
p1 is always 0 in the scripts
--]]
function PLAYER.SPECIAL_ABILITY_DEACTIVATE_MP(player, p1)
  native.invoke(
    Type.Void, 4644, false,
    arg(Type.Player, player),
    arg(Type.Int, p1)
  )
end

-- void SPECIAL_ABILITY_DEACTIVATE(Player player, Any p1) // 0xD6A953C6D1492057
function PLAYER.SPECIAL_ABILITY_DEACTIVATE(player, p1)
  native.invoke(
    Type.Void, 4645, false,
    arg(Type.Player, player),
    arg(Type.Any, p1)
  )
end

-- void SPECIAL_ABILITY_DEACTIVATE_FAST(Player player, Any p1) // 0x9CB5CE07A3968D5A
function PLAYER.SPECIAL_ABILITY_DEACTIVATE_FAST(player, p1)
  native.invoke(
    Type.Void, 4646, false,
    arg(Type.Player, player),
    arg(Type.Any, p1)
  )
end

-- void SPECIAL_ABILITY_RESET(Player player, Any p1) // 0x375F0E738F861A94
function PLAYER.SPECIAL_ABILITY_RESET(player, p1)
  native.invoke(
    Type.Void, 4647, false,
    arg(Type.Player, player),
    arg(Type.Any, p1)
  )
end

-- void SPECIAL_ABILITY_CHARGE_ON_MISSION_FAILED(Player player, Any p1) // 0xC9A763D8FE87436A
function PLAYER.SPECIAL_ABILITY_CHARGE_ON_MISSION_FAILED(player, p1)
  native.invoke(
    Type.Void, 4648, false,
    arg(Type.Player, player),
    arg(Type.Any, p1)
  )
end

-- void SPECIAL_ABILITY_CHARGE_SMALL(Player player, BOOL p1, BOOL p2, Any p3) // 0x2E7B9B683481687D
--[[
Every occurrence of p1 & p2 were both true.
--]]
function PLAYER.SPECIAL_ABILITY_CHARGE_SMALL(player, p1, p2, p3)
  native.invoke(
    Type.Void, 4649, false,
    arg(Type.Player, player),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Any, p3)
  )
end

-- void SPECIAL_ABILITY_CHARGE_MEDIUM(Player player, BOOL p1, BOOL p2, Any p3) // 0xF113E3AA9BC54613
--[[
Only 1 match. Both p1 & p2 were true.
--]]
function PLAYER.SPECIAL_ABILITY_CHARGE_MEDIUM(player, p1, p2, p3)
  native.invoke(
    Type.Void, 4650, false,
    arg(Type.Player, player),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Any, p3)
  )
end

-- void SPECIAL_ABILITY_CHARGE_LARGE(Player player, BOOL p1, BOOL p2, Any p3) // 0xF733F45FA4497D93
--[[
2 matches. p1 was always true.
--]]
function PLAYER.SPECIAL_ABILITY_CHARGE_LARGE(player, p1, p2, p3)
  native.invoke(
    Type.Void, 4651, false,
    arg(Type.Player, player),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Any, p3)
  )
end

-- void SPECIAL_ABILITY_CHARGE_CONTINUOUS(Player player, Ped p1, Any p2) // 0xED481732DFF7E997
--[[
p1 appears to always be 1 (only comes up twice)
--]]
function PLAYER.SPECIAL_ABILITY_CHARGE_CONTINUOUS(player, p1, p2)
  native.invoke(
    Type.Void, 4652, false,
    arg(Type.Player, player),
    arg(Type.Ped, p1),
    arg(Type.Any, p2)
  )
end

-- void SPECIAL_ABILITY_CHARGE_ABSOLUTE(Player player, int p1, BOOL p2, Any p3) // 0xB7B0870EB531D08D
--[[
p1 appears as 5, 10, 15, 25, or 30. p2 is always true.
--]]
function PLAYER.SPECIAL_ABILITY_CHARGE_ABSOLUTE(player, p1, p2, p3)
  native.invoke(
    Type.Void, 4653, false,
    arg(Type.Player, player),
    arg(Type.Int, p1),
    arg(Type.Bool, p2),
    arg(Type.Any, p3)
  )
end

-- void SPECIAL_ABILITY_CHARGE_NORMALIZED(Player player, float normalizedValue, BOOL p2, Any p3) // 0xA0696A65F009EE18
--[[

normalizedValue is from 0.0 - 1.0
p2 is always 1
--]]
function PLAYER.SPECIAL_ABILITY_CHARGE_NORMALIZED(player, normalizedValue, p2, p3)
  native.invoke(
    Type.Void, 4654, false,
    arg(Type.Player, player),
    arg(Type.Float, normalizedValue),
    arg(Type.Bool, p2),
    arg(Type.Any, p3)
  )
end

-- void SPECIAL_ABILITY_FILL_METER(Player player, BOOL p1, Any p2) // 0x3DACA8DDC6FD4980
--[[
Also known as _RECHARGE_SPECIAL_ABILITY
--]]
function PLAYER.SPECIAL_ABILITY_FILL_METER(player, p1, p2)
  native.invoke(
    Type.Void, 4655, false,
    arg(Type.Player, player),
    arg(Type.Bool, p1),
    arg(Type.Any, p2)
  )
end

-- void SPECIAL_ABILITY_DEPLETE_METER(Player player, BOOL p1, Any p2) // 0x1D506DBBBC51E64B
--[[
p1 was always true.
--]]
function PLAYER.SPECIAL_ABILITY_DEPLETE_METER(player, p1, p2)
  native.invoke(
    Type.Void, 4656, false,
    arg(Type.Player, player),
    arg(Type.Bool, p1),
    arg(Type.Any, p2)
  )
end

-- void SPECIAL_ABILITY_LOCK(Hash playerModel, Any p1) // 0x6A09D0D590A47D13
function PLAYER.SPECIAL_ABILITY_LOCK(playerModel, p1)
  native.invoke(
    Type.Void, 4657, false,
    arg(Type.Hash, playerModel),
    arg(Type.Any, p1)
  )
end

-- void SPECIAL_ABILITY_UNLOCK(Hash playerModel, Any p1) // 0xF145F3BE2EFA9A3B
function PLAYER.SPECIAL_ABILITY_UNLOCK(playerModel, p1)
  native.invoke(
    Type.Void, 4658, false,
    arg(Type.Hash, playerModel),
    arg(Type.Any, p1)
  )
end

-- BOOL IS_SPECIAL_ABILITY_UNLOCKED(Hash playerModel) // 0xC6017F6A6CDFA694
function PLAYER.IS_SPECIAL_ABILITY_UNLOCKED(playerModel)
  return native.invoke(
    Type.Bool, 4659, false,
    arg(Type.Hash, playerModel)
  )
end

-- BOOL IS_SPECIAL_ABILITY_ACTIVE(Player player, Any p1) // 0x3E5F7FC85D854E15
function PLAYER.IS_SPECIAL_ABILITY_ACTIVE(player, p1)
  return native.invoke(
    Type.Bool, 4660, false,
    arg(Type.Player, player),
    arg(Type.Any, p1)
  )
end

-- BOOL IS_SPECIAL_ABILITY_METER_FULL(Player player, Any p1) // 0x05A1FE504B7F2587
function PLAYER.IS_SPECIAL_ABILITY_METER_FULL(player, p1)
  return native.invoke(
    Type.Bool, 4661, false,
    arg(Type.Player, player),
    arg(Type.Any, p1)
  )
end

-- void ENABLE_SPECIAL_ABILITY(Player player, BOOL toggle, Any p2) // 0x181EC197DAEFE121
function PLAYER.ENABLE_SPECIAL_ABILITY(player, toggle, p2)
  native.invoke(
    Type.Void, 4662, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle),
    arg(Type.Any, p2)
  )
end

-- BOOL IS_SPECIAL_ABILITY_ENABLED(Player player, Any p1) // 0xB1D200FE26AEF3CB
function PLAYER.IS_SPECIAL_ABILITY_ENABLED(player, p1)
  return native.invoke(
    Type.Bool, 4663, false,
    arg(Type.Player, player),
    arg(Type.Any, p1)
  )
end

-- void SET_SPECIAL_ABILITY_MULTIPLIER(float multiplier) // 0xA49C426ED0CA4AB7
function PLAYER.SET_SPECIAL_ABILITY_MULTIPLIER(multiplier)
  native.invoke(
    Type.Void, 4664, false,
    arg(Type.Float, multiplier)
  )
end

-- void UPDATE_SPECIAL_ABILITY_FROM_STAT(Player player, Any p1) // 0xFFEE8FA29AB9A18E
function PLAYER.UPDATE_SPECIAL_ABILITY_FROM_STAT(player, p1)
  native.invoke(
    Type.Void, 4665, false,
    arg(Type.Player, player),
    arg(Type.Any, p1)
  )
end

-- BOOL GET_IS_PLAYER_DRIVING_ON_HIGHWAY(Player player) // 0x5FC472C501CCADB3
--[[
Appears once in "re_dealgonewrong"
--]]
function PLAYER.GET_IS_PLAYER_DRIVING_ON_HIGHWAY(player)
  return native.invoke(
    Type.Bool, 4666, false,
    arg(Type.Player, player)
  )
end

-- BOOL GET_IS_PLAYER_DRIVING_WRECKLESS(Player player, int p1) // 0xF10B44FD479D69F3
--[[
Only 1 occurrence. p1 was 2.
--]]
function PLAYER.GET_IS_PLAYER_DRIVING_WRECKLESS(player, p1)
  return native.invoke(
    Type.Bool, 4667, false,
    arg(Type.Player, player),
    arg(Type.Int, p1)
  )
end

-- BOOL GET_IS_MOPPING_AREA_FREE_IN_FRONT_OF_PLAYER(Player player, float p1) // 0xDD2620B7B9D16FF1
--[[
2 occurrences in agency_heist3a. p1 was 0.7f then 0.4f.
--]]
function PLAYER.GET_IS_MOPPING_AREA_FREE_IN_FRONT_OF_PLAYER(player, p1)
  return native.invoke(
    Type.Bool, 4668, false,
    arg(Type.Player, player),
    arg(Type.Float, p1)
  )
end

-- void START_PLAYER_TELEPORT(Player player, float x, float y, float z, float heading, BOOL p5, BOOL findCollisionLand, BOOL p7) // 0xAD15F075A4DA0FDE
--[[
`findCollisionLand`: This teleports the player to land when set to true and will not consider the Z coordinate parameter provided by you. It will automatically put the Z coordinate so that you don't fall from sky.
--]]
function PLAYER.START_PLAYER_TELEPORT(player, x, y, z, heading, p5, findCollisionLand, p7)
  native.invoke(
    Type.Void, 4669, false,
    arg(Type.Player, player),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, heading),
    arg(Type.Bool, p5),
    arg(Type.Bool, findCollisionLand),
    arg(Type.Bool, p7)
  )
end

-- BOOL UPDATE_PLAYER_TELEPORT(Player player) // 0xE23D5873C2394C61
function PLAYER.UPDATE_PLAYER_TELEPORT(player)
  return native.invoke(
    Type.Bool, 4670, false,
    arg(Type.Player, player)
  )
end

-- void STOP_PLAYER_TELEPORT() // 0xC449EDED9D73009C
--[[
Disables the player's teleportation
--]]
function PLAYER.STOP_PLAYER_TELEPORT()
  native.invoke(
    Type.Void, 4671, false
  )
end

-- BOOL IS_PLAYER_TELEPORT_ACTIVE() // 0x02B15662D7F8886F
function PLAYER.IS_PLAYER_TELEPORT_ACTIVE()
  return native.invoke(
    Type.Bool, 4672, false
  )
end

-- float GET_PLAYER_CURRENT_STEALTH_NOISE(Player player) // 0x2F395D61F3A1F877
function PLAYER.GET_PLAYER_CURRENT_STEALTH_NOISE(player)
  return native.invoke(
    Type.Float, 4673, false,
    arg(Type.Player, player)
  )
end

-- void SET_PLAYER_HEALTH_RECHARGE_MULTIPLIER(Player player, float regenRate) // 0x5DB660B38DD98A31
--[[
`regenRate`: The recharge multiplier, a value between 0.0 and 1.0.
Use 1.0 to reset it back to normal
--]]
function PLAYER.SET_PLAYER_HEALTH_RECHARGE_MULTIPLIER(player, regenRate)
  native.invoke(
    Type.Void, 4674, false,
    arg(Type.Player, player),
    arg(Type.Float, regenRate)
  )
end

-- float GET_PLAYER_HEALTH_RECHARGE_MAX_PERCENT(Player player) // 0x8BC515BAE4AAF8FF
function PLAYER.GET_PLAYER_HEALTH_RECHARGE_MAX_PERCENT(player)
  return native.invoke(
    Type.Float, 4675, false,
    arg(Type.Player, player)
  )
end

-- void SET_PLAYER_HEALTH_RECHARGE_MAX_PERCENT(Player player, float limit) // 0xC388A0F065F5BC34
function PLAYER.SET_PLAYER_HEALTH_RECHARGE_MAX_PERCENT(player, limit)
  native.invoke(
    Type.Void, 4676, false,
    arg(Type.Player, player),
    arg(Type.Float, limit)
  )
end

-- void DISABLE_PLAYER_HEALTH_RECHARGE(Player player) // 0xBCB06442F7E52666
--[[
Needs to be called every frame.
--]]
function PLAYER.DISABLE_PLAYER_HEALTH_RECHARGE(player)
  native.invoke(
    Type.Void, 4677, false,
    arg(Type.Player, player)
  )
end

-- void SET_PLAYER_FALL_DISTANCE_TO_TRIGGER_RAGDOLL_OVERRIDE(Player player, float p1) // 0xEFD79FA81DFBA9CB
function PLAYER.SET_PLAYER_FALL_DISTANCE_TO_TRIGGER_RAGDOLL_OVERRIDE(player, p1)
  native.invoke(
    Type.Void, 4678, false,
    arg(Type.Player, player),
    arg(Type.Float, p1)
  )
end

-- void SET_PLAYER_WEAPON_DAMAGE_MODIFIER(Player player, float modifier) // 0xCE07B9F7817AADA3
--[[
This modifies the damage value of your weapon. Whether it is a multiplier or base damage is unknown. 

Based on tests, it is unlikely to be a multiplier.

modifier's min value is 0.1
--]]
function PLAYER.SET_PLAYER_WEAPON_DAMAGE_MODIFIER(player, modifier)
  native.invoke(
    Type.Void, 4679, false,
    arg(Type.Player, player),
    arg(Type.Float, modifier)
  )
end

-- void SET_PLAYER_WEAPON_DEFENSE_MODIFIER(Player player, float modifier) // 0x2D83BC011CA14A3C
--[[
modifier's min value is 0.1
--]]
function PLAYER.SET_PLAYER_WEAPON_DEFENSE_MODIFIER(player, modifier)
  native.invoke(
    Type.Void, 4680, false,
    arg(Type.Player, player),
    arg(Type.Float, modifier)
  )
end

-- void SET_PLAYER_WEAPON_MINIGUN_DEFENSE_MODIFIER(Player player, float modifier) // 0xBCFDE9EDE4CF27DC
--[[
modifier's min value is 0.1
--]]
function PLAYER.SET_PLAYER_WEAPON_MINIGUN_DEFENSE_MODIFIER(player, modifier)
  native.invoke(
    Type.Void, 4681, false,
    arg(Type.Player, player),
    arg(Type.Float, modifier)
  )
end

-- void SET_PLAYER_MELEE_WEAPON_DAMAGE_MODIFIER(Player player, float modifier, BOOL p2) // 0x4A3DC7ECCC321032
--[[
modifier's min value is 0.1
--]]
function PLAYER.SET_PLAYER_MELEE_WEAPON_DAMAGE_MODIFIER(player, modifier, p2)
  native.invoke(
    Type.Void, 4682, false,
    arg(Type.Player, player),
    arg(Type.Float, modifier),
    arg(Type.Bool, p2)
  )
end

-- void SET_PLAYER_MELEE_WEAPON_DEFENSE_MODIFIER(Player player, float modifier) // 0xAE540335B4ABC4E2
--[[
modifier's min value is 0.1
--]]
function PLAYER.SET_PLAYER_MELEE_WEAPON_DEFENSE_MODIFIER(player, modifier)
  native.invoke(
    Type.Void, 4683, false,
    arg(Type.Player, player),
    arg(Type.Float, modifier)
  )
end

-- void SET_PLAYER_VEHICLE_DAMAGE_MODIFIER(Player player, float modifier) // 0xA50E117CDDF82F0C
--[[
modifier's min value is 0.1
--]]
function PLAYER.SET_PLAYER_VEHICLE_DAMAGE_MODIFIER(player, modifier)
  native.invoke(
    Type.Void, 4684, false,
    arg(Type.Player, player),
    arg(Type.Float, modifier)
  )
end

-- void SET_PLAYER_VEHICLE_DEFENSE_MODIFIER(Player player, float modifier) // 0x4C60E6EFDAFF2462
--[[
modifier's min value is 0.1
--]]
function PLAYER.SET_PLAYER_VEHICLE_DEFENSE_MODIFIER(player, modifier)
  native.invoke(
    Type.Void, 4685, false,
    arg(Type.Player, player),
    arg(Type.Float, modifier)
  )
end

-- void SET_PLAYER_MAX_EXPLOSIVE_DAMAGE(Player player, float p1) // 0x8D768602ADEF2245
function PLAYER.SET_PLAYER_MAX_EXPLOSIVE_DAMAGE(player, p1)
  native.invoke(
    Type.Void, 4686, false,
    arg(Type.Player, player),
    arg(Type.Float, p1)
  )
end

-- void SET_PLAYER_EXPLOSIVE_DAMAGE_MODIFIER(Player player, Any p1) // 0xD821056B9ACF8052
function PLAYER.SET_PLAYER_EXPLOSIVE_DAMAGE_MODIFIER(player, p1)
  native.invoke(
    Type.Void, 4687, false,
    arg(Type.Player, player),
    arg(Type.Any, p1)
  )
end

-- void SET_PLAYER_WEAPON_TAKEDOWN_DEFENSE_MODIFIER(Player player, float p1) // 0x31E90B8873A4CD3B
function PLAYER.SET_PLAYER_WEAPON_TAKEDOWN_DEFENSE_MODIFIER(player, p1)
  native.invoke(
    Type.Void, 4688, false,
    arg(Type.Player, player),
    arg(Type.Float, p1)
  )
end

-- void SET_PLAYER_PARACHUTE_TINT_INDEX(Player player, int tintIndex) // 0xA3D0E54541D9A5E5
--[[
Tints:
   None = -1,
    Rainbow = 0,
  Red = 1,
  SeasideStripes = 2,
   WidowMaker = 3,
   Patriot = 4,
  Blue = 5,
 Black = 6,
    Hornet = 7,
   AirFocce = 8,
 Desert = 9,
   Shadow = 10,
  HighAltitude = 11,
    Airbone = 12,
 Sunrise = 13,

--]]
function PLAYER.SET_PLAYER_PARACHUTE_TINT_INDEX(player, tintIndex)
  native.invoke(
    Type.Void, 4689, false,
    arg(Type.Player, player),
    arg(Type.Int, tintIndex)
  )
end

-- void GET_PLAYER_PARACHUTE_TINT_INDEX(Player player, int* tintIndex) // 0x75D3F7A1B0D9B145
--[[
Tints:
  None = -1,
    Rainbow = 0,
  Red = 1,
  SeasideStripes = 2,
   WidowMaker = 3,
   Patriot = 4,
  Blue = 5,
 Black = 6,
    Hornet = 7,
   AirFocce = 8,
 Desert = 9,
   Shadow = 10,
  HighAltitude = 11,
    Airbone = 12,
 Sunrise = 13,
--]]
function PLAYER.GET_PLAYER_PARACHUTE_TINT_INDEX(player, tintIndex)
  native.invoke(
    Type.Void, 4690, false,
    arg(Type.Player, player),
    arg(Type.Int, tintIndex)
  )
end

-- void SET_PLAYER_RESERVE_PARACHUTE_TINT_INDEX(Player player, int index) // 0xAF04C87F5DC1DF38
--[[
Tints:
   None = -1,
    Rainbow = 0,
  Red = 1,
  SeasideStripes = 2,
   WidowMaker = 3,
   Patriot = 4,
  Blue = 5,
 Black = 6,
    Hornet = 7,
   AirFocce = 8,
 Desert = 9,
   Shadow = 10,
  HighAltitude = 11,
    Airbone = 12,
 Sunrise = 13,
--]]
function PLAYER.SET_PLAYER_RESERVE_PARACHUTE_TINT_INDEX(player, index)
  native.invoke(
    Type.Void, 4691, false,
    arg(Type.Player, player),
    arg(Type.Int, index)
  )
end

-- void GET_PLAYER_RESERVE_PARACHUTE_TINT_INDEX(Player player, int* index) // 0xD5A016BC3C09CF40
--[[
Tints:
  None = -1,
    Rainbow = 0,
  Red = 1,
  SeasideStripes = 2,
   WidowMaker = 3,
   Patriot = 4,
  Blue = 5,
 Black = 6,
    Hornet = 7,
   AirFocce = 8,
 Desert = 9,
   Shadow = 10,
  HighAltitude = 11,
    Airbone = 12,
 Sunrise = 13,
--]]
function PLAYER.GET_PLAYER_RESERVE_PARACHUTE_TINT_INDEX(player, index)
  native.invoke(
    Type.Void, 4692, false,
    arg(Type.Player, player),
    arg(Type.Int, index)
  )
end

-- void SET_PLAYER_PARACHUTE_PACK_TINT_INDEX(Player player, int tintIndex) // 0x93B0FB27C9A04060
--[[
tints 0- 13
0 - unkown
1 - unkown
2 - unkown
3 - unkown
4 - unkown
--]]
function PLAYER.SET_PLAYER_PARACHUTE_PACK_TINT_INDEX(player, tintIndex)
  native.invoke(
    Type.Void, 4693, false,
    arg(Type.Player, player),
    arg(Type.Int, tintIndex)
  )
end

-- void GET_PLAYER_PARACHUTE_PACK_TINT_INDEX(Player player, int* tintIndex) // 0x6E9C742F340CE5A2
function PLAYER.GET_PLAYER_PARACHUTE_PACK_TINT_INDEX(player, tintIndex)
  native.invoke(
    Type.Void, 4694, false,
    arg(Type.Player, player),
    arg(Type.Int, tintIndex)
  )
end

-- void SET_PLAYER_HAS_RESERVE_PARACHUTE(Player player) // 0x7DDAB28D31FAC363
function PLAYER.SET_PLAYER_HAS_RESERVE_PARACHUTE(player)
  native.invoke(
    Type.Void, 4695, false,
    arg(Type.Player, player)
  )
end

-- BOOL GET_PLAYER_HAS_RESERVE_PARACHUTE(Player player) // 0x5DDFE2FF727F3CA3
function PLAYER.GET_PLAYER_HAS_RESERVE_PARACHUTE(player)
  return native.invoke(
    Type.Bool, 4696, false,
    arg(Type.Player, player)
  )
end

-- void SET_PLAYER_CAN_LEAVE_PARACHUTE_SMOKE_TRAIL(Player player, BOOL enabled) // 0xF401B182DBA8AF53
function PLAYER.SET_PLAYER_CAN_LEAVE_PARACHUTE_SMOKE_TRAIL(player, enabled)
  native.invoke(
    Type.Void, 4697, false,
    arg(Type.Player, player),
    arg(Type.Bool, enabled)
  )
end

-- void SET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR(Player player, int r, int g, int b) // 0x8217FD371A4625CF
function PLAYER.SET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR(player, r, g, b)
  native.invoke(
    Type.Void, 4698, false,
    arg(Type.Player, player),
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b)
  )
end

-- void GET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR(Player player, int* r, int* g, int* b) // 0xEF56DBABD3CD4887
function PLAYER.GET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR(player, r, g, b)
  native.invoke(
    Type.Void, 4699, false,
    arg(Type.Player, player),
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b)
  )
end

-- void SET_PLAYER_PHONE_PALETTE_IDX(Player player, int flags) // 0x11D5F725F0E780E0
--[[
example:

flags: 0-6

PLAYER::SET_PLAYER_RESET_FLAG_PREFER_REAR_SEATS(PLAYER::PLAYER_ID(), 6);

wouldnt the flag be the seatIndex?
--]]
function PLAYER.SET_PLAYER_PHONE_PALETTE_IDX(player, flags)
  native.invoke(
    Type.Void, 4700, false,
    arg(Type.Player, player),
    arg(Type.Int, flags)
  )
end

-- void SET_PLAYER_NOISE_MULTIPLIER(Player player, float multiplier) // 0xDB89EF50FF25FCE9
function PLAYER.SET_PLAYER_NOISE_MULTIPLIER(player, multiplier)
  native.invoke(
    Type.Void, 4701, false,
    arg(Type.Player, player),
    arg(Type.Float, multiplier)
  )
end

-- void SET_PLAYER_SNEAKING_NOISE_MULTIPLIER(Player player, float multiplier) // 0xB2C1A29588A9F47C
--[[
Values around 1.0f to 2.0f used in game scripts.
--]]
function PLAYER.SET_PLAYER_SNEAKING_NOISE_MULTIPLIER(player, multiplier)
  native.invoke(
    Type.Void, 4702, false,
    arg(Type.Player, player),
    arg(Type.Float, multiplier)
  )
end

-- BOOL CAN_PED_HEAR_PLAYER(Player player, Ped ped) // 0xF297383AA91DCA29
function PLAYER.CAN_PED_HEAR_PLAYER(player, ped)
  return native.invoke(
    Type.Bool, 4703, false,
    arg(Type.Player, player),
    arg(Type.Ped, ped)
  )
end

-- void SIMULATE_PLAYER_INPUT_GAIT(Player player, float amount, int gaitType, float speed, BOOL p4, BOOL p5, Any p6) // 0x477D5D63E63ECA5D
--[[
This is to make the player walk without accepting input from INPUT.

gaitType is in increments of 100s. 2000, 500, 300, 200, etc.

p4 is always 1 and p5 is always 0.

C# Example :

Function.Call(Hash.SIMULATE_PLAYER_INPUT_GAIT, Game.Player, 1.0f, 100, 1.0f, 1, 0); //Player will go forward for 100ms
--]]
function PLAYER.SIMULATE_PLAYER_INPUT_GAIT(player, amount, gaitType, speed, p4, p5, p6)
  native.invoke(
    Type.Void, 4704, false,
    arg(Type.Player, player),
    arg(Type.Float, amount),
    arg(Type.Int, gaitType),
    arg(Type.Float, speed),
    arg(Type.Bool, p4),
    arg(Type.Bool, p5),
    arg(Type.Any, p6)
  )
end

-- void RESET_PLAYER_INPUT_GAIT(Player player) // 0x19531C47A2ABD691
function PLAYER.RESET_PLAYER_INPUT_GAIT(player)
  native.invoke(
    Type.Void, 4705, false,
    arg(Type.Player, player)
  )
end

-- void SET_AUTO_GIVE_PARACHUTE_WHEN_ENTER_PLANE(Player player, BOOL toggle) // 0x9F343285A00B4BB6
function PLAYER.SET_AUTO_GIVE_PARACHUTE_WHEN_ENTER_PLANE(player, toggle)
  native.invoke(
    Type.Void, 4706, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- void SET_AUTO_GIVE_SCUBA_GEAR_WHEN_EXIT_VEHICLE(Player player, BOOL toggle) // 0xD2B315B6689D537D
function PLAYER.SET_AUTO_GIVE_SCUBA_GEAR_WHEN_EXIT_VEHICLE(player, toggle)
  native.invoke(
    Type.Void, 4707, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PLAYER_STEALTH_PERCEPTION_MODIFIER(Player player, float value) // 0x4E9021C1FCDD507A
function PLAYER.SET_PLAYER_STEALTH_PERCEPTION_MODIFIER(player, value)
  native.invoke(
    Type.Void, 4708, false,
    arg(Type.Player, player),
    arg(Type.Float, value)
  )
end

-- BOOL IS_REMOTE_PLAYER_IN_NON_CLONED_VEHICLE(Player player) // 0x690A61A6D13583F6
function PLAYER.IS_REMOTE_PLAYER_IN_NON_CLONED_VEHICLE(player)
  return native.invoke(
    Type.Bool, 4709, false,
    arg(Type.Player, player)
  )
end

-- void INCREASE_PLAYER_JUMP_SUPPRESSION_RANGE(Player player) // 0x9EDD76E87D5D51BA
function PLAYER.INCREASE_PLAYER_JUMP_SUPPRESSION_RANGE(player)
  native.invoke(
    Type.Void, 4710, false,
    arg(Type.Player, player)
  )
end

-- void SET_PLAYER_SIMULATE_AIMING(Player player, BOOL toggle) // 0xC54C95DA968EC5B5
function PLAYER.SET_PLAYER_SIMULATE_AIMING(player, toggle)
  native.invoke(
    Type.Void, 4711, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PLAYER_CLOTH_PIN_FRAMES(Player player, int p1) // 0x749FADDF97DFE930
function PLAYER.SET_PLAYER_CLOTH_PIN_FRAMES(player, p1)
  native.invoke(
    Type.Void, 4712, false,
    arg(Type.Player, player),
    arg(Type.Int, p1)
  )
end

-- void SET_PLAYER_CLOTH_PACKAGE_INDEX(int index) // 0x9F7BBA2EA6372500
--[[
Every occurrence was either 0 or 2.
--]]
function PLAYER.SET_PLAYER_CLOTH_PACKAGE_INDEX(index)
  native.invoke(
    Type.Void, 4713, false,
    arg(Type.Int, index)
  )
end

-- void SET_PLAYER_CLOTH_LOCK_COUNTER(int value) // 0x14D913B777DFF5DA
--[[
6 matches across 4 scripts. 5 occurrences were 240. The other was 255.
--]]
function PLAYER.SET_PLAYER_CLOTH_LOCK_COUNTER(value)
  native.invoke(
    Type.Void, 4714, false,
    arg(Type.Int, value)
  )
end

-- void PLAYER_ATTACH_VIRTUAL_BOUND(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7) // 0xED51733DC73AED51
--[[
Only 1 match. ob_sofa_michael.

PLAYER::PLAYER_ATTACH_VIRTUAL_BOUND(-804.5928f, 173.1801f, 71.68436f, 0f, 0f, 0.590625f, 1f, 0.7f);1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;
--]]
function PLAYER.PLAYER_ATTACH_VIRTUAL_BOUND(p0, p1, p2, p3, p4, p5, p6, p7)
  native.invoke(
    Type.Void, 4715, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Float, p6),
    arg(Type.Float, p7)
  )
end

-- void PLAYER_DETACH_VIRTUAL_BOUND() // 0x1DD5897E2FA6E7C9
--[[
1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;
--]]
function PLAYER.PLAYER_DETACH_VIRTUAL_BOUND()
  native.invoke(
    Type.Void, 4716, false
  )
end

-- BOOL HAS_PLAYER_BEEN_SPOTTED_IN_STOLEN_VEHICLE(Player player) // 0xD705740BB0A1CF4C
function PLAYER.HAS_PLAYER_BEEN_SPOTTED_IN_STOLEN_VEHICLE(player)
  return native.invoke(
    Type.Bool, 4717, false,
    arg(Type.Player, player)
  )
end

-- BOOL IS_PLAYER_BATTLE_AWARE(Player player) // 0x38D28DA81E4E9BF9
--[[
Returns true if an unk value is greater than 0.0f
--]]
function PLAYER.IS_PLAYER_BATTLE_AWARE(player)
  return native.invoke(
    Type.Bool, 4718, false,
    arg(Type.Player, player)
  )
end

-- BOOL GET_PLAYER_RECEIVED_BATTLE_EVENT_RECENTLY(Player player, int p1, BOOL p2) // 0xBC0753C9CA14B506
function PLAYER.GET_PLAYER_RECEIVED_BATTLE_EVENT_RECENTLY(player, p1, p2)
  return native.invoke(
    Type.Bool, 4719, false,
    arg(Type.Player, player),
    arg(Type.Int, p1),
    arg(Type.Bool, p2)
  )
end

-- void EXTEND_WORLD_BOUNDARY_FOR_PLAYER(float x, float y, float z) // 0x5006D96C995A5827
--[[
Appears only 3 times in the scripts, more specifically in michael1.ysc

-
This can be used to prevent dying if you are "out of the world"
--]]
function PLAYER.EXTEND_WORLD_BOUNDARY_FOR_PLAYER(x, y, z)
  native.invoke(
    Type.Void, 4720, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void RESET_WORLD_BOUNDARY_FOR_PLAYER() // 0xDA1DF03D5A315F4E
function PLAYER.RESET_WORLD_BOUNDARY_FOR_PLAYER()
  native.invoke(
    Type.Void, 4721, false
  )
end

-- BOOL IS_PLAYER_RIDING_TRAIN(Player player) // 0x4EC12697209F2196
--[[
Returns true if the player is riding a train.
--]]
function PLAYER.IS_PLAYER_RIDING_TRAIN(player)
  return native.invoke(
    Type.Bool, 4722, false,
    arg(Type.Player, player)
  )
end

-- BOOL HAS_PLAYER_LEFT_THE_WORLD(Player player) // 0xD55DDFB47991A294
function PLAYER.HAS_PLAYER_LEFT_THE_WORLD(player)
  return native.invoke(
    Type.Bool, 4723, false,
    arg(Type.Player, player)
  )
end

-- void SET_PLAYER_LEAVE_PED_BEHIND(Player player, BOOL toggle) // 0xFF300C7649724A0B
function PLAYER.SET_PLAYER_LEAVE_PED_BEHIND(player, toggle)
  native.invoke(
    Type.Void, 4724, false,
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PLAYER_PARACHUTE_VARIATION_OVERRIDE(Player player, int p1, Any p2, Any p3, BOOL p4) // 0xD9284A8C0D48352C
--[[
p1 was always 5.
p4 was always false.
--]]
function PLAYER.SET_PLAYER_PARACHUTE_VARIATION_OVERRIDE(player, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 4725, false,
    arg(Type.Player, player),
    arg(Type.Int, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Bool, p4)
  )
end

-- void CLEAR_PLAYER_PARACHUTE_VARIATION_OVERRIDE(Player player) // 0x0F4CC924CF8C7B21
function PLAYER.CLEAR_PLAYER_PARACHUTE_VARIATION_OVERRIDE(player)
  native.invoke(
    Type.Void, 4726, false,
    arg(Type.Player, player)
  )
end

-- void SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(Player player, Hash model) // 0x977DB4641F6FC3DB
function PLAYER.SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(player, model)
  native.invoke(
    Type.Void, 4727, false,
    arg(Type.Player, player),
    arg(Type.Hash, model)
  )
end

-- void SET_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE(Player player, Hash model) // 0x0764486AEDE748DB
function PLAYER.SET_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE(player, model)
  native.invoke(
    Type.Void, 4728, false,
    arg(Type.Player, player),
    arg(Type.Hash, model)
  )
end

-- Hash GET_PLAYER_PARACHUTE_MODEL_OVERRIDE(Player player) // 0xC219887CA3E65C41
function PLAYER.GET_PLAYER_PARACHUTE_MODEL_OVERRIDE(player)
  return native.invoke(
    Type.Hash, 4729, false,
    arg(Type.Player, player)
  )
end

-- Hash GET_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE(Player player) // 0x37FAAA68DCA9D08D
function PLAYER.GET_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE(player)
  return native.invoke(
    Type.Hash, 4730, false,
    arg(Type.Player, player)
  )
end

-- void CLEAR_PLAYER_PARACHUTE_MODEL_OVERRIDE(Player player) // 0x8753997EB5F6EE3F
function PLAYER.CLEAR_PLAYER_PARACHUTE_MODEL_OVERRIDE(player)
  native.invoke(
    Type.Void, 4731, false,
    arg(Type.Player, player)
  )
end

-- void CLEAR_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE(Player player) // 0x290D248E25815AE8
function PLAYER.CLEAR_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE(player)
  native.invoke(
    Type.Void, 4732, false,
    arg(Type.Player, player)
  )
end

-- void SET_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(Player player, Hash model) // 0xDC80A4C2F18A2B64
function PLAYER.SET_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(player, model)
  native.invoke(
    Type.Void, 4733, false,
    arg(Type.Player, player),
    arg(Type.Hash, model)
  )
end

-- void CLEAR_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(Player player) // 0x10C54E4389C12B42
function PLAYER.CLEAR_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(player)
  native.invoke(
    Type.Void, 4734, false,
    arg(Type.Player, player)
  )
end

-- void DISABLE_PLAYER_VEHICLE_REWARDS(Player player) // 0xC142BE3BB9CE125F
function PLAYER.DISABLE_PLAYER_VEHICLE_REWARDS(player)
  native.invoke(
    Type.Void, 4735, false,
    arg(Type.Player, player)
  )
end

-- void SET_PLAYER_SPECTATED_VEHICLE_RADIO_OVERRIDE(BOOL p0) // 0x2F7CEB6520288061
function PLAYER.SET_PLAYER_SPECTATED_VEHICLE_RADIO_OVERRIDE(p0)
  native.invoke(
    Type.Void, 4736, false,
    arg(Type.Bool, p0)
  )
end

-- void SET_PLAYER_BLUETOOTH_STATE(Player player, BOOL state) // 0x5DC40A8869C22141
function PLAYER.SET_PLAYER_BLUETOOTH_STATE(player, state)
  native.invoke(
    Type.Void, 4737, false,
    arg(Type.Player, player),
    arg(Type.Bool, state)
  )
end

-- BOOL IS_PLAYER_BLUETOOTH_ENABLE(Player player) // 0x65FAEE425DE637B0
function PLAYER.IS_PLAYER_BLUETOOTH_ENABLE(player)
  return native.invoke(
    Type.Bool, 4738, false,
    arg(Type.Player, player)
  )
end

-- void DISABLE_CAMERA_VIEW_MODE_CYCLE(Player player) // 0x5501B7A5CDB79D37
function PLAYER.DISABLE_CAMERA_VIEW_MODE_CYCLE(player)
  native.invoke(
    Type.Void, 4739, false,
    arg(Type.Player, player)
  )
end

-- int GET_PLAYER_FAKE_WANTED_LEVEL(Player player) // 0x56105E599CAB0EFA
function PLAYER.GET_PLAYER_FAKE_WANTED_LEVEL(player)
  return native.invoke(
    Type.Int, 4740, false,
    arg(Type.Player, player)
  )
end

-- void SET_PLAYER_CAN_DAMAGE_PLAYER(Player player1, Player player2, BOOL toggle) // 0x55FCC0C390620314
function PLAYER.SET_PLAYER_CAN_DAMAGE_PLAYER(player1, player2, toggle)
  native.invoke(
    Type.Void, 4741, false,
    arg(Type.Player, player1),
    arg(Type.Player, player2),
    arg(Type.Bool, toggle)
  )
end

-- void SET_APPLY_WAYPOINT_OF_PLAYER(Player player, int hudColor) // 0x2382AB11450AE7BA
function PLAYER.SET_APPLY_WAYPOINT_OF_PLAYER(player, hudColor)
  native.invoke(
    Type.Void, 4742, false,
    arg(Type.Player, player),
    arg(Type.Int, hudColor)
  )
end

-- BOOL IS_PLAYER_VEHICLE_WEAPON_TOGGLED_TO_NON_HOMING(Any p0) // 0x6E4361FF3E8CD7CA
function PLAYER.IS_PLAYER_VEHICLE_WEAPON_TOGGLED_TO_NON_HOMING(p0)
  return native.invoke(
    Type.Bool, 4743, false,
    arg(Type.Any, p0)
  )
end

-- void SET_PLAYER_VEHICLE_WEAPON_TO_NON_HOMING(Any p0) // 0x237440E46D918649
--[[
Unsets playerPed+330 if the current weapon has certain flags.
--]]
function PLAYER.SET_PLAYER_VEHICLE_WEAPON_TO_NON_HOMING(p0)
  native.invoke(
    Type.Void, 4744, false,
    arg(Type.Any, p0)
  )
end

-- void SET_PLAYER_HOMING_DISABLED_FOR_ALL_VEHICLE_WEAPONS(Any p0, Any p1) // 0xEE4EBDD2593BA844
function PLAYER.SET_PLAYER_HOMING_DISABLED_FOR_ALL_VEHICLE_WEAPONS(p0, p1)
  native.invoke(
    Type.Void, 4745, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void ADD_PLAYER_TARGETABLE_ENTITY(Player player, Entity entity) // 0x9097EB6D4BB9A12A
function PLAYER.ADD_PLAYER_TARGETABLE_ENTITY(player, entity)
  native.invoke(
    Type.Void, 4746, false,
    arg(Type.Player, player),
    arg(Type.Entity, entity)
  )
end

-- void REMOVE_PLAYER_TARGETABLE_ENTITY(Player player, Entity entity) // 0x9F260BFB59ADBCA3
function PLAYER.REMOVE_PLAYER_TARGETABLE_ENTITY(player, entity)
  native.invoke(
    Type.Void, 4747, false,
    arg(Type.Player, player),
    arg(Type.Entity, entity)
  )
end

-- void SET_PLAYER_PREVIOUS_VARIATION_DATA(Player player, int p1, int p2, Any p3, Any p4, Any p5) // 0x7BAE68775557AE0B
function PLAYER.SET_PLAYER_PREVIOUS_VARIATION_DATA(player, p1, p2, p3, p4, p5)
  native.invoke(
    Type.Void, 4748, false,
    arg(Type.Player, player),
    arg(Type.Int, p1),
    arg(Type.Int, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5)
  )
end

-- void REMOVE_SCRIPT_FIRE_POSITION() // 0x7148E0F43D11F0D9
--[[
Resets values set by SET_SCRIPT_FIRE_POSITION
--]]
function PLAYER.REMOVE_SCRIPT_FIRE_POSITION()
  native.invoke(
    Type.Void, 4749, false
  )
end

-- void SET_SCRIPT_FIRE_POSITION(float coordX, float coordY, float coordZ) // 0x70A382ADEC069DD3
function PLAYER.SET_SCRIPT_FIRE_POSITION(coordX, coordY, coordZ)
  native.invoke(
    Type.Void, 4750, false,
    arg(Type.Float, coordX),
    arg(Type.Float, coordY),
    arg(Type.Float, coordZ)
  )
end


RECORDING = {}

-- void REPLAY_START_EVENT(int p0) // 0x48621C9FCA3EBD28
function RECORDING.REPLAY_START_EVENT(p0)
  native.invoke(
    Type.Void, 4751, false,
    arg(Type.Int, p0)
  )
end

-- void REPLAY_STOP_EVENT() // 0x81CBAE94390F9F89
function RECORDING.REPLAY_STOP_EVENT()
  native.invoke(
    Type.Void, 4752, false
  )
end

-- void REPLAY_CANCEL_EVENT() // 0x13B350B8AD0EEE10
function RECORDING.REPLAY_CANCEL_EVENT()
  native.invoke(
    Type.Void, 4753, false
  )
end

-- void REPLAY_RECORD_BACK_FOR_TIME(float p0, float p1, int p2) // 0x293220DA1B46CEBC
function RECORDING.REPLAY_RECORD_BACK_FOR_TIME(p0, p1, p2)
  native.invoke(
    Type.Void, 4754, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1),
    arg(Type.Int, p2)
  )
end

-- void REPLAY_CHECK_FOR_EVENT_THIS_FRAME(const char* missionNameLabel, Any p1) // 0x208784099002BC30
--[[
-This function appears to be deprecated/ unused. Tracing the call internally leads to a _nullsub -

first one seems to be a string of a mission name, second one seems to be a bool/toggle

p1 was always 0.

--]]
function RECORDING.REPLAY_CHECK_FOR_EVENT_THIS_FRAME(missionNameLabel, p1)
  native.invoke(
    Type.Void, 4755, false,
    arg(Type.String, missionNameLabel),
    arg(Type.Any, p1)
  )
end

-- void REPLAY_PREVENT_RECORDING_THIS_FRAME() // 0xEB2D525B57F42B40
--[[
This disable the recording feature and has to be called every frame.
--]]
function RECORDING.REPLAY_PREVENT_RECORDING_THIS_FRAME()
  native.invoke(
    Type.Void, 4756, false
  )
end

-- void REPLAY_RESET_EVENT_INFO() // 0xF854439EFBB3B583
function RECORDING.REPLAY_RESET_EVENT_INFO()
  native.invoke(
    Type.Void, 4757, false
  )
end

-- void REPLAY_DISABLE_CAMERA_MOVEMENT_THIS_FRAME() // 0xAF66DCEE6609B148
--[[
This will disable the ability to make camera changes in R* Editor.
--]]
function RECORDING.REPLAY_DISABLE_CAMERA_MOVEMENT_THIS_FRAME()
  native.invoke(
    Type.Void, 4758, false
  )
end

-- void RECORD_GREATEST_MOMENT(int p0, int p1, int p2) // 0x66972397E0757E7A
--[[
Does nothing (it's a nullsub).
--]]
function RECORDING.RECORD_GREATEST_MOMENT(p0, p1, p2)
  native.invoke(
    Type.Void, 4759, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1),
    arg(Type.Int, p2)
  )
end

-- void START_REPLAY_RECORDING(int mode) // 0xC3AC2FFF9612AC81
--[[
Starts recording a replay.
If mode is 0, turns on action replay.
If mode is 1, starts recording.
If already recording a replay, does nothing.
--]]
function RECORDING.START_REPLAY_RECORDING(mode)
  native.invoke(
    Type.Void, 4760, false,
    arg(Type.Int, mode)
  )
end

-- void STOP_REPLAY_RECORDING() // 0x071A5197D6AFC8B3
--[[
Stops recording and saves the recorded clip.
--]]
function RECORDING.STOP_REPLAY_RECORDING()
  native.invoke(
    Type.Void, 4761, false
  )
end

-- void CANCEL_REPLAY_RECORDING() // 0x88BB3507ED41A240
--[[
Stops recording and discards the recorded clip.
--]]
function RECORDING.CANCEL_REPLAY_RECORDING()
  native.invoke(
    Type.Void, 4762, false
  )
end

-- BOOL SAVE_REPLAY_RECORDING() // 0x644546EC5287471B
function RECORDING.SAVE_REPLAY_RECORDING()
  return native.invoke(
    Type.Bool, 4763, false
  )
end

-- BOOL IS_REPLAY_RECORDING() // 0x1897CA71995A90B4
--[[
Checks if you're recording, returns TRUE when you start recording (F1) or turn on action replay (F2)

mov al, cs:g_bIsRecordingGameplay // byte_141DD0CD0 in b944
retn
--]]
function RECORDING.IS_REPLAY_RECORDING()
  return native.invoke(
    Type.Bool, 4764, false
  )
end

-- BOOL IS_REPLAY_INITIALIZED() // 0xDF4B952F7D381B95
function RECORDING.IS_REPLAY_INITIALIZED()
  return native.invoke(
    Type.Bool, 4765, false
  )
end

-- BOOL IS_REPLAY_AVAILABLE() // 0x4282E08174868BE3
function RECORDING.IS_REPLAY_AVAILABLE()
  return native.invoke(
    Type.Bool, 4766, false
  )
end

-- BOOL IS_REPLAY_RECORD_SPACE_AVAILABLE(BOOL p0) // 0x33D47E85B476ABCD
function RECORDING.IS_REPLAY_RECORD_SPACE_AVAILABLE(p0)
  return native.invoke(
    Type.Bool, 4767, false,
    arg(Type.Bool, p0)
  )
end


REPLAY = {}

-- void REGISTER_EFFECT_FOR_REPLAY_EDITOR(const char* p0, BOOL p1) // 0x7E2BD3EF6C205F09
--[[
Does nothing (it's a nullsub).
--]]
function REPLAY.REGISTER_EFFECT_FOR_REPLAY_EDITOR(p0, p1)
  native.invoke(
    Type.Void, 4768, false,
    arg(Type.String, p0),
    arg(Type.Bool, p1)
  )
end

-- BOOL REPLAY_SYSTEM_HAS_REQUESTED_A_SCRIPT_CLEANUP() // 0x95AB8B5C992C7B58
--[[
Returns a bool if interior rendering is disabled, if yes, all "normal" rendered interiors are invisible
--]]
function REPLAY.REPLAY_SYSTEM_HAS_REQUESTED_A_SCRIPT_CLEANUP()
  return native.invoke(
    Type.Bool, 4769, false
  )
end

-- void SET_SCRIPTS_HAVE_CLEANED_UP_FOR_REPLAY_SYSTEM() // 0x5AD3932DAEB1E5D3
--[[
Disables some other rendering (internal)
--]]
function REPLAY.SET_SCRIPTS_HAVE_CLEANED_UP_FOR_REPLAY_SYSTEM()
  native.invoke(
    Type.Void, 4770, false
  )
end

-- void SET_REPLAY_SYSTEM_PAUSED_FOR_SAVE(BOOL p0) // 0xE058175F8EAFE79A
function REPLAY.SET_REPLAY_SYSTEM_PAUSED_FOR_SAVE(p0)
  native.invoke(
    Type.Void, 4771, false,
    arg(Type.Bool, p0)
  )
end

-- void REPLAY_CONTROL_SHUTDOWN() // 0x3353D13F09307691
--[[
Sets (almost, not sure) all Rockstar Editor values (bIsRecording etc) to 0.
--]]
function REPLAY.REPLAY_CONTROL_SHUTDOWN()
  native.invoke(
    Type.Void, 4772, false
  )
end

-- void ACTIVATE_ROCKSTAR_EDITOR(int p0) // 0x49DA8145672B2725
--[[
Please note that you will need to call DO_SCREEN_FADE_IN after exiting the Rockstar Editor when you call this.
--]]
function REPLAY.ACTIVATE_ROCKSTAR_EDITOR(p0)
  native.invoke(
    Type.Void, 4773, false,
    arg(Type.Int, p0)
  )
end


SAVEMIGRATION = {}

-- BOOL SAVEMIGRATION_IS_MP_ENABLED() // 0x84B418E93894AC1C
function SAVEMIGRATION.SAVEMIGRATION_IS_MP_ENABLED()
  return native.invoke(
    Type.Bool, 4774, false
  )
end

-- BOOL SAVEMIGRATION_MP_REQUEST_ACCOUNTS() // 0x85F41F9225D08C72
function SAVEMIGRATION.SAVEMIGRATION_MP_REQUEST_ACCOUNTS()
  return native.invoke(
    Type.Bool, 4775, false
  )
end

-- int SAVEMIGRATION_MP_GET_ACCOUNTS_STATUS() // 0xC8CB5999919EA2CA
function SAVEMIGRATION.SAVEMIGRATION_MP_GET_ACCOUNTS_STATUS()
  return native.invoke(
    Type.Int, 4776, false
  )
end

-- int SAVEMIGRATION_MP_NUM_ACCOUNTS() // 0x77A16200E18E0C55
function SAVEMIGRATION.SAVEMIGRATION_MP_NUM_ACCOUNTS()
  return native.invoke(
    Type.Int, 4777, false
  )
end

-- BOOL SAVEMIGRATION_MP_GET_ACCOUNT(int p0, Any* p1) // 0xFCE2747EEF1D05FC
function SAVEMIGRATION.SAVEMIGRATION_MP_GET_ACCOUNT(p0, p1)
  return native.invoke(
    Type.Bool, 4778, false,
    arg(Type.Int, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL SAVEMIGRATION_MP_REQUEST_STATUS() // 0xE5E9746A66359F9D
function SAVEMIGRATION.SAVEMIGRATION_MP_REQUEST_STATUS()
  return native.invoke(
    Type.Bool, 4779, false
  )
end

-- int SAVEMIGRATION_MP_GET_STATUS() // 0x690B76BD2763E068
function SAVEMIGRATION.SAVEMIGRATION_MP_GET_STATUS()
  return native.invoke(
    Type.Int, 4780, false
  )
end


SCRIPT = {}

-- void REQUEST_SCRIPT(const char* scriptName) // 0x6EB5F71AA68F2E8E
function SCRIPT.REQUEST_SCRIPT(scriptName)
  native.invoke(
    Type.Void, 4781, false,
    arg(Type.String, scriptName)
  )
end

-- void SET_SCRIPT_AS_NO_LONGER_NEEDED(const char* scriptName) // 0xC90D2DCACD56184C
function SCRIPT.SET_SCRIPT_AS_NO_LONGER_NEEDED(scriptName)
  native.invoke(
    Type.Void, 4782, false,
    arg(Type.String, scriptName)
  )
end

-- BOOL HAS_SCRIPT_LOADED(const char* scriptName) // 0xE6CC9F3BA0FB9EF1
--[[
Returns if a script has been loaded into the game. Used to see if a script was loaded after requesting.
--]]
function SCRIPT.HAS_SCRIPT_LOADED(scriptName)
  return native.invoke(
    Type.Bool, 4783, false,
    arg(Type.String, scriptName)
  )
end

-- BOOL DOES_SCRIPT_EXIST(const char* scriptName) // 0xFC04745FBE67C19A
function SCRIPT.DOES_SCRIPT_EXIST(scriptName)
  return native.invoke(
    Type.Bool, 4784, false,
    arg(Type.String, scriptName)
  )
end

-- void REQUEST_SCRIPT_WITH_NAME_HASH(Hash scriptHash) // 0xD62A67D26D9653E6
--[[
formerly _REQUEST_STREAMED_SCRIPT
--]]
function SCRIPT.REQUEST_SCRIPT_WITH_NAME_HASH(scriptHash)
  native.invoke(
    Type.Void, 4785, false,
    arg(Type.Hash, scriptHash)
  )
end

-- void SET_SCRIPT_WITH_NAME_HASH_AS_NO_LONGER_NEEDED(Hash scriptHash) // 0xC5BC038960E9DB27
function SCRIPT.SET_SCRIPT_WITH_NAME_HASH_AS_NO_LONGER_NEEDED(scriptHash)
  native.invoke(
    Type.Void, 4786, false,
    arg(Type.Hash, scriptHash)
  )
end

-- BOOL HAS_SCRIPT_WITH_NAME_HASH_LOADED(Hash scriptHash) // 0x5F0F0C783EB16C04
function SCRIPT.HAS_SCRIPT_WITH_NAME_HASH_LOADED(scriptHash)
  return native.invoke(
    Type.Bool, 4787, false,
    arg(Type.Hash, scriptHash)
  )
end

-- BOOL DOES_SCRIPT_WITH_NAME_HASH_EXIST(Hash scriptHash) // 0xF86AA3C56BA31381
function SCRIPT.DOES_SCRIPT_WITH_NAME_HASH_EXIST(scriptHash)
  return native.invoke(
    Type.Bool, 4788, false,
    arg(Type.Hash, scriptHash)
  )
end

-- void TERMINATE_THREAD(int threadId) // 0xC8B189ED9138BCD4
function SCRIPT.TERMINATE_THREAD(threadId)
  native.invoke(
    Type.Void, 4789, false,
    arg(Type.Int, threadId)
  )
end

-- BOOL IS_THREAD_ACTIVE(int threadId) // 0x46E9AE36D8FA6417
function SCRIPT.IS_THREAD_ACTIVE(threadId)
  return native.invoke(
    Type.Bool, 4790, false,
    arg(Type.Int, threadId)
  )
end

-- const char* GET_NAME_OF_SCRIPT_WITH_THIS_ID(int threadId) // 0x05A42BA9FC8DA96B
function SCRIPT.GET_NAME_OF_SCRIPT_WITH_THIS_ID(threadId)
  return native.invoke(
    Type.Const char, 4791, false,
    arg(Type.Int, threadId)
  )
end

-- void SCRIPT_THREAD_ITERATOR_RESET() // 0xDADFADA5A20143A8
--[[
Starts a new iteration of the current threads.
Call this first, then SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID (0x30B4FA1C82DD4B9F)
--]]
function SCRIPT.SCRIPT_THREAD_ITERATOR_RESET()
  native.invoke(
    Type.Void, 4792, false
  )
end

-- int SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID() // 0x30B4FA1C82DD4B9F
--[[
If the function returns 0, the end of the iteration has been reached.
--]]
function SCRIPT.SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID()
  return native.invoke(
    Type.Int, 4793, false
  )
end

-- int GET_ID_OF_THIS_THREAD() // 0xC30338E8088E2E21
function SCRIPT.GET_ID_OF_THIS_THREAD()
  return native.invoke(
    Type.Int, 4794, false
  )
end

-- void TERMINATE_THIS_THREAD() // 0x1090044AD1DA76FA
function SCRIPT.TERMINATE_THIS_THREAD()
  native.invoke(
    Type.Void, 4795, false
  )
end

-- int GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(Hash scriptHash) // 0x2C83A9DA6BFFC4F9
--[[
Gets the number of instances of the specified script is currently running.

Actually returns numRefs - 1.
if (program)
	v3 = rage::scrProgram::GetNumRefs(program) - 1;
return v3;
--]]
function SCRIPT.GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(scriptHash)
  return native.invoke(
    Type.Int, 4796, false,
    arg(Type.Hash, scriptHash)
  )
end

-- const char* GET_THIS_SCRIPT_NAME() // 0x442E0A7EDE4A738A
function SCRIPT.GET_THIS_SCRIPT_NAME()
  return native.invoke(
    Type.Const char, 4797, false
  )
end

-- Hash GET_HASH_OF_THIS_SCRIPT_NAME() // 0x8A1C8B1738FFE87E
function SCRIPT.GET_HASH_OF_THIS_SCRIPT_NAME()
  return native.invoke(
    Type.Hash, 4798, false
  )
end

-- int GET_NUMBER_OF_EVENTS(int eventGroup) // 0x5F92A689A06620AA
--[[
eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
--]]
function SCRIPT.GET_NUMBER_OF_EVENTS(eventGroup)
  return native.invoke(
    Type.Int, 4799, false,
    arg(Type.Int, eventGroup)
  )
end

-- BOOL GET_EVENT_EXISTS(int eventGroup, int eventIndex) // 0x936E6168A9BCEDB5
--[[
eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
--]]
function SCRIPT.GET_EVENT_EXISTS(eventGroup, eventIndex)
  return native.invoke(
    Type.Bool, 4800, false,
    arg(Type.Int, eventGroup),
    arg(Type.Int, eventIndex)
  )
end

-- int GET_EVENT_AT_INDEX(int eventGroup, int eventIndex) // 0xD8F66A3A60C62153
--[[
eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
--]]
function SCRIPT.GET_EVENT_AT_INDEX(eventGroup, eventIndex)
  return native.invoke(
    Type.Int, 4801, false,
    arg(Type.Int, eventGroup),
    arg(Type.Int, eventIndex)
  )
end

-- BOOL GET_EVENT_DATA(int eventGroup, int eventIndex, Any* eventData, int eventDataSize) // 0x2902843FCD2B2D79
--[[
eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)

Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
--]]
function SCRIPT.GET_EVENT_DATA(eventGroup, eventIndex, eventData, eventDataSize)
  return native.invoke(
    Type.Bool, 4802, false,
    arg(Type.Int, eventGroup),
    arg(Type.Int, eventIndex),
    arg(Type.Any, eventData),
    arg(Type.Int, eventDataSize)
  )
end

-- void TRIGGER_SCRIPT_EVENT(int eventGroup, Any* eventData, int eventDataSize, int playerBits) // 0x5AE99C571D5BBE5D
--[[
eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)

Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).

playerBits (also known as playersToBroadcastTo) is a bitset that indicates which players this event should be sent to. In order to send the event to specific players only, use (1 << playerIndex). Set all bits if it should be broadcast to all players.
--]]
function SCRIPT.TRIGGER_SCRIPT_EVENT(eventGroup, eventData, eventDataSize, playerBits)
  native.invoke(
    Type.Void, 4803, false,
    arg(Type.Int, eventGroup),
    arg(Type.Any, eventData),
    arg(Type.Int, eventDataSize),
    arg(Type.Int, playerBits)
  )
end

-- void SHUTDOWN_LOADING_SCREEN() // 0x078EBE9809CCD637
function SCRIPT.SHUTDOWN_LOADING_SCREEN()
  native.invoke(
    Type.Void, 4804, false
  )
end

-- void SET_NO_LOADING_SCREEN(BOOL toggle) // 0x5262CC1995D07E09
function SCRIPT.SET_NO_LOADING_SCREEN(toggle)
  native.invoke(
    Type.Void, 4805, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL GET_NO_LOADING_SCREEN() // 0x18C1270EA7F199BC
function SCRIPT.GET_NO_LOADING_SCREEN()
  return native.invoke(
    Type.Bool, 4806, false
  )
end

-- void COMMIT_TO_LOADINGSCREEN_SELCTION() // 0xB1577667C3708F9B
function SCRIPT.COMMIT_TO_LOADINGSCREEN_SELCTION()
  native.invoke(
    Type.Void, 4807, false
  )
end

-- BOOL BG_IS_EXITFLAG_SET() // 0x836B62713E0534CA
--[[
Returns true if bit 0 in GtaThread+0x154 is set.
--]]
function SCRIPT.BG_IS_EXITFLAG_SET()
  return native.invoke(
    Type.Bool, 4808, false
  )
end

-- void BG_SET_EXITFLAG_RESPONSE() // 0x760910B49D2B98EA
--[[
Sets bit 1 in GtaThread+0x154
--]]
function SCRIPT.BG_SET_EXITFLAG_RESPONSE()
  native.invoke(
    Type.Void, 4809, false
  )
end

-- void BG_START_CONTEXT_HASH(Hash contextHash) // 0x75B18E49607874C7
--[[
Hashed version of BG_START_CONTEXT.
--]]
function SCRIPT.BG_START_CONTEXT_HASH(contextHash)
  native.invoke(
    Type.Void, 4810, false,
    arg(Type.Hash, contextHash)
  )
end

-- void BG_END_CONTEXT_HASH(Hash contextHash) // 0x107E5CC7CA942BC1
--[[
Hashed version of BG_END_CONTEXT.
--]]
function SCRIPT.BG_END_CONTEXT_HASH(contextHash)
  native.invoke(
    Type.Void, 4811, false,
    arg(Type.Hash, contextHash)
  )
end

-- void BG_START_CONTEXT(const char* contextName) // 0x9D5A25BADB742ACD
--[[
Inserts the given context into the background scripts context map.
--]]
function SCRIPT.BG_START_CONTEXT(contextName)
  native.invoke(
    Type.Void, 4812, false,
    arg(Type.String, contextName)
  )
end

-- void BG_END_CONTEXT(const char* contextName) // 0xDC2BACD920D0A0DD
--[[
Deletes the given context from the background scripts context map.
--]]
function SCRIPT.BG_END_CONTEXT(contextName)
  native.invoke(
    Type.Void, 4813, false,
    arg(Type.String, contextName)
  )
end

-- BOOL BG_DOES_LAUNCH_PARAM_EXIST(int scriptIndex, const char* p1) // 0x0F6F1EBBC4E1D5E6
function SCRIPT.BG_DOES_LAUNCH_PARAM_EXIST(scriptIndex, p1)
  return native.invoke(
    Type.Bool, 4814, false,
    arg(Type.Int, scriptIndex),
    arg(Type.String, p1)
  )
end

-- int BG_GET_LAUNCH_PARAM_VALUE(int scriptIndex, const char* p1) // 0x22E21FBCFC88C149
function SCRIPT.BG_GET_LAUNCH_PARAM_VALUE(scriptIndex, p1)
  return native.invoke(
    Type.Int, 4815, false,
    arg(Type.Int, scriptIndex),
    arg(Type.String, p1)
  )
end

-- int BG_GET_SCRIPT_ID_FROM_NAME_HASH(Hash p0) // 0x829CD22E043A2577
function SCRIPT.BG_GET_SCRIPT_ID_FROM_NAME_HASH(p0)
  return native.invoke(
    Type.Int, 4816, false,
    arg(Type.Hash, p0)
  )
end

-- void _SEND_TU_SCRIPT_EVENT_NEW(int eventGroup, Any* eventData, int eventDataSize, int playerBits, Hash eventType) // 0x71A6F836422FDD2B
--[[
New variant of SEND_TU_SCRIPT_EVENT that automatically initializes the event data header.
See TRIGGER_SCRIPT_EVENT for more info.
--]]
function SCRIPT._SEND_TU_SCRIPT_EVENT_NEW(eventGroup, eventData, eventDataSize, playerBits, eventType)
  native.invoke(
    Type.Void, 4817, false,
    arg(Type.Int, eventGroup),
    arg(Type.Any, eventData),
    arg(Type.Int, eventDataSize),
    arg(Type.Int, playerBits),
    arg(Type.Hash, eventType)
  )
end


SECURITY = {}

-- void REGISTER_SCRIPT_VARIABLE(Any* variable) // 0x40EB1EFD921822BC
--[[
Registers a protected variable that will be checked for modifications by the anticheat
--]]
function SECURITY.REGISTER_SCRIPT_VARIABLE(variable)
  native.invoke(
    Type.Void, 4818, false,
    arg(Type.Any, variable)
  )
end

-- void UNREGISTER_SCRIPT_VARIABLE(Any* variable) // 0x340A36A700E99699
function SECURITY.UNREGISTER_SCRIPT_VARIABLE(variable)
  native.invoke(
    Type.Void, 4819, false,
    arg(Type.Any, variable)
  )
end

-- void FORCE_CHECK_SCRIPT_VARIABLES() // 0x8E580AB902917360
function SECURITY.FORCE_CHECK_SCRIPT_VARIABLES()
  native.invoke(
    Type.Void, 4820, false
  )
end


SHAPETEST = {}

-- int START_SHAPE_TEST_LOS_PROBE(float x1, float y1, float z1, float x2, float y2, float z2, int flags, Entity entity, int p8) // 0x7EE9F5D83DD4F90E
--[[
Asynchronously starts a line-of-sight (raycast) world probe shape test.

Use the handle with 0x3D87450E15D98694 or 0x65287525D951F6BE until it returns 0 or 2.

p8 is a bit mask with bits 1, 2 and/or 4, relating to collider types; 4 should usually be used.
--]]
function SHAPETEST.START_SHAPE_TEST_LOS_PROBE(x1, y1, z1, x2, y2, z2, flags, entity, p8)
  return native.invoke(
    Type.Int, 4821, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Int, flags),
    arg(Type.Entity, entity),
    arg(Type.Int, p8)
  )
end

-- int START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE(float x1, float y1, float z1, float x2, float y2, float z2, int flags, Entity entity, int p8) // 0x377906D8A31E5586
--[[
Does the same as 0x7EE9F5D83DD4F90E, except blocking until the shape test completes.
--]]
function SHAPETEST.START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE(x1, y1, z1, x2, y2, z2, flags, entity, p8)
  return native.invoke(
    Type.Int, 4822, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Int, flags),
    arg(Type.Entity, entity),
    arg(Type.Int, p8)
  )
end

-- int START_SHAPE_TEST_BOUNDING_BOX(Entity entity, int flags1, int flags2) // 0x052837721A854EC7
function SHAPETEST.START_SHAPE_TEST_BOUNDING_BOX(entity, flags1, flags2)
  return native.invoke(
    Type.Int, 4823, false,
    arg(Type.Entity, entity),
    arg(Type.Int, flags1),
    arg(Type.Int, flags2)
  )
end

-- int START_SHAPE_TEST_BOX(float x, float y, float z, float dimX, float dimY, float dimZ, float rotX, float rotY, float rotZ, Any p9, int flags, Entity entity, Any p12) // 0xFE466162C4401D18
function SHAPETEST.START_SHAPE_TEST_BOX(x, y, z, dimX, dimY, dimZ, rotX, rotY, rotZ, p9, flags, entity, p12)
  return native.invoke(
    Type.Int, 4824, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, dimX),
    arg(Type.Float, dimY),
    arg(Type.Float, dimZ),
    arg(Type.Float, rotX),
    arg(Type.Float, rotY),
    arg(Type.Float, rotZ),
    arg(Type.Any, p9),
    arg(Type.Int, flags),
    arg(Type.Entity, entity),
    arg(Type.Any, p12)
  )
end

-- int START_SHAPE_TEST_BOUND(Entity entity, int flags1, int flags2) // 0x37181417CE7C8900
function SHAPETEST.START_SHAPE_TEST_BOUND(entity, flags1, flags2)
  return native.invoke(
    Type.Int, 4825, false,
    arg(Type.Entity, entity),
    arg(Type.Int, flags1),
    arg(Type.Int, flags2)
  )
end

-- int START_SHAPE_TEST_CAPSULE(float x1, float y1, float z1, float x2, float y2, float z2, float radius, int flags, Entity entity, int p9) // 0x28579D1B8F8AAC80
--[[
Raycast from point to point, where the ray has a radius. 

flags:
vehicles=10
peds =12

Iterating through flags yields many ped / vehicle/ object combinations

p9 = 7, but no idea what it does

Entity is an entity to ignore
--]]
function SHAPETEST.START_SHAPE_TEST_CAPSULE(x1, y1, z1, x2, y2, z2, radius, flags, entity, p9)
  return native.invoke(
    Type.Int, 4826, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Float, radius),
    arg(Type.Int, flags),
    arg(Type.Entity, entity),
    arg(Type.Int, p9)
  )
end

-- int START_SHAPE_TEST_SWEPT_SPHERE(float x1, float y1, float z1, float x2, float y2, float z2, float radius, int flags, Entity entity, Any p9) // 0xE6AC6C45FBE83004
function SHAPETEST.START_SHAPE_TEST_SWEPT_SPHERE(x1, y1, z1, x2, y2, z2, radius, flags, entity, p9)
  return native.invoke(
    Type.Int, 4827, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Float, radius),
    arg(Type.Int, flags),
    arg(Type.Entity, entity),
    arg(Type.Any, p9)
  )
end

-- int START_SHAPE_TEST_MOUSE_CURSOR_LOS_PROBE(Vector3* pVec1, Vector3* pVec2, int flag, Entity entity, int flag2) // 0xFF6BE494C7987F34
--[[
Returns a ShapeTest handle that can be used with GET_SHAPE_TEST_RESULT.

In its only usage in game scripts its called with flag set to 511, entity to player_ped_id and flag2 set to 7
--]]
function SHAPETEST.START_SHAPE_TEST_MOUSE_CURSOR_LOS_PROBE(pVec1, pVec2, flag, entity, flag2)
  return native.invoke(
    Type.Int, 4828, true,
    arg(Type.Vector3, pVec1),
    arg(Type.Vector3, pVec2),
    arg(Type.Int, flag),
    arg(Type.Entity, entity),
    arg(Type.Int, flag2)
  )
end

-- int GET_SHAPE_TEST_RESULT(int shapeTestHandle, BOOL* hit, Vector3* endCoords, Vector3* surfaceNormal, Entity* entityHit) // 0x3D87450E15D98694
--[[
Returns the result of a shape test: 0 if the handle is invalid, 1 if the shape test is still pending, or 2 if the shape test has completed, and the handle should be invalidated.

When used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.
--]]
function SHAPETEST.GET_SHAPE_TEST_RESULT(shapeTestHandle, hit, endCoords, surfaceNormal, entityHit)
  return native.invoke(
    Type.Int, 4829, true,
    arg(Type.Int, shapeTestHandle),
    arg(Type.Bool, hit),
    arg(Type.Vector3, endCoords),
    arg(Type.Vector3, surfaceNormal),
    arg(Type.Entity, entityHit)
  )
end

-- int GET_SHAPE_TEST_RESULT_INCLUDING_MATERIAL(int shapeTestHandle, BOOL* hit, Vector3* endCoords, Vector3* surfaceNormal, Hash* materialHash, Entity* entityHit) // 0x65287525D951F6BE
--[[
Returns the result of a shape test, also returning the material of any touched surface.

When used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.

Unless the return value is 2, the other return values are undefined.
--]]
function SHAPETEST.GET_SHAPE_TEST_RESULT_INCLUDING_MATERIAL(shapeTestHandle, hit, endCoords, surfaceNormal, materialHash, entityHit)
  return native.invoke(
    Type.Int, 4830, true,
    arg(Type.Int, shapeTestHandle),
    arg(Type.Bool, hit),
    arg(Type.Vector3, endCoords),
    arg(Type.Vector3, surfaceNormal),
    arg(Type.Hash, materialHash),
    arg(Type.Entity, entityHit)
  )
end

-- void RELEASE_SCRIPT_GUID_FROM_ENTITY(Entity entityHit) // 0x2B3334BCA57CD799
--[[
Invalidates the entity handle passed by removing the fwScriptGuid from the entity. This should be used when receiving an ambient entity from shape testing natives, but can also be used for other natives returning an 'irrelevant' entity handle.
--]]
function SHAPETEST.RELEASE_SCRIPT_GUID_FROM_ENTITY(entityHit)
  native.invoke(
    Type.Void, 4831, false,
    arg(Type.Entity, entityHit)
  )
end


SOCIALCLUB = {}

-- int SC_INBOX_GET_TOTAL_NUM_MESSAGES() // 0x03A93FF1A2CA0864
function SOCIALCLUB.SC_INBOX_GET_TOTAL_NUM_MESSAGES()
  return native.invoke(
    Type.Int, 4832, false
  )
end

-- Hash SC_INBOX_GET_MESSAGE_TYPE_AT_INDEX(int msgIndex) // 0xBB8EA16ECBC976C4
function SOCIALCLUB.SC_INBOX_GET_MESSAGE_TYPE_AT_INDEX(msgIndex)
  return native.invoke(
    Type.Hash, 4833, false,
    arg(Type.Int, msgIndex)
  )
end

-- BOOL SC_INBOX_GET_MESSAGE_IS_READ_AT_INDEX(int msgIndex) // 0x93028F1DB42BFD08
function SOCIALCLUB.SC_INBOX_GET_MESSAGE_IS_READ_AT_INDEX(msgIndex)
  return native.invoke(
    Type.Bool, 4834, false,
    arg(Type.Int, msgIndex)
  )
end

-- BOOL SC_INBOX_SET_MESSAGE_AS_READ_AT_INDEX(int msgIndex) // 0x2C015348CF19CA1D
function SOCIALCLUB.SC_INBOX_SET_MESSAGE_AS_READ_AT_INDEX(msgIndex)
  return native.invoke(
    Type.Bool, 4835, false,
    arg(Type.Int, msgIndex)
  )
end

-- BOOL SC_INBOX_MESSAGE_GET_DATA_INT(int p0, const char* context, int* out) // 0xA00EFE4082C4056E
function SOCIALCLUB.SC_INBOX_MESSAGE_GET_DATA_INT(p0, context, out)
  return native.invoke(
    Type.Bool, 4836, false,
    arg(Type.Int, p0),
    arg(Type.String, context),
    arg(Type.Int, out)
  )
end

-- BOOL SC_INBOX_MESSAGE_GET_DATA_BOOL(int p0, const char* p1) // 0xFFE5C16F402D851D
function SOCIALCLUB.SC_INBOX_MESSAGE_GET_DATA_BOOL(p0, p1)
  return native.invoke(
    Type.Bool, 4837, false,
    arg(Type.Int, p0),
    arg(Type.String, p1)
  )
end

-- BOOL SC_INBOX_MESSAGE_GET_DATA_STRING(int p0, const char* context, char* out) // 0x7572EF42FC6A9B6D
function SOCIALCLUB.SC_INBOX_MESSAGE_GET_DATA_STRING(p0, context, out)
  return native.invoke(
    Type.Bool, 4838, false,
    arg(Type.Int, p0),
    arg(Type.String, context),
    arg(Type.Char, out)
  )
end

-- BOOL SC_INBOX_MESSAGE_DO_APPLY(int p0) // 0x9A2C8064B6C1E41A
function SOCIALCLUB.SC_INBOX_MESSAGE_DO_APPLY(p0)
  return native.invoke(
    Type.Bool, 4839, false,
    arg(Type.Int, p0)
  )
end

-- const char* SC_INBOX_MESSAGE_GET_RAW_TYPE_AT_INDEX(int p0) // 0xF3E31D16CBDCB304
function SOCIALCLUB.SC_INBOX_MESSAGE_GET_RAW_TYPE_AT_INDEX(p0)
  return native.invoke(
    Type.Const char, 4840, false,
    arg(Type.Int, p0)
  )
end

-- void SC_INBOX_MESSAGE_PUSH_GAMER_T0_RECIP_LIST(Any* gamerHandle) // 0xDA024BDBD600F44A
function SOCIALCLUB.SC_INBOX_MESSAGE_PUSH_GAMER_T0_RECIP_LIST(gamerHandle)
  native.invoke(
    Type.Void, 4841, false,
    arg(Type.Any, gamerHandle)
  )
end

-- void SC_INBOX_SEND_UGCSTATUPDATE_TO_RECIP_LIST(Any* data) // 0xA68D3D229F4F3B06
function SOCIALCLUB.SC_INBOX_SEND_UGCSTATUPDATE_TO_RECIP_LIST(data)
  native.invoke(
    Type.Void, 4842, false,
    arg(Type.Any, data)
  )
end

-- BOOL SC_INBOX_MESSAGE_GET_UGCDATA(int p0, Any* p1) // 0x69D82604A1A5A254
function SOCIALCLUB.SC_INBOX_MESSAGE_GET_UGCDATA(p0, p1)
  return native.invoke(
    Type.Bool, 4843, false,
    arg(Type.Int, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL SC_INBOX_GET_BOUNTY_DATA_AT_INDEX(int index, Any* outData) // 0x87E0052F08BD64E6
function SOCIALCLUB.SC_INBOX_GET_BOUNTY_DATA_AT_INDEX(index, outData)
  return native.invoke(
    Type.Bool, 4844, false,
    arg(Type.Int, index),
    arg(Type.Any, outData)
  )
end

-- void SC_EMAIL_RETRIEVE_EMAILS(int offset, int limit) // 0x040ADDCBAFA1018A
function SOCIALCLUB.SC_EMAIL_RETRIEVE_EMAILS(offset, limit)
  native.invoke(
    Type.Void, 4845, false,
    arg(Type.Int, offset),
    arg(Type.Int, limit)
  )
end

-- int SC_EMAIL_GET_RETRIEVAL_STATUS() // 0x16DA8172459434AA
function SOCIALCLUB.SC_EMAIL_GET_RETRIEVAL_STATUS()
  return native.invoke(
    Type.Int, 4846, false
  )
end

-- int SC_EMAIL_GET_NUM_RETRIEVED_EMAILS() // 0x7DB18CA8CAD5B098
function SOCIALCLUB.SC_EMAIL_GET_NUM_RETRIEVED_EMAILS()
  return native.invoke(
    Type.Int, 4847, false
  )
end

-- BOOL SC_EMAIL_GET_EMAIL_AT_INDEX(int p0, Any* p1) // 0x4737980E8A283806
function SOCIALCLUB.SC_EMAIL_GET_EMAIL_AT_INDEX(p0, p1)
  return native.invoke(
    Type.Bool, 4848, false,
    arg(Type.Int, p0),
    arg(Type.Any, p1)
  )
end

-- void SC_EMAIL_DELETE_EMAILS(Any* p0, Any p1) // 0x44ACA259D67651DB
function SOCIALCLUB.SC_EMAIL_DELETE_EMAILS(p0, p1)
  native.invoke(
    Type.Void, 4849, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void SC_EMAIL_MESSAGE_PUSH_GAMER_TO_RECIP_LIST(Any* gamerHandle) // 0x2330C12A7A605D16
function SOCIALCLUB.SC_EMAIL_MESSAGE_PUSH_GAMER_TO_RECIP_LIST(gamerHandle)
  native.invoke(
    Type.Void, 4850, false,
    arg(Type.Any, gamerHandle)
  )
end

-- void SC_EMAIL_MESSAGE_CLEAR_RECIP_LIST() // 0x55DF6DB45179236E
function SOCIALCLUB.SC_EMAIL_MESSAGE_CLEAR_RECIP_LIST()
  native.invoke(
    Type.Void, 4851, false
  )
end

-- void SC_EMAIL_SEND_EMAIL(const char* p0) // 0x116FB94DC4B79F17
function SOCIALCLUB.SC_EMAIL_SEND_EMAIL(p0)
  native.invoke(
    Type.Void, 4852, false,
    arg(Type.String, p0)
  )
end

-- BOOL SC_EMAIL_SET_CURRENT_EMAIL_TAG(Any p0) // 0x07DBD622D9533857
function SOCIALCLUB.SC_EMAIL_SET_CURRENT_EMAIL_TAG(p0)
  return native.invoke(
    Type.Bool, 4853, false,
    arg(Type.Any, p0)
  )
end

-- void SC_CACHE_NEW_ROCKSTAR_MSGS(BOOL toggle) // 0xBFA0A56A817C6C7D
function SOCIALCLUB.SC_CACHE_NEW_ROCKSTAR_MSGS(toggle)
  native.invoke(
    Type.Void, 4854, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL SC_HAS_NEW_ROCKSTAR_MSG() // 0xBC1CC91205EC8D6E
function SOCIALCLUB.SC_HAS_NEW_ROCKSTAR_MSG()
  return native.invoke(
    Type.Bool, 4855, false
  )
end

-- const char* SC_GET_NEW_ROCKSTAR_MSG() // 0xDF649C4E9AFDD788
function SOCIALCLUB.SC_GET_NEW_ROCKSTAR_MSG()
  return native.invoke(
    Type.Const char, 4856, false
  )
end

-- BOOL SC_PRESENCE_ATTR_SET_INT(Hash attrHash, int value) // 0x1F1E9682483697C7
function SOCIALCLUB.SC_PRESENCE_ATTR_SET_INT(attrHash, value)
  return native.invoke(
    Type.Bool, 4857, false,
    arg(Type.Hash, attrHash),
    arg(Type.Int, value)
  )
end

-- BOOL SC_PRESENCE_ATTR_SET_FLOAT(Hash attrHash, float value) // 0xC4C4575F62534A24
function SOCIALCLUB.SC_PRESENCE_ATTR_SET_FLOAT(attrHash, value)
  return native.invoke(
    Type.Bool, 4858, false,
    arg(Type.Hash, attrHash),
    arg(Type.Float, value)
  )
end

-- BOOL SC_PRESENCE_ATTR_SET_STRING(Hash attrHash, const char* value) // 0x287F1F75D2803595
function SOCIALCLUB.SC_PRESENCE_ATTR_SET_STRING(attrHash, value)
  return native.invoke(
    Type.Bool, 4859, false,
    arg(Type.Hash, attrHash),
    arg(Type.String, value)
  )
end

-- BOOL SC_PRESENCE_SET_ACTIVITY_RATING(Any p0, float p1) // 0x487912FD248EFDDF
function SOCIALCLUB.SC_PRESENCE_SET_ACTIVITY_RATING(p0, p1)
  return native.invoke(
    Type.Bool, 4860, false,
    arg(Type.Any, p0),
    arg(Type.Float, p1)
  )
end

-- BOOL SC_GAMERDATA_GET_INT(const char* name, int* value) // 0xC85A7127E7AD02AA
function SOCIALCLUB.SC_GAMERDATA_GET_INT(name, value)
  return native.invoke(
    Type.Bool, 4861, false,
    arg(Type.String, name),
    arg(Type.Int, value)
  )
end

-- BOOL SC_GAMERDATA_GET_FLOAT(const char* name, float* value) // 0xA770C8EEC6FB2AC5
function SOCIALCLUB.SC_GAMERDATA_GET_FLOAT(name, value)
  return native.invoke(
    Type.Bool, 4862, false,
    arg(Type.String, name),
    arg(Type.Float, value)
  )
end

-- BOOL SC_GAMERDATA_GET_BOOL(const char* name) // 0x8416FE4E4629D7D7
function SOCIALCLUB.SC_GAMERDATA_GET_BOOL(name)
  return native.invoke(
    Type.Bool, 4863, false,
    arg(Type.String, name)
  )
end

-- BOOL SC_GAMERDATA_GET_STRING(const char* name, char* value) // 0x7FFCBFEE44ECFABF
function SOCIALCLUB.SC_GAMERDATA_GET_STRING(name, value)
  return native.invoke(
    Type.Bool, 4864, false,
    arg(Type.String, name),
    arg(Type.Char, value)
  )
end

-- BOOL SC_GAMERDATA_GET_ACTIVE_XP_BONUS(float* value) // 0x2D874D4AE612A65F
function SOCIALCLUB.SC_GAMERDATA_GET_ACTIVE_XP_BONUS(value)
  return native.invoke(
    Type.Bool, 4865, false,
    arg(Type.Float, value)
  )
end

-- BOOL SC_PROFANITY_CHECK_STRING(const char* string, int* token) // 0x75632C5ECD7ED843
--[[
Starts a task to check an entered string for profanity on the ROS/Social Club services.

See also: 1753344C770358AE, 82E4A58BABC15AE7.
--]]
function SOCIALCLUB.SC_PROFANITY_CHECK_STRING(string, token)
  return native.invoke(
    Type.Bool, 4866, false,
    arg(Type.String, string),
    arg(Type.Int, token)
  )
end

-- BOOL SC_PROFANITY_CHECK_STRING_UGC(const char* string, int* token) // 0xEB2BF817463DFA28
function SOCIALCLUB.SC_PROFANITY_CHECK_STRING_UGC(string, token)
  return native.invoke(
    Type.Bool, 4867, false,
    arg(Type.String, string),
    arg(Type.Int, token)
  )
end

-- BOOL SC_PROFANITY_GET_CHECK_IS_VALID(int token) // 0x1753344C770358AE
function SOCIALCLUB.SC_PROFANITY_GET_CHECK_IS_VALID(token)
  return native.invoke(
    Type.Bool, 4868, false,
    arg(Type.Int, token)
  )
end

-- BOOL SC_PROFANITY_GET_CHECK_IS_PENDING(int token) // 0x82E4A58BABC15AE7
function SOCIALCLUB.SC_PROFANITY_GET_CHECK_IS_PENDING(token)
  return native.invoke(
    Type.Bool, 4869, false,
    arg(Type.Int, token)
  )
end

-- BOOL SC_PROFANITY_GET_STRING_PASSED(int token) // 0x85535ACF97FC0969
function SOCIALCLUB.SC_PROFANITY_GET_STRING_PASSED(token)
  return native.invoke(
    Type.Bool, 4870, false,
    arg(Type.Int, token)
  )
end

-- int SC_PROFANITY_GET_STRING_STATUS(int token) // 0x930DE22F07B1CCE3
function SOCIALCLUB.SC_PROFANITY_GET_STRING_STATUS(token)
  return native.invoke(
    Type.Int, 4871, false,
    arg(Type.Int, token)
  )
end

-- BOOL SC_LICENSEPLATE_CHECK_STRING(const char* p0, int* p1) // 0xF6BAAAF762E1BF40
function SOCIALCLUB.SC_LICENSEPLATE_CHECK_STRING(p0, p1)
  return native.invoke(
    Type.Bool, 4872, false,
    arg(Type.String, p0),
    arg(Type.Int, p1)
  )
end

-- BOOL SC_LICENSEPLATE_GET_CHECK_IS_VALID(Any p0) // 0xF22CA0FD74B80E7A
function SOCIALCLUB.SC_LICENSEPLATE_GET_CHECK_IS_VALID(p0)
  return native.invoke(
    Type.Bool, 4873, false,
    arg(Type.Any, p0)
  )
end

-- BOOL SC_LICENSEPLATE_GET_CHECK_IS_PENDING(Any p0) // 0x9237E334F6E43156
function SOCIALCLUB.SC_LICENSEPLATE_GET_CHECK_IS_PENDING(p0)
  return native.invoke(
    Type.Bool, 4874, false,
    arg(Type.Any, p0)
  )
end

-- int SC_LICENSEPLATE_GET_COUNT(int token) // 0x700569DBA175A77C
function SOCIALCLUB.SC_LICENSEPLATE_GET_COUNT(token)
  return native.invoke(
    Type.Int, 4875, false,
    arg(Type.Int, token)
  )
end

-- const char* SC_LICENSEPLATE_GET_PLATE(int token, int plateIndex) // 0x1D4446A62D35B0D0
function SOCIALCLUB.SC_LICENSEPLATE_GET_PLATE(token, plateIndex)
  return native.invoke(
    Type.Const char, 4876, false,
    arg(Type.Int, token),
    arg(Type.Int, plateIndex)
  )
end

-- const char* SC_LICENSEPLATE_GET_PLATE_DATA(int token, int plateIndex) // 0x2E89990DDFF670C3
function SOCIALCLUB.SC_LICENSEPLATE_GET_PLATE_DATA(token, plateIndex)
  return native.invoke(
    Type.Const char, 4877, false,
    arg(Type.Int, token),
    arg(Type.Int, plateIndex)
  )
end

-- BOOL SC_LICENSEPLATE_SET_PLATE_DATA(const char* oldPlateText, const char* newPlateText, Any* plateData) // 0xD0EE05FE193646EA
function SOCIALCLUB.SC_LICENSEPLATE_SET_PLATE_DATA(oldPlateText, newPlateText, plateData)
  return native.invoke(
    Type.Bool, 4878, false,
    arg(Type.String, oldPlateText),
    arg(Type.String, newPlateText),
    arg(Type.Any, plateData)
  )
end

-- BOOL SC_LICENSEPLATE_ADD(const char* plateText, Any* plateData, int* token) // 0x1989C6E6F67E76A8
function SOCIALCLUB.SC_LICENSEPLATE_ADD(plateText, plateData, token)
  return native.invoke(
    Type.Bool, 4879, false,
    arg(Type.String, plateText),
    arg(Type.Any, plateData),
    arg(Type.Int, token)
  )
end

-- BOOL SC_LICENSEPLATE_GET_ADD_IS_PENDING(int token) // 0x07C61676E5BB52CD
function SOCIALCLUB.SC_LICENSEPLATE_GET_ADD_IS_PENDING(token)
  return native.invoke(
    Type.Bool, 4880, false,
    arg(Type.Int, token)
  )
end

-- int SC_LICENSEPLATE_GET_ADD_STATUS(int token) // 0x8147FFF6A718E1AD
function SOCIALCLUB.SC_LICENSEPLATE_GET_ADD_STATUS(token)
  return native.invoke(
    Type.Int, 4881, false,
    arg(Type.Int, token)
  )
end

-- BOOL SC_LICENSEPLATE_ISVALID(const char* plateText, int* token) // 0x0F73393BAC7E6730
function SOCIALCLUB.SC_LICENSEPLATE_ISVALID(plateText, token)
  return native.invoke(
    Type.Bool, 4882, false,
    arg(Type.String, plateText),
    arg(Type.Int, token)
  )
end

-- BOOL SC_LICENSEPLATE_GET_ISVALID_IS_PENDING(int token) // 0xD302E99EDF0449CF
function SOCIALCLUB.SC_LICENSEPLATE_GET_ISVALID_IS_PENDING(token)
  return native.invoke(
    Type.Bool, 4883, false,
    arg(Type.Int, token)
  )
end

-- int SC_LICENSEPLATE_GET_ISVALID_STATUS(int token) // 0x5C4EBFFA98BDB41C
function SOCIALCLUB.SC_LICENSEPLATE_GET_ISVALID_STATUS(token)
  return native.invoke(
    Type.Int, 4884, false,
    arg(Type.Int, token)
  )
end

-- BOOL SC_COMMUNITY_EVENT_IS_ACTIVE() // 0xFF8F3A92B75ED67A
function SOCIALCLUB.SC_COMMUNITY_EVENT_IS_ACTIVE()
  return native.invoke(
    Type.Bool, 4885, false
  )
end

-- int SC_COMMUNITY_EVENT_GET_EVENT_ID() // 0x4ED9C8D6DA297639
function SOCIALCLUB.SC_COMMUNITY_EVENT_GET_EVENT_ID()
  return native.invoke(
    Type.Int, 4886, false
  )
end

-- BOOL SC_COMMUNITY_EVENT_GET_EXTRA_DATA_INT(const char* p0, int* p1) // 0x710BCDA8071EDED1
function SOCIALCLUB.SC_COMMUNITY_EVENT_GET_EXTRA_DATA_INT(p0, p1)
  return native.invoke(
    Type.Bool, 4887, false,
    arg(Type.String, p0),
    arg(Type.Int, p1)
  )
end

-- BOOL SC_COMMUNITY_EVENT_GET_EXTRA_DATA_FLOAT(const char* p0, float* p1) // 0x50A8A36201DBF83E
function SOCIALCLUB.SC_COMMUNITY_EVENT_GET_EXTRA_DATA_FLOAT(p0, p1)
  return native.invoke(
    Type.Bool, 4888, false,
    arg(Type.String, p0),
    arg(Type.Float, p1)
  )
end

-- BOOL SC_COMMUNITY_EVENT_GET_EXTRA_DATA_STRING(const char* p0, char* p1) // 0x9DE5D2F723575ED0
function SOCIALCLUB.SC_COMMUNITY_EVENT_GET_EXTRA_DATA_STRING(p0, p1)
  return native.invoke(
    Type.Bool, 4889, false,
    arg(Type.String, p0),
    arg(Type.Char, p1)
  )
end

-- BOOL SC_COMMUNITY_EVENT_GET_DISPLAY_NAME(char* p0) // 0xC2C97EA97711D1AE
function SOCIALCLUB.SC_COMMUNITY_EVENT_GET_DISPLAY_NAME(p0)
  return native.invoke(
    Type.Bool, 4890, false,
    arg(Type.Char, p0)
  )
end

-- BOOL SC_COMMUNITY_EVENT_IS_ACTIVE_FOR_TYPE(const char* p0) // 0x450819D8CF90C416
function SOCIALCLUB.SC_COMMUNITY_EVENT_IS_ACTIVE_FOR_TYPE(p0)
  return native.invoke(
    Type.Bool, 4891, false,
    arg(Type.String, p0)
  )
end

-- int SC_COMMUNITY_EVENT_GET_EVENT_ID_FOR_TYPE(const char* p0) // 0x4A7D6E727F941747
function SOCIALCLUB.SC_COMMUNITY_EVENT_GET_EVENT_ID_FOR_TYPE(p0)
  return native.invoke(
    Type.Int, 4892, false,
    arg(Type.String, p0)
  )
end

-- BOOL SC_COMMUNITY_EVENT_GET_EXTRA_DATA_INT_FOR_TYPE(const char* p0, int* p1, const char* p2) // 0xE75A4A2E5E316D86
function SOCIALCLUB.SC_COMMUNITY_EVENT_GET_EXTRA_DATA_INT_FOR_TYPE(p0, p1, p2)
  return native.invoke(
    Type.Bool, 4893, false,
    arg(Type.String, p0),
    arg(Type.Int, p1),
    arg(Type.String, p2)
  )
end

-- BOOL SC_COMMUNITY_EVENT_GET_EXTRA_DATA_FLOAT_FOR_TYPE(const char* p0, float* p1, const char* p2) // 0x2570E26BE63964E3
function SOCIALCLUB.SC_COMMUNITY_EVENT_GET_EXTRA_DATA_FLOAT_FOR_TYPE(p0, p1, p2)
  return native.invoke(
    Type.Bool, 4894, false,
    arg(Type.String, p0),
    arg(Type.Float, p1),
    arg(Type.String, p2)
  )
end

-- BOOL SC_COMMUNITY_EVENT_GET_EXTRA_DATA_STRING_FOR_TYPE(const char* p0, char* p1, const char* p2) // 0x1D12A56FC95BE92E
function SOCIALCLUB.SC_COMMUNITY_EVENT_GET_EXTRA_DATA_STRING_FOR_TYPE(p0, p1, p2)
  return native.invoke(
    Type.Bool, 4895, false,
    arg(Type.String, p0),
    arg(Type.Char, p1),
    arg(Type.String, p2)
  )
end

-- BOOL SC_COMMUNITY_EVENT_GET_DISPLAY_NAME_FOR_TYPE(char* p0, const char* p1) // 0x33DF47CC0642061B
function SOCIALCLUB.SC_COMMUNITY_EVENT_GET_DISPLAY_NAME_FOR_TYPE(p0, p1)
  return native.invoke(
    Type.Bool, 4896, false,
    arg(Type.Char, p0),
    arg(Type.String, p1)
  )
end

-- BOOL SC_COMMUNITY_EVENT_IS_ACTIVE_BY_ID(int p0) // 0xA468E0BE12B12C70
function SOCIALCLUB.SC_COMMUNITY_EVENT_IS_ACTIVE_BY_ID(p0)
  return native.invoke(
    Type.Bool, 4897, false,
    arg(Type.Int, p0)
  )
end

-- BOOL SC_COMMUNITY_EVENT_GET_EXTRA_DATA_INT_BY_ID(int p0, const char* p1, int* p2) // 0x8CC469AB4D349B7C
function SOCIALCLUB.SC_COMMUNITY_EVENT_GET_EXTRA_DATA_INT_BY_ID(p0, p1, p2)
  return native.invoke(
    Type.Bool, 4898, false,
    arg(Type.Int, p0),
    arg(Type.String, p1),
    arg(Type.Int, p2)
  )
end

-- BOOL SC_COMMUNITY_EVENT_GET_EXTRA_DATA_FLOAT_BY_ID(int p0, const char* p1, float* p2) // 0xC5A35C73B68F3C49
function SOCIALCLUB.SC_COMMUNITY_EVENT_GET_EXTRA_DATA_FLOAT_BY_ID(p0, p1, p2)
  return native.invoke(
    Type.Bool, 4899, false,
    arg(Type.Int, p0),
    arg(Type.String, p1),
    arg(Type.Float, p2)
  )
end

-- BOOL SC_COMMUNITY_EVENT_GET_EXTRA_DATA_STRING_BY_ID(int p0, const char* p1, char* p2) // 0x699E4A5C8C893A18
function SOCIALCLUB.SC_COMMUNITY_EVENT_GET_EXTRA_DATA_STRING_BY_ID(p0, p1, p2)
  return native.invoke(
    Type.Bool, 4900, false,
    arg(Type.Int, p0),
    arg(Type.String, p1),
    arg(Type.Char, p2)
  )
end

-- BOOL SC_COMMUNITY_EVENT_GET_DISPLAY_NAME_BY_ID(int p0, char* p1) // 0x19853B5B17D77BCA
function SOCIALCLUB.SC_COMMUNITY_EVENT_GET_DISPLAY_NAME_BY_ID(p0, p1)
  return native.invoke(
    Type.Bool, 4901, false,
    arg(Type.Int, p0),
    arg(Type.Char, p1)
  )
end

-- BOOL SC_TRANSITION_NEWS_SHOW(Any p0) // 0x6BFB12CE158E3DD4
function SOCIALCLUB.SC_TRANSITION_NEWS_SHOW(p0)
  return native.invoke(
    Type.Bool, 4902, false,
    arg(Type.Any, p0)
  )
end

-- BOOL SC_TRANSITION_NEWS_SHOW_TIMED(Any p0, Any p1) // 0xFE4C1D0D3B9CC17E
function SOCIALCLUB.SC_TRANSITION_NEWS_SHOW_TIMED(p0, p1)
  return native.invoke(
    Type.Bool, 4903, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL SC_TRANSITION_NEWS_SHOW_NEXT_ITEM() // 0xD8122C407663B995
function SOCIALCLUB.SC_TRANSITION_NEWS_SHOW_NEXT_ITEM()
  return native.invoke(
    Type.Bool, 4904, false
  )
end

-- BOOL SC_TRANSITION_NEWS_HAS_EXTRA_DATA_TU() // 0x3001BEF2FECA3680
function SOCIALCLUB.SC_TRANSITION_NEWS_HAS_EXTRA_DATA_TU()
  return native.invoke(
    Type.Bool, 4905, false
  )
end

-- BOOL SC_TRANSITION_NEWS_GET_EXTRA_DATA_INT_TU(const char* p0, int* p1) // 0x92DA6E70EF249BD1
function SOCIALCLUB.SC_TRANSITION_NEWS_GET_EXTRA_DATA_INT_TU(p0, p1)
  return native.invoke(
    Type.Bool, 4906, false,
    arg(Type.String, p0),
    arg(Type.Int, p1)
  )
end

-- void SC_TRANSITION_NEWS_END() // 0x675721C9F644D161
function SOCIALCLUB.SC_TRANSITION_NEWS_END()
  native.invoke(
    Type.Void, 4907, false
  )
end

-- BOOL SC_PAUSE_NEWS_INIT_STARTER_PACK(Any p0) // 0xE4F6E8D07A2F0F51
function SOCIALCLUB.SC_PAUSE_NEWS_INIT_STARTER_PACK(p0)
  return native.invoke(
    Type.Bool, 4908, false,
    arg(Type.Any, p0)
  )
end

-- BOOL SC_PAUSE_NEWS_GET_PENDING_STORY(Any p0) // 0x8A4416C0DB05FA66
--[[
Fills some 0x30 sized struct
--]]
function SOCIALCLUB.SC_PAUSE_NEWS_GET_PENDING_STORY(p0)
  return native.invoke(
    Type.Bool, 4909, false,
    arg(Type.Any, p0)
  )
end

-- void SC_PAUSE_NEWS_SHUTDOWN() // 0xEA95C0853A27888E
function SOCIALCLUB.SC_PAUSE_NEWS_SHUTDOWN()
  native.invoke(
    Type.Void, 4910, false
  )
end

-- const char* SC_ACCOUNT_INFO_GET_NICKNAME() // 0x198D161F458ECC7F
--[[
Returns the nickname of the logged-in Rockstar Social Club account.
--]]
function SOCIALCLUB.SC_ACCOUNT_INFO_GET_NICKNAME()
  return native.invoke(
    Type.Const char, 4911, false
  )
end

-- BOOL SC_ACHIEVEMENT_INFO_STATUS(int* p0) // 0x225798743970412B
function SOCIALCLUB.SC_ACHIEVEMENT_INFO_STATUS(p0)
  return native.invoke(
    Type.Bool, 4912, false,
    arg(Type.Int, p0)
  )
end

-- BOOL SC_HAS_ACHIEVEMENT_BEEN_PASSED(int achievementId) // 0x418DC16FAE452C1C
--[[
Same as HAS_ACHIEVEMENT_BEEN_PASSED
--]]
function SOCIALCLUB.SC_HAS_ACHIEVEMENT_BEEN_PASSED(achievementId)
  return native.invoke(
    Type.Bool, 4913, false,
    arg(Type.Int, achievementId)
  )
end


STATS = {}

-- BOOL STAT_CLEAR_SLOT_FOR_RELOAD(int statSlot) // 0xEB0A72181D4AA4AD
--[[
Example:

for (v_2 = 0; v_2 <= 4; v_2 += 1) {
    STATS::STAT_CLEAR_SLOT_FOR_RELOAD(v_2);
}
--]]
function STATS.STAT_CLEAR_SLOT_FOR_RELOAD(statSlot)
  return native.invoke(
    Type.Bool, 4914, false,
    arg(Type.Int, statSlot)
  )
end

-- BOOL STAT_LOAD(int statSlot) // 0xA651443F437B1CE6
function STATS.STAT_LOAD(statSlot)
  return native.invoke(
    Type.Bool, 4915, false,
    arg(Type.Int, statSlot)
  )
end

-- BOOL STAT_SAVE(int p0, BOOL p1, int p2, BOOL p3) // 0xE07BCA305B82D2FD
function STATS.STAT_SAVE(p0, p1, p2, p3)
  return native.invoke(
    Type.Bool, 4916, false,
    arg(Type.Int, p0),
    arg(Type.Bool, p1),
    arg(Type.Int, p2),
    arg(Type.Bool, p3)
  )
end

-- void STAT_SET_OPEN_SAVETYPE_IN_JOB(int p0) // 0x5688585E6D563CD8
function STATS.STAT_SET_OPEN_SAVETYPE_IN_JOB(p0)
  native.invoke(
    Type.Void, 4917, false,
    arg(Type.Int, p0)
  )
end

-- BOOL STAT_LOAD_PENDING(int statSlot) // 0xA1750FFAFA181661
function STATS.STAT_LOAD_PENDING(statSlot)
  return native.invoke(
    Type.Bool, 4918, false,
    arg(Type.Int, statSlot)
  )
end

-- BOOL STAT_SAVE_PENDING() // 0x7D3A583856F2C5AC
function STATS.STAT_SAVE_PENDING()
  return native.invoke(
    Type.Bool, 4919, false
  )
end

-- BOOL STAT_SAVE_PENDING_OR_REQUESTED() // 0xBBB6AD006F1BBEA3
function STATS.STAT_SAVE_PENDING_OR_REQUESTED()
  return native.invoke(
    Type.Bool, 4920, false
  )
end

-- BOOL STAT_DELETE_SLOT(int p0) // 0x49A49BED12794D70
--[[
p0 is characterSlot? seems range from 0 to 2
--]]
function STATS.STAT_DELETE_SLOT(p0)
  return native.invoke(
    Type.Bool, 4921, false,
    arg(Type.Int, p0)
  )
end

-- BOOL STAT_SLOT_IS_LOADED(int statSlot) // 0x0D0A9F0E7BD91E3C
function STATS.STAT_SLOT_IS_LOADED(statSlot)
  return native.invoke(
    Type.Bool, 4922, false,
    arg(Type.Int, statSlot)
  )
end

-- BOOL STAT_CLOUD_SLOT_LOAD_FAILED(int p0) // 0x7F2C4CDF2E82DF4C
function STATS.STAT_CLOUD_SLOT_LOAD_FAILED(p0)
  return native.invoke(
    Type.Bool, 4923, false,
    arg(Type.Int, p0)
  )
end

-- int STAT_CLOUD_SLOT_LOAD_FAILED_CODE(Any p0) // 0xE496A53BA5F50A56
function STATS.STAT_CLOUD_SLOT_LOAD_FAILED_CODE(p0)
  return native.invoke(
    Type.Int, 4924, false,
    arg(Type.Any, p0)
  )
end

-- void STAT_SET_BLOCK_SAVES(BOOL toggle) // 0xF434A10BA01C37D0
function STATS.STAT_SET_BLOCK_SAVES(toggle)
  native.invoke(
    Type.Void, 4925, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL STAT_GET_BLOCK_SAVES() // 0x6A7F19756F1A9016
function STATS.STAT_GET_BLOCK_SAVES()
  return native.invoke(
    Type.Bool, 4926, false
  )
end

-- BOOL STAT_CLOUD_SLOT_SAVE_FAILED(Any p0) // 0x7E6946F68A38B74F
function STATS.STAT_CLOUD_SLOT_SAVE_FAILED(p0)
  return native.invoke(
    Type.Bool, 4927, false,
    arg(Type.Any, p0)
  )
end

-- void STAT_CLEAR_PENDING_SAVES(Any p0) // 0xA8733668D1047B51
function STATS.STAT_CLEAR_PENDING_SAVES(p0)
  native.invoke(
    Type.Void, 4928, false,
    arg(Type.Any, p0)
  )
end

-- BOOL STAT_LOAD_DIRTY_READ_DETECTED() // 0xECB41AC6AB754401
function STATS.STAT_LOAD_DIRTY_READ_DETECTED()
  return native.invoke(
    Type.Bool, 4929, false
  )
end

-- void STAT_CLEAR_DIRTY_READ_DETECTED() // 0x9B4BD21D69B1E609
function STATS.STAT_CLEAR_DIRTY_READ_DETECTED()
  native.invoke(
    Type.Void, 4930, false
  )
end

-- BOOL STAT_GET_LOAD_SAFE_TO_PROGRESS_TO_MP_FROM_SP() // 0xC0E0D686DDFC6EAE
function STATS.STAT_GET_LOAD_SAFE_TO_PROGRESS_TO_MP_FROM_SP()
  return native.invoke(
    Type.Bool, 4931, false
  )
end

-- Hash _GET_STAT_HASH_FOR_CHARACTER_STAT(int dataType, int statIndex, int charSlot) // 0xD69CE161FE614531
--[[
Returns stat hash based on dataType, statIndex/statId and characterSlot. Related to CStatsMpCharacterMappingData
--]]
function STATS._GET_STAT_HASH_FOR_CHARACTER_STAT(dataType, statIndex, charSlot)
  return native.invoke(
    Type.Hash, 4932, false,
    arg(Type.Int, dataType),
    arg(Type.Int, statIndex),
    arg(Type.Int, charSlot)
  )
end

-- BOOL STAT_SET_INT(Hash statName, int value, BOOL save) // 0xB3271D7AB655B441
--[[
Example:
 STATS::STAT_SET_INT(MISC::GET_HASH_KEY("MPPLY_KILLS_PLAYERS"), 1337, true);
--]]
function STATS.STAT_SET_INT(statName, value, save)
  return native.invoke(
    Type.Bool, 4933, false,
    arg(Type.Hash, statName),
    arg(Type.Int, value),
    arg(Type.Bool, save)
  )
end

-- BOOL STAT_SET_FLOAT(Hash statName, float value, BOOL save) // 0x4851997F37FE9B3C
--[[
Example:
 STATS::STAT_SET_FLOAT(MISC::GET_HASH_KEY("MP0_WEAPON_ACCURACY"), 66.6f, true);
--]]
function STATS.STAT_SET_FLOAT(statName, value, save)
  return native.invoke(
    Type.Bool, 4934, false,
    arg(Type.Hash, statName),
    arg(Type.Float, value),
    arg(Type.Bool, save)
  )
end

-- BOOL STAT_SET_BOOL(Hash statName, BOOL value, BOOL save) // 0x4B33C4243DE0C432
--[[
Example:
 STATS::STAT_SET_BOOL(MISC::GET_HASH_KEY("MPPLY_MELEECHLENGECOMPLETED"), trur, true);
--]]
function STATS.STAT_SET_BOOL(statName, value, save)
  return native.invoke(
    Type.Bool, 4935, false,
    arg(Type.Hash, statName),
    arg(Type.Bool, value),
    arg(Type.Bool, save)
  )
end

-- BOOL STAT_SET_GXT_LABEL(Hash statName, const char* value, BOOL save) // 0x17695002FD8B2AE0
--[[
The following values have been found in the decompiled scripts:
"RC_ABI1"
"RC_ABI2"
"RC_BA1"
"RC_BA2"
"RC_BA3"
"RC_BA3A"
"RC_BA3C"
"RC_BA4"
"RC_DRE1"
"RC_EPS1"
"RC_EPS2"
"RC_EPS3"
"RC_EPS4"
"RC_EPS5"
"RC_EPS6"
"RC_EPS7"
"RC_EPS8"
"RC_EXT1"
"RC_EXT2"
"RC_EXT3"
"RC_EXT4"
"RC_FAN1"
"RC_FAN2"
"RC_FAN3"
"RC_HAO1"
"RC_HUN1"
"RC_HUN2"
"RC_JOS1"
"RC_JOS2"
"RC_JOS3"
"RC_JOS4"
"RC_MAU1"
"RC_MIN1"
"RC_MIN2"
"RC_MIN3"
"RC_MRS1"
"RC_MRS2"
"RC_NI1"
"RC_NI1A"
"RC_NI1B"
"RC_NI1C"
"RC_NI1D"
"RC_NI2"
"RC_NI3"
"RC_OME1"
"RC_OME2"
"RC_PA1"
"RC_PA2"
"RC_PA3"
"RC_PA3A"
"RC_PA3B"
"RC_PA4"
"RC_RAM1"
"RC_RAM2"
"RC_RAM3"
"RC_RAM4"
"RC_RAM5"
"RC_SAS1"
"RC_TON1"
"RC_TON2"
"RC_TON3"
"RC_TON4"
"RC_TON5"
--]]
function STATS.STAT_SET_GXT_LABEL(statName, value, save)
  return native.invoke(
    Type.Bool, 4936, false,
    arg(Type.Hash, statName),
    arg(Type.String, value),
    arg(Type.Bool, save)
  )
end

-- BOOL STAT_SET_DATE(Hash statName, Any* value, int numFields, BOOL save) // 0x2C29BFB64F4FCBE4
--[[
'value' is a structure to a structure, 'numFields' is how many fields there are in said structure (usually 7).

The structure looks like this:

int year
int month
int day
int hour
int minute
int second
int millisecond

The decompiled scripts use TIME::GET_POSIX_TIME to fill this structure.
--]]
function STATS.STAT_SET_DATE(statName, value, numFields, save)
  return native.invoke(
    Type.Bool, 4937, false,
    arg(Type.Hash, statName),
    arg(Type.Any, value),
    arg(Type.Int, numFields),
    arg(Type.Bool, save)
  )
end

-- BOOL STAT_SET_STRING(Hash statName, const char* value, BOOL save) // 0xA87B2335D12531D7
function STATS.STAT_SET_STRING(statName, value, save)
  return native.invoke(
    Type.Bool, 4938, false,
    arg(Type.Hash, statName),
    arg(Type.String, value),
    arg(Type.Bool, save)
  )
end

-- BOOL STAT_SET_POS(Hash statName, float x, float y, float z, BOOL save) // 0xDB283FDE680FE72E
function STATS.STAT_SET_POS(statName, x, y, z, save)
  return native.invoke(
    Type.Bool, 4939, false,
    arg(Type.Hash, statName),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Bool, save)
  )
end

-- BOOL STAT_SET_MASKED_INT(Hash statName, int p1, int p2, int p3, BOOL save) // 0x7BBB1B54583ED410
function STATS.STAT_SET_MASKED_INT(statName, p1, p2, p3, save)
  return native.invoke(
    Type.Bool, 4940, false,
    arg(Type.Hash, statName),
    arg(Type.Int, p1),
    arg(Type.Int, p2),
    arg(Type.Int, p3),
    arg(Type.Bool, save)
  )
end

-- BOOL STAT_SET_USER_ID(Hash statName, const char* value, BOOL save) // 0x8CDDF1E452BABE11
function STATS.STAT_SET_USER_ID(statName, value, save)
  return native.invoke(
    Type.Bool, 4941, false,
    arg(Type.Hash, statName),
    arg(Type.String, value),
    arg(Type.Bool, save)
  )
end

-- BOOL STAT_SET_CURRENT_POSIX_TIME(Hash statName, BOOL p1) // 0xC2F84B7F9C4D0C61
--[[
p1 always true.
--]]
function STATS.STAT_SET_CURRENT_POSIX_TIME(statName, p1)
  return native.invoke(
    Type.Bool, 4942, false,
    arg(Type.Hash, statName),
    arg(Type.Bool, p1)
  )
end

-- BOOL STAT_GET_INT(Hash statHash, int* outValue, int p2) // 0x767FBC2AC802EF3D
--[[
p2 appears to always be -1

--]]
function STATS.STAT_GET_INT(statHash, outValue, p2)
  return native.invoke(
    Type.Bool, 4943, false,
    arg(Type.Hash, statHash),
    arg(Type.Int, outValue),
    arg(Type.Int, p2)
  )
end

-- BOOL STAT_GET_FLOAT(Hash statHash, float* outValue, Any p2) // 0xD7AE6C9C9C6AC54C
function STATS.STAT_GET_FLOAT(statHash, outValue, p2)
  return native.invoke(
    Type.Bool, 4944, false,
    arg(Type.Hash, statHash),
    arg(Type.Float, outValue),
    arg(Type.Any, p2)
  )
end

-- BOOL STAT_GET_BOOL(Hash statHash, BOOL* outValue, Any p2) // 0x11B5E6D2AE73F48E
function STATS.STAT_GET_BOOL(statHash, outValue, p2)
  return native.invoke(
    Type.Bool, 4945, false,
    arg(Type.Hash, statHash),
    arg(Type.Bool, outValue),
    arg(Type.Any, p2)
  )
end

-- BOOL STAT_GET_DATE(Hash statHash, Any* outValue, int numFields, Any p3) // 0x8B0FACEFC36C824B
--[[
p3 is probably characterSlot or BOOL save, always -1
--]]
function STATS.STAT_GET_DATE(statHash, outValue, numFields, p3)
  return native.invoke(
    Type.Bool, 4946, false,
    arg(Type.Hash, statHash),
    arg(Type.Any, outValue),
    arg(Type.Int, numFields),
    arg(Type.Any, p3)
  )
end

-- const char* STAT_GET_STRING(Hash statHash, int p1) // 0xE50384ACC2C3DB74
--[[
p1 is always -1 in the script files
--]]
function STATS.STAT_GET_STRING(statHash, p1)
  return native.invoke(
    Type.Const char, 4947, false,
    arg(Type.Hash, statHash),
    arg(Type.Int, p1)
  )
end

-- BOOL STAT_GET_POS(Hash statName, float* outX, float* outY, float* outZ, Any p4) // 0x350F82CCB186AA1B
--[[
p3 is probably characterSlot or BOOL save, always -1
--]]
function STATS.STAT_GET_POS(statName, outX, outY, outZ, p4)
  return native.invoke(
    Type.Bool, 4948, false,
    arg(Type.Hash, statName),
    arg(Type.Float, outX),
    arg(Type.Float, outY),
    arg(Type.Float, outZ),
    arg(Type.Any, p4)
  )
end

-- BOOL STAT_GET_MASKED_INT(Hash statHash, int* outValue, int p2, int p3, Any p4) // 0x655185A06D9EEAAB
--[[
p4 is probably characterSlot or BOOL save
--]]
function STATS.STAT_GET_MASKED_INT(statHash, outValue, p2, p3, p4)
  return native.invoke(
    Type.Bool, 4949, false,
    arg(Type.Hash, statHash),
    arg(Type.Int, outValue),
    arg(Type.Int, p2),
    arg(Type.Int, p3),
    arg(Type.Any, p4)
  )
end

-- const char* STAT_GET_USER_ID(Hash statHash) // 0x2365C388E393BBE2
--[[
Returns the rockstar ID (user id) value of a given stat. Returns "STAT_UNKNOWN" if the statHash is invalid or the stat has no userId
--]]
function STATS.STAT_GET_USER_ID(statHash)
  return native.invoke(
    Type.Const char, 4950, false,
    arg(Type.Hash, statHash)
  )
end

-- const char* STAT_GET_LICENSE_PLATE(Hash statName) // 0x5473D4195058B2E4
function STATS.STAT_GET_LICENSE_PLATE(statName)
  return native.invoke(
    Type.Const char, 4951, false,
    arg(Type.Hash, statName)
  )
end

-- BOOL STAT_SET_LICENSE_PLATE(Hash statName, const char* str) // 0x69FF13266D7296DA
function STATS.STAT_SET_LICENSE_PLATE(statName, str)
  return native.invoke(
    Type.Bool, 4952, false,
    arg(Type.Hash, statName),
    arg(Type.String, str)
  )
end

-- void STAT_INCREMENT(Hash statName, float value) // 0x9B5A68C6489E9909
function STATS.STAT_INCREMENT(statName, value)
  native.invoke(
    Type.Void, 4953, false,
    arg(Type.Hash, statName),
    arg(Type.Float, value)
  )
end

-- BOOL STAT_COMMUNITY_START_SYNCH() // 0x5A556B229A169402
function STATS.STAT_COMMUNITY_START_SYNCH()
  return native.invoke(
    Type.Bool, 4954, false
  )
end

-- BOOL STAT_COMMUNITY_SYNCH_IS_PENDING() // 0xB1D2BB1E1631F5B1
function STATS.STAT_COMMUNITY_SYNCH_IS_PENDING()
  return native.invoke(
    Type.Bool, 4955, false
  )
end

-- BOOL STAT_COMMUNITY_GET_HISTORY(Hash statName, int p1, float* outValue) // 0xBED9F5693F34ED17
function STATS.STAT_COMMUNITY_GET_HISTORY(statName, p1, outValue)
  return native.invoke(
    Type.Bool, 4956, false,
    arg(Type.Hash, statName),
    arg(Type.Int, p1),
    arg(Type.Float, outValue)
  )
end

-- void STAT_RESET_ALL_ONLINE_CHARACTER_STATS(int p0) // 0x26D7399B9587FE89
--[[
p0 seems to range from 0 to 7
--]]
function STATS.STAT_RESET_ALL_ONLINE_CHARACTER_STATS(p0)
  native.invoke(
    Type.Void, 4957, false,
    arg(Type.Int, p0)
  )
end

-- void STAT_LOCAL_RESET_ALL_ONLINE_CHARACTER_STATS(int p0) // 0xA78B8FA58200DA56
--[[
p0 seems to range from 0 to 7
--]]
function STATS.STAT_LOCAL_RESET_ALL_ONLINE_CHARACTER_STATS(p0)
  native.invoke(
    Type.Void, 4958, false,
    arg(Type.Int, p0)
  )
end

-- int STAT_GET_NUMBER_OF_DAYS(Hash statName) // 0xE0E854F5280FB769
function STATS.STAT_GET_NUMBER_OF_DAYS(statName)
  return native.invoke(
    Type.Int, 4959, false,
    arg(Type.Hash, statName)
  )
end

-- int STAT_GET_NUMBER_OF_HOURS(Hash statName) // 0xF2D4B2FE415AAFC3
function STATS.STAT_GET_NUMBER_OF_HOURS(statName)
  return native.invoke(
    Type.Int, 4960, false,
    arg(Type.Hash, statName)
  )
end

-- int STAT_GET_NUMBER_OF_MINUTES(Hash statName) // 0x7583B4BE4C5A41B5
function STATS.STAT_GET_NUMBER_OF_MINUTES(statName)
  return native.invoke(
    Type.Int, 4961, false,
    arg(Type.Hash, statName)
  )
end

-- int STAT_GET_NUMBER_OF_SECONDS(Hash statName) // 0x2CE056FF3723F00B
function STATS.STAT_GET_NUMBER_OF_SECONDS(statName)
  return native.invoke(
    Type.Int, 4962, false,
    arg(Type.Hash, statName)
  )
end

-- void STAT_SET_PROFILE_SETTING_VALUE(int profileSetting, int value) // 0x68F01422BE1D838F
--[[
Does not take effect immediately, unfortunately.

profileSetting seems to only be 936, 937 and 938 in scripts
--]]
function STATS.STAT_SET_PROFILE_SETTING_VALUE(profileSetting, value)
  native.invoke(
    Type.Void, 4963, false,
    arg(Type.Int, profileSetting),
    arg(Type.Int, value)
  )
end

-- void STATS_COMPLETED_CHARACTER_CREATION(Any p0) // 0xC01D2470F22CDE5A
--[[
This native does absolutely nothing, just a nullsub
--]]
function STATS.STATS_COMPLETED_CHARACTER_CREATION(p0)
  native.invoke(
    Type.Void, 4964, false,
    arg(Type.Any, p0)
  )
end

-- int PACKED_STAT_GET_INT_STAT_INDEX(int p0) // 0x94F12ABF9C79E339
--[[
Needs more research. Possibly used to calculate the "mask" when calling "STAT_SET_MASKED_INT"?
--]]
function STATS.PACKED_STAT_GET_INT_STAT_INDEX(p0)
  return native.invoke(
    Type.Int, 4965, false,
    arg(Type.Int, p0)
  )
end

-- Hash GET_PACKED_INT_STAT_KEY(int index, BOOL spStat, BOOL charStat, int character) // 0x61E111E323419E07
function STATS.GET_PACKED_INT_STAT_KEY(index, spStat, charStat, character)
  return native.invoke(
    Type.Hash, 4966, false,
    arg(Type.Int, index),
    arg(Type.Bool, spStat),
    arg(Type.Bool, charStat),
    arg(Type.Int, character)
  )
end

-- Hash GET_PACKED_TU_INT_STAT_KEY(int index, BOOL spStat, BOOL charStat, int character) // 0xD16C2AD6B8E32854
function STATS.GET_PACKED_TU_INT_STAT_KEY(index, spStat, charStat, character)
  return native.invoke(
    Type.Hash, 4967, false,
    arg(Type.Int, index),
    arg(Type.Bool, spStat),
    arg(Type.Bool, charStat),
    arg(Type.Int, character)
  )
end

-- Hash GET_PACKED_NG_INT_STAT_KEY(int index, BOOL spStat, BOOL charStat, int character, const char* section) // 0x2B4CDCA6F07FF3DA
--[[
Needs more research. Gets the stat name of a masked int?

section - values used in the decompiled scripts:
"_NGPSTAT_INT"
"_MP_NGPSTAT_INT"
"_MP_LRPSTAT_INT"
"_MP_APAPSTAT_INT"
"_MP_LR2PSTAT_INT"
"_MP_BIKEPSTAT_INT"
"_MP_IMPEXPPSTAT_INT"
"_MP_GUNRPSTAT_INT"
"_NGDLCPSTAT_INT"
"_MP_NGDLCPSTAT_INT"
"_DLCSMUGCHARPSTAT_INT"
"_GANGOPSPSTAT_INT"
"_BUSINESSBATPSTAT_INT"
"_ARENAWARSPSTAT_INT"
"_CASINOPSTAT_INT"
"_CASINOHSTPSTAT_INT"
--]]
function STATS.GET_PACKED_NG_INT_STAT_KEY(index, spStat, charStat, character, section)
  return native.invoke(
    Type.Hash, 4968, false,
    arg(Type.Int, index),
    arg(Type.Bool, spStat),
    arg(Type.Bool, charStat),
    arg(Type.Int, character),
    arg(Type.String, section)
  )
end

-- BOOL GET_PACKED_STAT_BOOL_CODE(int index, int characterSlot) // 0xDA7EBFC49AE3F1B0
function STATS.GET_PACKED_STAT_BOOL_CODE(index, characterSlot)
  return native.invoke(
    Type.Bool, 4969, false,
    arg(Type.Int, index),
    arg(Type.Int, characterSlot)
  )
end

-- int GET_PACKED_STAT_INT_CODE(int index, int characterSlot) // 0x0BC900A6FE73770C
function STATS.GET_PACKED_STAT_INT_CODE(index, characterSlot)
  return native.invoke(
    Type.Int, 4970, false,
    arg(Type.Int, index),
    arg(Type.Int, characterSlot)
  )
end

-- void SET_PACKED_STAT_BOOL_CODE(int index, BOOL value, int characterSlot) // 0xDB8A58AEAA67CD07
function STATS.SET_PACKED_STAT_BOOL_CODE(index, value, characterSlot)
  native.invoke(
    Type.Void, 4971, false,
    arg(Type.Int, index),
    arg(Type.Bool, value),
    arg(Type.Int, characterSlot)
  )
end

-- void SET_PACKED_STAT_INT_CODE(int index, int value, int characterSlot) // 0x1581503AE529CD2E
function STATS.SET_PACKED_STAT_INT_CODE(index, value, characterSlot)
  native.invoke(
    Type.Void, 4972, false,
    arg(Type.Int, index),
    arg(Type.Int, value),
    arg(Type.Int, characterSlot)
  )
end

-- void PLAYSTATS_BACKGROUND_SCRIPT_ACTION(const char* action, int value) // 0x5009DFD741329729
function STATS.PLAYSTATS_BACKGROUND_SCRIPT_ACTION(action, value)
  native.invoke(
    Type.Void, 4973, false,
    arg(Type.String, action),
    arg(Type.Int, value)
  )
end

-- void _PLAYSTATS_FLOW_LOW(float posX, float posY, float posZ, const char* p3, Any p4, int amount) // 0xE6A27CDA42887F93
--[[
p3: VehicleConversion, SCAdminCashGift
p4: 0
--]]
function STATS._PLAYSTATS_FLOW_LOW(posX, posY, posZ, p3, p4, amount)
  native.invoke(
    Type.Void, 4974, false,
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ),
    arg(Type.String, p3),
    arg(Type.Any, p4),
    arg(Type.Int, amount)
  )
end

-- void _PLAYSTATS_FLOW_MEDIUM(float x, float y, float z, const char* interiorAction, int p4, Hash p5) // 0xC4493521BAA12CCE
--[[
interiorAction: can either be InteriorEntry or InteriorExit
--]]
function STATS._PLAYSTATS_FLOW_MEDIUM(x, y, z, interiorAction, p4, p5)
  native.invoke(
    Type.Void, 4975, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.String, interiorAction),
    arg(Type.Int, p4),
    arg(Type.Hash, p5)
  )
end

-- void PLAYSTATS_NPC_INVITE(const char* p0) // 0x93054C88E6AA7C44
function STATS.PLAYSTATS_NPC_INVITE(p0)
  native.invoke(
    Type.Void, 4976, false,
    arg(Type.String, p0)
  )
end

-- void PLAYSTATS_AWARD_XP(int amount, Hash type, Hash category) // 0x46F917F6B4128FE4
function STATS.PLAYSTATS_AWARD_XP(amount, type, category)
  native.invoke(
    Type.Void, 4977, false,
    arg(Type.Int, amount),
    arg(Type.Hash, type),
    arg(Type.Hash, category)
  )
end

-- void PLAYSTATS_RANK_UP(int rank) // 0xC7F2DE41D102BFB4
function STATS.PLAYSTATS_RANK_UP(rank)
  native.invoke(
    Type.Void, 4978, false,
    arg(Type.Int, rank)
  )
end

-- void PLAYSTATS_STARTED_SESSION_IN_OFFLINEMODE() // 0x098760C7461724CD
function STATS.PLAYSTATS_STARTED_SESSION_IN_OFFLINEMODE()
  native.invoke(
    Type.Void, 4979, false
  )
end

-- void PLAYSTATS_ACTIVITY_DONE(int p0, int activityId, Any p2) // 0xA071E0ED98F91286
function STATS.PLAYSTATS_ACTIVITY_DONE(p0, activityId, p2)
  native.invoke(
    Type.Void, 4980, false,
    arg(Type.Int, p0),
    arg(Type.Int, activityId),
    arg(Type.Any, p2)
  )
end

-- void PLAYSTATS_LEAVE_JOB_CHAIN(Any p0, Any p1, Any p2, Any p3, Any p4) // 0xC5BE134EC7BA96A0
function STATS.PLAYSTATS_LEAVE_JOB_CHAIN(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 4981, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4)
  )
end

-- void PLAYSTATS_MISSION_STARTED(const char* p0, Any p1, Any p2, BOOL p3) // 0xC19A2925C34D2231
function STATS.PLAYSTATS_MISSION_STARTED(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 4982, false,
    arg(Type.String, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Bool, p3)
  )
end

-- void PLAYSTATS_MISSION_OVER(const char* p0, Any p1, Any p2, BOOL p3, BOOL p4, BOOL p5) // 0x7C4BB33A8CED7324
function STATS.PLAYSTATS_MISSION_OVER(p0, p1, p2, p3, p4, p5)
  native.invoke(
    Type.Void, 4983, false,
    arg(Type.String, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Bool, p3),
    arg(Type.Bool, p4),
    arg(Type.Bool, p5)
  )
end

-- void PLAYSTATS_MISSION_CHECKPOINT(const char* p0, Any p1, Any p2, Any p3) // 0xC900596A63978C1D
function STATS.PLAYSTATS_MISSION_CHECKPOINT(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 4984, false,
    arg(Type.String, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void PLAYSTATS_RANDOM_MISSION_DONE(const char* name, Any p1, Any p2, Any p3) // 0x71862B1D855F32E1
function STATS.PLAYSTATS_RANDOM_MISSION_DONE(name, p1, p2, p3)
  native.invoke(
    Type.Void, 4985, false,
    arg(Type.String, name),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void PLAYSTATS_ROS_BET(int amount, int act, Player player, float cm) // 0x121FB4DDDC2D5291
function STATS.PLAYSTATS_ROS_BET(amount, act, player, cm)
  native.invoke(
    Type.Void, 4986, false,
    arg(Type.Int, amount),
    arg(Type.Int, act),
    arg(Type.Player, player),
    arg(Type.Float, cm)
  )
end

-- void PLAYSTATS_RACE_CHECKPOINT(Vehicle p0, Any p1, int p2, int p3, Any p4) // 0x9C375C315099DDE4
function STATS.PLAYSTATS_RACE_CHECKPOINT(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 4987, false,
    arg(Type.Vehicle, p0),
    arg(Type.Any, p1),
    arg(Type.Int, p2),
    arg(Type.Int, p3),
    arg(Type.Any, p4)
  )
end

-- BOOL PLAYSTATS_CREATE_MATCH_HISTORY_ID_2(int* playerAccountId, int* posixTime) // 0x6DEE77AFF8C21BD1
function STATS.PLAYSTATS_CREATE_MATCH_HISTORY_ID_2(playerAccountId, posixTime)
  return native.invoke(
    Type.Bool, 4988, false,
    arg(Type.Int, playerAccountId),
    arg(Type.Int, posixTime)
  )
end

-- void PLAYSTATS_MATCH_STARTED(Any p0, Any p1, Any p2) // 0xBC80E22DED931E3D
function STATS.PLAYSTATS_MATCH_STARTED(p0, p1, p2)
  native.invoke(
    Type.Void, 4989, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void PLAYSTATS_SHOP_ITEM(Any p0, Any p1, Any p2, Any p3, Any p4) // 0x176852ACAAC173D1
function STATS.PLAYSTATS_SHOP_ITEM(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 4990, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4)
  )
end

-- void PLAYSTATS_CRATE_DROP_MISSION_DONE(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7) // 0x1CAE5D2E3F9A07F0
function STATS.PLAYSTATS_CRATE_DROP_MISSION_DONE(p0, p1, p2, p3, p4, p5, p6, p7)
  native.invoke(
    Type.Void, 4991, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5),
    arg(Type.Any, p6),
    arg(Type.Any, p7)
  )
end

-- void PLAYSTATS_CRATE_CREATED(float p0, float p1, float p2) // 0xAFC7E5E075A96F46
function STATS.PLAYSTATS_CRATE_CREATED(p0, p1, p2)
  native.invoke(
    Type.Void, 4992, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1),
    arg(Type.Float, p2)
  )
end

-- void PLAYSTATS_HOLD_UP_MISSION_DONE(Any p0, Any p1, Any p2, Any p3) // 0xCB00196B31C39EB1
function STATS.PLAYSTATS_HOLD_UP_MISSION_DONE(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 4993, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void PLAYSTATS_IMPORT_EXPORT_MISSION_DONE(Any p0, Any p1, Any p2, Any p3) // 0x2B69F5074C894811
function STATS.PLAYSTATS_IMPORT_EXPORT_MISSION_DONE(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 4994, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void PLAYSTATS_RACE_TO_POINT_MISSION_DONE(int p0, Any p1, Any p2, Any p3) // 0xADDD1C754E2E2914
function STATS.PLAYSTATS_RACE_TO_POINT_MISSION_DONE(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 4995, false,
    arg(Type.Int, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void PLAYSTATS_ACQUIRED_HIDDEN_PACKAGE(Any p0) // 0x79AB33F0FBFAC40C
function STATS.PLAYSTATS_ACQUIRED_HIDDEN_PACKAGE(p0)
  native.invoke(
    Type.Void, 4996, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_WEBSITE_VISITED(Hash scaleformHash, int p1) // 0xDDF24D535060F811
function STATS.PLAYSTATS_WEBSITE_VISITED(scaleformHash, p1)
  native.invoke(
    Type.Void, 4997, false,
    arg(Type.Hash, scaleformHash),
    arg(Type.Int, p1)
  )
end

-- void PLAYSTATS_FRIEND_ACTIVITY(int p0, BOOL p1) // 0x0F71DE29AB2258F1
function STATS.PLAYSTATS_FRIEND_ACTIVITY(p0, p1)
  native.invoke(
    Type.Void, 4998, false,
    arg(Type.Int, p0),
    arg(Type.Bool, p1)
  )
end

-- void PLAYSTATS_ODDJOB_DONE(int totalTimeMs, int p1, BOOL p2) // 0x69DEA3E9DB727B4C
--[[
This native does absolutely nothing, just a nullsub
--]]
function STATS.PLAYSTATS_ODDJOB_DONE(totalTimeMs, p1, p2)
  native.invoke(
    Type.Void, 4999, false,
    arg(Type.Int, totalTimeMs),
    arg(Type.Int, p1),
    arg(Type.Bool, p2)
  )
end

-- void PLAYSTATS_PROP_CHANGE(Ped p0, int p1, int p2, int p3) // 0xBA739D6D5A05D6E7
function STATS.PLAYSTATS_PROP_CHANGE(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 5000, false,
    arg(Type.Ped, p0),
    arg(Type.Int, p1),
    arg(Type.Int, p2),
    arg(Type.Int, p3)
  )
end

-- void PLAYSTATS_CLOTH_CHANGE(Ped p0, Any p1, Any p2, Any p3, Any p4) // 0x34B973047A2268B9
function STATS.PLAYSTATS_CLOTH_CHANGE(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 5001, false,
    arg(Type.Ped, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4)
  )
end

-- void PLAYSTATS_WEAPON_MODE_CHANGE(Hash weaponHash, Hash componentHashTo, Hash componentHashFrom) // 0xE95C8A1875A02CA4
--[[
This is a typo made by R*. It's supposed to be called PLAYSTATS_WEAPON_MOD_CHANGE.
--]]
function STATS.PLAYSTATS_WEAPON_MODE_CHANGE(weaponHash, componentHashTo, componentHashFrom)
  native.invoke(
    Type.Void, 5002, false,
    arg(Type.Hash, weaponHash),
    arg(Type.Hash, componentHashTo),
    arg(Type.Hash, componentHashFrom)
  )
end

-- void PLAYSTATS_CHEAT_APPLIED(const char* cheat) // 0x6058665D72302D3F
function STATS.PLAYSTATS_CHEAT_APPLIED(cheat)
  native.invoke(
    Type.Void, 5003, false,
    arg(Type.String, cheat)
  )
end

-- void PLAYSTATS_JOB_ACTIVITY_END(Any* p0, Any* p1, Any* p2, Any* p3) // 0xF8C54A461C3E11DC
function STATS.PLAYSTATS_JOB_ACTIVITY_END(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 5004, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void PLAYSTATS_JOB_BEND(Any* p0, Any* p1, Any* p2, Any* p3) // 0xF5BB8DAC426A52C0
function STATS.PLAYSTATS_JOB_BEND(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 5005, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void PLAYSTATS_JOB_LTS_END(Any* p0, Any* p1, Any* p2, Any* p3) // 0xA736CF7FB7C5BFF4
function STATS.PLAYSTATS_JOB_LTS_END(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 5006, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void PLAYSTATS_JOB_LTS_ROUND_END(Any* p0, Any* p1, Any* p2, Any* p3) // 0x14E0B2D1AD1044E0
function STATS.PLAYSTATS_JOB_LTS_ROUND_END(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 5007, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void PLAYSTATS_QUICKFIX_TOOL(int element, const char* item) // 0x90D0622866E80445
function STATS.PLAYSTATS_QUICKFIX_TOOL(element, item)
  native.invoke(
    Type.Void, 5008, false,
    arg(Type.Int, element),
    arg(Type.String, item)
  )
end

-- void PLAYSTATS_IDLE_KICK(int msStoodIdle) // 0x5DA3A8DE8CB6226F
function STATS.PLAYSTATS_IDLE_KICK(msStoodIdle)
  native.invoke(
    Type.Void, 5009, false,
    arg(Type.Int, msStoodIdle)
  )
end

-- void PLAYSTATS_SET_JOIN_TYPE(int joinType) // 0xD1032E482629049E
function STATS.PLAYSTATS_SET_JOIN_TYPE(joinType)
  native.invoke(
    Type.Void, 5010, false,
    arg(Type.Int, joinType)
  )
end

-- void PLAYSTATS_HEIST_SAVE_CHEAT(Hash hash, int p1) // 0xF4FF020A08BC8863
function STATS.PLAYSTATS_HEIST_SAVE_CHEAT(hash, p1)
  native.invoke(
    Type.Void, 5011, false,
    arg(Type.Hash, hash),
    arg(Type.Int, p1)
  )
end

-- void PLAYSTATS_APPEND_DIRECTOR_METRIC(Any* p0) // 0x46326E13DA4E0546
function STATS.PLAYSTATS_APPEND_DIRECTOR_METRIC(p0)
  native.invoke(
    Type.Void, 5012, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_AWARD_BAD_SPORT(int id) // 0x47B32F5611E6E483
function STATS.PLAYSTATS_AWARD_BAD_SPORT(id)
  native.invoke(
    Type.Void, 5013, false,
    arg(Type.Int, id)
  )
end

-- void PLAYSTATS_PEGASUS_AS_PERSONAL_AIRCRAFT(Hash modelHash) // 0x9572BD4DD6B72122
function STATS.PLAYSTATS_PEGASUS_AS_PERSONAL_AIRCRAFT(modelHash)
  native.invoke(
    Type.Void, 5014, false,
    arg(Type.Hash, modelHash)
  )
end

-- void _PLAYSTATS_SHOPMENU_NAV(Any p0, Any p1, Any p2, Any p3) // 0xF96E9EA876D9DC92
function STATS._PLAYSTATS_SHOPMENU_NAV(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 5015, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void PLAYSTATS_FM_EVENT_CHALLENGES(Any p0) // 0x6A60E43998228229
function STATS.PLAYSTATS_FM_EVENT_CHALLENGES(p0)
  native.invoke(
    Type.Void, 5016, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_FM_EVENT_VEHICLETARGET(Any p0) // 0xBFAFDB5FAAA5C5AB
function STATS.PLAYSTATS_FM_EVENT_VEHICLETARGET(p0)
  native.invoke(
    Type.Void, 5017, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_FM_EVENT_URBANWARFARE(Any p0) // 0x8C9D11605E59D955
function STATS.PLAYSTATS_FM_EVENT_URBANWARFARE(p0)
  native.invoke(
    Type.Void, 5018, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_FM_EVENT_CHECKPOINTCOLLECTION(Any p0) // 0x3DE3AA516FB126A4
function STATS.PLAYSTATS_FM_EVENT_CHECKPOINTCOLLECTION(p0)
  native.invoke(
    Type.Void, 5019, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_FM_EVENT_ATOB(Any p0) // 0xBAA2F0490E146BE8
function STATS.PLAYSTATS_FM_EVENT_ATOB(p0)
  native.invoke(
    Type.Void, 5020, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_FM_EVENT_PENNEDIN(Any p0) // 0x1A7CE7CD3E653485
function STATS.PLAYSTATS_FM_EVENT_PENNEDIN(p0)
  native.invoke(
    Type.Void, 5021, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_FM_EVENT_PASSTHEPARCEL(Any p0) // 0x419615486BBF1956
function STATS.PLAYSTATS_FM_EVENT_PASSTHEPARCEL(p0)
  native.invoke(
    Type.Void, 5022, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_FM_EVENT_HOTPROPERTY(Any p0) // 0x84DFC579C2FC214C
function STATS.PLAYSTATS_FM_EVENT_HOTPROPERTY(p0)
  native.invoke(
    Type.Void, 5023, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_FM_EVENT_DEADDROP(Any p0) // 0x0A9C7F36E5D7B683
function STATS.PLAYSTATS_FM_EVENT_DEADDROP(p0)
  native.invoke(
    Type.Void, 5024, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_FM_EVENT_KINGOFTHECASTLE(Any p0) // 0x164C5FF663790845
function STATS.PLAYSTATS_FM_EVENT_KINGOFTHECASTLE(p0)
  native.invoke(
    Type.Void, 5025, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_FM_EVENT_CRIMINALDAMAGE(Any p0) // 0xEDBF6C9B0D2C65C8
function STATS.PLAYSTATS_FM_EVENT_CRIMINALDAMAGE(p0)
  native.invoke(
    Type.Void, 5026, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_FM_EVENT_COMPETITIVEURBANWARFARE(Any p0) // 0x6551B1F7F6CD46EA
function STATS.PLAYSTATS_FM_EVENT_COMPETITIVEURBANWARFARE(p0)
  native.invoke(
    Type.Void, 5027, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_FM_EVENT_HUNTBEAST(Any p0) // 0x2CD90358F67D0AA8
function STATS.PLAYSTATS_FM_EVENT_HUNTBEAST(p0)
  native.invoke(
    Type.Void, 5028, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_PIMENU_HIDE_OPTIONS(Any* data) // 0x203B381133817079
function STATS.PLAYSTATS_PIMENU_HIDE_OPTIONS(data)
  native.invoke(
    Type.Void, 5029, false,
    arg(Type.Any, data)
  )
end

-- int LEADERBOARDS_GET_NUMBER_OF_COLUMNS(int p0, Any p1) // 0x117B45156D7EFF2E
function STATS.LEADERBOARDS_GET_NUMBER_OF_COLUMNS(p0, p1)
  return native.invoke(
    Type.Int, 5030, false,
    arg(Type.Int, p0),
    arg(Type.Any, p1)
  )
end

-- int LEADERBOARDS_GET_COLUMN_ID(int p0, int p1, int p2) // 0xC4B5467A1886EA7E
function STATS.LEADERBOARDS_GET_COLUMN_ID(p0, p1, p2)
  return native.invoke(
    Type.Int, 5031, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1),
    arg(Type.Int, p2)
  )
end

-- int LEADERBOARDS_GET_COLUMN_TYPE(int p0, Any p1, Any p2) // 0xBF4FEF46DB7894D3
function STATS.LEADERBOARDS_GET_COLUMN_TYPE(p0, p1, p2)
  return native.invoke(
    Type.Int, 5032, false,
    arg(Type.Int, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- int LEADERBOARDS_READ_CLEAR_ALL() // 0xA34CB6E6F0DF4A0B
function STATS.LEADERBOARDS_READ_CLEAR_ALL()
  return native.invoke(
    Type.Int, 5033, false
  )
end

-- int LEADERBOARDS_READ_CLEAR(Any p0, Any p1, Any p2) // 0x7CCE5C737A665701
function STATS.LEADERBOARDS_READ_CLEAR(p0, p1, p2)
  return native.invoke(
    Type.Int, 5034, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- BOOL LEADERBOARDS_READ_PENDING(Any p0, Any p1, Any p2) // 0xAC392C8483342AC2
function STATS.LEADERBOARDS_READ_PENDING(p0, p1, p2)
  return native.invoke(
    Type.Bool, 5035, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- BOOL LEADERBOARDS_READ_ANY_PENDING() // 0xA31FD15197B192BD
function STATS.LEADERBOARDS_READ_ANY_PENDING()
  return native.invoke(
    Type.Bool, 5036, false
  )
end

-- BOOL LEADERBOARDS_READ_SUCCESSFUL(Any p0, Any p1, Any p2) // 0x2FB19228983E832C
function STATS.LEADERBOARDS_READ_SUCCESSFUL(p0, p1, p2)
  return native.invoke(
    Type.Bool, 5037, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- BOOL LEADERBOARDS2_READ_FRIENDS_BY_ROW(Any* p0, Any* p1, Any p2, BOOL p3, Any p4, Any p5) // 0x918B101666F9CB83
function STATS.LEADERBOARDS2_READ_FRIENDS_BY_ROW(p0, p1, p2, p3, p4, p5)
  return native.invoke(
    Type.Bool, 5038, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Bool, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5)
  )
end

-- BOOL LEADERBOARDS2_READ_BY_HANDLE(Any* p0, Any* p1) // 0xC30713A383BFBF0E
function STATS.LEADERBOARDS2_READ_BY_HANDLE(p0, p1)
  return native.invoke(
    Type.Bool, 5039, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL LEADERBOARDS2_READ_BY_RANK(Any* p0, Any p1, Any p2) // 0xBA2C7DB0C129449A
function STATS.LEADERBOARDS2_READ_BY_RANK(p0, p1, p2)
  return native.invoke(
    Type.Bool, 5040, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- BOOL LEADERBOARDS2_READ_BY_RADIUS(Any* p0, Any p1, Any* p2) // 0x5CE587FB5A42C8C4
function STATS.LEADERBOARDS2_READ_BY_RADIUS(p0, p1, p2)
  return native.invoke(
    Type.Bool, 5041, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- BOOL LEADERBOARDS2_READ_BY_SCORE_INT(Any* p0, Any p1, Any p2) // 0x7EEC7E4F6984A16A
function STATS.LEADERBOARDS2_READ_BY_SCORE_INT(p0, p1, p2)
  return native.invoke(
    Type.Bool, 5042, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- BOOL LEADERBOARDS2_READ_BY_SCORE_FLOAT(Any* p0, float p1, Any p2) // 0xE662C8B759D08F3C
function STATS.LEADERBOARDS2_READ_BY_SCORE_FLOAT(p0, p1, p2)
  return native.invoke(
    Type.Bool, 5043, false,
    arg(Type.Any, p0),
    arg(Type.Float, p1),
    arg(Type.Any, p2)
  )
end

-- BOOL LEADERBOARDS2_READ_RANK_PREDICTION(Any* p0, Any* p1, Any* p2) // 0xC38DC1E90D22547C
function STATS.LEADERBOARDS2_READ_RANK_PREDICTION(p0, p1, p2)
  return native.invoke(
    Type.Bool, 5044, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- BOOL LEADERBOARDS2_READ_BY_PLAFORM(Any* p0, const char* gamerHandleCsv, const char* platformName) // 0xF1AE5DCDBFCA2721
function STATS.LEADERBOARDS2_READ_BY_PLAFORM(p0, gamerHandleCsv, platformName)
  return native.invoke(
    Type.Bool, 5045, false,
    arg(Type.Any, p0),
    arg(Type.String, gamerHandleCsv),
    arg(Type.String, platformName)
  )
end

-- BOOL LEADERBOARDS2_READ_GET_ROW_DATA_START(Any* p0) // 0xA0F93D5465B3094D
function STATS.LEADERBOARDS2_READ_GET_ROW_DATA_START(p0)
  return native.invoke(
    Type.Bool, 5046, false,
    arg(Type.Any, p0)
  )
end

-- void LEADERBOARDS2_READ_GET_ROW_DATA_END() // 0x71B008056E5692D6
function STATS.LEADERBOARDS2_READ_GET_ROW_DATA_END()
  native.invoke(
    Type.Void, 5047, false
  )
end

-- BOOL LEADERBOARDS2_READ_GET_ROW_DATA_INFO(Any p0, Any* p1) // 0x34770B9CE0E03B91
function STATS.LEADERBOARDS2_READ_GET_ROW_DATA_INFO(p0, p1)
  return native.invoke(
    Type.Bool, 5048, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- int LEADERBOARDS2_READ_GET_ROW_DATA_INT(Any p0, Any p1) // 0x88578F6EC36B4A3A
function STATS.LEADERBOARDS2_READ_GET_ROW_DATA_INT(p0, p1)
  return native.invoke(
    Type.Int, 5049, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- float LEADERBOARDS2_READ_GET_ROW_DATA_FLOAT(Any p0, Any p1) // 0x38491439B6BA7F7D
function STATS.LEADERBOARDS2_READ_GET_ROW_DATA_FLOAT(p0, p1)
  return native.invoke(
    Type.Float, 5050, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL LEADERBOARDS2_WRITE_DATA(Any* p0) // 0xAE2206545888AE49
function STATS.LEADERBOARDS2_WRITE_DATA(p0)
  return native.invoke(
    Type.Bool, 5051, false,
    arg(Type.Any, p0)
  )
end

-- void LEADERBOARDS_WRITE_ADD_COLUMN(Any p0, Any p1, float p2) // 0x0BCA1D2C47B0D269
function STATS.LEADERBOARDS_WRITE_ADD_COLUMN(p0, p1, p2)
  native.invoke(
    Type.Void, 5052, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Float, p2)
  )
end

-- void LEADERBOARDS_WRITE_ADD_COLUMN_LONG(Any p0, Any p1, Any p2) // 0x2E65248609523599
function STATS.LEADERBOARDS_WRITE_ADD_COLUMN_LONG(p0, p1, p2)
  native.invoke(
    Type.Void, 5053, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- BOOL LEADERBOARDS_CACHE_DATA_ROW(Any* p0) // 0xB9BB18E2C40142ED
function STATS.LEADERBOARDS_CACHE_DATA_ROW(p0)
  return native.invoke(
    Type.Bool, 5054, false,
    arg(Type.Any, p0)
  )
end

-- void LEADERBOARDS_CLEAR_CACHE_DATA() // 0xD4B02A6B476E1FDC
function STATS.LEADERBOARDS_CLEAR_CACHE_DATA()
  native.invoke(
    Type.Void, 5055, false
  )
end

-- void LEADERBOARDS_CLEAR_CACHE_DATA_ID(Any p0) // 0x8EC74CEB042E7CFF
function STATS.LEADERBOARDS_CLEAR_CACHE_DATA_ID(p0)
  native.invoke(
    Type.Void, 5056, false,
    arg(Type.Any, p0)
  )
end

-- BOOL LEADERBOARDS_GET_CACHE_EXISTS(Any p0) // 0x9C51349BE6CDFE2C
function STATS.LEADERBOARDS_GET_CACHE_EXISTS(p0)
  return native.invoke(
    Type.Bool, 5057, false,
    arg(Type.Any, p0)
  )
end

-- int LEADERBOARDS_GET_CACHE_TIME(Any p0) // 0xF04C1C27DA35F6C8
function STATS.LEADERBOARDS_GET_CACHE_TIME(p0)
  return native.invoke(
    Type.Int, 5058, false,
    arg(Type.Any, p0)
  )
end

-- int LEADERBOARDS_GET_CACHE_NUMBER_OF_ROWS(Any p0) // 0x58A651CD201D89AD
function STATS.LEADERBOARDS_GET_CACHE_NUMBER_OF_ROWS(p0)
  return native.invoke(
    Type.Int, 5059, false,
    arg(Type.Any, p0)
  )
end

-- BOOL LEADERBOARDS_GET_CACHE_DATA_ROW(Any p0, Any p1, Any* p2) // 0x9120E8DBA3D69273
function STATS.LEADERBOARDS_GET_CACHE_DATA_ROW(p0, p1, p2)
  return native.invoke(
    Type.Bool, 5060, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void PRESENCE_EVENT_UPDATESTAT_INT(Hash statHash, int value, int p2) // 0x11FF1C80276097ED
function STATS.PRESENCE_EVENT_UPDATESTAT_INT(statHash, value, p2)
  native.invoke(
    Type.Void, 5061, false,
    arg(Type.Hash, statHash),
    arg(Type.Int, value),
    arg(Type.Int, p2)
  )
end

-- void PRESENCE_EVENT_UPDATESTAT_FLOAT(Hash statHash, float value, int p2) // 0x30A6614C1F7799B8
function STATS.PRESENCE_EVENT_UPDATESTAT_FLOAT(statHash, value, p2)
  native.invoke(
    Type.Void, 5062, false,
    arg(Type.Hash, statHash),
    arg(Type.Float, value),
    arg(Type.Int, p2)
  )
end

-- void PRESENCE_EVENT_UPDATESTAT_INT_WITH_STRING(Hash statHash, int value, int p2, const char* string) // 0x6483C25849031C4F
function STATS.PRESENCE_EVENT_UPDATESTAT_INT_WITH_STRING(statHash, value, p2, string)
  native.invoke(
    Type.Void, 5063, false,
    arg(Type.Hash, statHash),
    arg(Type.Int, value),
    arg(Type.Int, p2),
    arg(Type.String, string)
  )
end

-- BOOL GET_PLAYER_HAS_DRIVEN_ALL_VEHICLES() // 0x5EAD2BF6484852E4
function STATS.GET_PLAYER_HAS_DRIVEN_ALL_VEHICLES()
  return native.invoke(
    Type.Bool, 5064, false
  )
end

-- void SET_HAS_POSTED_ALL_VEHICLES_DRIVEN() // 0xC141B8917E0017EC
function STATS.SET_HAS_POSTED_ALL_VEHICLES_DRIVEN()
  native.invoke(
    Type.Void, 5065, false
  )
end

-- void SET_PROFILE_SETTING_PROLOGUE_COMPLETE() // 0xB475F27C6A994D65
function STATS.SET_PROFILE_SETTING_PROLOGUE_COMPLETE()
  native.invoke(
    Type.Void, 5066, false
  )
end

-- void SET_PROFILE_SETTING_SP_CHOP_MISSION_COMPLETE() // 0xC67E2DA1CBE759E2
--[[
Sets profile setting 939
--]]
function STATS.SET_PROFILE_SETTING_SP_CHOP_MISSION_COMPLETE()
  native.invoke(
    Type.Void, 5067, false
  )
end

-- void SET_PROFILE_SETTING_CREATOR_RACES_DONE(int value) // 0xF1A1803D3476F215
--[[
Sets profile setting 933
--]]
function STATS.SET_PROFILE_SETTING_CREATOR_RACES_DONE(value)
  native.invoke(
    Type.Void, 5068, false,
    arg(Type.Int, value)
  )
end

-- void SET_PROFILE_SETTING_CREATOR_DM_DONE(int value) // 0x38BAAA5DD4C9D19F
--[[
Sets profile setting 934
--]]
function STATS.SET_PROFILE_SETTING_CREATOR_DM_DONE(value)
  native.invoke(
    Type.Void, 5069, false,
    arg(Type.Int, value)
  )
end

-- void SET_PROFILE_SETTING_CREATOR_CTF_DONE(int value) // 0x55384438FC55AD8E
--[[
Sets profile setting 935
--]]
function STATS.SET_PROFILE_SETTING_CREATOR_CTF_DONE(value)
  native.invoke(
    Type.Void, 5070, false,
    arg(Type.Int, value)
  )
end

-- void SET_JOB_ACTIVITY_ID_STARTED(Any p0, int characterSlot) // 0x723C1CE13FBFDB67
function STATS.SET_JOB_ACTIVITY_ID_STARTED(p0, characterSlot)
  native.invoke(
    Type.Void, 5071, false,
    arg(Type.Any, p0),
    arg(Type.Int, characterSlot)
  )
end

-- void SET_FREEMODE_PROLOGUE_DONE(Any p0, int characterSlot) // 0x0D01D20616FC73FB
function STATS.SET_FREEMODE_PROLOGUE_DONE(p0, characterSlot)
  native.invoke(
    Type.Void, 5072, false,
    arg(Type.Any, p0),
    arg(Type.Int, characterSlot)
  )
end

-- void SET_FREEMODE_STRAND_PROGRESSION_STATUS(int profileSetting, int settingValue) // 0x79D310A861697CC9
--[[
Sets profile setting 940 and 941
--]]
function STATS.SET_FREEMODE_STRAND_PROGRESSION_STATUS(profileSetting, settingValue)
  native.invoke(
    Type.Void, 5073, false,
    arg(Type.Int, profileSetting),
    arg(Type.Int, settingValue)
  )
end

-- void STAT_NETWORK_INCREMENT_ON_SUICIDE(Any p0, float p1) // 0x428EAF89E24F6C36
function STATS.STAT_NETWORK_INCREMENT_ON_SUICIDE(p0, p1)
  native.invoke(
    Type.Void, 5074, false,
    arg(Type.Any, p0),
    arg(Type.Float, p1)
  )
end

-- void STAT_SET_CHEAT_IS_ACTIVE() // 0x047CBED6F6F8B63C
function STATS.STAT_SET_CHEAT_IS_ACTIVE()
  native.invoke(
    Type.Void, 5075, false
  )
end

-- BOOL LEADERBOARDS2_WRITE_DATA_FOR_EVENT_TYPE(Any* p0, Any* p1) // 0xC980E62E33DF1D5C
function STATS.LEADERBOARDS2_WRITE_DATA_FOR_EVENT_TYPE(p0, p1)
  return native.invoke(
    Type.Bool, 5076, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void FORCE_CLOUD_MP_STATS_DOWNLOAD_AND_OVERWRITE_LOCAL_SAVE() // 0x6F361B8889A792A3
function STATS.FORCE_CLOUD_MP_STATS_DOWNLOAD_AND_OVERWRITE_LOCAL_SAVE()
  native.invoke(
    Type.Void, 5077, false
  )
end

-- void STAT_MIGRATE_CLEAR_FOR_RESTART() // 0xC847B43F369AC0B5
function STATS.STAT_MIGRATE_CLEAR_FOR_RESTART()
  native.invoke(
    Type.Void, 5078, false
  )
end

-- BOOL STAT_MIGRATE_SAVEGAME_START(const char* platformName) // 0xA5C80D8E768A9E66
--[[
platformName must be one of the following: ps3, xbox360, ps4, xboxone
--]]
function STATS.STAT_MIGRATE_SAVEGAME_START(platformName)
  return native.invoke(
    Type.Bool, 5079, false,
    arg(Type.String, platformName)
  )
end

-- int STAT_MIGRATE_SAVEGAME_GET_STATUS() // 0x9A62EC95AE10E011
function STATS.STAT_MIGRATE_SAVEGAME_GET_STATUS()
  return native.invoke(
    Type.Int, 5080, false
  )
end

-- BOOL STAT_MIGRATE_CHECK_ALREADY_DONE() // 0x4C89FE2BDEB3F169
function STATS.STAT_MIGRATE_CHECK_ALREADY_DONE()
  return native.invoke(
    Type.Bool, 5081, false
  )
end

-- BOOL STAT_MIGRATE_CHECK_START() // 0xC6E0E2616A7576BB
function STATS.STAT_MIGRATE_CHECK_START()
  return native.invoke(
    Type.Bool, 5082, false
  )
end

-- int STAT_MIGRATE_CHECK_GET_IS_PLATFORM_AVAILABLE(int p0) // 0x5BD5F255321C4AAF
function STATS.STAT_MIGRATE_CHECK_GET_IS_PLATFORM_AVAILABLE(p0)
  return native.invoke(
    Type.Int, 5083, false,
    arg(Type.Int, p0)
  )
end

-- int STAT_MIGRATE_CHECK_GET_PLATFORM_STATUS(int p0, Any* p1) // 0xDEAAF77EB3687E97
function STATS.STAT_MIGRATE_CHECK_GET_PLATFORM_STATUS(p0, p1)
  return native.invoke(
    Type.Int, 5084, false,
    arg(Type.Int, p0),
    arg(Type.Any, p1)
  )
end

-- int STAT_GET_SAVE_MIGRATION_STATUS(Any* data) // 0x886913BBEACA68C1
function STATS.STAT_GET_SAVE_MIGRATION_STATUS(data)
  return native.invoke(
    Type.Int, 5085, false,
    arg(Type.Any, data)
  )
end

-- BOOL STAT_SAVE_MIGRATION_CANCEL_PENDING_OPERATION() // 0x4FEF53183C3C6414
function STATS.STAT_SAVE_MIGRATION_CANCEL_PENDING_OPERATION()
  return native.invoke(
    Type.Bool, 5086, false
  )
end

-- int STAT_GET_CANCEL_SAVE_MIGRATION_STATUS() // 0x567384DFA67029E6
function STATS.STAT_GET_CANCEL_SAVE_MIGRATION_STATUS()
  return native.invoke(
    Type.Int, 5087, false
  )
end

-- BOOL STAT_SAVE_MIGRATION_CONSUME_CONTENT(Hash contentId, const char* srcPlatform, const char* srcGamerHandle) // 0x3270F67EED31FBC1
function STATS.STAT_SAVE_MIGRATION_CONSUME_CONTENT(contentId, srcPlatform, srcGamerHandle)
  return native.invoke(
    Type.Bool, 5088, false,
    arg(Type.Hash, contentId),
    arg(Type.String, srcPlatform),
    arg(Type.String, srcGamerHandle)
  )
end

-- int STAT_GET_SAVE_MIGRATION_CONSUME_CONTENT_STATUS(int* p0) // 0xCE5AA445ABA8DEE0
function STATS.STAT_GET_SAVE_MIGRATION_CONSUME_CONTENT_STATUS(p0)
  return native.invoke(
    Type.Int, 5089, false,
    arg(Type.Int, p0)
  )
end

-- void STAT_ENABLE_STATS_TRACKING() // 0x98E2BC1CA26287C3
function STATS.STAT_ENABLE_STATS_TRACKING()
  native.invoke(
    Type.Void, 5090, false
  )
end

-- void STAT_DISABLE_STATS_TRACKING() // 0x629526ABA383BCAA
--[[
Prevents updates to CStatsMgr (e.g., STAT_SET_* natives)
--]]
function STATS.STAT_DISABLE_STATS_TRACKING()
  native.invoke(
    Type.Void, 5091, false
  )
end

-- BOOL STAT_IS_STATS_TRACKING_ENABLED() // 0xBE3DB208333D9844
function STATS.STAT_IS_STATS_TRACKING_ENABLED()
  return native.invoke(
    Type.Bool, 5092, false
  )
end

-- BOOL STAT_START_RECORD_STAT(int statType, int valueType) // 0x33D72899E24C3365
--[[
enum StatTrackingType
{
	LongestWheelie = 1,
	LongestStoppie = 2,
	NoCrashes = 3,
	HighestSpeed = 4,
	_MostFlips = 5,
	_LongestSpin = 6,
	_HighestJumpReached = 7,
	LongestJump = 8,
	_NearMissesNoCrash = 9,
	LongestFallSurvived = 10,
	LowestParachute = 11,
	ReverseDriving = 12,
	LongestFreefall = 13,
	VehiclesStolen = 14,
	_SomeCFireEventCount = 15,
	_Unk16 = 16,
	_LowFlyingTime = 17,
	LowFlying = 18,
	_InvertedFlyingTime = 19,
	InvertedFlying = 20,
	_PlaneSpinCount = 21,
	MeleeKills = 22, // Players
	_LongestSniperKill = 23,
	SniperSkills = 24, // Players
	DrivebyKills = 25, // Players
	HeadshotKills = 26, // Players
	LongestBail = 27,
	_TotalRammedByCar = 28,
	NearMissesPrecise = 29,
	_FreefallTime = 30,
	Unk31 = 31,
}

enum StatTrackingValueType
{
	Total,
	Max,
	Min
}
--]]
function STATS.STAT_START_RECORD_STAT(statType, valueType)
  return native.invoke(
    Type.Bool, 5093, false,
    arg(Type.Int, statType),
    arg(Type.Int, valueType)
  )
end

-- BOOL STAT_STOP_RECORD_STAT() // 0xA761D4AC6115623D
function STATS.STAT_STOP_RECORD_STAT()
  return native.invoke(
    Type.Bool, 5094, false
  )
end

-- BOOL STAT_GET_RECORDED_VALUE(float* value) // 0xF11F01D98113536A
function STATS.STAT_GET_RECORDED_VALUE(value)
  return native.invoke(
    Type.Bool, 5095, false,
    arg(Type.Float, value)
  )
end

-- BOOL STAT_IS_RECORDING_STAT() // 0x8B9CDBD6C566C38C
function STATS.STAT_IS_RECORDING_STAT()
  return native.invoke(
    Type.Bool, 5096, false
  )
end

-- int STAT_GET_CURRENT_NEAR_MISS_NOCRASH_PRECISE() // 0xE8853FBCE7D8D0D6
--[[
Perform the most near misses with other vehicles in a land vehicle without crashing
--]]
function STATS.STAT_GET_CURRENT_NEAR_MISS_NOCRASH_PRECISE()
  return native.invoke(
    Type.Int, 5097, false
  )
end

-- float STAT_GET_CURRENT_REAR_WHEEL_DISTANCE() // 0xA943FD1722E11EFD
--[[
Perform the longest wheelie on a motorcycle
--]]
function STATS.STAT_GET_CURRENT_REAR_WHEEL_DISTANCE()
  return native.invoke(
    Type.Float, 5098, false
  )
end

-- float STAT_GET_CURRENT_FRONT_WHEEL_DISTANCE() // 0x84A810B375E69C0E
--[[
Perform the longest stoppie on a motorcycle
--]]
function STATS.STAT_GET_CURRENT_FRONT_WHEEL_DISTANCE()
  return native.invoke(
    Type.Float, 5099, false
  )
end

-- float STAT_GET_CURRENT_JUMP_DISTANCE() // 0x9EC8858184CD253A
--[[
Perform the longest jump in a land vehicle
--]]
function STATS.STAT_GET_CURRENT_JUMP_DISTANCE()
  return native.invoke(
    Type.Float, 5100, false
  )
end

-- float STAT_GET_CURRENT_DRIVE_NOCRASH_DISTANCE() // 0xBA9749CC94C1FD85
--[[
Drive the furthest distance in a land vehicle without crashing
--]]
function STATS.STAT_GET_CURRENT_DRIVE_NOCRASH_DISTANCE()
  return native.invoke(
    Type.Float, 5101, false
  )
end

-- float STAT_GET_CURRENT_SPEED() // 0x55A8BECAF28A4EB7
--[[
Achieve the highest speed in a land vehicle
--]]
function STATS.STAT_GET_CURRENT_SPEED()
  return native.invoke(
    Type.Float, 5102, false
  )
end

-- float STAT_GET_CURRENT_DRIVING_REVERSE_DISTANCE() // 0x32CAC93C9DE73D32
--[[
Reverse the longest distance without crashing
--]]
function STATS.STAT_GET_CURRENT_DRIVING_REVERSE_DISTANCE()
  return native.invoke(
    Type.Float, 5103, false
  )
end

-- float STAT_GET_CURRENT_SKYDIVING_DISTANCE() // 0xAFF47709F1D5DCCE
--[[
Fall the longest distance with a parachute before opening it
--]]
function STATS.STAT_GET_CURRENT_SKYDIVING_DISTANCE()
  return native.invoke(
    Type.Float, 5104, false
  )
end

-- float STAT_GET_CHALLENGE_FLYING_DIST() // 0x6E0A5253375C4584
--[[
Fly low to the ground for the longest distance
--]]
function STATS.STAT_GET_CHALLENGE_FLYING_DIST()
  return native.invoke(
    Type.Float, 5105, false
  )
end

-- BOOL STAT_GET_FLYING_ALTITUDE(float* outValue) // 0x1A8EA222F9C67DBB
function STATS.STAT_GET_FLYING_ALTITUDE(outValue)
  return native.invoke(
    Type.Bool, 5106, false,
    arg(Type.Float, outValue)
  )
end

-- BOOL STAT_IS_PLAYER_VEHICLE_ABOVE_OCEAN() // 0xF9F2922717B819EC
--[[
Or non-flyable area
--]]
function STATS.STAT_IS_PLAYER_VEHICLE_ABOVE_OCEAN()
  return native.invoke(
    Type.Bool, 5107, false
  )
end

-- float STAT_GET_VEHICLE_BAIL_DISTANCE() // 0x0B8B7F74BF061C6D
--[[
Travel the furthest distance when bailing from a vehicle
--]]
function STATS.STAT_GET_VEHICLE_BAIL_DISTANCE()
  return native.invoke(
    Type.Float, 5108, false
  )
end

-- BOOL STAT_ROLLBACK_SAVE_MIGRATION() // 0xB3DA2606774A8E2D
--[[
This function is hard-coded to always return 1.
--]]
function STATS.STAT_ROLLBACK_SAVE_MIGRATION()
  return native.invoke(
    Type.Bool, 5109, false
  )
end

-- void SET_HAS_SPECIALEDITION_CONTENT(int value) // 0xDAC073C7901F9E15
--[[
Sets profile setting 866
--]]
function STATS.SET_HAS_SPECIALEDITION_CONTENT(value)
  native.invoke(
    Type.Void, 5110, false,
    arg(Type.Int, value)
  )
end

-- void SET_SAVE_MIGRATION_TRANSACTION_ID_WARNING(int transactionId) // 0xF6792800AC95350D
--[[
Sets profile setting 501
--]]
function STATS.SET_SAVE_MIGRATION_TRANSACTION_ID_WARNING(transactionId)
  native.invoke(
    Type.Void, 5111, false,
    arg(Type.Int, transactionId)
  )
end

-- void GET_BOSS_GOON_UUID(int characterSlot, Any p1, Any p2) // 0x6BC0ACD0673ACEBE
function STATS.GET_BOSS_GOON_UUID(characterSlot, p1, p2)
  native.invoke(
    Type.Void, 5112, false,
    arg(Type.Int, characterSlot),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void PLAYSTATS_BW_BOSSONBOSSDEATHMATCH(Any p0) // 0x8D8ADB562F09A245
function STATS.PLAYSTATS_BW_BOSSONBOSSDEATHMATCH(p0)
  native.invoke(
    Type.Void, 5113, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_BW_YATCHATTACK(Any p0) // 0xD1A1EE3B4FA8E760
function STATS.PLAYSTATS_BW_YATCHATTACK(p0)
  native.invoke(
    Type.Void, 5114, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_BW_HUNT_THE_BOSS(Any p0) // 0x88087EE1F28024AE
function STATS.PLAYSTATS_BW_HUNT_THE_BOSS(p0)
  native.invoke(
    Type.Void, 5115, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_BW_SIGHTSEER(Any p0) // 0xFCC228E07217FCAC
function STATS.PLAYSTATS_BW_SIGHTSEER(p0)
  native.invoke(
    Type.Void, 5116, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_BW_ASSAULT(Any p0) // 0x678F86D8FC040BDB
function STATS.PLAYSTATS_BW_ASSAULT(p0)
  native.invoke(
    Type.Void, 5117, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_BW_BELLY_OF_THE_BEAST(Any p0) // 0xA6F54BB2FFCA35EA
function STATS.PLAYSTATS_BW_BELLY_OF_THE_BEAST(p0)
  native.invoke(
    Type.Void, 5118, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_BW_HEAD_HUNTER(Any p0) // 0x5FF2C33B13A02A11
function STATS.PLAYSTATS_BW_HEAD_HUNTER(p0)
  native.invoke(
    Type.Void, 5119, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_BW_FRAGILE_GOODS(Any p0) // 0x282B6739644F4347
function STATS.PLAYSTATS_BW_FRAGILE_GOODS(p0)
  native.invoke(
    Type.Void, 5120, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_BW_AIR_FREIGHT(Any p0) // 0xF06A6F41CB445443
function STATS.PLAYSTATS_BW_AIR_FREIGHT(p0)
  native.invoke(
    Type.Void, 5121, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_BC_CAR_JACKING(Any p0) // 0x7B18DA61F6BAE9D5
function STATS.PLAYSTATS_BC_CAR_JACKING(p0)
  native.invoke(
    Type.Void, 5122, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_BC_SMASH_AND_GRAB(Any p0) // 0x06EAF70AE066441E
function STATS.PLAYSTATS_BC_SMASH_AND_GRAB(p0)
  native.invoke(
    Type.Void, 5123, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_BC_PROTECTION_RACKET(Any p0) // 0x14EDA9EE27BD1626
function STATS.PLAYSTATS_BC_PROTECTION_RACKET(p0)
  native.invoke(
    Type.Void, 5124, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_BC_MOST_WANTED(Any p0) // 0x930F504203F561C9
function STATS.PLAYSTATS_BC_MOST_WANTED(p0)
  native.invoke(
    Type.Void, 5125, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_BC_FINDERS_KEEPERS(Any p0) // 0xE3261D791EB44ACB
function STATS.PLAYSTATS_BC_FINDERS_KEEPERS(p0)
  native.invoke(
    Type.Void, 5126, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_BC_POINT_TO_POINT(Any p0) // 0x73001E34F85137F8
function STATS.PLAYSTATS_BC_POINT_TO_POINT(p0)
  native.invoke(
    Type.Void, 5127, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_BC_CASHING(Any p0) // 0x53CAE13E9B426993
function STATS.PLAYSTATS_BC_CASHING(p0)
  native.invoke(
    Type.Void, 5128, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_BC_SALVAGE(Any p0) // 0x7D36291161859389
function STATS.PLAYSTATS_BC_SALVAGE(p0)
  native.invoke(
    Type.Void, 5129, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_SPENT_PI_CUSTOM_LOADOUT(int amount) // 0xBE509B0A3693DE8B
function STATS.PLAYSTATS_SPENT_PI_CUSTOM_LOADOUT(amount)
  native.invoke(
    Type.Void, 5130, false,
    arg(Type.Int, amount)
  )
end

-- void PLAYSTATS_BUY_CONTRABAND_MISSION(Any* data) // 0xD6781E42755531F7
function STATS.PLAYSTATS_BUY_CONTRABAND_MISSION(data)
  native.invoke(
    Type.Void, 5131, false,
    arg(Type.Any, data)
  )
end

-- void PLAYSTATS_SELL_CONTRABAND_MISSION(Any* data) // 0xC729991A9065376E
function STATS.PLAYSTATS_SELL_CONTRABAND_MISSION(data)
  native.invoke(
    Type.Void, 5132, false,
    arg(Type.Any, data)
  )
end

-- void PLAYSTATS_DEFEND_CONTRABAND_MISSION(Any* data) // 0x2605663BD4F23B5D
function STATS.PLAYSTATS_DEFEND_CONTRABAND_MISSION(data)
  native.invoke(
    Type.Void, 5133, false,
    arg(Type.Any, data)
  )
end

-- void PLAYSTATS_RECOVER_CONTRABAND_MISSION(Any* data) // 0x04D90BA8207ADA2D
function STATS.PLAYSTATS_RECOVER_CONTRABAND_MISSION(data)
  native.invoke(
    Type.Void, 5134, false,
    arg(Type.Any, data)
  )
end

-- void PLAYSTATS_HIT_CONTRABAND_DESTROY_LIMIT(Any p0) // 0x60EEDC12AF66E846
function STATS.PLAYSTATS_HIT_CONTRABAND_DESTROY_LIMIT(p0)
  native.invoke(
    Type.Void, 5135, false,
    arg(Type.Any, p0)
  )
end

-- void START_BEING_BOSS(Any p0, Any p1, Any p2) // 0x3EBEAC6C3F81F6BD
function STATS.START_BEING_BOSS(p0, p1, p2)
  native.invoke(
    Type.Void, 5136, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void START_BEING_GOON(Any p0, Any p1, Any p2) // 0x96E6D5150DBF1C09
function STATS.START_BEING_GOON(p0, p1, p2)
  native.invoke(
    Type.Void, 5137, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void END_BEING_BOSS(Any p0, Any p1, Any p2) // 0xA3C53804BDB68ED2
function STATS.END_BEING_BOSS(p0, p1, p2)
  native.invoke(
    Type.Void, 5138, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void END_BEING_GOON(Any p0, Any p1, Any p2, Any p3, Any p4) // 0x6BCCF9948492FD85
function STATS.END_BEING_GOON(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 5139, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4)
  )
end

-- void HIRED_LIMO(Any p0, Any p1) // 0x792271AB35C356A4
function STATS.HIRED_LIMO(p0, p1)
  native.invoke(
    Type.Void, 5140, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void ORDER_BOSS_VEHICLE(Any p0, Any p1, Hash vehicleHash) // 0xCEA553E35C2246E1
function STATS.ORDER_BOSS_VEHICLE(p0, p1, vehicleHash)
  native.invoke(
    Type.Void, 5141, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Hash, vehicleHash)
  )
end

-- void CHANGE_UNIFORM(Any p0, Any p1, Any p2) // 0xD1C9B92BDD3F151D
function STATS.CHANGE_UNIFORM(p0, p1, p2)
  native.invoke(
    Type.Void, 5142, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void CHANGE_GOON_LOOKING_FOR_WORK(Any p0) // 0x44919CC079BB60BF
function STATS.CHANGE_GOON_LOOKING_FOR_WORK(p0)
  native.invoke(
    Type.Void, 5143, false,
    arg(Type.Any, p0)
  )
end

-- void SEND_METRIC_GHOSTING_TO_PLAYER(Any p0) // 0x7033EEFD9B28088E
function STATS.SEND_METRIC_GHOSTING_TO_PLAYER(p0)
  native.invoke(
    Type.Void, 5144, false,
    arg(Type.Any, p0)
  )
end

-- void SEND_METRIC_VIP_POACH(Any p0, Any p1, Any p2) // 0xAA525DFF66BB82F5
function STATS.SEND_METRIC_VIP_POACH(p0, p1, p2)
  native.invoke(
    Type.Void, 5145, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void SEND_METRIC_PUNISH_BODYGUARD(Any p0) // 0x015B03EE1C43E6EC
function STATS.SEND_METRIC_PUNISH_BODYGUARD(p0)
  native.invoke(
    Type.Void, 5146, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_START_TRACKING_STUNTS() // 0x928DBFB892638EF3
--[[
Allows CEventNetworkStuntPerformed to be triggered.
--]]
function STATS.PLAYSTATS_START_TRACKING_STUNTS()
  native.invoke(
    Type.Void, 5147, false
  )
end

-- void PLAYSTATS_STOP_TRACKING_STUNTS() // 0x8A800DACCC0DA55D
--[[
Disallows CEventNetworkStuntPerformed to be triggered.
--]]
function STATS.PLAYSTATS_STOP_TRACKING_STUNTS()
  native.invoke(
    Type.Void, 5148, false
  )
end

-- void PLAYSTATS_MISSION_ENDED(Any p0) // 0xBF371CD2B64212FD
function STATS.PLAYSTATS_MISSION_ENDED(p0)
  native.invoke(
    Type.Void, 5149, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_IMPEXP_MISSION_ENDED(Any p0) // 0x7D8BA05688AD64C7
function STATS.PLAYSTATS_IMPEXP_MISSION_ENDED(p0)
  native.invoke(
    Type.Void, 5150, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_CHANGE_MC_ROLE(Any p0, Any p1, Any p2, Any p3, int role, int p5, Any p6) // 0x0B565B0AAE56A0E8
function STATS.PLAYSTATS_CHANGE_MC_ROLE(p0, p1, p2, p3, role, p5, p6)
  native.invoke(
    Type.Void, 5151, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Int, role),
    arg(Type.Int, p5),
    arg(Type.Any, p6)
  )
end

-- void PLAYSTATS_CHANGE_MC_OUTFIT(Any p0, Any p1, Any p2, Any p3, Any p4) // 0x28ECB8AC2F607DB2
function STATS.PLAYSTATS_CHANGE_MC_OUTFIT(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 5152, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4)
  )
end

-- void PLAYSTATS_SWITCH_MC_EMBLEM(Any p0, Any p1, Any p2, Any p3, Any p4) // 0x0A50D2604E05CB94
function STATS.PLAYSTATS_SWITCH_MC_EMBLEM(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 5153, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4)
  )
end

-- void PLAYSTATS_MC_REQUEST_BIKE(Any p0, Any p1, Any p2, Any p3, Any p4) // 0xCC25A4553DFBF9EA
function STATS.PLAYSTATS_MC_REQUEST_BIKE(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 5154, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4)
  )
end

-- void PLAYSTATS_MC_KILLED_RIVAL_MC_MEMBER(Any p0, Any p1, Any p2, Any p3, Any p4) // 0xF534D94DFA2EAD26
function STATS.PLAYSTATS_MC_KILLED_RIVAL_MC_MEMBER(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 5155, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4)
  )
end

-- void PLAYSTATS_ABANDONED_MC(Any p0, Any p1, Any p2, Any p3, Any p4) // 0xD558BEC0BBA7E8D2
function STATS.PLAYSTATS_ABANDONED_MC(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 5156, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4)
  )
end

-- void PLAYSTATS_EARNED_MC_POINTS(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) // 0x501478855A6074CE
function STATS.PLAYSTATS_EARNED_MC_POINTS(p0, p1, p2, p3, p4, p5)
  native.invoke(
    Type.Void, 5157, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5)
  )
end

-- void PLAYSTATS_MC_FORMATION_ENDS(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) // 0x03C2EEBB04B3FB72
function STATS.PLAYSTATS_MC_FORMATION_ENDS(p0, p1, p2, p3, p4, p5, p6)
  native.invoke(
    Type.Void, 5158, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5),
    arg(Type.Any, p6)
  )
end

-- void PLAYSTATS_MC_CLUBHOUSE_ACTIVITY(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7) // 0x8989CBD7B4E82534
function STATS.PLAYSTATS_MC_CLUBHOUSE_ACTIVITY(p0, p1, p2, p3, p4, p5, p6, p7)
  native.invoke(
    Type.Void, 5159, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5),
    arg(Type.Any, p6),
    arg(Type.Any, p7)
  )
end

-- void PLAYSTATS_RIVAL_BEHAVIOR(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9) // 0x27AA1C973CACFE63
function STATS.PLAYSTATS_RIVAL_BEHAVIOR(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
  native.invoke(
    Type.Void, 5160, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5),
    arg(Type.Any, p6),
    arg(Type.Any, p7),
    arg(Type.Any, p8),
    arg(Type.Any, p9)
  )
end

-- void PLAYSTATS_COPY_RANK_INTO_NEW_SLOT(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) // 0xB7257BA2550EA10A
function STATS.PLAYSTATS_COPY_RANK_INTO_NEW_SLOT(p0, p1, p2, p3, p4, p5, p6)
  native.invoke(
    Type.Void, 5161, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5),
    arg(Type.Any, p6)
  )
end

-- void PLAYSTATS_DUPE_DETECTED(Any* data) // 0x848B66100EE33B05
function STATS.PLAYSTATS_DUPE_DETECTED(data)
  native.invoke(
    Type.Void, 5162, false,
    arg(Type.Any, data)
  )
end

-- void PLAYSTATS_BAN_ALERT(int p0) // 0x516FC96EB88EEFE5
function STATS.PLAYSTATS_BAN_ALERT(p0)
  native.invoke(
    Type.Void, 5163, false,
    arg(Type.Int, p0)
  )
end

-- void PLAYSTATS_GUNRUNNING_MISSION_ENDED(Any* data) // 0x0EACDF8487D5155A
function STATS.PLAYSTATS_GUNRUNNING_MISSION_ENDED(data)
  native.invoke(
    Type.Void, 5164, false,
    arg(Type.Any, data)
  )
end

-- void PLAYSTATS_GUNRUNNING_RND(Any p0) // 0xDAF80797FC534BEC
function STATS.PLAYSTATS_GUNRUNNING_RND(p0)
  native.invoke(
    Type.Void, 5165, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_BUSINESS_BATTLE_ENDED(Any p0) // 0x316DB59CD14C1774
function STATS.PLAYSTATS_BUSINESS_BATTLE_ENDED(p0)
  native.invoke(
    Type.Void, 5166, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_WAREHOUSE_MISSION_ENDED(Any p0) // 0x2D7A9B577E72385E
function STATS.PLAYSTATS_WAREHOUSE_MISSION_ENDED(p0)
  native.invoke(
    Type.Void, 5167, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_NIGHTCLUB_MISSION_ENDED(Any p0) // 0x830C3A44EB3F2CF9
function STATS.PLAYSTATS_NIGHTCLUB_MISSION_ENDED(p0)
  native.invoke(
    Type.Void, 5168, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_DJ_USAGE(Any p0, Any p1) // 0xB26F670685631727
function STATS.PLAYSTATS_DJ_USAGE(p0, p1)
  native.invoke(
    Type.Void, 5169, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void PLAYSTATS_MINIGAME_USAGE(Any p0, Any p1, Any p2) // 0xC14BD9F5337219B2
function STATS.PLAYSTATS_MINIGAME_USAGE(p0, p1, p2)
  native.invoke(
    Type.Void, 5170, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void PLAYSTATS_STONE_HATCHET_ENDED(Any* data) // 0x35E39E5570358630
function STATS.PLAYSTATS_STONE_HATCHET_ENDED(data)
  native.invoke(
    Type.Void, 5171, false,
    arg(Type.Any, data)
  )
end

-- void PLAYSTATS_SMUGGLER_MISSION_ENDED(Any* data) // 0x320C35147D5B5DDD
function STATS.PLAYSTATS_SMUGGLER_MISSION_ENDED(data)
  native.invoke(
    Type.Void, 5172, false,
    arg(Type.Any, data)
  )
end

-- void PLAYSTATS_FM_HEIST_PREP_ENDED(Any* data) // 0xD8AFB345A9C5CCBB
function STATS.PLAYSTATS_FM_HEIST_PREP_ENDED(data)
  native.invoke(
    Type.Void, 5173, false,
    arg(Type.Any, data)
  )
end

-- void PLAYSTATS_INSTANCED_HEIST_ENDED(Any* data, Any p1, Any p2, Any p3) // 0x1E1497D0D2108115
function STATS.PLAYSTATS_INSTANCED_HEIST_ENDED(data, p1, p2, p3)
  native.invoke(
    Type.Void, 5174, false,
    arg(Type.Any, data),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void PLAYSTATS_DAR_CHECKPOINT(Any* data) // 0x0BC254FF3A911501
function STATS.PLAYSTATS_DAR_CHECKPOINT(data)
  native.invoke(
    Type.Void, 5175, false,
    arg(Type.Any, data)
  )
end

-- void PLAYSTATS_ENTER_SESSION_PACK(Any* data) // 0x878FF156D36E9956
function STATS.PLAYSTATS_ENTER_SESSION_PACK(data)
  native.invoke(
    Type.Void, 5176, false,
    arg(Type.Any, data)
  )
end

-- void PLAYSTATS_DRONE_USAGE(int p0, int p1, int p2) // 0x66C7BB2416ED3FCE
function STATS.PLAYSTATS_DRONE_USAGE(p0, p1, p2)
  native.invoke(
    Type.Void, 5177, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1),
    arg(Type.Int, p2)
  )
end

-- void PLAYSTATS_SPIN_WHEEL(int p0, int p1, int p2, int p3) // 0x6731DE84A38BFAD0
function STATS.PLAYSTATS_SPIN_WHEEL(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 5178, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1),
    arg(Type.Int, p2),
    arg(Type.Int, p3)
  )
end

-- void PLAYSTATS_ARENA_WARS_SPECTATOR(int p0, int p1, int p2, int p3, int p4) // 0x6F4F599753F8200A
function STATS.PLAYSTATS_ARENA_WARS_SPECTATOR(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 5179, false,
    arg(Type.Int, p0),
    arg(Type.Int, p1),
    arg(Type.Int, p2),
    arg(Type.Int, p3),
    arg(Type.Int, p4)
  )
end

-- void PLAYSTATS_ARENA_WARS_ENDED(Any* data) // 0xB479D9F0D48A1BC5
function STATS.PLAYSTATS_ARENA_WARS_ENDED(data)
  native.invoke(
    Type.Void, 5180, false,
    arg(Type.Any, data)
  )
end

-- void PLAYSTATS_SWITCH_PASSIVE_MODE(BOOL p0, int p1, int p2, int p3) // 0x35EEC6C2BC821A71
function STATS.PLAYSTATS_SWITCH_PASSIVE_MODE(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 5181, false,
    arg(Type.Bool, p0),
    arg(Type.Int, p1),
    arg(Type.Int, p2),
    arg(Type.Int, p3)
  )
end

-- void PLAYSTATS_COLLECTIBLE_PICKED_UP(int p0, Hash objectHash, Any p2, Any p3, int moneyAmount, int rpAmount, int chipsAmount, Any p7, int p8, Any p9, Any p10) // 0xCD0A8A9338681CF2
function STATS.PLAYSTATS_COLLECTIBLE_PICKED_UP(p0, objectHash, p2, p3, moneyAmount, rpAmount, chipsAmount, p7, p8, p9, p10)
  native.invoke(
    Type.Void, 5182, false,
    arg(Type.Int, p0),
    arg(Type.Hash, objectHash),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Int, moneyAmount),
    arg(Type.Int, rpAmount),
    arg(Type.Int, chipsAmount),
    arg(Type.Any, p7),
    arg(Type.Int, p8),
    arg(Type.Any, p9),
    arg(Type.Any, p10)
  )
end

-- void PLAYSTATS_CASINO_STORY_MISSION_ENDED(Any p0, Any p1) // 0xFCCCAC2BD3C1F180
function STATS.PLAYSTATS_CASINO_STORY_MISSION_ENDED(p0, p1)
  native.invoke(
    Type.Void, 5183, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void PLAYSTATS_CASINO_CHIP(Any p0) // 0x0999F3F090EC5012
function STATS.PLAYSTATS_CASINO_CHIP(p0)
  native.invoke(
    Type.Void, 5184, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_CASINO_ROULETTE(Any p0) // 0x95101C443A84E7F1
function STATS.PLAYSTATS_CASINO_ROULETTE(p0)
  native.invoke(
    Type.Void, 5185, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_CASINO_BLACKJACK(Any p0) // 0x3EAE97309727E7AD
function STATS.PLAYSTATS_CASINO_BLACKJACK(p0)
  native.invoke(
    Type.Void, 5186, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_CASINO_THREE_CARD_POKER(Any p0) // 0xF740FB339D471C35
function STATS.PLAYSTATS_CASINO_THREE_CARD_POKER(p0)
  native.invoke(
    Type.Void, 5187, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_CASINO_SLOT_MACHINE(Any p0) // 0xEF5EC67D392B830A
function STATS.PLAYSTATS_CASINO_SLOT_MACHINE(p0)
  native.invoke(
    Type.Void, 5188, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_CASINO_INSIDE_TRACK(Any p0) // 0x049F059625058A86
function STATS.PLAYSTATS_CASINO_INSIDE_TRACK(p0)
  native.invoke(
    Type.Void, 5189, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_CASINO_LUCKY_SEVEN(Any p0) // 0x0C432C1435F5E4FA
function STATS.PLAYSTATS_CASINO_LUCKY_SEVEN(p0)
  native.invoke(
    Type.Void, 5190, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_CASINO_ROULETTE_LIGHT(Any p0) // 0x6572ABA3DE1197FC
function STATS.PLAYSTATS_CASINO_ROULETTE_LIGHT(p0)
  native.invoke(
    Type.Void, 5191, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_CASINO_BLACKJACK_LIGHT(Any p0) // 0xD5451C7BF151EB6F
function STATS.PLAYSTATS_CASINO_BLACKJACK_LIGHT(p0)
  native.invoke(
    Type.Void, 5192, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_CASINO_THREE_CARD_POKER_LIGHT(Any p0) // 0xC9001364B4388F22
function STATS.PLAYSTATS_CASINO_THREE_CARD_POKER_LIGHT(p0)
  native.invoke(
    Type.Void, 5193, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_CASINO_SLOT_MACHINE_LIGHT(Any p0) // 0xE60054A0FAE8227F
function STATS.PLAYSTATS_CASINO_SLOT_MACHINE_LIGHT(p0)
  native.invoke(
    Type.Void, 5194, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_CASINO_INSIDE_TRACK_LIGHT(Any p0) // 0x23A3CBCD50D54E47
function STATS.PLAYSTATS_CASINO_INSIDE_TRACK_LIGHT(p0)
  native.invoke(
    Type.Void, 5195, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_ARCADE_GAME(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) // 0x533A7D1EA58DF958
function STATS.PLAYSTATS_ARCADE_GAME(p0, p1, p2, p3, p4, p5, p6)
  native.invoke(
    Type.Void, 5196, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5),
    arg(Type.Any, p6)
  )
end

-- void PLAYSTATS_ARCADE_LOVE_MATCH(Any p0, Any p1) // 0x4FCDBD3F0A813C25
function STATS.PLAYSTATS_ARCADE_LOVE_MATCH(p0, p1)
  native.invoke(
    Type.Void, 5197, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void PLAYSTATS_FREEMODE_CASINO_MISSION_ENDED(Any* data) // 0x1A0D4A6C336B7BC5
function STATS.PLAYSTATS_FREEMODE_CASINO_MISSION_ENDED(data)
  native.invoke(
    Type.Void, 5198, false,
    arg(Type.Any, data)
  )
end

-- void PLAYSTATS_HEIST3_DRONE(Any p0) // 0xDFBD93BF2943E29B
function STATS.PLAYSTATS_HEIST3_DRONE(p0)
  native.invoke(
    Type.Void, 5199, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_HEIST3_HACK(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) // 0x92FC0EEDFAC04A14
function STATS.PLAYSTATS_HEIST3_HACK(p0, p1, p2, p3, p4, p5)
  native.invoke(
    Type.Void, 5200, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5)
  )
end

-- void PLAYSTATS_NPC_PHONE(Any* p0) // 0x0077F15613D36993
function STATS.PLAYSTATS_NPC_PHONE(p0)
  native.invoke(
    Type.Void, 5201, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_ARCADE_CABINET(Any p0) // 0xF9096193DF1F99D4
function STATS.PLAYSTATS_ARCADE_CABINET(p0)
  native.invoke(
    Type.Void, 5202, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_HEIST3_FINALE(Any p0) // 0x2E0259BABC27A327
function STATS.PLAYSTATS_HEIST3_FINALE(p0)
  native.invoke(
    Type.Void, 5203, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_HEIST3_PREP(Any p0) // 0x53C31853EC9531FF
function STATS.PLAYSTATS_HEIST3_PREP(p0)
  native.invoke(
    Type.Void, 5204, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_MASTER_CONTROL(Any p0, Any p1, Any p2, Any p3) // 0x810B5FCC52EC7FF0
function STATS.PLAYSTATS_MASTER_CONTROL(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 5205, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void PLAYSTATS_QUIT_MODE(Any p0, Any p1, Any p2, Any p3, Any p4) // 0x5BF29846C6527C54
function STATS.PLAYSTATS_QUIT_MODE(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 5206, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4)
  )
end

-- void PLAYSTATS_MISSION_VOTE(Any p0) // 0xC03FAB2C2F92289B
function STATS.PLAYSTATS_MISSION_VOTE(p0)
  native.invoke(
    Type.Void, 5207, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_NJVS_VOTE(Any p0) // 0x5CDAED54B34B0ED0
function STATS.PLAYSTATS_NJVS_VOTE(p0)
  native.invoke(
    Type.Void, 5208, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_KILL_YOURSELF() // 0x4AFF7E02E485E92B
function STATS.PLAYSTATS_KILL_YOURSELF()
  native.invoke(
    Type.Void, 5209, false
  )
end

-- void PLAYSTATS_FM_MISSION_END(Any p0, Any p1, Any p2, Any p3) // 0x46A70777BE6CEAB9
function STATS.PLAYSTATS_FM_MISSION_END(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 5210, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void PLAYSTATS_HEIST4_PREP(Any p0) // 0xDFCDB14317A9B361
function STATS.PLAYSTATS_HEIST4_PREP(p0)
  native.invoke(
    Type.Void, 5211, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_HEIST4_FINALE(Any p0) // 0xC1E963C58664B556
function STATS.PLAYSTATS_HEIST4_FINALE(p0)
  native.invoke(
    Type.Void, 5212, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_HEIST4_HACK(Any p0, Any p1, Any p2, Any p3, Any p4) // 0x2FA3173480008493
function STATS.PLAYSTATS_HEIST4_HACK(p0, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 5213, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4)
  )
end

-- void PLAYSTATS_SUB_WEAP(Any p0, Any p1, Any p2, Any p3) // 0xD4367D310F079DB0
function STATS.PLAYSTATS_SUB_WEAP(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 5214, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void PLAYSTATS_FAST_TRVL(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9, Any p10) // 0x4DC416F246A41FC8
function STATS.PLAYSTATS_FAST_TRVL(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10)
  native.invoke(
    Type.Void, 5215, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5),
    arg(Type.Any, p6),
    arg(Type.Any, p7),
    arg(Type.Any, p8),
    arg(Type.Any, p9),
    arg(Type.Any, p10)
  )
end

-- void PLAYSTATS_HUB_ENTRY(Any p0) // 0x2818FF6638CB09DE
function STATS.PLAYSTATS_HUB_ENTRY(p0)
  native.invoke(
    Type.Void, 5216, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_DJ_MISSION_ENDED(Any p0) // 0xD6CA58B3B53A0F22
function STATS.PLAYSTATS_DJ_MISSION_ENDED(p0)
  native.invoke(
    Type.Void, 5217, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_ROBBERY_PREP(Any p0) // 0x1A67DFBF1F5C3835
function STATS.PLAYSTATS_ROBBERY_PREP(p0)
  native.invoke(
    Type.Void, 5218, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_ROBBERY_FINALE(Any p0) // 0xBBA55BE9AAAABF44
function STATS.PLAYSTATS_ROBBERY_FINALE(p0)
  native.invoke(
    Type.Void, 5219, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_EXTRA_EVENT(Any p0) // 0xFA5B74BAB8A7EF99
function STATS.PLAYSTATS_EXTRA_EVENT(p0)
  native.invoke(
    Type.Void, 5220, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_CARCLUB_POINTS(Any p0) // 0xFF14D6FEEC507BBE
function STATS.PLAYSTATS_CARCLUB_POINTS(p0)
  native.invoke(
    Type.Void, 5221, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_CARCLUB_CHALLENGE(Any p0, Any p1, Any p2, Any p3) // 0x1187CB58D7F3BED7
function STATS.PLAYSTATS_CARCLUB_CHALLENGE(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 5222, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void PLAYSTATS_CARCLUB_PRIZE(int p0, Hash vehicleModel) // 0x69C922B677621428
function STATS.PLAYSTATS_CARCLUB_PRIZE(p0, vehicleModel)
  native.invoke(
    Type.Void, 5223, false,
    arg(Type.Int, p0),
    arg(Type.Hash, vehicleModel)
  )
end

-- void PLAYSTATS_AWARD_NAV(Any p0, Any p1, Any p2, Any p3) // 0x70F52471E758EBAE
function STATS.PLAYSTATS_AWARD_NAV(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 5224, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void PLAYSTATS_INST_MISSION_END(Any p0) // 0xFEA3F7E83C0610FA
function STATS.PLAYSTATS_INST_MISSION_END(p0)
  native.invoke(
    Type.Void, 5225, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_HUB_EXIT(Any p0) // 0x5A46ACE5C4661132
function STATS.PLAYSTATS_HUB_EXIT(p0)
  native.invoke(
    Type.Void, 5226, false,
    arg(Type.Any, p0)
  )
end

-- void PLAYSTATS_VEH_DEL(int bossId1, int bossId2, int bossType, int vehicleID, int reason) // 0x10A691F5756416D0
function STATS.PLAYSTATS_VEH_DEL(bossId1, bossId2, bossType, vehicleID, reason)
  native.invoke(
    Type.Void, 5227, false,
    arg(Type.Int, bossId1),
    arg(Type.Int, bossId2),
    arg(Type.Int, bossType),
    arg(Type.Int, vehicleID),
    arg(Type.Int, reason)
  )
end

-- void PLAYSTATS_INVENTORY(Any p0) // 0x887DAD63CF5B7908
function STATS.PLAYSTATS_INVENTORY(p0)
  native.invoke(
    Type.Void, 5228, false,
    arg(Type.Any, p0)
  )
end

-- void _PLAYSTATS_ACID_MISSION_END(Any p0) // 0x8A23D1324F6B2BAC
function STATS._PLAYSTATS_ACID_MISSION_END(p0)
  native.invoke(
    Type.Void, 5229, false,
    arg(Type.Any, p0)
  )
end

-- void _PLAYSTATS_ACID_RND(Any p0) // 0xCEACCF0550FDC5BA
function STATS._PLAYSTATS_ACID_RND(p0)
  native.invoke(
    Type.Void, 5230, false,
    arg(Type.Any, p0)
  )
end

-- void _PLAYSTATS_IDLE(Any p0, Any p1, Any p2) // 0xEC9553A178E8F1D1
function STATS._PLAYSTATS_IDLE(p0, p1, p2)
  native.invoke(
    Type.Void, 5231, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void _PLAYSTATS_PLAYER_STYLE(Any p0) // 0x48FAC5DC7AC6EA99
function STATS._PLAYSTATS_PLAYER_STYLE(p0)
  native.invoke(
    Type.Void, 5232, false,
    arg(Type.Any, p0)
  )
end

-- void _PLAYSTATS_RANDOM_EVENT(Any p0) // 0x7EA06F970F999394
function STATS._PLAYSTATS_RANDOM_EVENT(p0)
  native.invoke(
    Type.Void, 5233, false,
    arg(Type.Any, p0)
  )
end

-- void _PLAYSTATS_ALERT(Any* data) // 0x5649CA22AF74E019
function STATS._PLAYSTATS_ALERT(data)
  native.invoke(
    Type.Void, 5234, false,
    arg(Type.Any, data)
  )
end

-- void _PLAYSTATS_ATTRITION_STAGE_END(Any p0) // 0xBD642335A732F1A8
function STATS._PLAYSTATS_ATTRITION_STAGE_END(p0)
  native.invoke(
    Type.Void, 5235, false,
    arg(Type.Any, p0)
  )
end

-- void _PLAYSTATS_SHOWROOM_NAV(Any p0, Any p1, Hash entity) // 0x961D4157B9B428DB
function STATS._PLAYSTATS_SHOWROOM_NAV(p0, p1, entity)
  native.invoke(
    Type.Void, 5236, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Hash, entity)
  )
end

-- void _PLAYSTATS_SHOWROOM_OVERVIEW(Any* data) // 0x151D6C04C9E2742F
--[[
Data struct contains various tunables related to test drives at Simeons Showroom or Luxury Showcase.
--]]
function STATS._PLAYSTATS_SHOWROOM_OVERVIEW(data)
  native.invoke(
    Type.Void, 5237, false,
    arg(Type.Any, data)
  )
end


STREAMING = {}

-- void LOAD_ALL_OBJECTS_NOW() // 0xBD6E84632DD4CB3F
function STREAMING.LOAD_ALL_OBJECTS_NOW()
  native.invoke(
    Type.Void, 5238, false
  )
end

-- void LOAD_SCENE(float x, float y, float z) // 0x4448EB75B4904BDB
function STREAMING.LOAD_SCENE(x, y, z)
  native.invoke(
    Type.Void, 5239, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- BOOL NETWORK_UPDATE_LOAD_SCENE() // 0xC4582015556D1C46
function STREAMING.NETWORK_UPDATE_LOAD_SCENE()
  return native.invoke(
    Type.Bool, 5240, false
  )
end

-- BOOL IS_NETWORK_LOADING_SCENE() // 0x41CA5A33160EA4AB
function STREAMING.IS_NETWORK_LOADING_SCENE()
  return native.invoke(
    Type.Bool, 5241, false
  )
end

-- void SET_INTERIOR_ACTIVE(int interiorID, BOOL toggle) // 0xE37B76C387BE28ED
function STREAMING.SET_INTERIOR_ACTIVE(interiorID, toggle)
  native.invoke(
    Type.Void, 5242, false,
    arg(Type.Int, interiorID),
    arg(Type.Bool, toggle)
  )
end

-- void REQUEST_MODEL(Hash model) // 0x963D27A58DF860AC
--[[
Request a model to be loaded into memory.

--]]
function STREAMING.REQUEST_MODEL(model)
  native.invoke(
    Type.Void, 5243, false,
    arg(Type.Hash, model)
  )
end

-- void REQUEST_MENU_PED_MODEL(Hash model) // 0xA0261AEF7ACFC51E
function STREAMING.REQUEST_MENU_PED_MODEL(model)
  native.invoke(
    Type.Void, 5244, false,
    arg(Type.Hash, model)
  )
end

-- BOOL HAS_MODEL_LOADED(Hash model) // 0x98A4EB5D89A0C952
--[[
Checks if the specified model has loaded into memory.
--]]
function STREAMING.HAS_MODEL_LOADED(model)
  return native.invoke(
    Type.Bool, 5245, false,
    arg(Type.Hash, model)
  )
end

-- void REQUEST_MODELS_IN_ROOM(Interior interior, const char* roomName) // 0x8A7A40100EDFEC58
--[[
STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "V_FIB01_cur_elev");
STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "limbo");
STREAMING::REQUEST_MODELS_IN_ROOM(l_13BB, "V_Office_gnd_lifts");
STREAMING::REQUEST_MODELS_IN_ROOM(l_13BB, "limbo");
STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "v_fib01_jan_elev");
STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "limbo");
--]]
function STREAMING.REQUEST_MODELS_IN_ROOM(interior, roomName)
  native.invoke(
    Type.Void, 5246, false,
    arg(Type.Interior, interior),
    arg(Type.String, roomName)
  )
end

-- void SET_MODEL_AS_NO_LONGER_NEEDED(Hash model) // 0xE532F5D78798DAAB
--[[
Unloads model from memory
--]]
function STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(model)
  native.invoke(
    Type.Void, 5247, false,
    arg(Type.Hash, model)
  )
end

-- BOOL IS_MODEL_IN_CDIMAGE(Hash model) // 0x35B9E0803292B641
--[[
Check if model is in cdimage(rpf)
--]]
function STREAMING.IS_MODEL_IN_CDIMAGE(model)
  return native.invoke(
    Type.Bool, 5248, false,
    arg(Type.Hash, model)
  )
end

-- BOOL IS_MODEL_VALID(Hash model) // 0xC0296A2EDF545E92
--[[
Returns whether the specified model exists in the game.
--]]
function STREAMING.IS_MODEL_VALID(model)
  return native.invoke(
    Type.Bool, 5249, false,
    arg(Type.Hash, model)
  )
end

-- BOOL IS_MODEL_A_PED(Hash model) // 0x75816577FEA6DAD5
function STREAMING.IS_MODEL_A_PED(model)
  return native.invoke(
    Type.Bool, 5250, false,
    arg(Type.Hash, model)
  )
end

-- BOOL IS_MODEL_A_VEHICLE(Hash model) // 0x19AAC8F07BFEC53E
--[[
Returns whether the specified model represents a vehicle.
--]]
function STREAMING.IS_MODEL_A_VEHICLE(model)
  return native.invoke(
    Type.Bool, 5251, false,
    arg(Type.Hash, model)
  )
end

-- void REQUEST_COLLISION_AT_COORD(float x, float y, float z) // 0x07503F7948F491A7
function STREAMING.REQUEST_COLLISION_AT_COORD(x, y, z)
  native.invoke(
    Type.Void, 5252, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void REQUEST_COLLISION_FOR_MODEL(Hash model) // 0x923CB32A3B874FCB
function STREAMING.REQUEST_COLLISION_FOR_MODEL(model)
  native.invoke(
    Type.Void, 5253, false,
    arg(Type.Hash, model)
  )
end

-- BOOL HAS_COLLISION_FOR_MODEL_LOADED(Hash model) // 0x22CCA434E368F03A
function STREAMING.HAS_COLLISION_FOR_MODEL_LOADED(model)
  return native.invoke(
    Type.Bool, 5254, false,
    arg(Type.Hash, model)
  )
end

-- void REQUEST_ADDITIONAL_COLLISION_AT_COORD(float x, float y, float z) // 0xC9156DC11411A9EA
--[[
Alias of REQUEST_COLLISION_AT_COORD.
--]]
function STREAMING.REQUEST_ADDITIONAL_COLLISION_AT_COORD(x, y, z)
  native.invoke(
    Type.Void, 5255, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- BOOL DOES_ANIM_DICT_EXIST(const char* animDict) // 0x2DA49C3B79856961
--[[
Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
--]]
function STREAMING.DOES_ANIM_DICT_EXIST(animDict)
  return native.invoke(
    Type.Bool, 5256, false,
    arg(Type.String, animDict)
  )
end

-- void REQUEST_ANIM_DICT(const char* animDict) // 0xD3BD40951412FEF6
--[[
Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
--]]
function STREAMING.REQUEST_ANIM_DICT(animDict)
  native.invoke(
    Type.Void, 5257, false,
    arg(Type.String, animDict)
  )
end

-- BOOL HAS_ANIM_DICT_LOADED(const char* animDict) // 0xD031A9162D01088C
--[[
Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
--]]
function STREAMING.HAS_ANIM_DICT_LOADED(animDict)
  return native.invoke(
    Type.Bool, 5258, false,
    arg(Type.String, animDict)
  )
end

-- void REMOVE_ANIM_DICT(const char* animDict) // 0xF66A602F829E2A06
--[[
Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
--]]
function STREAMING.REMOVE_ANIM_DICT(animDict)
  native.invoke(
    Type.Void, 5259, false,
    arg(Type.String, animDict)
  )
end

-- void REQUEST_ANIM_SET(const char* animSet) // 0x6EA47DAE7FAD0EED
--[[
Starts loading the specified animation set. An animation set provides movement animations for a ped. See SET_PED_MOVEMENT_CLIPSET.

Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json

Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
--]]
function STREAMING.REQUEST_ANIM_SET(animSet)
  native.invoke(
    Type.Void, 5260, false,
    arg(Type.String, animSet)
  )
end

-- BOOL HAS_ANIM_SET_LOADED(const char* animSet) // 0xC4EA073D86FB29B0
--[[
Gets whether the specified animation set has finished loading. An animation set provides movement animations for a ped. See SET_PED_MOVEMENT_CLIPSET.

Animation set and clip set are synonymous.

Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json

Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
--]]
function STREAMING.HAS_ANIM_SET_LOADED(animSet)
  return native.invoke(
    Type.Bool, 5261, false,
    arg(Type.String, animSet)
  )
end

-- void REMOVE_ANIM_SET(const char* animSet) // 0x16350528F93024B3
--[[
Unloads the specified animation set. An animation set provides movement animations for a ped. See SET_PED_MOVEMENT_CLIPSET.

Animation set and clip set are synonymous.

Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json

Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
--]]
function STREAMING.REMOVE_ANIM_SET(animSet)
  native.invoke(
    Type.Void, 5262, false,
    arg(Type.String, animSet)
  )
end

-- void REQUEST_CLIP_SET(const char* clipSet) // 0xD2A71E1A77418A49
--[[
Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json

Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
--]]
function STREAMING.REQUEST_CLIP_SET(clipSet)
  native.invoke(
    Type.Void, 5263, false,
    arg(Type.String, clipSet)
  )
end

-- BOOL HAS_CLIP_SET_LOADED(const char* clipSet) // 0x318234F4F3738AF3
--[[
Alias for HAS_ANIM_SET_LOADED.

Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json

Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
--]]
function STREAMING.HAS_CLIP_SET_LOADED(clipSet)
  return native.invoke(
    Type.Bool, 5264, false,
    arg(Type.String, clipSet)
  )
end

-- void REMOVE_CLIP_SET(const char* clipSet) // 0x01F73A131C18CD94
--[[
Alias for REMOVE_ANIM_SET.

Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json

Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
--]]
function STREAMING.REMOVE_CLIP_SET(clipSet)
  native.invoke(
    Type.Void, 5265, false,
    arg(Type.String, clipSet)
  )
end

-- void REQUEST_IPL(const char* iplName) // 0x41B4893843BBDB74
--[[
Exemple: REQUEST_IPL("TrevorsTrailerTrash");

Full list of IPLs and interior entity sets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ipls.json
--]]
function STREAMING.REQUEST_IPL(iplName)
  native.invoke(
    Type.Void, 5266, false,
    arg(Type.String, iplName)
  )
end

-- void REMOVE_IPL(const char* iplName) // 0xEE6C5AD3ECE0A82D
--[[
Removes an IPL from the map.

Full list of IPLs and interior entity sets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ipls.json

Example:
C#:
Function.Call(Hash.REMOVE_IPL, "trevorstrailertidy");

C++:
STREAMING::REMOVE_IPL("trevorstrailertidy");

iplName = Name of IPL you want to remove.
--]]
function STREAMING.REMOVE_IPL(iplName)
  native.invoke(
    Type.Void, 5267, false,
    arg(Type.String, iplName)
  )
end

-- BOOL IS_IPL_ACTIVE(const char* iplName) // 0x88A741E44A2B3495
--[[
Full list of IPLs and interior entity sets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ipls.json
--]]
function STREAMING.IS_IPL_ACTIVE(iplName)
  return native.invoke(
    Type.Bool, 5268, false,
    arg(Type.String, iplName)
  )
end

-- void SET_STREAMING(BOOL toggle) // 0x6E0C692677008888
function STREAMING.SET_STREAMING(toggle)
  native.invoke(
    Type.Void, 5269, false,
    arg(Type.Bool, toggle)
  )
end

-- void LOAD_GLOBAL_WATER_FILE(int waterType) // 0x7E3F55ED251B76D3
--[[
0 - default
1 - HeistIsland
--]]
function STREAMING.LOAD_GLOBAL_WATER_FILE(waterType)
  native.invoke(
    Type.Void, 5270, false,
    arg(Type.Int, waterType)
  )
end

-- int GET_GLOBAL_WATER_FILE() // 0xF741BD853611592D
function STREAMING.GET_GLOBAL_WATER_FILE()
  return native.invoke(
    Type.Int, 5271, false
  )
end

-- void SET_GAME_PAUSES_FOR_STREAMING(BOOL toggle) // 0x717CD6E6FAEBBEDC
function STREAMING.SET_GAME_PAUSES_FOR_STREAMING(toggle)
  native.invoke(
    Type.Void, 5272, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_REDUCE_PED_MODEL_BUDGET(BOOL toggle) // 0x77B5F9A36BF96710
function STREAMING.SET_REDUCE_PED_MODEL_BUDGET(toggle)
  native.invoke(
    Type.Void, 5273, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_REDUCE_VEHICLE_MODEL_BUDGET(BOOL toggle) // 0x80C527893080CCF3
function STREAMING.SET_REDUCE_VEHICLE_MODEL_BUDGET(toggle)
  native.invoke(
    Type.Void, 5274, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_DITCH_POLICE_MODELS(BOOL toggle) // 0x42CBE54462D92634
--[[
This is a NOP function. It does nothing at all.
--]]
function STREAMING.SET_DITCH_POLICE_MODELS(toggle)
  native.invoke(
    Type.Void, 5275, false,
    arg(Type.Bool, toggle)
  )
end

-- int GET_NUMBER_OF_STREAMING_REQUESTS() // 0x4060057271CEBC89
function STREAMING.GET_NUMBER_OF_STREAMING_REQUESTS()
  return native.invoke(
    Type.Int, 5276, false
  )
end

-- void REQUEST_PTFX_ASSET() // 0x944955FB2A3935C8
--[[
maps script name (thread + 0xD0) by lookup via scriptfx.dat - does nothing when script name is empty
--]]
function STREAMING.REQUEST_PTFX_ASSET()
  native.invoke(
    Type.Void, 5277, false
  )
end

-- BOOL HAS_PTFX_ASSET_LOADED() // 0xCA7D9B86ECA7481B
function STREAMING.HAS_PTFX_ASSET_LOADED()
  return native.invoke(
    Type.Bool, 5278, false
  )
end

-- void REMOVE_PTFX_ASSET() // 0x88C6814073DD4A73
function STREAMING.REMOVE_PTFX_ASSET()
  native.invoke(
    Type.Void, 5279, false
  )
end

-- void REQUEST_NAMED_PTFX_ASSET(const char* fxName) // 0xB80D8756B4668AB6
--[[
 From the b678d decompiled scripts:

 STREAMING::REQUEST_NAMED_PTFX_ASSET("core_snow");
 STREAMING::REQUEST_NAMED_PTFX_ASSET("fm_mission_controler");
 STREAMING::REQUEST_NAMED_PTFX_ASSET("proj_xmas_firework");
 STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_apartment_mp");
 STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_biolab_heist");
 STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_fireworks");
 STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_parachute");
 STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_wheelsmoke");
 STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_cig_plane");
 STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_creator");
 STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_tankbattle");
 STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_ornate_heist");
 STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_prison_break_heist_station");
--]]
function STREAMING.REQUEST_NAMED_PTFX_ASSET(fxName)
  native.invoke(
    Type.Void, 5280, false,
    arg(Type.String, fxName)
  )
end

-- BOOL HAS_NAMED_PTFX_ASSET_LOADED(const char* fxName) // 0x8702416E512EC454
function STREAMING.HAS_NAMED_PTFX_ASSET_LOADED(fxName)
  return native.invoke(
    Type.Bool, 5281, false,
    arg(Type.String, fxName)
  )
end

-- void REMOVE_NAMED_PTFX_ASSET(const char* fxName) // 0x5F61EBBE1A00F96D
function STREAMING.REMOVE_NAMED_PTFX_ASSET(fxName)
  native.invoke(
    Type.Void, 5282, false,
    arg(Type.String, fxName)
  )
end

-- void SET_VEHICLE_POPULATION_BUDGET(int p0) // 0xCB9E1EB3BE2AF4E9
function STREAMING.SET_VEHICLE_POPULATION_BUDGET(p0)
  native.invoke(
    Type.Void, 5283, false,
    arg(Type.Int, p0)
  )
end

-- void SET_PED_POPULATION_BUDGET(int p0) // 0x8C95333CFC3340F3
--[[
Control how many new (ambient?) peds will spawn in the game world.
Range for p0 seems to be 0-3, where 0 is none and 3 is the normal level.
--]]
function STREAMING.SET_PED_POPULATION_BUDGET(p0)
  native.invoke(
    Type.Void, 5284, false,
    arg(Type.Int, p0)
  )
end

-- void CLEAR_FOCUS() // 0x31B73D1EA9F01DA2
function STREAMING.CLEAR_FOCUS()
  native.invoke(
    Type.Void, 5285, false
  )
end

-- void SET_FOCUS_POS_AND_VEL(float x, float y, float z, float offsetX, float offsetY, float offsetZ) // 0xBB7454BAFF08FE25
--[[
Override the area where the camera will render the terrain.
p3, p4 and p5 are usually set to 0.0

--]]
function STREAMING.SET_FOCUS_POS_AND_VEL(x, y, z, offsetX, offsetY, offsetZ)
  native.invoke(
    Type.Void, 5286, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, offsetX),
    arg(Type.Float, offsetY),
    arg(Type.Float, offsetZ)
  )
end

-- void SET_FOCUS_ENTITY(Entity entity) // 0x198F77705FA0931D
--[[
It seems to make the entity's coords mark the point from which LOD-distances are measured. In my testing, setting a vehicle as the focus entity and moving that vehicle more than 300 distance units away from the player will make the level of detail around the player go down drastically (shadows disappear, textures go extremely low res, etc). The player seems to be the default focus entity.
--]]
function STREAMING.SET_FOCUS_ENTITY(entity)
  native.invoke(
    Type.Void, 5287, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL IS_ENTITY_FOCUS(Entity entity) // 0x2DDFF3FB9075D747
function STREAMING.IS_ENTITY_FOCUS(entity)
  return native.invoke(
    Type.Bool, 5288, false,
    arg(Type.Entity, entity)
  )
end

-- void SET_RESTORE_FOCUS_ENTITY(Entity p0) // 0x0811381EF5062FEC
function STREAMING.SET_RESTORE_FOCUS_ENTITY(p0)
  native.invoke(
    Type.Void, 5289, false,
    arg(Type.Entity, p0)
  )
end

-- void SET_MAPDATACULLBOX_ENABLED(const char* name, BOOL toggle) // 0xAF12610C644A35C9
--[[
Possible p0 values:

"prologue"
"Prologue_Main"
--]]
function STREAMING.SET_MAPDATACULLBOX_ENABLED(name, toggle)
  native.invoke(
    Type.Void, 5290, false,
    arg(Type.String, name),
    arg(Type.Bool, toggle)
  )
end

-- void SET_ALL_MAPDATA_CULLED(Any p0) // 0x4E52E752C76E7E7A
--[[
This native does absolutely nothing, just a nullsub
--]]
function STREAMING.SET_ALL_MAPDATA_CULLED(p0)
  native.invoke(
    Type.Void, 5291, false,
    arg(Type.Any, p0)
  )
end

-- int STREAMVOL_CREATE_SPHERE(float x, float y, float z, float rad, Any p4, Any p5) // 0x219C7B8D53E429FD
--[[
Always returns zero.
--]]
function STREAMING.STREAMVOL_CREATE_SPHERE(x, y, z, rad, p4, p5)
  return native.invoke(
    Type.Int, 5292, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, rad),
    arg(Type.Any, p4),
    arg(Type.Any, p5)
  )
end

-- int STREAMVOL_CREATE_FRUSTUM(float p0, float p1, float p2, float p3, float p4, float p5, float p6, Any p7, Any p8) // 0x1F3F018BC3AFA77C
--[[
Always returns zero.
--]]
function STREAMING.STREAMVOL_CREATE_FRUSTUM(p0, p1, p2, p3, p4, p5, p6, p7, p8)
  return native.invoke(
    Type.Int, 5293, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Float, p6),
    arg(Type.Any, p7),
    arg(Type.Any, p8)
  )
end

-- int STREAMVOL_CREATE_LINE(float p0, float p1, float p2, float p3, float p4, float p5, Any p6) // 0x0AD9710CEE2F590F
--[[
Always returns zero.
--]]
function STREAMING.STREAMVOL_CREATE_LINE(p0, p1, p2, p3, p4, p5, p6)
  return native.invoke(
    Type.Int, 5294, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Any, p6)
  )
end

-- void STREAMVOL_DELETE(Any unused) // 0x1EE7D8DF4425F053
function STREAMING.STREAMVOL_DELETE(unused)
  native.invoke(
    Type.Void, 5295, false,
    arg(Type.Any, unused)
  )
end

-- BOOL STREAMVOL_HAS_LOADED(Any unused) // 0x7D41E9D2D17C5B2D
function STREAMING.STREAMVOL_HAS_LOADED(unused)
  return native.invoke(
    Type.Bool, 5296, false,
    arg(Type.Any, unused)
  )
end

-- BOOL STREAMVOL_IS_VALID(Any unused) // 0x07C313F94746702C
function STREAMING.STREAMVOL_IS_VALID(unused)
  return native.invoke(
    Type.Bool, 5297, false,
    arg(Type.Any, unused)
  )
end

-- BOOL IS_STREAMVOL_ACTIVE() // 0xBC9823AB80A3DCAC
function STREAMING.IS_STREAMVOL_ACTIVE()
  return native.invoke(
    Type.Bool, 5298, false
  )
end

-- BOOL NEW_LOAD_SCENE_START(float posX, float posY, float posZ, float offsetX, float offsetY, float offsetZ, float radius, int p7) // 0x212A8D0D2BABFAC2
--[[
`radius` value is usually between `3f` and `7000f` in original 1868 scripts.
`p7` is 0, 1, 2, 3 or 4 used in decompiled scripts, 0 is by far the most common.
Returns True if success, used only 7 times in decompiled scripts of 1868
--]]
function STREAMING.NEW_LOAD_SCENE_START(posX, posY, posZ, offsetX, offsetY, offsetZ, radius, p7)
  return native.invoke(
    Type.Bool, 5299, false,
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ),
    arg(Type.Float, offsetX),
    arg(Type.Float, offsetY),
    arg(Type.Float, offsetZ),
    arg(Type.Float, radius),
    arg(Type.Int, p7)
  )
end

-- BOOL NEW_LOAD_SCENE_START_SPHERE(float x, float y, float z, float radius, Any p4) // 0xACCFB4ACF53551B0
function STREAMING.NEW_LOAD_SCENE_START_SPHERE(x, y, z, radius, p4)
  return native.invoke(
    Type.Bool, 5300, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Any, p4)
  )
end

-- void NEW_LOAD_SCENE_STOP() // 0xC197616D221FF4A4
function STREAMING.NEW_LOAD_SCENE_STOP()
  native.invoke(
    Type.Void, 5301, false
  )
end

-- BOOL IS_NEW_LOAD_SCENE_ACTIVE() // 0xA41A05B6CB741B85
function STREAMING.IS_NEW_LOAD_SCENE_ACTIVE()
  return native.invoke(
    Type.Bool, 5302, false
  )
end

-- BOOL IS_NEW_LOAD_SCENE_LOADED() // 0x01B8247A7A8B9AD1
function STREAMING.IS_NEW_LOAD_SCENE_LOADED()
  return native.invoke(
    Type.Bool, 5303, false
  )
end

-- BOOL IS_SAFE_TO_START_PLAYER_SWITCH() // 0x71E7B2E657449AAD
function STREAMING.IS_SAFE_TO_START_PLAYER_SWITCH()
  return native.invoke(
    Type.Bool, 5304, false
  )
end

-- void START_PLAYER_SWITCH(Ped from, Ped to, int flags, int switchType) // 0xFAA23F2CBA159D67
--[[
// this enum comes directly from R* so don't edit this
enum ePlayerSwitchTypes
{
  SWITCH_TYPE_AUTO,
 SWITCH_TYPE_LONG,
 SWITCH_TYPE_MEDIUM,
   SWITCH_TYPE_SHORT
};

Use GET_IDEAL_PLAYER_SWITCH_TYPE for the best switch type.

----------------------------------------------------

Examples from the decompiled scripts:

STREAMING::START_PLAYER_SWITCH(l_832._f3, PLAYER::PLAYER_PED_ID(), 0, 3);
STREAMING::START_PLAYER_SWITCH(l_832._f3, PLAYER::PLAYER_PED_ID(), 2050, 3);
STREAMING::START_PLAYER_SWITCH(PLAYER::PLAYER_PED_ID(), l_832._f3, 1024, 3);
STREAMING::START_PLAYER_SWITCH(g_141F27, PLAYER::PLAYER_PED_ID(), 513, v_14);

Note: DO NOT, use SWITCH_TYPE_LONG with flag 513. It leaves you stuck in the clouds. You'll have to call STOP_PLAYER_SWITCH() to return to your ped.

Flag 8 w/ SWITCH_TYPE_LONG will zoom out 3 steps, then zoom in 2/3 steps and stop on the 3rd and just hang there.
Flag 8 w/ SWITCH_TYPE_MEDIUM will zoom out 1 step, and just hang there.
--]]
function STREAMING.START_PLAYER_SWITCH(from, to, flags, switchType)
  native.invoke(
    Type.Void, 5305, false,
    arg(Type.Ped, from),
    arg(Type.Ped, to),
    arg(Type.Int, flags),
    arg(Type.Int, switchType)
  )
end

-- void STOP_PLAYER_SWITCH() // 0x95C0A5BBDC189AA1
function STREAMING.STOP_PLAYER_SWITCH()
  native.invoke(
    Type.Void, 5306, false
  )
end

-- BOOL IS_PLAYER_SWITCH_IN_PROGRESS() // 0xD9D2CFFF49FAB35F
--[[
Returns true if the player is currently switching, false otherwise.
(When the camera is in the sky moving from Trevor to Franklin for example)
--]]
function STREAMING.IS_PLAYER_SWITCH_IN_PROGRESS()
  return native.invoke(
    Type.Bool, 5307, false
  )
end

-- int GET_PLAYER_SWITCH_TYPE() // 0xB3C94A90D9FC9E62
function STREAMING.GET_PLAYER_SWITCH_TYPE()
  return native.invoke(
    Type.Int, 5308, false
  )
end

-- int GET_IDEAL_PLAYER_SWITCH_TYPE(float x1, float y1, float z1, float x2, float y2, float z2) // 0xB5D7B26B45720E05
--[[
x1, y1, z1 -- Coords of your ped model
x2, y2, z2 -- Coords of the ped you want to switch to
--]]
function STREAMING.GET_IDEAL_PLAYER_SWITCH_TYPE(x1, y1, z1, x2, y2, z2)
  return native.invoke(
    Type.Int, 5309, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2)
  )
end

-- int GET_PLAYER_SWITCH_STATE() // 0x470555300D10B2A5
function STREAMING.GET_PLAYER_SWITCH_STATE()
  return native.invoke(
    Type.Int, 5310, false
  )
end

-- int GET_PLAYER_SHORT_SWITCH_STATE() // 0x20F898A5D9782800
function STREAMING.GET_PLAYER_SHORT_SWITCH_STATE()
  return native.invoke(
    Type.Int, 5311, false
  )
end

-- void SET_PLAYER_SHORT_SWITCH_STYLE(int p0) // 0x5F2013F8BC24EE69
function STREAMING.SET_PLAYER_SHORT_SWITCH_STYLE(p0)
  native.invoke(
    Type.Void, 5312, false,
    arg(Type.Int, p0)
  )
end

-- int GET_PLAYER_SWITCH_JUMP_CUT_INDEX() // 0x78C0D93253149435
function STREAMING.GET_PLAYER_SWITCH_JUMP_CUT_INDEX()
  return native.invoke(
    Type.Int, 5313, false
  )
end

-- void SET_PLAYER_SWITCH_OUTRO(float cameraCoordX, float cameraCoordY, float cameraCoordZ, float camRotationX, float camRotationY, float camRotationZ, float camFov, float camFarClip, int rotationOrder) // 0xC208B673CE446B61
function STREAMING.SET_PLAYER_SWITCH_OUTRO(cameraCoordX, cameraCoordY, cameraCoordZ, camRotationX, camRotationY, camRotationZ, camFov, camFarClip, rotationOrder)
  native.invoke(
    Type.Void, 5314, false,
    arg(Type.Float, cameraCoordX),
    arg(Type.Float, cameraCoordY),
    arg(Type.Float, cameraCoordZ),
    arg(Type.Float, camRotationX),
    arg(Type.Float, camRotationY),
    arg(Type.Float, camRotationZ),
    arg(Type.Float, camFov),
    arg(Type.Float, camFarClip),
    arg(Type.Int, rotationOrder)
  )
end

-- void SET_PLAYER_SWITCH_ESTABLISHING_SHOT(const char* name) // 0x0FDE9DBFC0A6BC65
--[[
All names can be found in playerswitchestablishingshots.meta
--]]
function STREAMING.SET_PLAYER_SWITCH_ESTABLISHING_SHOT(name)
  native.invoke(
    Type.Void, 5315, false,
    arg(Type.String, name)
  )
end

-- void ALLOW_PLAYER_SWITCH_PAN() // 0x43D1680C6D19A8E9
function STREAMING.ALLOW_PLAYER_SWITCH_PAN()
  native.invoke(
    Type.Void, 5316, false
  )
end

-- void ALLOW_PLAYER_SWITCH_OUTRO() // 0x74DE2E8739086740
function STREAMING.ALLOW_PLAYER_SWITCH_OUTRO()
  native.invoke(
    Type.Void, 5317, false
  )
end

-- void ALLOW_PLAYER_SWITCH_ASCENT() // 0x8E2A065ABDAE6994
function STREAMING.ALLOW_PLAYER_SWITCH_ASCENT()
  native.invoke(
    Type.Void, 5318, false
  )
end

-- void ALLOW_PLAYER_SWITCH_DESCENT() // 0xAD5FDF34B81BFE79
function STREAMING.ALLOW_PLAYER_SWITCH_DESCENT()
  native.invoke(
    Type.Void, 5319, false
  )
end

-- BOOL IS_SWITCH_READY_FOR_DESCENT() // 0xDFA80CB25D0A19B3
function STREAMING.IS_SWITCH_READY_FOR_DESCENT()
  return native.invoke(
    Type.Bool, 5320, false
  )
end

-- void ENABLE_SWITCH_PAUSE_BEFORE_DESCENT() // 0xD4793DFF3AF2ABCD
function STREAMING.ENABLE_SWITCH_PAUSE_BEFORE_DESCENT()
  native.invoke(
    Type.Void, 5321, false
  )
end

-- void DISABLE_SWITCH_OUTRO_FX() // 0xBD605B8E0E18B3BB
function STREAMING.DISABLE_SWITCH_OUTRO_FX()
  native.invoke(
    Type.Void, 5322, false
  )
end

-- void SWITCH_TO_MULTI_FIRSTPART(Ped ped, int flags, int switchType) // 0xAAB3200ED59016BC
--[[
doesn't act normally when used on mount chilliad
Flags is a bitflag:
2^n - Enabled Functionality:
0 - Skip camera rotate up
3 - Wait for SET_PLAYER_SWITCH_ESTABLISHING_SHOT / hang at last step. You will still need to run 0x74DE2E8739086740 to exit "properly" and then STOP_PLAYER_SWITCH
6 - Invert Switch Direction (false = out, true = in)
8 - Hang above ped

switchType: 0 - 3
0: 1 step towards ped
1: 3 steps out from ped
2: 1 step out from ped
3: 1 step towards ped
--]]
function STREAMING.SWITCH_TO_MULTI_FIRSTPART(ped, flags, switchType)
  native.invoke(
    Type.Void, 5323, false,
    arg(Type.Ped, ped),
    arg(Type.Int, flags),
    arg(Type.Int, switchType)
  )
end

-- void SWITCH_TO_MULTI_SECONDPART(Ped ped) // 0xD8295AF639FD9CB8
function STREAMING.SWITCH_TO_MULTI_SECONDPART(ped)
  native.invoke(
    Type.Void, 5324, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_SWITCH_TO_MULTI_FIRSTPART_FINISHED() // 0x933BBEEB8C61B5F4
function STREAMING.IS_SWITCH_TO_MULTI_FIRSTPART_FINISHED()
  return native.invoke(
    Type.Bool, 5325, false
  )
end

-- int GET_PLAYER_SWITCH_INTERP_OUT_DURATION() // 0x08C2D6C52A3104BB
function STREAMING.GET_PLAYER_SWITCH_INTERP_OUT_DURATION()
  return native.invoke(
    Type.Int, 5326, false
  )
end

-- int GET_PLAYER_SWITCH_INTERP_OUT_CURRENT_TIME() // 0x5B48A06DD0E792A5
function STREAMING.GET_PLAYER_SWITCH_INTERP_OUT_CURRENT_TIME()
  return native.invoke(
    Type.Int, 5327, false
  )
end

-- BOOL IS_SWITCH_SKIPPING_DESCENT() // 0x5B74EA8CFD5E3E7E
function STREAMING.IS_SWITCH_SKIPPING_DESCENT()
  return native.invoke(
    Type.Bool, 5328, false
  )
end

-- void SET_SCENE_STREAMING_TRACKS_CAM_POS_THIS_FRAME() // 0x1E9057A74FD73E23
function STREAMING.SET_SCENE_STREAMING_TRACKS_CAM_POS_THIS_FRAME()
  native.invoke(
    Type.Void, 5329, false
  )
end

-- float GET_LODSCALE() // 0x0C15B0E443B2349D
function STREAMING.GET_LODSCALE()
  return native.invoke(
    Type.Float, 5330, false
  )
end

-- void OVERRIDE_LODSCALE_THIS_FRAME(float scaling) // 0xA76359FC80B2438E
--[[
This allows you to override "extended distance scaling" setting. Needs to be called each frame.
Max scaling seems to be 200.0, normal is 1.0
See https://gfycat.com/DetailedHauntingIncatern
--]]
function STREAMING.OVERRIDE_LODSCALE_THIS_FRAME(scaling)
  native.invoke(
    Type.Void, 5331, false,
    arg(Type.Float, scaling)
  )
end

-- void REMAP_LODSCALE_RANGE_THIS_FRAME(float p0, float p1, float p2, float p3) // 0xBED8CA5FF5E04113
function STREAMING.REMAP_LODSCALE_RANGE_THIS_FRAME(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 5332, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3)
  )
end

-- void SUPPRESS_HD_MAP_STREAMING_THIS_FRAME() // 0x472397322E92A856
function STREAMING.SUPPRESS_HD_MAP_STREAMING_THIS_FRAME()
  native.invoke(
    Type.Void, 5333, false
  )
end

-- void SET_RENDER_HD_ONLY(BOOL toggle) // 0x40AEFD1A244741F2
function STREAMING.SET_RENDER_HD_ONLY(toggle)
  native.invoke(
    Type.Void, 5334, false,
    arg(Type.Bool, toggle)
  )
end

-- void FORCE_ALLOW_TIME_BASED_FADING_THIS_FRAME() // 0x03F1A106BDA7DD3E
function STREAMING.FORCE_ALLOW_TIME_BASED_FADING_THIS_FRAME()
  native.invoke(
    Type.Void, 5335, false
  )
end

-- void IPL_GROUP_SWAP_START(const char* iplName1, const char* iplName2) // 0x95A7DABDDBB78AE7
function STREAMING.IPL_GROUP_SWAP_START(iplName1, iplName2)
  native.invoke(
    Type.Void, 5336, false,
    arg(Type.String, iplName1),
    arg(Type.String, iplName2)
  )
end

-- void IPL_GROUP_SWAP_CANCEL() // 0x63EB2B972A218CAC
function STREAMING.IPL_GROUP_SWAP_CANCEL()
  native.invoke(
    Type.Void, 5337, false
  )
end

-- BOOL IPL_GROUP_SWAP_IS_READY() // 0xFB199266061F820A
function STREAMING.IPL_GROUP_SWAP_IS_READY()
  return native.invoke(
    Type.Bool, 5338, false
  )
end

-- void IPL_GROUP_SWAP_FINISH() // 0xF4A0DADB70F57FA6
function STREAMING.IPL_GROUP_SWAP_FINISH()
  native.invoke(
    Type.Void, 5339, false
  )
end

-- BOOL IPL_GROUP_SWAP_IS_ACTIVE() // 0x5068F488DDB54DD8
function STREAMING.IPL_GROUP_SWAP_IS_ACTIVE()
  return native.invoke(
    Type.Bool, 5340, false
  )
end

-- void PREFETCH_SRL(const char* srl) // 0x3D245789CE12982C
--[[
This native is used to attribute the SRL that BEGIN_SRL is going to load. This is usually used for 'in-game' cinematics (not cutscenes but camera stuff) instead of SET_FOCUS_POS_AND_VEL because it loads a specific area of the map which is pretty useful when the camera moves from distant areas.
For instance, GTA:O opening cutscene.
https://pastebin.com/2EeKVeLA : a list of SRL found in srllist.meta
https://pastebin.com/zd9XYUWY here is the content of a SRL file opened with codewalker.
--]]
function STREAMING.PREFETCH_SRL(srl)
  native.invoke(
    Type.Void, 5341, false,
    arg(Type.String, srl)
  )
end

-- BOOL IS_SRL_LOADED() // 0xD0263801A4C5B0BB
--[[
Returns true when the srl from BEGIN_SRL is loaded.
--]]
function STREAMING.IS_SRL_LOADED()
  return native.invoke(
    Type.Bool, 5342, false
  )
end

-- void BEGIN_SRL() // 0x9BADDC94EF83B823
function STREAMING.BEGIN_SRL()
  native.invoke(
    Type.Void, 5343, false
  )
end

-- void END_SRL() // 0x0A41540E63C9EE17
--[[
Clear the current srl and stop rendering the area selected by PREFETCH_SRL and started with BEGIN_SRL.
--]]
function STREAMING.END_SRL()
  native.invoke(
    Type.Void, 5344, false
  )
end

-- void SET_SRL_TIME(float p0) // 0xA74A541C6884E7B8
function STREAMING.SET_SRL_TIME(p0)
  native.invoke(
    Type.Void, 5345, false,
    arg(Type.Float, p0)
  )
end

-- void SET_SRL_POST_CUTSCENE_CAMERA(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) // 0xEF39EE20C537E98C
function STREAMING.SET_SRL_POST_CUTSCENE_CAMERA(p0, p1, p2, p3, p4, p5)
  native.invoke(
    Type.Void, 5346, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5)
  )
end

-- void SET_SRL_READAHEAD_TIMES(Any p0, Any p1, Any p2, Any p3) // 0xBEB2D9A1D9A8F55A
function STREAMING.SET_SRL_READAHEAD_TIMES(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 5347, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void SET_SRL_LONG_JUMP_MODE(BOOL p0) // 0x20C6C7E4EB082A7F
function STREAMING.SET_SRL_LONG_JUMP_MODE(p0)
  native.invoke(
    Type.Void, 5348, false,
    arg(Type.Bool, p0)
  )
end

-- void SET_SRL_FORCE_PRESTREAM(Any p0) // 0xF8155A7F03DDFC8E
function STREAMING.SET_SRL_FORCE_PRESTREAM(p0)
  native.invoke(
    Type.Void, 5349, false,
    arg(Type.Any, p0)
  )
end

-- void SET_HD_AREA(float x, float y, float z, float radius) // 0xB85F26619073E775
function STREAMING.SET_HD_AREA(x, y, z, radius)
  native.invoke(
    Type.Void, 5350, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius)
  )
end

-- void CLEAR_HD_AREA() // 0xCE58B1CFB9290813
function STREAMING.CLEAR_HD_AREA()
  native.invoke(
    Type.Void, 5351, false
  )
end

-- void INIT_CREATOR_BUDGET() // 0xB5A4DB34FE89B88A
function STREAMING.INIT_CREATOR_BUDGET()
  native.invoke(
    Type.Void, 5352, false
  )
end

-- void SHUTDOWN_CREATOR_BUDGET() // 0xCCE26000E9A6FAD7
function STREAMING.SHUTDOWN_CREATOR_BUDGET()
  native.invoke(
    Type.Void, 5353, false
  )
end

-- BOOL ADD_MODEL_TO_CREATOR_BUDGET(Hash modelHash) // 0x0BC3144DEB678666
function STREAMING.ADD_MODEL_TO_CREATOR_BUDGET(modelHash)
  return native.invoke(
    Type.Bool, 5354, false,
    arg(Type.Hash, modelHash)
  )
end

-- void REMOVE_MODEL_FROM_CREATOR_BUDGET(Hash modelHash) // 0xF086AD9354FAC3A3
function STREAMING.REMOVE_MODEL_FROM_CREATOR_BUDGET(modelHash)
  native.invoke(
    Type.Void, 5355, false,
    arg(Type.Hash, modelHash)
  )
end

-- float GET_USED_CREATOR_BUDGET() // 0x3D3D8B3BE5A83D35
--[[
0.0 = no memory used
1.0 = all memory used

Maximum model memory (as defined in common\data\missioncreatordata.meta) is 100 MiB
--]]
function STREAMING.GET_USED_CREATOR_BUDGET()
  return native.invoke(
    Type.Float, 5356, false
  )
end

-- void SET_ISLAND_ENABLED(const char* name, BOOL toggle) // 0x9A9D1BA639675CF1
--[[
Enables the specified island. For more information, see islandhopper.meta
--]]
function STREAMING.SET_ISLAND_ENABLED(name, toggle)
  native.invoke(
    Type.Void, 5357, false,
    arg(Type.String, name),
    arg(Type.Bool, toggle)
  )
end


TASK = {}

-- void TASK_PAUSE(Ped ped, int ms) // 0xE73A266DB0CA9042
--[[
Stand still (?)
--]]
function TASK.TASK_PAUSE(ped, ms)
  native.invoke(
    Type.Void, 5358, false,
    arg(Type.Ped, ped),
    arg(Type.Int, ms)
  )
end

-- void TASK_STAND_STILL(Ped ped, int time) // 0x919BE13EED931959
--[[
Makes the specified ped stand still for (time) milliseconds.
--]]
function TASK.TASK_STAND_STILL(ped, time)
  native.invoke(
    Type.Void, 5359, false,
    arg(Type.Ped, ped),
    arg(Type.Int, time)
  )
end

-- void TASK_JUMP(Ped ped, BOOL usePlayerLaunchForce, BOOL doSuperJump, BOOL useFullSuperJumpForce) // 0x0AE4086104E067B1
--[[
Definition is wrong. This has 4 parameters (Not sure when they were added. v350 has 2, v678 has 4).

v350: Ped ped, bool unused
v678: Ped ped, bool unused, bool flag1, bool flag2

flag1 = super jump, flag2 = do nothing if flag1 is false and doubles super jump height if flag1 is true.
--]]
function TASK.TASK_JUMP(ped, usePlayerLaunchForce, doSuperJump, useFullSuperJumpForce)
  native.invoke(
    Type.Void, 5360, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, usePlayerLaunchForce),
    arg(Type.Bool, doSuperJump),
    arg(Type.Bool, useFullSuperJumpForce)
  )
end

-- void TASK_COWER(Ped ped, int duration) // 0x3EB1FE9E8E908E15
function TASK.TASK_COWER(ped, duration)
  native.invoke(
    Type.Void, 5361, false,
    arg(Type.Ped, ped),
    arg(Type.Int, duration)
  )
end

-- void TASK_HANDS_UP(Ped ped, int duration, Ped facingPed, int timeToFacePed, int flags) // 0xF2EAB31979A7F910
--[[
In the scripts, p3 was always -1.

p3 seems to be duration or timeout of turn animation.
Also facingPed can be 0 or -1 so ped will just raise hands up.
--]]
function TASK.TASK_HANDS_UP(ped, duration, facingPed, timeToFacePed, flags)
  native.invoke(
    Type.Void, 5362, false,
    arg(Type.Ped, ped),
    arg(Type.Int, duration),
    arg(Type.Ped, facingPed),
    arg(Type.Int, timeToFacePed),
    arg(Type.Int, flags)
  )
end

-- void UPDATE_TASK_HANDS_UP_DURATION(Ped ped, int duration) // 0xA98FCAFD7893C834
function TASK.UPDATE_TASK_HANDS_UP_DURATION(ped, duration)
  native.invoke(
    Type.Void, 5363, false,
    arg(Type.Ped, ped),
    arg(Type.Int, duration)
  )
end

-- void TASK_OPEN_VEHICLE_DOOR(Ped ped, Vehicle vehicle, int timeOut, int seat, float speed) // 0x965791A9A488A062
--[[
The given ped will try to open the nearest door to 'seat'.
Example: telling the ped to open the door for the driver seat does not necessarily mean it will open the driver door, it may choose to open the passenger door instead if that one is closer.
--]]
function TASK.TASK_OPEN_VEHICLE_DOOR(ped, vehicle, timeOut, seat, speed)
  native.invoke(
    Type.Void, 5364, false,
    arg(Type.Ped, ped),
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, timeOut),
    arg(Type.Int, seat),
    arg(Type.Float, speed)
  )
end

-- void TASK_ENTER_VEHICLE(Ped ped, Vehicle vehicle, int timeout, int seat, float speed, int flag, const char* overrideEntryClipsetName, Any p7) // 0xC20E50AA46D09CA8
--[[
speed 1.0 = walk, 2.0 = run
p5 1 = normal, 3 = teleport to vehicle, 16 = teleport directly into vehicle
p6 is always 0

Usage of seat 
-1 = driver
0 = passenger
1 = left back seat
2 = right back seat
3 = outside left
4 = outside right
--]]
function TASK.TASK_ENTER_VEHICLE(ped, vehicle, timeout, seat, speed, flag, overrideEntryClipsetName, p7)
  native.invoke(
    Type.Void, 5365, false,
    arg(Type.Ped, ped),
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, timeout),
    arg(Type.Int, seat),
    arg(Type.Float, speed),
    arg(Type.Int, flag),
    arg(Type.String, overrideEntryClipsetName),
    arg(Type.Any, p7)
  )
end

-- void TASK_LEAVE_VEHICLE(Ped ped, Vehicle vehicle, int flags) // 0xD3DBCE61A490BE02
--[[
Flags from decompiled scripts:
0 = normal exit and closes door.
1 = normal exit and closes door.
16 = teleports outside, door kept closed.
64 = normal exit and closes door, maybe a bit slower animation than 0.
256 = normal exit but does not close the door.
4160 = ped is throwing himself out, even when the vehicle is still.
262144 = ped moves to passenger seat first, then exits normally

Others to be tried out: 320, 512, 131072.
--]]
function TASK.TASK_LEAVE_VEHICLE(ped, vehicle, flags)
  native.invoke(
    Type.Void, 5366, false,
    arg(Type.Ped, ped),
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, flags)
  )
end

-- void TASK_GET_OFF_BOAT(Ped ped, Vehicle boat) // 0x9C00E77AF14B2DFF
function TASK.TASK_GET_OFF_BOAT(ped, boat)
  native.invoke(
    Type.Void, 5367, false,
    arg(Type.Ped, ped),
    arg(Type.Vehicle, boat)
  )
end

-- void TASK_SKY_DIVE(Ped ped, BOOL instant) // 0x601736CFE536B0A0
function TASK.TASK_SKY_DIVE(ped, instant)
  native.invoke(
    Type.Void, 5368, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, instant)
  )
end

-- void TASK_PARACHUTE(Ped ped, BOOL giveParachuteItem, BOOL instant) // 0xD2F1C53C97EE81AB
--[[
Second parameter is unused.

second parameter was for jetpack in the early stages of gta and the hard coded code is now removed
--]]
function TASK.TASK_PARACHUTE(ped, giveParachuteItem, instant)
  native.invoke(
    Type.Void, 5369, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, giveParachuteItem),
    arg(Type.Bool, instant)
  )
end

-- void TASK_PARACHUTE_TO_TARGET(Ped ped, float x, float y, float z) // 0xB33E291AFA6BD03A
--[[
makes ped parachute to coords x y z. Works well with PATHFIND::GET_SAFE_COORD_FOR_PED
--]]
function TASK.TASK_PARACHUTE_TO_TARGET(ped, x, y, z)
  native.invoke(
    Type.Void, 5370, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void SET_PARACHUTE_TASK_TARGET(Ped ped, float x, float y, float z) // 0xC313379AF0FCEDA7
function TASK.SET_PARACHUTE_TASK_TARGET(ped, x, y, z)
  native.invoke(
    Type.Void, 5371, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void SET_PARACHUTE_TASK_THRUST(Ped ped, float thrust) // 0x0729BAC1B8C64317
function TASK.SET_PARACHUTE_TASK_THRUST(ped, thrust)
  native.invoke(
    Type.Void, 5372, false,
    arg(Type.Ped, ped),
    arg(Type.Float, thrust)
  )
end

-- void TASK_RAPPEL_FROM_HELI(Ped ped, float minHeightAboveGround) // 0x09693B0312F91649
--[[
minHeightAboveGround: the minimum height above ground the heli must be at before the ped can start rappelling

Only appears twice in the scripts.

TASK::TASK_RAPPEL_FROM_HELI(PLAYER::PLAYER_PED_ID(), 10.0f);
TASK::TASK_RAPPEL_FROM_HELI(a_0, 10.0f);
--]]
function TASK.TASK_RAPPEL_FROM_HELI(ped, minHeightAboveGround)
  native.invoke(
    Type.Void, 5373, false,
    arg(Type.Ped, ped),
    arg(Type.Float, minHeightAboveGround)
  )
end

-- void TASK_VEHICLE_DRIVE_TO_COORD(Ped ped, Vehicle vehicle, float x, float y, float z, float speed, Any p6, Hash vehicleModel, int drivingMode, float stopRange, float straightLineDistance) // 0xE2A2AA2F659D77A7
--[[
info about driving modes: https://gtaforums.com/topic/822314-guide-driving-styles/
--]]
function TASK.TASK_VEHICLE_DRIVE_TO_COORD(ped, vehicle, x, y, z, speed, p6, vehicleModel, drivingMode, stopRange, straightLineDistance)
  native.invoke(
    Type.Void, 5374, false,
    arg(Type.Ped, ped),
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, speed),
    arg(Type.Any, p6),
    arg(Type.Hash, vehicleModel),
    arg(Type.Int, drivingMode),
    arg(Type.Float, stopRange),
    arg(Type.Float, straightLineDistance)
  )
end

-- void TASK_VEHICLE_DRIVE_TO_COORD_LONGRANGE(Ped ped, Vehicle vehicle, float x, float y, float z, float speed, int driveMode, float stopRange) // 0x158BB33F920D360C
function TASK.TASK_VEHICLE_DRIVE_TO_COORD_LONGRANGE(ped, vehicle, x, y, z, speed, driveMode, stopRange)
  native.invoke(
    Type.Void, 5375, false,
    arg(Type.Ped, ped),
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, speed),
    arg(Type.Int, driveMode),
    arg(Type.Float, stopRange)
  )
end

-- void TASK_VEHICLE_DRIVE_WANDER(Ped ped, Vehicle vehicle, float speed, int drivingStyle) // 0x480142959D337D00
function TASK.TASK_VEHICLE_DRIVE_WANDER(ped, vehicle, speed, drivingStyle)
  native.invoke(
    Type.Void, 5376, false,
    arg(Type.Ped, ped),
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, speed),
    arg(Type.Int, drivingStyle)
  )
end

-- void TASK_FOLLOW_TO_OFFSET_OF_ENTITY(Ped ped, Entity entity, float offsetX, float offsetY, float offsetZ, float movementSpeed, int timeout, float stoppingRange, BOOL persistFollowing) // 0x304AE42E357B8C7E
--[[
p6 always -1
p7 always 10.0
p8 always 1
--]]
function TASK.TASK_FOLLOW_TO_OFFSET_OF_ENTITY(ped, entity, offsetX, offsetY, offsetZ, movementSpeed, timeout, stoppingRange, persistFollowing)
  native.invoke(
    Type.Void, 5377, false,
    arg(Type.Ped, ped),
    arg(Type.Entity, entity),
    arg(Type.Float, offsetX),
    arg(Type.Float, offsetY),
    arg(Type.Float, offsetZ),
    arg(Type.Float, movementSpeed),
    arg(Type.Int, timeout),
    arg(Type.Float, stoppingRange),
    arg(Type.Bool, persistFollowing)
  )
end

-- void TASK_GO_STRAIGHT_TO_COORD(Ped ped, float x, float y, float z, float speed, int timeout, float targetHeading, float distanceToSlide) // 0xD76B57B44F1E6F8B
function TASK.TASK_GO_STRAIGHT_TO_COORD(ped, x, y, z, speed, timeout, targetHeading, distanceToSlide)
  native.invoke(
    Type.Void, 5378, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, speed),
    arg(Type.Int, timeout),
    arg(Type.Float, targetHeading),
    arg(Type.Float, distanceToSlide)
  )
end

-- void TASK_GO_STRAIGHT_TO_COORD_RELATIVE_TO_ENTITY(Ped ped, Entity entity, float x, float y, float z, float moveBlendRatio, int time) // 0x61E360B7E040D12E
function TASK.TASK_GO_STRAIGHT_TO_COORD_RELATIVE_TO_ENTITY(ped, entity, x, y, z, moveBlendRatio, time)
  native.invoke(
    Type.Void, 5379, false,
    arg(Type.Ped, ped),
    arg(Type.Entity, entity),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, moveBlendRatio),
    arg(Type.Int, time)
  )
end

-- void TASK_ACHIEVE_HEADING(Ped ped, float heading, int timeout) // 0x93B93A37987F1F3D
--[[
Makes the specified ped achieve the specified heading.

pedHandle: The handle of the ped to assign the task to.
heading: The desired heading.
timeout: The time, in milliseconds, to allow the task to complete. If the task times out, it is cancelled, and the ped will stay at the heading it managed to reach in the time.
--]]
function TASK.TASK_ACHIEVE_HEADING(ped, heading, timeout)
  native.invoke(
    Type.Void, 5380, false,
    arg(Type.Ped, ped),
    arg(Type.Float, heading),
    arg(Type.Int, timeout)
  )
end

-- void TASK_FLUSH_ROUTE() // 0x841142A1376E9006
--[[
MulleKD19: Clears the current point route. Call this before TASK_EXTEND_ROUTE and TASK_FOLLOW_POINT_ROUTE.
--]]
function TASK.TASK_FLUSH_ROUTE()
  native.invoke(
    Type.Void, 5381, false
  )
end

-- void TASK_EXTEND_ROUTE(float x, float y, float z) // 0x1E7889778264843A
--[[
MulleKD19: Adds a new point to the current point route. Call TASK_FLUSH_ROUTE before the first call to this. Call TASK_FOLLOW_POINT_ROUTE to make the Ped go the route.

A maximum of 8 points can be added.
--]]
function TASK.TASK_EXTEND_ROUTE(x, y, z)
  native.invoke(
    Type.Void, 5382, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void TASK_FOLLOW_POINT_ROUTE(Ped ped, float speed, int mode) // 0x595583281858626E
--[[
MulleKD19: Makes the ped go on the created point route.

ped: The ped to give the task to.
speed: The speed to move at in m/s.
int: Unknown. Can be 0, 1, 2 or 3.

Example:
TASK_FLUSH_ROUTE();
TASK_EXTEND_ROUTE(0f, 0f, 70f);
TASK_EXTEND_ROUTE(10f, 0f, 70f);
TASK_EXTEND_ROUTE(10f, 10f, 70f);
TASK_FOLLOW_POINT_ROUTE(GET_PLAYER_PED(), 1f, 0);
--]]
function TASK.TASK_FOLLOW_POINT_ROUTE(ped, speed, mode)
  native.invoke(
    Type.Void, 5383, false,
    arg(Type.Ped, ped),
    arg(Type.Float, speed),
    arg(Type.Int, mode)
  )
end

-- void TASK_GO_TO_ENTITY(Entity entity, Entity target, int duration, float distance, float moveBlendRatio, float slowDownDistance, int flags) // 0x6A071245EB0D1882
--[[
The entity will move towards the target until time is over (duration) or get in target's range (distance). p5 and p6 are unknown, but you could leave p5 = 1073741824 or 100 or even 0 (didn't see any difference but on the decompiled scripts, they use 1073741824 mostly) and p6 = 0

Note: I've only tested it on entity -> ped and target -> vehicle. It could work differently on other entities, didn't try it yet.

Example: TASK::TASK_GO_TO_ENTITY(pedHandle, vehicleHandle, 5000, 4.0, 100, 1073741824, 0)

Ped will run towards the vehicle for 5 seconds and stop when time is over or when he gets 4 meters(?) around the vehicle (with duration = -1, the task duration will be ignored).

enum EGOTO_ENTITY_SCRIPT_FLAGS
{
	EGOTO_ENTITY_NEVER_SLOW_FOR_PATH_LENGTH = 0x01,
};
--]]
function TASK.TASK_GO_TO_ENTITY(entity, target, duration, distance, moveBlendRatio, slowDownDistance, flags)
  native.invoke(
    Type.Void, 5384, false,
    arg(Type.Entity, entity),
    arg(Type.Entity, target),
    arg(Type.Int, duration),
    arg(Type.Float, distance),
    arg(Type.Float, moveBlendRatio),
    arg(Type.Float, slowDownDistance),
    arg(Type.Int, flags)
  )
end

-- void TASK_SMART_FLEE_COORD(Ped ped, float x, float y, float z, float distance, int time, BOOL preferPavements, BOOL quitIfOutOfRange) // 0x94587F17E9C365D5
--[[
Makes the specified ped flee the specified distance from the specified position.
--]]
function TASK.TASK_SMART_FLEE_COORD(ped, x, y, z, distance, time, preferPavements, quitIfOutOfRange)
  native.invoke(
    Type.Void, 5385, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, distance),
    arg(Type.Int, time),
    arg(Type.Bool, preferPavements),
    arg(Type.Bool, quitIfOutOfRange)
  )
end

-- void TASK_SMART_FLEE_PED(Ped ped, Ped fleeTarget, float safeDistance, int fleeTime, BOOL preferPavements, BOOL updateToNearestHatedPed) // 0x22B0D0E37CCB840D
--[[
Makes a ped run away from another ped (fleeTarget).

distance = ped will flee this distance.
fleeTime = ped will flee for this amount of time, set to "-1" to flee forever
--]]
function TASK.TASK_SMART_FLEE_PED(ped, fleeTarget, safeDistance, fleeTime, preferPavements, updateToNearestHatedPed)
  native.invoke(
    Type.Void, 5386, false,
    arg(Type.Ped, ped),
    arg(Type.Ped, fleeTarget),
    arg(Type.Float, safeDistance),
    arg(Type.Int, fleeTime),
    arg(Type.Bool, preferPavements),
    arg(Type.Bool, updateToNearestHatedPed)
  )
end

-- void TASK_REACT_AND_FLEE_PED(Ped ped, Ped fleeTarget) // 0x72C896464915D1B1
function TASK.TASK_REACT_AND_FLEE_PED(ped, fleeTarget)
  native.invoke(
    Type.Void, 5387, false,
    arg(Type.Ped, ped),
    arg(Type.Ped, fleeTarget)
  )
end

-- void TASK_SHOCKING_EVENT_REACT(Ped ped, int eventHandle) // 0x452419CBD838065B
function TASK.TASK_SHOCKING_EVENT_REACT(ped, eventHandle)
  native.invoke(
    Type.Void, 5388, false,
    arg(Type.Ped, ped),
    arg(Type.Int, eventHandle)
  )
end

-- void TASK_WANDER_IN_AREA(Ped ped, float x, float y, float z, float radius, float minimalLength, float timeBetweenWalks) // 0xE054346CA3A0F315
function TASK.TASK_WANDER_IN_AREA(ped, x, y, z, radius, minimalLength, timeBetweenWalks)
  native.invoke(
    Type.Void, 5389, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Float, minimalLength),
    arg(Type.Float, timeBetweenWalks)
  )
end

-- void TASK_WANDER_STANDARD(Ped ped, float heading, int flags) // 0xBB9CE077274F6A1B
--[[
Makes ped walk around the area.

set p1 to 10.0f and p2 to 10 if you want the ped to walk anywhere without a duration.
--]]
function TASK.TASK_WANDER_STANDARD(ped, heading, flags)
  native.invoke(
    Type.Void, 5390, false,
    arg(Type.Ped, ped),
    arg(Type.Float, heading),
    arg(Type.Int, flags)
  )
end

-- void TASK_WANDER_SPECIFIC(Ped ped, const char* conditionalAnimGroupStr, const char* conditionalAnimStr, float heading) // 0x6919A2F136426098
function TASK.TASK_WANDER_SPECIFIC(ped, conditionalAnimGroupStr, conditionalAnimStr, heading)
  native.invoke(
    Type.Void, 5391, false,
    arg(Type.Ped, ped),
    arg(Type.String, conditionalAnimGroupStr),
    arg(Type.String, conditionalAnimStr),
    arg(Type.Float, heading)
  )
end

-- void TASK_VEHICLE_PARK(Ped ped, Vehicle vehicle, float x, float y, float z, float heading, int mode, float radius, BOOL keepEngineOn) // 0x0F3E34E968EA374E
--[[
Modes:
0 - ignore heading
1 - park forward
2 - park backwards

Depending on the angle of approach, the vehicle can park at the specified heading or at its exact opposite (-180) angle.

Radius seems to define how close the vehicle has to be -after parking- to the position for this task considered completed. If the value is too small, the vehicle will try to park again until it's exactly where it should be. 20.0 Works well but lower values don't, like the radius is measured in centimeters or something.
--]]
function TASK.TASK_VEHICLE_PARK(ped, vehicle, x, y, z, heading, mode, radius, keepEngineOn)
  native.invoke(
    Type.Void, 5392, false,
    arg(Type.Ped, ped),
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, heading),
    arg(Type.Int, mode),
    arg(Type.Float, radius),
    arg(Type.Bool, keepEngineOn)
  )
end

-- void TASK_STEALTH_KILL(Ped killer, Ped target, Hash stealthKillActionResultHash, float desiredMoveBlendRatio, int stealthFlags) // 0xAA5DC05579D60BD9
--[[
known "killTypes" are: "AR_stealth_kill_knife" and "AR_stealth_kill_a".
--]]
function TASK.TASK_STEALTH_KILL(killer, target, stealthKillActionResultHash, desiredMoveBlendRatio, stealthFlags)
  native.invoke(
    Type.Void, 5393, false,
    arg(Type.Ped, killer),
    arg(Type.Ped, target),
    arg(Type.Hash, stealthKillActionResultHash),
    arg(Type.Float, desiredMoveBlendRatio),
    arg(Type.Int, stealthFlags)
  )
end

-- void TASK_PLANT_BOMB(Ped ped, float x, float y, float z, float heading) // 0x965FEC691D55E9BF
function TASK.TASK_PLANT_BOMB(ped, x, y, z, heading)
  native.invoke(
    Type.Void, 5394, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, heading)
  )
end

-- void TASK_FOLLOW_NAV_MESH_TO_COORD(Ped ped, float x, float y, float z, float moveBlendRatio, int time, float targetRadius, int flags, float targetHeading) // 0x15D3A79D4E44B913
--[[
If no timeout, set timeout to -1.
--]]
function TASK.TASK_FOLLOW_NAV_MESH_TO_COORD(ped, x, y, z, moveBlendRatio, time, targetRadius, flags, targetHeading)
  native.invoke(
    Type.Void, 5395, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, moveBlendRatio),
    arg(Type.Int, time),
    arg(Type.Float, targetRadius),
    arg(Type.Int, flags),
    arg(Type.Float, targetHeading)
  )
end

-- void TASK_FOLLOW_NAV_MESH_TO_COORD_ADVANCED(Ped ped, float x, float y, float z, float moveBlendRatio, int time, float targetRadius, int flags, float slideToCoordHeading, float maxSlopeNavigable, float clampMaxSearchDistance, float targetHeading) // 0x17F58B88D085DBAC
function TASK.TASK_FOLLOW_NAV_MESH_TO_COORD_ADVANCED(ped, x, y, z, moveBlendRatio, time, targetRadius, flags, slideToCoordHeading, maxSlopeNavigable, clampMaxSearchDistance, targetHeading)
  native.invoke(
    Type.Void, 5396, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, moveBlendRatio),
    arg(Type.Int, time),
    arg(Type.Float, targetRadius),
    arg(Type.Int, flags),
    arg(Type.Float, slideToCoordHeading),
    arg(Type.Float, maxSlopeNavigable),
    arg(Type.Float, clampMaxSearchDistance),
    arg(Type.Float, targetHeading)
  )
end

-- void SET_PED_PATH_CAN_USE_CLIMBOVERS(Ped ped, BOOL Toggle) // 0x8E06A6FE76C9EFF4
function TASK.SET_PED_PATH_CAN_USE_CLIMBOVERS(ped, Toggle)
  native.invoke(
    Type.Void, 5397, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, Toggle)
  )
end

-- void SET_PED_PATH_CAN_USE_LADDERS(Ped ped, BOOL Toggle) // 0x77A5B103C87F476E
function TASK.SET_PED_PATH_CAN_USE_LADDERS(ped, Toggle)
  native.invoke(
    Type.Void, 5398, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, Toggle)
  )
end

-- void SET_PED_PATH_CAN_DROP_FROM_HEIGHT(Ped ped, BOOL Toggle) // 0xE361C5C71C431A4F
function TASK.SET_PED_PATH_CAN_DROP_FROM_HEIGHT(ped, Toggle)
  native.invoke(
    Type.Void, 5399, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, Toggle)
  )
end

-- void SET_PED_PATH_CLIMB_COST_MODIFIER(Ped ped, float modifier) // 0x88E32DB8C1A4AA4B
--[[
Default modifier is 1.0, minimum is 0.0 and maximum is 10.0.
--]]
function TASK.SET_PED_PATH_CLIMB_COST_MODIFIER(ped, modifier)
  native.invoke(
    Type.Void, 5400, false,
    arg(Type.Ped, ped),
    arg(Type.Float, modifier)
  )
end

-- void SET_PED_PATH_MAY_ENTER_WATER(Ped ped, BOOL mayEnterWater) // 0xF35425A4204367EC
function TASK.SET_PED_PATH_MAY_ENTER_WATER(ped, mayEnterWater)
  native.invoke(
    Type.Void, 5401, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, mayEnterWater)
  )
end

-- void SET_PED_PATH_PREFER_TO_AVOID_WATER(Ped ped, BOOL avoidWater) // 0x38FE1EC73743793C
function TASK.SET_PED_PATH_PREFER_TO_AVOID_WATER(ped, avoidWater)
  native.invoke(
    Type.Void, 5402, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, avoidWater)
  )
end

-- void SET_PED_PATH_AVOID_FIRE(Ped ped, BOOL avoidFire) // 0x4455517B28441E60
function TASK.SET_PED_PATH_AVOID_FIRE(ped, avoidFire)
  native.invoke(
    Type.Void, 5403, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, avoidFire)
  )
end

-- void SET_GLOBAL_MIN_BIRD_FLIGHT_HEIGHT(float height) // 0x6C6B148586F934F7
--[[
Needs to be looped! And yes, it does work and is not a hash collision.
Birds will try to reach the given height.
--]]
function TASK.SET_GLOBAL_MIN_BIRD_FLIGHT_HEIGHT(height)
  native.invoke(
    Type.Void, 5404, false,
    arg(Type.Float, height)
  )
end

-- int GET_NAVMESH_ROUTE_DISTANCE_REMAINING(Ped ped, float* distanceRemaining, BOOL* isPathReady) // 0xC6F5C0BCDC74D62D
--[[
Looks like the last parameter returns true if the path has been calculated, while the first returns the remaining distance to the end of the path.
Return value of native is the same as GET_NAVMESH_ROUTE_RESULT
Looks like the native returns an int for the path's state:
1 - ???
2 - ???
3 - Finished Generating 
--]]
function TASK.GET_NAVMESH_ROUTE_DISTANCE_REMAINING(ped, distanceRemaining, isPathReady)
  return native.invoke(
    Type.Int, 5405, false,
    arg(Type.Ped, ped),
    arg(Type.Float, distanceRemaining),
    arg(Type.Bool, isPathReady)
  )
end

-- int GET_NAVMESH_ROUTE_RESULT(Ped ped) // 0x632E831F382A0FA8
--[[
See GET_NAVMESH_ROUTE_DISTANCE_REMAINING for more details.
--]]
function TASK.GET_NAVMESH_ROUTE_RESULT(ped)
  return native.invoke(
    Type.Int, 5406, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_CONTROLLED_VEHICLE_UNABLE_TO_GET_TO_ROAD(Ped ped) // 0x3E38E28A1D80DDF6
function TASK.IS_CONTROLLED_VEHICLE_UNABLE_TO_GET_TO_ROAD(ped)
  return native.invoke(
    Type.Bool, 5407, false,
    arg(Type.Ped, ped)
  )
end

-- void TASK_GO_TO_COORD_ANY_MEANS(Ped ped, float x, float y, float z, float moveBlendRatio, Vehicle vehicle, BOOL useLongRangeVehiclePathing, int drivingFlags, float maxRangeToShootTargets) // 0x5BC448CB78FA3E88
--[[
example from fm_mission_controller

TASK::TASK_GO_TO_COORD_ANY_MEANS(l_649, sub_f7e86(-1, 0), 1.0, 0, 0, 786603, 0xbf800000);
 
--]]
function TASK.TASK_GO_TO_COORD_ANY_MEANS(ped, x, y, z, moveBlendRatio, vehicle, useLongRangeVehiclePathing, drivingFlags, maxRangeToShootTargets)
  native.invoke(
    Type.Void, 5408, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, moveBlendRatio),
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, useLongRangeVehiclePathing),
    arg(Type.Int, drivingFlags),
    arg(Type.Float, maxRangeToShootTargets)
  )
end

-- void TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS(Ped ped, float x, float y, float z, float moveBlendRatio, Vehicle vehicle, BOOL useLongRangeVehiclePathing, int drivingFlags, float maxRangeToShootTargets, float extraVehToTargetDistToPreferVehicle, float driveStraightLineDistance, int extraFlags, float warpTimerMS) // 0x1DD45F9ECFDB1BC9
function TASK.TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS(ped, x, y, z, moveBlendRatio, vehicle, useLongRangeVehiclePathing, drivingFlags, maxRangeToShootTargets, extraVehToTargetDistToPreferVehicle, driveStraightLineDistance, extraFlags, warpTimerMS)
  native.invoke(
    Type.Void, 5409, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, moveBlendRatio),
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, useLongRangeVehiclePathing),
    arg(Type.Int, drivingFlags),
    arg(Type.Float, maxRangeToShootTargets),
    arg(Type.Float, extraVehToTargetDistToPreferVehicle),
    arg(Type.Float, driveStraightLineDistance),
    arg(Type.Int, extraFlags),
    arg(Type.Float, warpTimerMS)
  )
end

-- void TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS_WITH_CRUISE_SPEED(Ped ped, float x, float y, float z, float moveBlendRatio, Vehicle vehicle, BOOL useLongRangeVehiclePathing, int drivingFlags, float maxRangeToShootTargets, float extraVehToTargetDistToPreferVehicle, float driveStraightLineDistance, int extraFlags, float cruiseSpeed, float targetArriveDist) // 0xB8ECD61F531A7B02
function TASK.TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS_WITH_CRUISE_SPEED(ped, x, y, z, moveBlendRatio, vehicle, useLongRangeVehiclePathing, drivingFlags, maxRangeToShootTargets, extraVehToTargetDistToPreferVehicle, driveStraightLineDistance, extraFlags, cruiseSpeed, targetArriveDist)
  native.invoke(
    Type.Void, 5410, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, moveBlendRatio),
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, useLongRangeVehiclePathing),
    arg(Type.Int, drivingFlags),
    arg(Type.Float, maxRangeToShootTargets),
    arg(Type.Float, extraVehToTargetDistToPreferVehicle),
    arg(Type.Float, driveStraightLineDistance),
    arg(Type.Int, extraFlags),
    arg(Type.Float, cruiseSpeed),
    arg(Type.Float, targetArriveDist)
  )
end

-- void TASK_PLAY_ANIM(Ped ped, const char* animDictionary, const char* animationName, float blendInSpeed, float blendOutSpeed, int duration, int flag, float playbackRate, BOOL lockX, BOOL lockY, BOOL lockZ) // 0xEA47FE3719165B94
--[[
Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json

float speed > normal speed is 8.0f
----------------------

float speedMultiplier > multiply the playback speed
----------------------

int duration: time in millisecond
----------------------
-1 _ _ _ _ _ _ _> Default (see flag)
0 _ _ _ _ _ _ _ > Not play at all
Small value _ _ > Slow down animation speed
Other _ _ _ _ _ > freeze player control until specific time (ms) has 
_ _ _ _ _ _ _ _ _ passed. (No effect if flag is set to be 
_ _ _ _ _ _ _ _ _ controllable.)

int flag:
----------------------
enum eAnimationFlags
{
 ANIM_FLAG_NORMAL = 0,
   ANIM_FLAG_REPEAT = 1,
   ANIM_FLAG_STOP_LAST_FRAME = 2,
   ANIM_FLAG_UPPERBODY = 16,
   ANIM_FLAG_ENABLE_PLAYER_CONTROL = 32,
   ANIM_FLAG_CANCELABLE = 120,
};
Odd number : loop infinitely
Even number : Freeze at last frame
Multiple of 4: Freeze at last frame but controllable

01 to 15 > Full body
10 to 31 > Upper body
32 to 47 > Full body > Controllable
48 to 63 > Upper body > Controllable
...
001 to 255 > Normal
256 to 511 > Garbled
...

playbackRate:

values are between 0.0 and 1.0


lockX:  

0 in most cases 1 for rcmepsilonism8 and rcmpaparazzo_3
> 1 for mini@sprunk
 

lockY:

0 in most cases 
1 for missfam5_yoga, missfra1mcs_2_crew_react


lockZ: 

    0 for single player 
    Can be 1 but only for MP 
--]]
function TASK.TASK_PLAY_ANIM(ped, animDictionary, animationName, blendInSpeed, blendOutSpeed, duration, flag, playbackRate, lockX, lockY, lockZ)
  native.invoke(
    Type.Void, 5411, false,
    arg(Type.Ped, ped),
    arg(Type.String, animDictionary),
    arg(Type.String, animationName),
    arg(Type.Float, blendInSpeed),
    arg(Type.Float, blendOutSpeed),
    arg(Type.Int, duration),
    arg(Type.Int, flag),
    arg(Type.Float, playbackRate),
    arg(Type.Bool, lockX),
    arg(Type.Bool, lockY),
    arg(Type.Bool, lockZ)
  )
end

-- void TASK_PLAY_ANIM_ADVANCED(Ped ped, const char* animDict, const char* animName, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float animEnterSpeed, float animExitSpeed, int duration, Any flag, float animTime, int rotOrder, int ikFlags) // 0x83CDB10EA29B370B
--[[
It's similar to TASK_PLAY_ANIM, except the first 6 floats let you specify the initial position and rotation of the task. (Ped gets teleported to the position).

Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
--]]
function TASK.TASK_PLAY_ANIM_ADVANCED(ped, animDict, animName, posX, posY, posZ, rotX, rotY, rotZ, animEnterSpeed, animExitSpeed, duration, flag, animTime, rotOrder, ikFlags)
  native.invoke(
    Type.Void, 5412, false,
    arg(Type.Ped, ped),
    arg(Type.String, animDict),
    arg(Type.String, animName),
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ),
    arg(Type.Float, rotX),
    arg(Type.Float, rotY),
    arg(Type.Float, rotZ),
    arg(Type.Float, animEnterSpeed),
    arg(Type.Float, animExitSpeed),
    arg(Type.Int, duration),
    arg(Type.Any, flag),
    arg(Type.Float, animTime),
    arg(Type.Int, rotOrder),
    arg(Type.Int, ikFlags)
  )
end

-- void STOP_ANIM_TASK(Entity entity, const char* animDictionary, const char* animationName, float blendDelta) // 0x97FF36A1D40EA00A
--[[
Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
--]]
function TASK.STOP_ANIM_TASK(entity, animDictionary, animationName, blendDelta)
  native.invoke(
    Type.Void, 5413, false,
    arg(Type.Entity, entity),
    arg(Type.String, animDictionary),
    arg(Type.String, animationName),
    arg(Type.Float, blendDelta)
  )
end

-- void TASK_SCRIPTED_ANIMATION(Ped ped, int* priorityLowData, int* priorityMidData, int* priorityHighData, float blendInDelta, float blendOutDelta) // 0x126EF75F1E17ABE5
--[[
From fm_mission_controller.c:
reserve_network_mission_objects(get_num_reserved_mission_objects(0) + 1);
           vVar28 = {0.094f, 0.02f, -0.005f};
            vVar29 = {-92.24f, 63.64f, 150.24f};
          func_253(&uVar30, joaat("prop_ld_case_01"), Global_1592429.imm_34757[iParam1 <268>], 1, 1, 0, 1);
         set_entity_lod_dist(net_to_ent(uVar30), 500);
         attach_entity_to_entity(net_to_ent(uVar30), iParam0, get_ped_bone_index(iParam0, 28422), vVar28, vVar29, 1, 0, 0, 0, 2, 1);
           Var31.imm_4 = 1065353216;
         Var31.imm_5 = 1065353216;
         Var31.imm_9 = 1065353216;
         Var31.imm_10 = 1065353216;
            Var31.imm_14 = 1065353216;
            Var31.imm_15 = 1065353216;
            Var31.imm_17 = 1040187392;
            Var31.imm_18 = 1040187392;
            Var31.imm_19 = -1;
            Var32.imm_4 = 1065353216;
         Var32.imm_5 = 1065353216;
         Var32.imm_9 = 1065353216;
         Var32.imm_10 = 1065353216;
            Var32.imm_14 = 1065353216;
            Var32.imm_15 = 1065353216;
            Var32.imm_17 = 1040187392;
            Var32.imm_18 = 1040187392;
            Var32.imm_19 = -1;
            Var31 = 1;
            Var31.imm_1 = "weapons@misc@jerrycan@mp_male";
          Var31.imm_2 = "idle";
           Var31.imm_20 = 1048633;
           Var31.imm_4 = 0.5f;
           Var31.imm_16 = get_hash_key("BONEMASK_ARMONLY_R");
          task_scripted_animation(iParam0, &Var31, &Var32, &Var32, 0f, 0.25f);
          set_model_as_no_longer_needed(joaat("prop_ld_case_01"));
            remove_anim_dict("anim@heists@biolab@");
--]]
function TASK.TASK_SCRIPTED_ANIMATION(ped, priorityLowData, priorityMidData, priorityHighData, blendInDelta, blendOutDelta)
  native.invoke(
    Type.Void, 5414, false,
    arg(Type.Ped, ped),
    arg(Type.Int, priorityLowData),
    arg(Type.Int, priorityMidData),
    arg(Type.Int, priorityHighData),
    arg(Type.Float, blendInDelta),
    arg(Type.Float, blendOutDelta)
  )
end

-- void PLAY_ENTITY_SCRIPTED_ANIM(Entity entity, int* priorityLowData, int* priorityMidData, int* priorityHighData, float blendInDelta, float blendOutDelta) // 0x77A1EEC547E7FCF1
function TASK.PLAY_ENTITY_SCRIPTED_ANIM(entity, priorityLowData, priorityMidData, priorityHighData, blendInDelta, blendOutDelta)
  native.invoke(
    Type.Void, 5415, false,
    arg(Type.Entity, entity),
    arg(Type.Int, priorityLowData),
    arg(Type.Int, priorityMidData),
    arg(Type.Int, priorityHighData),
    arg(Type.Float, blendInDelta),
    arg(Type.Float, blendOutDelta)
  )
end

-- void STOP_ANIM_PLAYBACK(Entity entity, int priority, BOOL secondary) // 0xEE08C992D238C5D1
--[[
Looks like p1 may be a flag, still need to do some research, though.
--]]
function TASK.STOP_ANIM_PLAYBACK(entity, priority, secondary)
  native.invoke(
    Type.Void, 5416, false,
    arg(Type.Entity, entity),
    arg(Type.Int, priority),
    arg(Type.Bool, secondary)
  )
end

-- void SET_ANIM_WEIGHT(Entity entity, float weight, int priority, int index, BOOL secondary) // 0x207F1A47C0342F48
function TASK.SET_ANIM_WEIGHT(entity, weight, priority, index, secondary)
  native.invoke(
    Type.Void, 5417, false,
    arg(Type.Entity, entity),
    arg(Type.Float, weight),
    arg(Type.Int, priority),
    arg(Type.Int, index),
    arg(Type.Bool, secondary)
  )
end

-- void SET_ANIM_PHASE(Entity entity, float phase, int priority, BOOL secondary) // 0xDDF3CB5A0A4C0B49
function TASK.SET_ANIM_PHASE(entity, phase, priority, secondary)
  native.invoke(
    Type.Void, 5418, false,
    arg(Type.Entity, entity),
    arg(Type.Float, phase),
    arg(Type.Int, priority),
    arg(Type.Bool, secondary)
  )
end

-- void SET_ANIM_RATE(Entity entity, float rate, int priority, BOOL secondary) // 0x032D49C5E359C847
function TASK.SET_ANIM_RATE(entity, rate, priority, secondary)
  native.invoke(
    Type.Void, 5419, false,
    arg(Type.Entity, entity),
    arg(Type.Float, rate),
    arg(Type.Int, priority),
    arg(Type.Bool, secondary)
  )
end

-- void SET_ANIM_LOOPED(Entity entity, BOOL looped, int priority, BOOL secondary) // 0x70033C3CC29A1FF4
function TASK.SET_ANIM_LOOPED(entity, looped, priority, secondary)
  native.invoke(
    Type.Void, 5420, false,
    arg(Type.Entity, entity),
    arg(Type.Bool, looped),
    arg(Type.Int, priority),
    arg(Type.Bool, secondary)
  )
end

-- void TASK_PLAY_PHONE_GESTURE_ANIMATION(Ped ped, const char* animDict, const char* animation, const char* boneMaskType, float blendInDuration, float blendOutDuration, BOOL isLooping, BOOL holdLastFrame) // 0x8FBB6758B3B3E9EC
--[[
Example from the scripts:
TASK::TASK_PLAY_PHONE_GESTURE_ANIMATION(PLAYER::PLAYER_PED_ID(), v_3, v_2, v_4, 0.25, 0.25, 0, 0);

=========================================================
^^ No offense, but Idk how that would really help anyone.

As for the animDict & animation, they're both store in a global in all 5 scripts. So if anyone would be so kind as to read that global and comment what strings they use. Thanks.

Known boneMaskTypes'
"BONEMASK_HEADONLY"
"BONEMASK_HEAD_NECK_AND_ARMS"
"BONEMASK_HEAD_NECK_AND_L_ARM"
"BONEMASK_HEAD_NECK_AND_R_ARM"

p4 known args - 0.0f, 0.5f, 0.25f
p5 known args - 0.0f, 0.25f
p6 known args - 1 if a global if check is passed.
p7 known args - 1 if a global if check is passed.

The values found above, I found within the 5 scripts this is ever called in. (fmmc_launcher, fm_deathmatch_controller, fm_impromptu_dm_controller, fm_mission_controller, and freemode).
=========================================================

Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
--]]
function TASK.TASK_PLAY_PHONE_GESTURE_ANIMATION(ped, animDict, animation, boneMaskType, blendInDuration, blendOutDuration, isLooping, holdLastFrame)
  native.invoke(
    Type.Void, 5421, false,
    arg(Type.Ped, ped),
    arg(Type.String, animDict),
    arg(Type.String, animation),
    arg(Type.String, boneMaskType),
    arg(Type.Float, blendInDuration),
    arg(Type.Float, blendOutDuration),
    arg(Type.Bool, isLooping),
    arg(Type.Bool, holdLastFrame)
  )
end

-- void TASK_STOP_PHONE_GESTURE_ANIMATION(Ped ped, float blendOutOverride) // 0x3FA00D4F4641BFAE
function TASK.TASK_STOP_PHONE_GESTURE_ANIMATION(ped, blendOutOverride)
  native.invoke(
    Type.Void, 5422, false,
    arg(Type.Ped, ped),
    arg(Type.Float, blendOutOverride)
  )
end

-- BOOL IS_PLAYING_PHONE_GESTURE_ANIM(Ped ped) // 0xB8EBB1E9D3588C10
function TASK.IS_PLAYING_PHONE_GESTURE_ANIM(ped)
  return native.invoke(
    Type.Bool, 5423, false,
    arg(Type.Ped, ped)
  )
end

-- float GET_PHONE_GESTURE_ANIM_CURRENT_TIME(Ped ped) // 0x47619ABE8B268C60
function TASK.GET_PHONE_GESTURE_ANIM_CURRENT_TIME(ped)
  return native.invoke(
    Type.Float, 5424, false,
    arg(Type.Ped, ped)
  )
end

-- float GET_PHONE_GESTURE_ANIM_TOTAL_TIME(Ped ped) // 0x1EE0F68A7C25DEC6
function TASK.GET_PHONE_GESTURE_ANIM_TOTAL_TIME(ped)
  return native.invoke(
    Type.Float, 5425, false,
    arg(Type.Ped, ped)
  )
end

-- void TASK_VEHICLE_PLAY_ANIM(Vehicle vehicle, const char* animationSet, const char* animationName) // 0x69F5C3BD0F3EBD89
--[[
Most probably plays a specific animation on vehicle. For example getting chop out of van etc...

Here's how its used - 

TASK::TASK_VEHICLE_PLAY_ANIM(l_325, "rcmnigel1b", "idle_speedo");

TASK::TASK_VEHICLE_PLAY_ANIM(l_556[0/*1*/], "missfra0_chop_drhome", "InCar_GetOutofBack_Speedo");

FYI : Speedo is the name of van in which chop was put in the mission.
--]]
function TASK.TASK_VEHICLE_PLAY_ANIM(vehicle, animationSet, animationName)
  native.invoke(
    Type.Void, 5426, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.String, animationSet),
    arg(Type.String, animationName)
  )
end

-- void TASK_LOOK_AT_COORD(Entity entity, float x, float y, float z, int duration, int flags, int priority) // 0x6FA46612594F7973
--[[
enum eScriptLookatFlags
{
	SLF_SLOW_TURN_RATE            = 1,    // turn the head toward the target slowly
	SLF_FAST_TURN_RATE            = 2,    // turn the head toward the target quickly
	SLF_EXTEND_YAW_LIMIT        = 4,    // wide yaw head limits
	SLF_EXTEND_PITCH_LIMIT        = 8,    // wide pitch head limit
	SLF_WIDEST_YAW_LIMIT        = 16,   // widest yaw head limit
	SLF_WIDEST_PITCH_LIMIT        = 32,   // widest pitch head limit
	SLF_NARROW_YAW_LIMIT        = 64,   // narrow yaw head limits
	SLF_NARROW_PITCH_LIMIT        = 128,  // narrow pitch head limit
	SLF_NARROWEST_YAW_LIMIT        = 256,  // narrowest yaw head limit
	SLF_NARROWEST_PITCH_LIMIT    = 512,  // narrowest pitch head limit
	SLF_USE_TORSO                = 1024, // use the torso aswell as the neck and head (currently disabled)
	SLF_WHILE_NOT_IN_FOV        = 2048, // keep tracking the target even if they are not in the hard coded FOV
	SLF_USE_CAMERA_FOCUS        = 4096, // use the camera as the target
	SLF_USE_EYES_ONLY            = 8192, // only track the target with the eyes  
	SLF_USE_LOOK_DIR            = 16384, // use information in look dir DOF
	SLF_FROM_SCRIPT                = 32768, // internal use only
	SLF_USE_REF_DIR_ABSOLUTE    = 65536  // use absolute reference direction mode for solver
};
--]]
function TASK.TASK_LOOK_AT_COORD(entity, x, y, z, duration, flags, priority)
  native.invoke(
    Type.Void, 5427, false,
    arg(Type.Entity, entity),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, duration),
    arg(Type.Int, flags),
    arg(Type.Int, priority)
  )
end

-- void TASK_LOOK_AT_ENTITY(Ped ped, Entity lookAt, int duration, int flags, int priority) // 0x69F4BE8C8CC4796C
--[[
For flags, please refer to TASK_LOOK_AT_COORD.
--]]
function TASK.TASK_LOOK_AT_ENTITY(ped, lookAt, duration, flags, priority)
  native.invoke(
    Type.Void, 5428, false,
    arg(Type.Ped, ped),
    arg(Type.Entity, lookAt),
    arg(Type.Int, duration),
    arg(Type.Int, flags),
    arg(Type.Int, priority)
  )
end

-- void TASK_CLEAR_LOOK_AT(Ped ped) // 0x0F804F1DB19B9689
function TASK.TASK_CLEAR_LOOK_AT(ped)
  native.invoke(
    Type.Void, 5429, false,
    arg(Type.Ped, ped)
  )
end

-- void OPEN_SEQUENCE_TASK(int* taskSequenceId) // 0xE8854A4326B9E12B
function TASK.OPEN_SEQUENCE_TASK(taskSequenceId)
  native.invoke(
    Type.Void, 5430, false,
    arg(Type.Int, taskSequenceId)
  )
end

-- void CLOSE_SEQUENCE_TASK(int taskSequenceId) // 0x39E72BC99E6360CB
function TASK.CLOSE_SEQUENCE_TASK(taskSequenceId)
  native.invoke(
    Type.Void, 5431, false,
    arg(Type.Int, taskSequenceId)
  )
end

-- void TASK_PERFORM_SEQUENCE(Ped ped, int taskSequenceId) // 0x5ABA3986D90D8A3B
function TASK.TASK_PERFORM_SEQUENCE(ped, taskSequenceId)
  native.invoke(
    Type.Void, 5432, false,
    arg(Type.Ped, ped),
    arg(Type.Int, taskSequenceId)
  )
end

-- void TASK_PERFORM_SEQUENCE_LOCALLY(Ped ped, int taskSequenceId) // 0x8C33220C8D78CA0D
function TASK.TASK_PERFORM_SEQUENCE_LOCALLY(ped, taskSequenceId)
  native.invoke(
    Type.Void, 5433, false,
    arg(Type.Ped, ped),
    arg(Type.Int, taskSequenceId)
  )
end

-- void CLEAR_SEQUENCE_TASK(int* taskSequenceId) // 0x3841422E9C488D8C
function TASK.CLEAR_SEQUENCE_TASK(taskSequenceId)
  native.invoke(
    Type.Void, 5434, false,
    arg(Type.Int, taskSequenceId)
  )
end

-- void SET_SEQUENCE_TO_REPEAT(int taskSequenceId, BOOL repeat) // 0x58C70CF3A41E4AE7
function TASK.SET_SEQUENCE_TO_REPEAT(taskSequenceId, repeat_)
  native.invoke(
    Type.Void, 5435, false,
    arg(Type.Int, taskSequenceId),
    arg(Type.Bool, repeat_)
  )
end

-- int GET_SEQUENCE_PROGRESS(Ped ped) // 0x00A9010CFE1E3533
--[[
returned values:
0 to 7 = task that's currently in progress, 0 meaning the first one.
-1 no task sequence in progress.
--]]
function TASK.GET_SEQUENCE_PROGRESS(ped)
  return native.invoke(
    Type.Int, 5436, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL GET_IS_TASK_ACTIVE(Ped ped, int taskIndex) // 0xB0760331C7AA4155
--[[
Task index enum: https://alloc8or.re/gta5/doc/enums/eTaskTypeIndex.txt
--]]
function TASK.GET_IS_TASK_ACTIVE(ped, taskIndex)
  return native.invoke(
    Type.Bool, 5437, false,
    arg(Type.Ped, ped),
    arg(Type.Int, taskIndex)
  )
end

-- int GET_SCRIPT_TASK_STATUS(Ped ped, Hash taskHash) // 0x77F1BEB8863288D5
--[[
Gets the status of a script-assigned task.
taskHash: https://alloc8or.re/gta5/doc/enums/eScriptTaskHash.txt
--]]
function TASK.GET_SCRIPT_TASK_STATUS(ped, taskHash)
  return native.invoke(
    Type.Int, 5438, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, taskHash)
  )
end

-- int GET_ACTIVE_VEHICLE_MISSION_TYPE(Vehicle vehicle) // 0x534AEBA6E5ED4CAB
--[[
https://alloc8or.re/gta5/doc/enums/eVehicleMissionType.txt
--]]
function TASK.GET_ACTIVE_VEHICLE_MISSION_TYPE(vehicle)
  return native.invoke(
    Type.Int, 5439, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void TASK_LEAVE_ANY_VEHICLE(Ped ped, int delayTime, int flags) // 0x504D54DF3F6F2247
--[[
Flags are the same flags used in TASK_LEAVE_VEHICLE
--]]
function TASK.TASK_LEAVE_ANY_VEHICLE(ped, delayTime, flags)
  native.invoke(
    Type.Void, 5440, false,
    arg(Type.Ped, ped),
    arg(Type.Int, delayTime),
    arg(Type.Int, flags)
  )
end

-- void TASK_AIM_GUN_SCRIPTED(Ped ped, Hash scriptTask, BOOL disableBlockingClip, BOOL instantBlendToAim) // 0x7A192BE16D373D00
function TASK.TASK_AIM_GUN_SCRIPTED(ped, scriptTask, disableBlockingClip, instantBlendToAim)
  native.invoke(
    Type.Void, 5441, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, scriptTask),
    arg(Type.Bool, disableBlockingClip),
    arg(Type.Bool, instantBlendToAim)
  )
end

-- void TASK_AIM_GUN_SCRIPTED_WITH_TARGET(Ped ped, Ped target, float x, float y, float z, int gunTaskType, BOOL disableBlockingClip, BOOL forceAim) // 0x8605AF0DE8B3A5AC
function TASK.TASK_AIM_GUN_SCRIPTED_WITH_TARGET(ped, target, x, y, z, gunTaskType, disableBlockingClip, forceAim)
  native.invoke(
    Type.Void, 5442, false,
    arg(Type.Ped, ped),
    arg(Type.Ped, target),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, gunTaskType),
    arg(Type.Bool, disableBlockingClip),
    arg(Type.Bool, forceAim)
  )
end

-- void UPDATE_TASK_AIM_GUN_SCRIPTED_TARGET(Ped ped, Ped target, float x, float y, float z, BOOL disableBlockingClip) // 0x9724FB59A3E72AD0
function TASK.UPDATE_TASK_AIM_GUN_SCRIPTED_TARGET(ped, target, x, y, z, disableBlockingClip)
  native.invoke(
    Type.Void, 5443, false,
    arg(Type.Ped, ped),
    arg(Type.Ped, target),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Bool, disableBlockingClip)
  )
end

-- const char* GET_CLIP_SET_FOR_SCRIPTED_GUN_TASK(int gunTaskType) // 0x3A8CADC7D37AACC5
function TASK.GET_CLIP_SET_FOR_SCRIPTED_GUN_TASK(gunTaskType)
  return native.invoke(
    Type.Const char, 5444, false,
    arg(Type.Int, gunTaskType)
  )
end

-- void TASK_AIM_GUN_AT_ENTITY(Ped ped, Entity entity, int duration, BOOL instantBlendToAim) // 0x9B53BB6E8943AF53
--[[
duration: the amount of time in milliseconds to do the task.  -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
--]]
function TASK.TASK_AIM_GUN_AT_ENTITY(ped, entity, duration, instantBlendToAim)
  native.invoke(
    Type.Void, 5445, false,
    arg(Type.Ped, ped),
    arg(Type.Entity, entity),
    arg(Type.Int, duration),
    arg(Type.Bool, instantBlendToAim)
  )
end

-- void TASK_TURN_PED_TO_FACE_ENTITY(Ped ped, Entity entity, int duration) // 0x5AD23D40115353AC
--[[
duration: the amount of time in milliseconds to do the task. -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
--]]
function TASK.TASK_TURN_PED_TO_FACE_ENTITY(ped, entity, duration)
  native.invoke(
    Type.Void, 5446, false,
    arg(Type.Ped, ped),
    arg(Type.Entity, entity),
    arg(Type.Int, duration)
  )
end

-- void TASK_AIM_GUN_AT_COORD(Ped ped, float x, float y, float z, int time, BOOL instantBlendToAim, BOOL playAnimIntro) // 0x6671F3EEC681BDA1
function TASK.TASK_AIM_GUN_AT_COORD(ped, x, y, z, time, instantBlendToAim, playAnimIntro)
  native.invoke(
    Type.Void, 5447, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, time),
    arg(Type.Bool, instantBlendToAim),
    arg(Type.Bool, playAnimIntro)
  )
end

-- void TASK_SHOOT_AT_COORD(Ped ped, float x, float y, float z, int duration, Hash firingPattern) // 0x46A6CC01E0826106
--[[
Firing Pattern Hash Information: https://pastebin.com/Px036isB
--]]
function TASK.TASK_SHOOT_AT_COORD(ped, x, y, z, duration, firingPattern)
  native.invoke(
    Type.Void, 5448, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, duration),
    arg(Type.Hash, firingPattern)
  )
end

-- void TASK_SHUFFLE_TO_NEXT_VEHICLE_SEAT(Ped ped, Vehicle vehicle, BOOL useAlternateShuffle) // 0x7AA80209BDA643EB
--[[
Makes the specified ped shuffle to the next vehicle seat.
The ped MUST be in a vehicle and the vehicle parameter MUST be the ped's current vehicle.
--]]
function TASK.TASK_SHUFFLE_TO_NEXT_VEHICLE_SEAT(ped, vehicle, useAlternateShuffle)
  native.invoke(
    Type.Void, 5449, false,
    arg(Type.Ped, ped),
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, useAlternateShuffle)
  )
end

-- void CLEAR_PED_TASKS(Ped ped) // 0xE1EF3C1216AFF2CD
function TASK.CLEAR_PED_TASKS(ped)
  native.invoke(
    Type.Void, 5450, false,
    arg(Type.Ped, ped)
  )
end

-- void CLEAR_PED_SECONDARY_TASK(Ped ped) // 0x176CECF6F920D707
function TASK.CLEAR_PED_SECONDARY_TASK(ped)
  native.invoke(
    Type.Void, 5451, false,
    arg(Type.Ped, ped)
  )
end

-- void TASK_EVERYONE_LEAVE_VEHICLE(Vehicle vehicle) // 0x7F93691AB4B92272
function TASK.TASK_EVERYONE_LEAVE_VEHICLE(vehicle)
  native.invoke(
    Type.Void, 5452, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void TASK_GOTO_ENTITY_OFFSET(Ped ped, Entity entity, int time, float seekRadius, float seekAngleDeg, float moveBlendRatio, int gotoEntityOffsetFlags) // 0xE39B4FF4FDEBDE27
--[[
enum ESEEK_ENTITY_OFFSET_FLAGS
{
	ESEEK_OFFSET_ORIENTATES_WITH_ENTITY = 0x01,
	ESEEK_KEEP_TO_PAVEMENTS = 0x02
};
--]]
function TASK.TASK_GOTO_ENTITY_OFFSET(ped, entity, time, seekRadius, seekAngleDeg, moveBlendRatio, gotoEntityOffsetFlags)
  native.invoke(
    Type.Void, 5453, false,
    arg(Type.Ped, ped),
    arg(Type.Entity, entity),
    arg(Type.Int, time),
    arg(Type.Float, seekRadius),
    arg(Type.Float, seekAngleDeg),
    arg(Type.Float, moveBlendRatio),
    arg(Type.Int, gotoEntityOffsetFlags)
  )
end

-- void TASK_GOTO_ENTITY_OFFSET_XY(Ped ped, Entity entity, int duration, float targetRadius, float offsetX, float offsetY, float moveBlendRatio, int gotoEntityOffsetFlags) // 0x338E7EF52B6095A9
function TASK.TASK_GOTO_ENTITY_OFFSET_XY(ped, entity, duration, targetRadius, offsetX, offsetY, moveBlendRatio, gotoEntityOffsetFlags)
  native.invoke(
    Type.Void, 5454, false,
    arg(Type.Ped, ped),
    arg(Type.Entity, entity),
    arg(Type.Int, duration),
    arg(Type.Float, targetRadius),
    arg(Type.Float, offsetX),
    arg(Type.Float, offsetY),
    arg(Type.Float, moveBlendRatio),
    arg(Type.Int, gotoEntityOffsetFlags)
  )
end

-- void TASK_TURN_PED_TO_FACE_COORD(Ped ped, float x, float y, float z, int duration) // 0x1DDA930A0AC38571
--[[
duration in milliseconds
--]]
function TASK.TASK_TURN_PED_TO_FACE_COORD(ped, x, y, z, duration)
  native.invoke(
    Type.Void, 5455, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, duration)
  )
end

-- void TASK_VEHICLE_TEMP_ACTION(Ped driver, Vehicle vehicle, int action, int time) // 0xC429DCEEB339E129
--[[
'1 - brake
'3 - brake + reverse
'4 - turn left 90 + braking
'5 - turn right 90 + braking
'6 - brake strong (handbrake?) until time ends
'7 - turn left + accelerate
'8 - turn right + accelerate
'9 - weak acceleration
'10 - turn left + restore wheel pos to center in the end
'11 - turn right + restore wheel pos to center in the end
'13 - turn left + go reverse
'14 - turn left + go reverse
'16 - crash the game after like 2 seconds :)
'17 - keep actual state, game crashed after few tries
'18 - game crash
'19 - strong brake + turn left/right
'20 - weak brake + turn left then turn right
'21 - weak brake + turn right then turn left
'22 - brake + reverse
'23 - accelerate fast
'24 - brake
'25 - brake turning left then when almost stopping it turns left more
'26 - brake turning right then when almost stopping it turns right more
'27 - brake until car stop or until time ends
'28 - brake + strong reverse acceleration
'30 - performs a burnout (brake until stop + brake and accelerate)
'31 - accelerate + handbrake
'32 - accelerate very strong

Seems to be this:
Works on NPCs, but overrides their current task. If inside a task sequence (and not being the last task), "time" will work, otherwise the task will be performed forever until tasked with something else
--]]
function TASK.TASK_VEHICLE_TEMP_ACTION(driver, vehicle, action, time)
  native.invoke(
    Type.Void, 5456, false,
    arg(Type.Ped, driver),
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, action),
    arg(Type.Int, time)
  )
end

-- void TASK_VEHICLE_MISSION(Ped driver, Vehicle vehicle, Vehicle vehicleTarget, int missionType, float cruiseSpeed, int drivingStyle, float targetReached, float straightLineDistance, BOOL DriveAgainstTraffic) // 0x659427E0EF36BCDE
--[[
missionType: https://alloc8or.re/gta5/doc/enums/eVehicleMissionType.txt
--]]
function TASK.TASK_VEHICLE_MISSION(driver, vehicle, vehicleTarget, missionType, cruiseSpeed, drivingStyle, targetReached, straightLineDistance, DriveAgainstTraffic)
  native.invoke(
    Type.Void, 5457, false,
    arg(Type.Ped, driver),
    arg(Type.Vehicle, vehicle),
    arg(Type.Vehicle, vehicleTarget),
    arg(Type.Int, missionType),
    arg(Type.Float, cruiseSpeed),
    arg(Type.Int, drivingStyle),
    arg(Type.Float, targetReached),
    arg(Type.Float, straightLineDistance),
    arg(Type.Bool, DriveAgainstTraffic)
  )
end

-- void TASK_VEHICLE_MISSION_PED_TARGET(Ped ped, Vehicle vehicle, Ped pedTarget, int missionType, float maxSpeed, int drivingStyle, float minDistance, float straightLineDistance, BOOL DriveAgainstTraffic) // 0x9454528DF15D657A
--[[
See TASK_VEHICLE_MISSION
--]]
function TASK.TASK_VEHICLE_MISSION_PED_TARGET(ped, vehicle, pedTarget, missionType, maxSpeed, drivingStyle, minDistance, straightLineDistance, DriveAgainstTraffic)
  native.invoke(
    Type.Void, 5458, false,
    arg(Type.Ped, ped),
    arg(Type.Vehicle, vehicle),
    arg(Type.Ped, pedTarget),
    arg(Type.Int, missionType),
    arg(Type.Float, maxSpeed),
    arg(Type.Int, drivingStyle),
    arg(Type.Float, minDistance),
    arg(Type.Float, straightLineDistance),
    arg(Type.Bool, DriveAgainstTraffic)
  )
end

-- void TASK_VEHICLE_MISSION_COORS_TARGET(Ped ped, Vehicle vehicle, float x, float y, float z, int mission, float cruiseSpeed, int drivingStyle, float targetReached, float straightLineDistance, BOOL DriveAgainstTraffic) // 0xF0AF20AA7731F8C3
--[[
See TASK_VEHICLE_MISSION
--]]
function TASK.TASK_VEHICLE_MISSION_COORS_TARGET(ped, vehicle, x, y, z, mission, cruiseSpeed, drivingStyle, targetReached, straightLineDistance, DriveAgainstTraffic)
  native.invoke(
    Type.Void, 5459, false,
    arg(Type.Ped, ped),
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, mission),
    arg(Type.Float, cruiseSpeed),
    arg(Type.Int, drivingStyle),
    arg(Type.Float, targetReached),
    arg(Type.Float, straightLineDistance),
    arg(Type.Bool, DriveAgainstTraffic)
  )
end

-- void TASK_VEHICLE_ESCORT(Ped ped, Vehicle vehicle, Vehicle targetVehicle, int mode, float speed, int drivingStyle, float minDistance, int minHeightAboveTerrain, float noRoadsDistance) // 0x0FA6E4B75F302400
--[[
Makes a ped follow the targetVehicle with <minDistance> in between.

note: minDistance is ignored if drivingstyle is avoiding traffic, but Rushed is fine.

Mode: The mode defines the relative position to the targetVehicle. The ped will try to position its vehicle there.
-1 = behind
0 = ahead
1 = left
2 = right
3 = back left
4 = back right

if the target is closer than noRoadsDistance, the driver will ignore pathing/roads and follow you directly.

Driving Styles guide: gtaforums.com/topic/822314-guide-driving-styles/
--]]
function TASK.TASK_VEHICLE_ESCORT(ped, vehicle, targetVehicle, mode, speed, drivingStyle, minDistance, minHeightAboveTerrain, noRoadsDistance)
  native.invoke(
    Type.Void, 5460, false,
    arg(Type.Ped, ped),
    arg(Type.Vehicle, vehicle),
    arg(Type.Vehicle, targetVehicle),
    arg(Type.Int, mode),
    arg(Type.Float, speed),
    arg(Type.Int, drivingStyle),
    arg(Type.Float, minDistance),
    arg(Type.Int, minHeightAboveTerrain),
    arg(Type.Float, noRoadsDistance)
  )
end

-- void TASK_VEHICLE_FOLLOW(Ped driver, Vehicle vehicle, Entity targetEntity, float speed, int drivingStyle, int minDistance) // 0xFC545A9F0626E3B6
--[[
Makes a ped in a vehicle follow an entity (ped, vehicle, etc.)

drivingStyle: http://gtaforums.com/topic/822314-guide-driving-styles/
--]]
function TASK.TASK_VEHICLE_FOLLOW(driver, vehicle, targetEntity, speed, drivingStyle, minDistance)
  native.invoke(
    Type.Void, 5461, false,
    arg(Type.Ped, driver),
    arg(Type.Vehicle, vehicle),
    arg(Type.Entity, targetEntity),
    arg(Type.Float, speed),
    arg(Type.Int, drivingStyle),
    arg(Type.Int, minDistance)
  )
end

-- void TASK_VEHICLE_CHASE(Ped driver, Entity targetEnt) // 0x3C08A8E30363B353
--[[
chases targetEnt fast and aggressively
--
Makes ped (needs to be in vehicle) chase targetEnt.
--]]
function TASK.TASK_VEHICLE_CHASE(driver, targetEnt)
  native.invoke(
    Type.Void, 5462, false,
    arg(Type.Ped, driver),
    arg(Type.Entity, targetEnt)
  )
end

-- void TASK_VEHICLE_HELI_PROTECT(Ped pilot, Vehicle vehicle, Entity entityToFollow, float targetSpeed, int drivingFlags, float radius, int altitude, int heliFlags) // 0x1E09C32048FEFD1C
--[[
pilot, vehicle and altitude are rather self-explanatory.

p4: is unused variable in the function.

entityToFollow: you can provide a Vehicle entity or a Ped entity, the heli will protect them.

'targetSpeed':  The pilot will dip the nose AS MUCH AS POSSIBLE so as to reach this value AS FAST AS POSSIBLE.  As such, you'll want to modulate it as opposed to calling it via a hard-wired, constant #.

'radius' isn't just "stop within radius of X of target" like with ground vehicles.  In this case, the pilot will fly an entire circle around 'radius' and continue to do so.

NOT CONFIRMED:  p7 appears to be a FlyingStyle enum.  Still investigating it as of this writing, but playing around with values here appears to result in different -behavior- as opposed to offsetting coordinates, altitude, target speed, etc.

NOTE: If the pilot finds enemies, it will engage them until it kills them, but will return to protect the ped/vehicle given shortly thereafter.
--]]
function TASK.TASK_VEHICLE_HELI_PROTECT(pilot, vehicle, entityToFollow, targetSpeed, drivingFlags, radius, altitude, heliFlags)
  native.invoke(
    Type.Void, 5463, false,
    arg(Type.Ped, pilot),
    arg(Type.Vehicle, vehicle),
    arg(Type.Entity, entityToFollow),
    arg(Type.Float, targetSpeed),
    arg(Type.Int, drivingFlags),
    arg(Type.Float, radius),
    arg(Type.Int, altitude),
    arg(Type.Int, heliFlags)
  )
end

-- void SET_TASK_VEHICLE_CHASE_BEHAVIOR_FLAG(Ped ped, int flag, BOOL set) // 0xCC665AAC360D31E7
--[[
Flag 8: Medium-aggressive boxing tactic with a bit of PIT
Flag 1: Aggressive ramming of suspect
Flag 2: Ram attempts
Flag 32: Stay back from suspect, no tactical contact. Convoy-like.
Flag 16: Ramming, seems to be slightly less aggressive than 1-2.
--]]
function TASK.SET_TASK_VEHICLE_CHASE_BEHAVIOR_FLAG(ped, flag, set)
  native.invoke(
    Type.Void, 5464, false,
    arg(Type.Ped, ped),
    arg(Type.Int, flag),
    arg(Type.Bool, set)
  )
end

-- void SET_TASK_VEHICLE_CHASE_IDEAL_PURSUIT_DISTANCE(Ped ped, float distance) // 0x639B642FACBE4EDD
function TASK.SET_TASK_VEHICLE_CHASE_IDEAL_PURSUIT_DISTANCE(ped, distance)
  native.invoke(
    Type.Void, 5465, false,
    arg(Type.Ped, ped),
    arg(Type.Float, distance)
  )
end

-- void TASK_HELI_CHASE(Ped pilot, Entity entityToFollow, float x, float y, float z) // 0xAC83B1DB38D0ADA0
--[[
Ped pilot should be in a heli.
EntityToFollow can be a vehicle or Ped.

x,y,z appear to be how close to the EntityToFollow the heli should be. Scripts use 0.0, 0.0, 80.0. Then the heli tries to position itself 80 units above the EntityToFollow. If you reduce it to -5.0, it tries to go below (if the EntityToFollow is a heli or plane)


NOTE: If the pilot finds enemies, it will engage them, then remain there idle, not continuing to chase the Entity given.
--]]
function TASK.TASK_HELI_CHASE(pilot, entityToFollow, x, y, z)
  native.invoke(
    Type.Void, 5466, false,
    arg(Type.Ped, pilot),
    arg(Type.Entity, entityToFollow),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void TASK_PLANE_CHASE(Ped pilot, Entity entityToFollow, float x, float y, float z) // 0x2D2386F273FF7A25
function TASK.TASK_PLANE_CHASE(pilot, entityToFollow, x, y, z)
  native.invoke(
    Type.Void, 5467, false,
    arg(Type.Ped, pilot),
    arg(Type.Entity, entityToFollow),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void TASK_PLANE_LAND(Ped pilot, Vehicle plane, float runwayStartX, float runwayStartY, float runwayStartZ, float runwayEndX, float runwayEndY, float runwayEndZ) // 0xBF19721FA34D32C0
function TASK.TASK_PLANE_LAND(pilot, plane, runwayStartX, runwayStartY, runwayStartZ, runwayEndX, runwayEndY, runwayEndZ)
  native.invoke(
    Type.Void, 5468, false,
    arg(Type.Ped, pilot),
    arg(Type.Vehicle, plane),
    arg(Type.Float, runwayStartX),
    arg(Type.Float, runwayStartY),
    arg(Type.Float, runwayStartZ),
    arg(Type.Float, runwayEndX),
    arg(Type.Float, runwayEndY),
    arg(Type.Float, runwayEndZ)
  )
end

-- void CLEAR_DEFAULT_PRIMARY_TASK(Ped ped) // 0x6100B3CEFD43452E
function TASK.CLEAR_DEFAULT_PRIMARY_TASK(ped)
  native.invoke(
    Type.Void, 5469, false,
    arg(Type.Ped, ped)
  )
end

-- void CLEAR_PRIMARY_VEHICLE_TASK(Vehicle vehicle) // 0xDBBC7A2432524127
--[[
This native is very useful when switching the player to a ped inside a vehicle that has a task assigned prior to the player switch.
It is necessary to clear the ped's tasks AND call this native with the vehicle the player is switching into in order to allow the player to control the vehicle after the player switches.
--]]
function TASK.CLEAR_PRIMARY_VEHICLE_TASK(vehicle)
  native.invoke(
    Type.Void, 5470, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void CLEAR_VEHICLE_CRASH_TASK(Vehicle vehicle) // 0x53DDC75BC3AC0A90
function TASK.CLEAR_VEHICLE_CRASH_TASK(vehicle)
  native.invoke(
    Type.Void, 5471, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void TASK_PLANE_GOTO_PRECISE_VTOL(Ped ped, Vehicle vehicle, float x, float y, float z, int flightHeight, int minHeightAboveTerrain, BOOL useDesiredOrientation, float desiredOrientation, BOOL autopilot) // 0xF7F9DCCA89E7505B
function TASK.TASK_PLANE_GOTO_PRECISE_VTOL(ped, vehicle, x, y, z, flightHeight, minHeightAboveTerrain, useDesiredOrientation, desiredOrientation, autopilot)
  native.invoke(
    Type.Void, 5472, false,
    arg(Type.Ped, ped),
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, flightHeight),
    arg(Type.Int, minHeightAboveTerrain),
    arg(Type.Bool, useDesiredOrientation),
    arg(Type.Float, desiredOrientation),
    arg(Type.Bool, autopilot)
  )
end

-- void TASK_SUBMARINE_GOTO_AND_STOP(Ped ped, Vehicle submarine, float x, float y, float z, BOOL autopilot) // 0xC22B40579A498CA4
--[[
Used in am_vehicle_spawn.ysc and am_mp_submarine.ysc.

p0 is always 0, p5 is always 1

p1 is the vehicle handle of the submarine. Submarine must have a driver, but the ped handle is not passed to the native.

Speed can be set by calling SET_DRIVE_TASK_CRUISE_SPEED after
--]]
function TASK.TASK_SUBMARINE_GOTO_AND_STOP(ped, submarine, x, y, z, autopilot)
  native.invoke(
    Type.Void, 5473, false,
    arg(Type.Ped, ped),
    arg(Type.Vehicle, submarine),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Bool, autopilot)
  )
end

-- void TASK_HELI_MISSION(Ped pilot, Vehicle aircraft, Vehicle targetVehicle, Ped targetPed, float destinationX, float destinationY, float destinationZ, int missionFlag, float maxSpeed, float radius, float targetHeading, int maxHeight, int minHeight, float slowDownDistance, int behaviorFlags) // 0xDAD029E187A2BEB4
--[[
Must have targetVehicle, targetPed, OR destination X/Y/Z set
Will follow targeted vehicle/ped, or fly to destination
Set whichever is not being used to 0


Mission mode type:
 - 4, 7: Forces heli to snap to the heading if set, flies to destination or tracks specified entity (mode 4 only works for coordinates, 7 works for coordinates OR ped/vehicle)
 - 6: Attacks the target ped/vehicle with mounted weapons. If radius is set, will maintain that distance from target.
 - 8: Makes the heli flee from the ped/vehicle/coordinate
 - 9: Circles around target ped/vehicle, snaps to angle if set. Behavior flag (last parameter) of 2048 switches from counter-clockwise to clockwise circling. Does not work with coordinate destination.
 - 10, 11: Follows ped/vehicle target and imitates target heading. Only works with ped/vehicle target, not coord target
 - 19: Heli lands at specified coordinate, ignores heading (lands facing whatever direction it is facing when the task is started)
 - 20: Makes the heli land when near target ped. It won't resume chasing.
 - 21: Emulates a helicopter crash
 - 23: makes the heli circle erratically around ped


Heli will fly at maxSpeed (up to actual maximum speed defined by the model's handling config)
You can use SET_DRIVE_TASK_CRUISE_SPEED to modulate the speed based on distance to the target without having to re-invoke the task native. Setting to 8.0 when close to the destination results in a much smoother approach.

If minHeight and maxHeight are set, heli will fly between those specified elevations, relative to ground level and any obstructions/buildings below. You can specify -1 for either if you only want to specify one. Usually it is easiest to leave maxHeight at -1, and specify a reasonable minHeight to ensure clearance over any obstacles. Note this MUST be passed as an INT, not a FLOAT. 

Radius affects how closely the heli will follow tracked ped/vehicle, and when circling (mission type 9) sets the radius (in meters) that it will circle the target from

Heading is -1.0 for default behavior, which will point the nose of the helicopter towards the destination. Set a heading and the heli will lock to that direction when near its destination/target, but may still turn towards the destination when flying at higher speed from a further distance.

Behavior Flags is a bitwise value that modifies the AI behavior. Not clear what all flags do, but here are some guesses/notes:
   1: Forces heading to face E
   2: Unknown
   4: Tight circles around coordinate destination
   8: Unknown
  16: Circles around coordinate destination facing towards destination
  32: Flys to normally, then lands at coordinate destination and stays on the ground (using mission type 4)
  64: Ignores obstacles when flying, will follow at specified minHeight above ground level but will not avoid buildings, vehicles, etc.
 128: Unknown
 256: Unknown
 512: Unknown
1024: Unknown 
2048: Reverses direction of circling (mission type 9) to clockwise
4096: Hugs closer to the ground, maintains minHeight from ground generally, but barely clears buildings and dips down more between buildings instead of taking a more efficient/safe route
8192: Unknown

Unk3 is a float value, you may see -1082130432 for this value in decompiled native scripts, this is the equivalent to -1.0f. Seems to affect acceleration/aggressiveness, but not sure exactly how it works. Higher value seems to result in lower acceleration/less aggressive flying. Almost always -1.0 in native scripts, occasionally 20.0 or 50.0. Setting to 400.0 seems to work well for making the pilot not overshoot the destination when using coordinate destination.

Notes updated by PNWParksFan, May 2021

--]]
function TASK.TASK_HELI_MISSION(pilot, aircraft, targetVehicle, targetPed, destinationX, destinationY, destinationZ, missionFlag, maxSpeed, radius, targetHeading, maxHeight, minHeight, slowDownDistance, behaviorFlags)
  native.invoke(
    Type.Void, 5474, false,
    arg(Type.Ped, pilot),
    arg(Type.Vehicle, aircraft),
    arg(Type.Vehicle, targetVehicle),
    arg(Type.Ped, targetPed),
    arg(Type.Float, destinationX),
    arg(Type.Float, destinationY),
    arg(Type.Float, destinationZ),
    arg(Type.Int, missionFlag),
    arg(Type.Float, maxSpeed),
    arg(Type.Float, radius),
    arg(Type.Float, targetHeading),
    arg(Type.Int, maxHeight),
    arg(Type.Int, minHeight),
    arg(Type.Float, slowDownDistance),
    arg(Type.Int, behaviorFlags)
  )
end

-- void TASK_HELI_ESCORT_HELI(Ped pilot, Vehicle heli1, Vehicle heli2, float offsetX, float offsetY, float offsetZ) // 0xB385523325077210
function TASK.TASK_HELI_ESCORT_HELI(pilot, heli1, heli2, offsetX, offsetY, offsetZ)
  native.invoke(
    Type.Void, 5475, false,
    arg(Type.Ped, pilot),
    arg(Type.Vehicle, heli1),
    arg(Type.Vehicle, heli2),
    arg(Type.Float, offsetX),
    arg(Type.Float, offsetY),
    arg(Type.Float, offsetZ)
  )
end

-- void TASK_PLANE_MISSION(Ped pilot, Vehicle aircraft, Vehicle targetVehicle, Ped targetPed, float destinationX, float destinationY, float destinationZ, int missionFlag, float angularDrag, float targetReached, float targetHeading, float maxZ, float minZ, BOOL precise) // 0x23703CD154E83B88
--[[
EXAMPLE USAGE:

Fly around target (Precautiously, keeps high altitude):
Function.Call(Hash.TASK_PLANE_MISSION, pilot, selectedAirplane, 0, 0, Target.X, Target.Y, Target.Z, 4, 100f, 0f, 90f, 0, 200f);

Fly around target (Dangerously, keeps VERY low altitude):
Function.Call(Hash.TASK_PLANE_MISSION, pilot, selectedAirplane, 0, 0, Target.X, Target.Y, Target.Z, 4, 100f, 0f, 90f, 0, -500f);

Fly directly into target:
Function.Call(Hash.TASK_PLANE_MISSION, pilot, selectedAirplane, 0, 0, Target.X, Target.Y, Target.Z, 4, 100f, 0f, 90f, 0, -5000f);

EXPANDED INFORMATION FOR ADVANCED USAGE (custom pilot)

'physicsSpeed': (THIS IS NOT YOUR ORDINARY SPEED PARAMETER: READ!!)
Think of this -first- as a radius value, not a true speed value.  The ACTUAL effective speed of the plane will be that of the maximum speed permissible to successfully fly in a -circle- with a radius of 'physicsSpeed'.  This also means that the plane must complete a circle before it can begin its "bombing run", its straight line pass towards the target.  p9 appears to influence the angle at which a "bombing run" begins, although I can't confirm yet.

VERY IMPORTANT: A "bombing run" will only occur if a plane can successfully determine a possible navigable route (the slower the value of 'physicsSpeed', the more precise the pilot can be due to less influence of physics on flightpath).  Otherwise, the pilot will continue to patrol around Destination (be it a dynamic Entity position vector or a fixed world coordinate vector.)

0 = Plane's physics are almost entirely frozen, plane appears to "orbit" around precise destination point
1-299 = Blend of "frozen, small radius" vs. normal vs. "accelerated, hyperfast, large radius"
300+ =  Vehicle behaves entirely like a normal gameplay plane.

'patrolBlend' (The lower the value, the more the Destination is treated as a "fly AT" rather than a "fly AROUND point".)

Scenario: Destination is an Entity on ground level, wide open field
-5000 = Pilot kamikazes directly into Entity
-1000 = Pilot flies extremely low -around- Entity, very prone to crashing
-200 = Pilot flies lower than average around Entity.
0 = Pilot flies around Entity, normal altitude
200 = Pilot flies an extra eighty units or so higher than 0 while flying around Destination (this doesn't seem to correlate directly into distance units.)

-- Valid mission types found in the exe: --

0 = None
1 = Unk
2 = CTaskVehicleRam
3 = CTaskVehicleBlock
4 = CTaskVehicleGoToPlane
5 = CTaskVehicleStop
6 = CTaskVehicleAttack
7 = CTaskVehicleFollow
8 = CTaskVehicleFleeAirborne
9= CTaskVehicleCircle
10 = CTaskVehicleEscort
15 = CTaskVehicleFollowRecording
16 = CTaskVehiclePoliceBehaviour
17 = CTaskVehicleCrash
--]]
function TASK.TASK_PLANE_MISSION(pilot, aircraft, targetVehicle, targetPed, destinationX, destinationY, destinationZ, missionFlag, angularDrag, targetReached, targetHeading, maxZ, minZ, precise)
  native.invoke(
    Type.Void, 5476, false,
    arg(Type.Ped, pilot),
    arg(Type.Vehicle, aircraft),
    arg(Type.Vehicle, targetVehicle),
    arg(Type.Ped, targetPed),
    arg(Type.Float, destinationX),
    arg(Type.Float, destinationY),
    arg(Type.Float, destinationZ),
    arg(Type.Int, missionFlag),
    arg(Type.Float, angularDrag),
    arg(Type.Float, targetReached),
    arg(Type.Float, targetHeading),
    arg(Type.Float, maxZ),
    arg(Type.Float, minZ),
    arg(Type.Bool, precise)
  )
end

-- void TASK_PLANE_TAXI(Ped pilot, Vehicle aircraft, float x, float y, float z, float cruiseSpeed, float targetReached) // 0x92C360B5F15D2302
function TASK.TASK_PLANE_TAXI(pilot, aircraft, x, y, z, cruiseSpeed, targetReached)
  native.invoke(
    Type.Void, 5477, false,
    arg(Type.Ped, pilot),
    arg(Type.Vehicle, aircraft),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, cruiseSpeed),
    arg(Type.Float, targetReached)
  )
end

-- void TASK_BOAT_MISSION(Ped pedDriver, Vehicle vehicle, Vehicle targetVehicle, Ped targetPed, float x, float y, float z, int mission, float maxSpeed, int drivingStyle, float targetReached, Any boatFlags) // 0x15C86013127CE63F
--[[
You need to call PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS after TASK_BOAT_MISSION in order for the task to execute.

Working example
float vehicleMaxSpeed = VEHICLE::GET_VEHICLE_ESTIMATED_MAX_SPEED(ENTITY::GET_ENTITY_MODEL(pedVehicle));
TASK::TASK_BOAT_MISSION(pedDriver, pedVehicle, 0, 0, waypointCoord.x, waypointCoord.y, waypointCoord.z, 4, vehicleMaxSpeed, 786469, -1.0, 7);
PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(pedDriver, 1);

P8 appears to be driving style flag - see gtaforums.com/topic/822314-guide-driving-styles/ for documentation
--]]
function TASK.TASK_BOAT_MISSION(pedDriver, vehicle, targetVehicle, targetPed, x, y, z, mission, maxSpeed, drivingStyle, targetReached, boatFlags)
  native.invoke(
    Type.Void, 5478, false,
    arg(Type.Ped, pedDriver),
    arg(Type.Vehicle, vehicle),
    arg(Type.Vehicle, targetVehicle),
    arg(Type.Ped, targetPed),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, mission),
    arg(Type.Float, maxSpeed),
    arg(Type.Int, drivingStyle),
    arg(Type.Float, targetReached),
    arg(Type.Any, boatFlags)
  )
end

-- void TASK_DRIVE_BY(Ped driverPed, Ped targetPed, Vehicle targetVehicle, float targetX, float targetY, float targetZ, float distanceToShoot, int pedAccuracy, BOOL pushUnderneathDrivingTaskIfDriving, Hash firingPattern) // 0x2F8AF0E82773A171
--[[
Example:

TASK::TASK_DRIVE_BY(l_467[1/*22*/], PLAYER::PLAYER_PED_ID(), 0, 0.0, 0.0, 2.0, 300.0, 100, 0, ${firing_pattern_burst_fire_driveby});




Needs working example. Doesn't seem to do anything.

I marked p2 as targetVehicle as all these shooting related tasks seem to have that in common.
I marked p6 as distanceToShoot as if you think of GTA's Logic with the native SET_VEHICLE_SHOOT natives, it won't shoot till it gets within a certain distance of the target.
I marked p7 as pedAccuracy as it seems it's mostly 100 (Completely Accurate), 75, 90, etc. Although this could be the ammo count within the gun, but I highly doubt it. I will change this comment once I find out if it's ammo count or not.
--]]
function TASK.TASK_DRIVE_BY(driverPed, targetPed, targetVehicle, targetX, targetY, targetZ, distanceToShoot, pedAccuracy, pushUnderneathDrivingTaskIfDriving, firingPattern)
  native.invoke(
    Type.Void, 5479, false,
    arg(Type.Ped, driverPed),
    arg(Type.Ped, targetPed),
    arg(Type.Vehicle, targetVehicle),
    arg(Type.Float, targetX),
    arg(Type.Float, targetY),
    arg(Type.Float, targetZ),
    arg(Type.Float, distanceToShoot),
    arg(Type.Int, pedAccuracy),
    arg(Type.Bool, pushUnderneathDrivingTaskIfDriving),
    arg(Type.Hash, firingPattern)
  )
end

-- void SET_DRIVEBY_TASK_TARGET(Ped shootingPed, Ped targetPed, Vehicle targetVehicle, float x, float y, float z) // 0xE5B302114D8162EE
--[[
For p1 & p2 (Ped, Vehicle). I could be wrong, as the only time this native is called in scripts is once and both are 0, but I assume this native will work like SET_MOUNTED_WEAPON_TARGET in which has the same exact amount of parameters and the 1st and last 3 parameters are right and the same for both natives.
--]]
function TASK.SET_DRIVEBY_TASK_TARGET(shootingPed, targetPed, targetVehicle, x, y, z)
  native.invoke(
    Type.Void, 5480, false,
    arg(Type.Ped, shootingPed),
    arg(Type.Ped, targetPed),
    arg(Type.Vehicle, targetVehicle),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void CLEAR_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK(Ped ped) // 0xC35B5CDB2824CF69
function TASK.CLEAR_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK(ped)
  native.invoke(
    Type.Void, 5481, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK(Ped ped) // 0x8785E6E40C7A8818
function TASK.IS_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK(ped)
  return native.invoke(
    Type.Bool, 5482, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL CONTROL_MOUNTED_WEAPON(Ped ped) // 0xDCFE42068FE0135A
--[[
Forces the ped to use the mounted weapon.
Returns false if task is not possible.
--]]
function TASK.CONTROL_MOUNTED_WEAPON(ped)
  return native.invoke(
    Type.Bool, 5483, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_MOUNTED_WEAPON_TARGET(Ped shootingPed, Ped targetPed, Vehicle targetVehicle, float x, float y, float z, int taskMode, BOOL ignoreTargetVehDeadCheck) // 0xCCD892192C6D2BB9
--[[
Note: Look in decompiled scripts and the times that p1 and p2 aren't 0. They are filled with vars. If you look through out that script what other natives those vars are used in, you can tell p1 is a ped and p2 is a vehicle. Which most likely means if you want the mounted weapon to target a ped set targetVehicle to 0 or vice-versa.
--]]
function TASK.SET_MOUNTED_WEAPON_TARGET(shootingPed, targetPed, targetVehicle, x, y, z, taskMode, ignoreTargetVehDeadCheck)
  native.invoke(
    Type.Void, 5484, false,
    arg(Type.Ped, shootingPed),
    arg(Type.Ped, targetPed),
    arg(Type.Vehicle, targetVehicle),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, taskMode),
    arg(Type.Bool, ignoreTargetVehDeadCheck)
  )
end

-- BOOL IS_MOUNTED_WEAPON_TASK_UNDERNEATH_DRIVING_TASK(Ped ped) // 0xA320EF046186FA3B
function TASK.IS_MOUNTED_WEAPON_TASK_UNDERNEATH_DRIVING_TASK(ped)
  return native.invoke(
    Type.Bool, 5485, false,
    arg(Type.Ped, ped)
  )
end

-- void TASK_USE_MOBILE_PHONE(Ped ped, BOOL usePhone, int desiredPhoneMode) // 0xBD2A8EC3AF4DE7DB
--[[
Actually has 3 params, not 2.

p0: Ped
p1: int (or bool?)
p2: int
--]]
function TASK.TASK_USE_MOBILE_PHONE(ped, usePhone, desiredPhoneMode)
  native.invoke(
    Type.Void, 5486, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, usePhone),
    arg(Type.Int, desiredPhoneMode)
  )
end

-- void TASK_USE_MOBILE_PHONE_TIMED(Ped ped, int duration) // 0x5EE02954A14C69DB
function TASK.TASK_USE_MOBILE_PHONE_TIMED(ped, duration)
  native.invoke(
    Type.Void, 5487, false,
    arg(Type.Ped, ped),
    arg(Type.Int, duration)
  )
end

-- void TASK_CHAT_TO_PED(Ped ped, Ped target, int flags, float goToLocationX, float goToLocationY, float goToLocationZ, float headingDegs, float idleTime) // 0x8C338E0263E4FD19
--[[
p2 tend to be 16, 17 or 1
p3 to p7 tend to be 0.0
--]]
function TASK.TASK_CHAT_TO_PED(ped, target, flags, goToLocationX, goToLocationY, goToLocationZ, headingDegs, idleTime)
  native.invoke(
    Type.Void, 5488, false,
    arg(Type.Ped, ped),
    arg(Type.Ped, target),
    arg(Type.Int, flags),
    arg(Type.Float, goToLocationX),
    arg(Type.Float, goToLocationY),
    arg(Type.Float, goToLocationZ),
    arg(Type.Float, headingDegs),
    arg(Type.Float, idleTime)
  )
end

-- void TASK_WARP_PED_INTO_VEHICLE(Ped ped, Vehicle vehicle, int seat) // 0x9A7D091411C5F684
--[[
Seat Numbers
-------------------------------
Driver = -1
Any = -2
Left-Rear = 1
Right-Front = 0
Right-Rear = 2
Extra seats = 3-14(This may differ from vehicle type e.g. Firetruck Rear Stand, Ambulance Rear)
--]]
function TASK.TASK_WARP_PED_INTO_VEHICLE(ped, vehicle, seat)
  native.invoke(
    Type.Void, 5489, false,
    arg(Type.Ped, ped),
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, seat)
  )
end

-- void TASK_SHOOT_AT_ENTITY(Entity entity, Entity target, int duration, Hash firingPattern) // 0x08DA95E8298AE772
--[[
//this part of the code is to determine at which entity the player is aiming, for example if you want to create a mod where you give orders to peds
Entity aimedentity;
Player player = PLAYER::PLAYER_ID();
PLAYER::_GET_AIMED_ENTITY(player, &aimedentity);

//bg is an array of peds
TASK::TASK_SHOOT_AT_ENTITY(bg[i], aimedentity, 5000, MISC::GET_HASH_KEY("FIRING_PATTERN_FULL_AUTO"));

in practical usage, getting the entity the player is aiming at and then task the peds to shoot at the entity, at a button press event would be better.

Firing Pattern Hash Information: https://pastebin.com/Px036isB
--]]
function TASK.TASK_SHOOT_AT_ENTITY(entity, target, duration, firingPattern)
  native.invoke(
    Type.Void, 5490, false,
    arg(Type.Entity, entity),
    arg(Type.Entity, target),
    arg(Type.Int, duration),
    arg(Type.Hash, firingPattern)
  )
end

-- void TASK_CLIMB(Ped ped, BOOL usePlayerLaunchForce) // 0x89D9FCC2435112F1
--[[
Climbs or vaults the nearest thing.
usePlayerLaunchForce is unused.
--]]
function TASK.TASK_CLIMB(ped, usePlayerLaunchForce)
  native.invoke(
    Type.Void, 5491, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, usePlayerLaunchForce)
  )
end

-- void TASK_CLIMB_LADDER(Ped ped, BOOL fast) // 0xB6C987F9285A3814
function TASK.TASK_CLIMB_LADDER(ped, fast)
  native.invoke(
    Type.Void, 5492, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, fast)
  )
end

-- void TASK_RAPPEL_DOWN_WALL_USING_CLIPSET_OVERRIDE(Ped ped, float x1, float y1, float z1, float x2, float y2, float z2, float minZ, int ropeHandle, const char* clipSet, Any p10, Any p11) // 0xEAF66ACDDC794793
--[[
Attaches a ped to a rope and allows player control to rappel down a wall. Disables all collisions while on the rope.
p10: Usually 1 in the scripts, clipSet: Clipset to use for the task, minZ: Minimum Z that the player can descend to, ropeHandle: Rope to attach this task to created with ADD_ROPE
--]]
function TASK.TASK_RAPPEL_DOWN_WALL_USING_CLIPSET_OVERRIDE(ped, x1, y1, z1, x2, y2, z2, minZ, ropeHandle, clipSet, p10, p11)
  native.invoke(
    Type.Void, 5493, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Float, minZ),
    arg(Type.Int, ropeHandle),
    arg(Type.String, clipSet),
    arg(Type.Any, p10),
    arg(Type.Any, p11)
  )
end

-- int GET_TASK_RAPPEL_DOWN_WALL_STATE(Ped ped) // 0x9D252648778160DF
function TASK.GET_TASK_RAPPEL_DOWN_WALL_STATE(ped)
  return native.invoke(
    Type.Int, 5494, false,
    arg(Type.Ped, ped)
  )
end

-- void CLEAR_PED_TASKS_IMMEDIATELY(Ped ped) // 0xAAA34F8A7CB32098
--[[
Immediately stops the pedestrian from whatever it's doing. They stop fighting, animations, etc. they forget what they were doing.
--]]
function TASK.CLEAR_PED_TASKS_IMMEDIATELY(ped)
  native.invoke(
    Type.Void, 5495, false,
    arg(Type.Ped, ped)
  )
end

-- void TASK_PERFORM_SEQUENCE_FROM_PROGRESS(Ped ped, int taskIndex, int progress1, int progress2) // 0x89221B16730234F0
function TASK.TASK_PERFORM_SEQUENCE_FROM_PROGRESS(ped, taskIndex, progress1, progress2)
  native.invoke(
    Type.Void, 5496, false,
    arg(Type.Ped, ped),
    arg(Type.Int, taskIndex),
    arg(Type.Int, progress1),
    arg(Type.Int, progress2)
  )
end

-- void SET_NEXT_DESIRED_MOVE_STATE(float nextMoveState) // 0xF1B9F16E89E2C93A
--[[
This native does absolutely nothing, just a nullsub

R* Comment:
SET_NEXT_DESIRED_MOVE_STATE - Function is deprecated - do not use anymore
--]]
function TASK.SET_NEXT_DESIRED_MOVE_STATE(nextMoveState)
  native.invoke(
    Type.Void, 5497, false,
    arg(Type.Float, nextMoveState)
  )
end

-- void SET_PED_DESIRED_MOVE_BLEND_RATIO(Ped ped, float newMoveBlendRatio) // 0x1E982AC8716912C5
function TASK.SET_PED_DESIRED_MOVE_BLEND_RATIO(ped, newMoveBlendRatio)
  native.invoke(
    Type.Void, 5498, false,
    arg(Type.Ped, ped),
    arg(Type.Float, newMoveBlendRatio)
  )
end

-- float GET_PED_DESIRED_MOVE_BLEND_RATIO(Ped ped) // 0x8517D4A6CA8513ED
function TASK.GET_PED_DESIRED_MOVE_BLEND_RATIO(ped)
  return native.invoke(
    Type.Float, 5499, false,
    arg(Type.Ped, ped)
  )
end

-- void TASK_GOTO_ENTITY_AIMING(Ped ped, Entity target, float distanceToStopAt, float StartAimingDist) // 0xA9DA48FAB8A76C12
--[[
eg

 TASK::TASK_GOTO_ENTITY_AIMING(v_2, PLAYER::PLAYER_PED_ID(), 5.0, 25.0);

ped = Ped you want to perform this task.
target = the Entity they should aim at.
distanceToStopAt = distance from the target, where the ped should stop to aim.
StartAimingDist = distance where the ped should start to aim.
--]]
function TASK.TASK_GOTO_ENTITY_AIMING(ped, target, distanceToStopAt, StartAimingDist)
  native.invoke(
    Type.Void, 5500, false,
    arg(Type.Ped, ped),
    arg(Type.Entity, target),
    arg(Type.Float, distanceToStopAt),
    arg(Type.Float, StartAimingDist)
  )
end

-- void TASK_SET_DECISION_MAKER(Ped ped, Hash decisionMakerId) // 0xEB8517DDA73720DA
--[[
p1 is always GET_HASH_KEY("empty") in scripts, for the rare times this is used
--]]
function TASK.TASK_SET_DECISION_MAKER(ped, decisionMakerId)
  native.invoke(
    Type.Void, 5501, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, decisionMakerId)
  )
end

-- void TASK_SET_SPHERE_DEFENSIVE_AREA(Ped ped, float x, float y, float z, float radius) // 0x933C06518B52A9A4
function TASK.TASK_SET_SPHERE_DEFENSIVE_AREA(ped, x, y, z, radius)
  native.invoke(
    Type.Void, 5502, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius)
  )
end

-- void TASK_CLEAR_DEFENSIVE_AREA(Ped ped) // 0x95A6C46A31D1917D
function TASK.TASK_CLEAR_DEFENSIVE_AREA(ped)
  native.invoke(
    Type.Void, 5503, false,
    arg(Type.Ped, ped)
  )
end

-- void TASK_PED_SLIDE_TO_COORD(Ped ped, float x, float y, float z, float heading, float speed) // 0xD04FE6765D990A06
function TASK.TASK_PED_SLIDE_TO_COORD(ped, x, y, z, heading, speed)
  native.invoke(
    Type.Void, 5504, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, heading),
    arg(Type.Float, speed)
  )
end

-- void TASK_PED_SLIDE_TO_COORD_HDG_RATE(Ped ped, float x, float y, float z, float heading, float speed, float headingChangeRate) // 0x5A4A6A6D3DC64F52
function TASK.TASK_PED_SLIDE_TO_COORD_HDG_RATE(ped, x, y, z, heading, speed, headingChangeRate)
  native.invoke(
    Type.Void, 5505, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, heading),
    arg(Type.Float, speed),
    arg(Type.Float, headingChangeRate)
  )
end

-- ScrHandle ADD_COVER_POINT(float x, float y, float z, float direction, int usage, int height, int arc, BOOL isPriority) // 0xD5C12A75C7B9497F
function TASK.ADD_COVER_POINT(x, y, z, direction, usage, height, arc, isPriority)
  return native.invoke(
    Type.Scrhandle, 5506, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, direction),
    arg(Type.Int, usage),
    arg(Type.Int, height),
    arg(Type.Int, arc),
    arg(Type.Bool, isPriority)
  )
end

-- void REMOVE_COVER_POINT(ScrHandle coverpoint) // 0xAE287C923D891715
function TASK.REMOVE_COVER_POINT(coverpoint)
  native.invoke(
    Type.Void, 5507, false,
    arg(Type.Scrhandle, coverpoint)
  )
end

-- BOOL DOES_SCRIPTED_COVER_POINT_EXIST_AT_COORDS(float x, float y, float z) // 0xA98B8E3C088E5A31
--[[
Checks if there is a cover point at position
--]]
function TASK.DOES_SCRIPTED_COVER_POINT_EXIST_AT_COORDS(x, y, z)
  return native.invoke(
    Type.Bool, 5508, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- Vector3 GET_SCRIPTED_COVER_POINT_COORDS(ScrHandle coverpoint) // 0x594A1028FC2A3E85
function TASK.GET_SCRIPTED_COVER_POINT_COORDS(coverpoint)
  return native.invoke(
    Type.Vector3, 5509, false,
    arg(Type.Scrhandle, coverpoint)
  )
end

-- void ADD_SCRIPTED_COVER_AREA(float x, float y, float z, float radius) // 0x28B7B9BFDAF274AA
function TASK.ADD_SCRIPTED_COVER_AREA(x, y, z, radius)
  native.invoke(
    Type.Void, 5510, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius)
  )
end

-- void TASK_COMBAT_PED(Ped ped, Ped targetPed, int combatFlags, int threatResponseFlags) // 0xF166E48407BAC484
--[[
Makes the specified ped attack the target ped.
p2 should be 0
p3 should be 16
--]]
function TASK.TASK_COMBAT_PED(ped, targetPed, combatFlags, threatResponseFlags)
  native.invoke(
    Type.Void, 5511, false,
    arg(Type.Ped, ped),
    arg(Type.Ped, targetPed),
    arg(Type.Int, combatFlags),
    arg(Type.Int, threatResponseFlags)
  )
end

-- void TASK_COMBAT_PED_TIMED(Ped ped, Ped target, int time, int flags) // 0x944F30DCB7096BDE
function TASK.TASK_COMBAT_PED_TIMED(ped, target, time, flags)
  native.invoke(
    Type.Void, 5512, false,
    arg(Type.Ped, ped),
    arg(Type.Ped, target),
    arg(Type.Int, time),
    arg(Type.Int, flags)
  )
end

-- void TASK_SEEK_COVER_FROM_POS(Ped ped, float x, float y, float z, int duration, BOOL allowPeekingAndFiring) // 0x75AC2B60386D89F2
function TASK.TASK_SEEK_COVER_FROM_POS(ped, x, y, z, duration, allowPeekingAndFiring)
  native.invoke(
    Type.Void, 5513, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, duration),
    arg(Type.Bool, allowPeekingAndFiring)
  )
end

-- void TASK_SEEK_COVER_FROM_PED(Ped ped, Ped target, int duration, BOOL allowPeekingAndFiring) // 0x84D32B3BEC531324
function TASK.TASK_SEEK_COVER_FROM_PED(ped, target, duration, allowPeekingAndFiring)
  native.invoke(
    Type.Void, 5514, false,
    arg(Type.Ped, ped),
    arg(Type.Ped, target),
    arg(Type.Int, duration),
    arg(Type.Bool, allowPeekingAndFiring)
  )
end

-- void TASK_SEEK_COVER_TO_COVER_POINT(Ped ped, ScrHandle coverpoint, float x, float y, float z, int time, BOOL allowPeekingAndFiring) // 0xD43D95C7A869447F
--[[
p5 is always -1
--]]
function TASK.TASK_SEEK_COVER_TO_COVER_POINT(ped, coverpoint, x, y, z, time, allowPeekingAndFiring)
  native.invoke(
    Type.Void, 5515, false,
    arg(Type.Ped, ped),
    arg(Type.Scrhandle, coverpoint),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, time),
    arg(Type.Bool, allowPeekingAndFiring)
  )
end

-- void TASK_SEEK_COVER_TO_COORDS(Ped ped, float x1, float y1, float z1, float x2, float y2, float z2, int timeout, BOOL shortRoute) // 0x39246A6958EF072C
--[[
p8 causes the ped to take the shortest route to the cover position. It may have something to do with navmesh or pathfinding mechanics.

from michael2:
TASK::TASK_SEEK_COVER_TO_COORDS(ped, 967.5164794921875, -2121.603515625, 30.479299545288086, 978.94677734375, -2125.84130859375, 29.4752, -1, 1);


appears to be shorter variation
from michael3:
TASK::TASK_SEEK_COVER_TO_COORDS(ped, -2231.011474609375, 263.6326599121094, 173.60195922851562, -1, 0);
--]]
function TASK.TASK_SEEK_COVER_TO_COORDS(ped, x1, y1, z1, x2, y2, z2, timeout, shortRoute)
  native.invoke(
    Type.Void, 5516, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Int, timeout),
    arg(Type.Bool, shortRoute)
  )
end

-- void TASK_PUT_PED_DIRECTLY_INTO_COVER(Ped ped, float x, float y, float z, int time, BOOL allowPeekingAndFiring, float blendInDuration, BOOL forceInitialFacingDirection, BOOL forceFaceLeft, int identifier, BOOL doEntry) // 0x4172393E6BE1FECE
function TASK.TASK_PUT_PED_DIRECTLY_INTO_COVER(ped, x, y, z, time, allowPeekingAndFiring, blendInDuration, forceInitialFacingDirection, forceFaceLeft, identifier, doEntry)
  native.invoke(
    Type.Void, 5517, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, time),
    arg(Type.Bool, allowPeekingAndFiring),
    arg(Type.Float, blendInDuration),
    arg(Type.Bool, forceInitialFacingDirection),
    arg(Type.Bool, forceFaceLeft),
    arg(Type.Int, identifier),
    arg(Type.Bool, doEntry)
  )
end

-- void TASK_WARP_PED_DIRECTLY_INTO_COVER(Ped ped, int time, BOOL allowPeekingAndFiring, BOOL forceInitialFacingDirection, BOOL forceFaceLeft, int identifier) // 0x6E01E9E8D89F8276
function TASK.TASK_WARP_PED_DIRECTLY_INTO_COVER(ped, time, allowPeekingAndFiring, forceInitialFacingDirection, forceFaceLeft, identifier)
  native.invoke(
    Type.Void, 5518, false,
    arg(Type.Ped, ped),
    arg(Type.Int, time),
    arg(Type.Bool, allowPeekingAndFiring),
    arg(Type.Bool, forceInitialFacingDirection),
    arg(Type.Bool, forceFaceLeft),
    arg(Type.Int, identifier)
  )
end

-- void TASK_EXIT_COVER(Ped ped, int exitType, float x, float y, float z) // 0x79B258E397854D29
--[[
p1 is 1, 2, or 3 in scripts
--]]
function TASK.TASK_EXIT_COVER(ped, exitType, x, y, z)
  native.invoke(
    Type.Void, 5519, false,
    arg(Type.Ped, ped),
    arg(Type.Int, exitType),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void TASK_PUT_PED_DIRECTLY_INTO_MELEE(Ped ped, Ped meleeTarget, float blendInDuration, float timeInMelee, float strafePhaseSync, int aiCombatFlags) // 0x1C6CD14A876FFE39
--[[
from armenian3.c4

TASK::TASK_PUT_PED_DIRECTLY_INTO_MELEE(PlayerPed, armenianPed, 0.0, -1.0, 0.0, 0);

--]]
function TASK.TASK_PUT_PED_DIRECTLY_INTO_MELEE(ped, meleeTarget, blendInDuration, timeInMelee, strafePhaseSync, aiCombatFlags)
  native.invoke(
    Type.Void, 5520, false,
    arg(Type.Ped, ped),
    arg(Type.Ped, meleeTarget),
    arg(Type.Float, blendInDuration),
    arg(Type.Float, timeInMelee),
    arg(Type.Float, strafePhaseSync),
    arg(Type.Int, aiCombatFlags)
  )
end

-- void TASK_TOGGLE_DUCK(Ped ped, int toggleType) // 0xAC96609B9995EDF8
--[[
used in sequence task

both parameters seems to be always 0
--]]
function TASK.TASK_TOGGLE_DUCK(ped, toggleType)
  native.invoke(
    Type.Void, 5521, false,
    arg(Type.Ped, ped),
    arg(Type.Int, toggleType)
  )
end

-- void TASK_GUARD_CURRENT_POSITION(Ped ped, float maxPatrolProximity, float defensiveAreaRadius, BOOL setDefensiveArea) // 0x4A58A47A72E3FCB4
--[[
From re_prisonvanbreak:

TASK::TASK_GUARD_CURRENT_POSITION(l_DD, 35.0, 35.0, 1);
--]]
function TASK.TASK_GUARD_CURRENT_POSITION(ped, maxPatrolProximity, defensiveAreaRadius, setDefensiveArea)
  native.invoke(
    Type.Void, 5522, false,
    arg(Type.Ped, ped),
    arg(Type.Float, maxPatrolProximity),
    arg(Type.Float, defensiveAreaRadius),
    arg(Type.Bool, setDefensiveArea)
  )
end

-- void TASK_GUARD_ASSIGNED_DEFENSIVE_AREA(Ped ped, float x, float y, float z, float heading, float maxPatrolProximity, int timer) // 0xD2A207EEBDF9889B
function TASK.TASK_GUARD_ASSIGNED_DEFENSIVE_AREA(ped, x, y, z, heading, maxPatrolProximity, timer)
  native.invoke(
    Type.Void, 5523, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, heading),
    arg(Type.Float, maxPatrolProximity),
    arg(Type.Int, timer)
  )
end

-- void TASK_GUARD_SPHERE_DEFENSIVE_AREA(Ped ped, float defendPositionX, float defendPositionY, float defendPositionZ, float heading, float maxPatrolProximity, int time, float x, float y, float z, float defensiveAreaRadius) // 0xC946FE14BE0EB5E2
function TASK.TASK_GUARD_SPHERE_DEFENSIVE_AREA(ped, defendPositionX, defendPositionY, defendPositionZ, heading, maxPatrolProximity, time, x, y, z, defensiveAreaRadius)
  native.invoke(
    Type.Void, 5524, false,
    arg(Type.Ped, ped),
    arg(Type.Float, defendPositionX),
    arg(Type.Float, defendPositionY),
    arg(Type.Float, defendPositionZ),
    arg(Type.Float, heading),
    arg(Type.Float, maxPatrolProximity),
    arg(Type.Int, time),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, defensiveAreaRadius)
  )
end

-- void TASK_STAND_GUARD(Ped ped, float x, float y, float z, float heading, const char* scenarioName) // 0xAE032F8BBA959E90
--[[
scenarioName example: "WORLD_HUMAN_GUARD_STAND"
--]]
function TASK.TASK_STAND_GUARD(ped, x, y, z, heading, scenarioName)
  native.invoke(
    Type.Void, 5525, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, heading),
    arg(Type.String, scenarioName)
  )
end

-- void SET_DRIVE_TASK_CRUISE_SPEED(Ped driver, float cruiseSpeed) // 0x5C9B84BD7D31D908
function TASK.SET_DRIVE_TASK_CRUISE_SPEED(driver, cruiseSpeed)
  native.invoke(
    Type.Void, 5526, false,
    arg(Type.Ped, driver),
    arg(Type.Float, cruiseSpeed)
  )
end

-- void SET_DRIVE_TASK_MAX_CRUISE_SPEED(Ped ped, float speed) // 0x404A5AA9B9F0B746
function TASK.SET_DRIVE_TASK_MAX_CRUISE_SPEED(ped, speed)
  native.invoke(
    Type.Void, 5527, false,
    arg(Type.Ped, ped),
    arg(Type.Float, speed)
  )
end

-- void SET_DRIVE_TASK_DRIVING_STYLE(Ped ped, int drivingStyle) // 0xDACE1BE37D88AF67
--[[
This native is used to set the driving style for specific ped.

Driving styles id seems to be:
786468
262144
786469

http://gtaforums.com/topic/822314-guide-driving-styles/
--]]
function TASK.SET_DRIVE_TASK_DRIVING_STYLE(ped, drivingStyle)
  native.invoke(
    Type.Void, 5528, false,
    arg(Type.Ped, ped),
    arg(Type.Int, drivingStyle)
  )
end

-- void ADD_COVER_BLOCKING_AREA(float startX, float startY, float startZ, float endX, float endY, float endZ, BOOL blockObjects, BOOL blockVehicles, BOOL blockMap, BOOL blockPlayer) // 0x45C597097DD7CB81
function TASK.ADD_COVER_BLOCKING_AREA(startX, startY, startZ, endX, endY, endZ, blockObjects, blockVehicles, blockMap, blockPlayer)
  native.invoke(
    Type.Void, 5529, false,
    arg(Type.Float, startX),
    arg(Type.Float, startY),
    arg(Type.Float, startZ),
    arg(Type.Float, endX),
    arg(Type.Float, endY),
    arg(Type.Float, endZ),
    arg(Type.Bool, blockObjects),
    arg(Type.Bool, blockVehicles),
    arg(Type.Bool, blockMap),
    arg(Type.Bool, blockPlayer)
  )
end

-- void REMOVE_ALL_COVER_BLOCKING_AREAS() // 0xDB6708C0B46F56D8
function TASK.REMOVE_ALL_COVER_BLOCKING_AREAS()
  native.invoke(
    Type.Void, 5530, false
  )
end

-- void REMOVE_COVER_BLOCKING_AREAS_AT_POSITION(float x, float y, float z) // 0xFA83CA6776038F64
function TASK.REMOVE_COVER_BLOCKING_AREAS_AT_POSITION(x, y, z)
  native.invoke(
    Type.Void, 5531, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void REMOVE_SPECIFIC_COVER_BLOCKING_AREAS(float startX, float startY, float startZ, float endX, float endY, float endZ, BOOL blockObjects, BOOL blockVehicles, BOOL blockMap, BOOL blockPlayer) // 0x1F351CF1C6475734
function TASK.REMOVE_SPECIFIC_COVER_BLOCKING_AREAS(startX, startY, startZ, endX, endY, endZ, blockObjects, blockVehicles, blockMap, blockPlayer)
  native.invoke(
    Type.Void, 5532, false,
    arg(Type.Float, startX),
    arg(Type.Float, startY),
    arg(Type.Float, startZ),
    arg(Type.Float, endX),
    arg(Type.Float, endY),
    arg(Type.Float, endZ),
    arg(Type.Bool, blockObjects),
    arg(Type.Bool, blockVehicles),
    arg(Type.Bool, blockMap),
    arg(Type.Bool, blockPlayer)
  )
end

-- void TASK_START_SCENARIO_IN_PLACE(Ped ped, const char* scenarioName, int unkDelay, BOOL playEnterAnim) // 0x142A02425FF02BD9
--[[
Plays a scenario on a Ped at their current location.

unkDelay - Usually 0 or -1, doesn't seem to have any effect. Might be a delay between sequences.
playEnterAnim - Plays the "Enter" anim if true, otherwise plays the "Exit" anim. Scenarios that don't have any "Enter" anims won't play if this is set to true.

----

From "am_hold_up.ysc.c4" at line 339:

TASK::TASK_START_SCENARIO_IN_PLACE(NETWORK::NET_TO_PED(l_8D._f4), sub_adf(), 0, 1);

I'm unsure of what the last two parameters are, however sub_adf() randomly returns 1 of 3 scenarios, those being:
WORLD_HUMAN_SMOKING
WORLD_HUMAN_HANG_OUT_STREET
WORLD_HUMAN_STAND_MOBILE

This makes sense, as these are what I commonly see when going by a liquor store.
-------------------------
List of scenarioNames: https://pastebin.com/6mrYTdQv
(^ Thank you so fucking much for this)

Also these:
WORLD_FISH_FLEE
DRIVE
WORLD_HUMAN_HIKER
WORLD_VEHICLE_ATTRACTOR
WORLD_VEHICLE_BICYCLE_MOUNTAIN
WORLD_VEHICLE_BIKE_OFF_ROAD_RACE
WORLD_VEHICLE_BIKER
WORLD_VEHICLE_CONSTRUCTION_PASSENGERS
WORLD_VEHICLE_CONSTRUCTION_SOLO
WORLD_VEHICLE_DRIVE_PASSENGERS
WORLD_VEHICLE_DRIVE_SOLO
WORLD_VEHICLE_EMPTY
WORLD_VEHICLE_PARK_PARALLEL
WORLD_VEHICLE_PARK_PERPENDICULAR_NOSE_IN
WORLD_VEHICLE_POLICE_BIKE
WORLD_VEHICLE_POLICE_CAR
WORLD_VEHICLE_POLICE_NEXT_TO_CAR
WORLD_VEHICLE_SALTON_DIRT_BIKE
WORLD_VEHICLE_TRUCK_LOGS

Full list of ped scenarios by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scenariosCompact.json
--]]
function TASK.TASK_START_SCENARIO_IN_PLACE(ped, scenarioName, unkDelay, playEnterAnim)
  native.invoke(
    Type.Void, 5533, false,
    arg(Type.Ped, ped),
    arg(Type.String, scenarioName),
    arg(Type.Int, unkDelay),
    arg(Type.Bool, playEnterAnim)
  )
end

-- void TASK_START_SCENARIO_AT_POSITION(Ped ped, const char* scenarioName, float x, float y, float z, float heading, int duration, BOOL sittingScenario, BOOL teleport) // 0xFA4EFC79F69D4F07
--[[
Full list of ped scenarios by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scenariosCompact.json

Also a few more listed at TASK::TASK_START_SCENARIO_IN_PLACE just above.
---------------
The first parameter in every scenario has always been a Ped of some sort. The second like TASK_START_SCENARIO_IN_PLACE is the name of the scenario. 

The next 4 parameters were harder to decipher. After viewing "hairdo_shop_mp.ysc.c4", and being confused from seeing the case in other scripts, they passed the first three of the arguments as one array from a function, and it looked like it was obviously x, y, and z.

I haven't seen the sixth parameter go to or over 360, making me believe that it is rotation, but I really can't confirm anything.

I have no idea what the last 3 parameters are, but I'll try to find out.

-going on the last 3 parameters, they appear to always be "0, 0, 1"

p6 -1 also used in scrips

p7 used for sitting scenarios

p8 teleports ped to position
--]]
function TASK.TASK_START_SCENARIO_AT_POSITION(ped, scenarioName, x, y, z, heading, duration, sittingScenario, teleport)
  native.invoke(
    Type.Void, 5534, false,
    arg(Type.Ped, ped),
    arg(Type.String, scenarioName),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, heading),
    arg(Type.Int, duration),
    arg(Type.Bool, sittingScenario),
    arg(Type.Bool, teleport)
  )
end

-- void TASK_USE_NEAREST_SCENARIO_TO_COORD(Ped ped, float x, float y, float z, float distance, int duration) // 0x277F471BA9DB000B
--[[
Updated variables

An alternative to TASK::TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP. Makes the ped walk to the scenario instead.
--]]
function TASK.TASK_USE_NEAREST_SCENARIO_TO_COORD(ped, x, y, z, distance, duration)
  native.invoke(
    Type.Void, 5535, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, distance),
    arg(Type.Int, duration)
  )
end

-- void TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP(Ped ped, float x, float y, float z, float radius, int timeToLeave) // 0x58E2E0F23F6B76C3
function TASK.TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP(ped, x, y, z, radius, timeToLeave)
  native.invoke(
    Type.Void, 5536, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Int, timeToLeave)
  )
end

-- void TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD(Ped ped, float x, float y, float z, float maxRange, int timeToLeave) // 0x9FDA1B3D7E7028B3
--[[
p5 is always 0 in scripts
--]]
function TASK.TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD(ped, x, y, z, maxRange, timeToLeave)
  native.invoke(
    Type.Void, 5537, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, maxRange),
    arg(Type.Int, timeToLeave)
  )
end

-- void TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD_WARP(Ped ped, float x, float y, float z, float radius, int timeToLeave) // 0x97A28E63F0BA5631
--[[
p5 is always -1 or 0 in scripts
--]]
function TASK.TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD_WARP(ped, x, y, z, radius, timeToLeave)
  native.invoke(
    Type.Void, 5538, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Int, timeToLeave)
  )
end

-- BOOL DOES_SCENARIO_EXIST_IN_AREA(float x, float y, float z, float radius, BOOL mustBeFree) // 0x5A59271FFADD33C1
function TASK.DOES_SCENARIO_EXIST_IN_AREA(x, y, z, radius, mustBeFree)
  return native.invoke(
    Type.Bool, 5539, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Bool, mustBeFree)
  )
end

-- BOOL DOES_SCENARIO_OF_TYPE_EXIST_IN_AREA(float x, float y, float z, const char* scenarioName, float radius, BOOL mustBeFree) // 0x0A9D0C2A3BBC86C1
function TASK.DOES_SCENARIO_OF_TYPE_EXIST_IN_AREA(x, y, z, scenarioName, radius, mustBeFree)
  return native.invoke(
    Type.Bool, 5540, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.String, scenarioName),
    arg(Type.Float, radius),
    arg(Type.Bool, mustBeFree)
  )
end

-- BOOL IS_SCENARIO_OCCUPIED(float x, float y, float z, float maxRange, BOOL onlyUsersActuallyAtScenario) // 0x788756D73AC2E07C
function TASK.IS_SCENARIO_OCCUPIED(x, y, z, maxRange, onlyUsersActuallyAtScenario)
  return native.invoke(
    Type.Bool, 5541, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, maxRange),
    arg(Type.Bool, onlyUsersActuallyAtScenario)
  )
end

-- BOOL PED_HAS_USE_SCENARIO_TASK(Ped ped) // 0x295E3CCEC879CCD7
function TASK.PED_HAS_USE_SCENARIO_TASK(ped)
  return native.invoke(
    Type.Bool, 5542, false,
    arg(Type.Ped, ped)
  )
end

-- void PLAY_ANIM_ON_RUNNING_SCENARIO(Ped ped, const char* animDict, const char* animName) // 0x748040460F8DF5DC
--[[
Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
--]]
function TASK.PLAY_ANIM_ON_RUNNING_SCENARIO(ped, animDict, animName)
  native.invoke(
    Type.Void, 5543, false,
    arg(Type.Ped, ped),
    arg(Type.String, animDict),
    arg(Type.String, animName)
  )
end

-- BOOL DOES_SCENARIO_GROUP_EXIST(const char* scenarioGroup) // 0xF9034C136C9E00D3
--[[
Full list of scenario groups used in scripts by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scenarioGroupNames.json
Occurrences in the b617d scripts:

"ARMY_GUARD",
"ARMY_HELI",
"Cinema_Downtown",
"Cinema_Morningwood",
"Cinema_Textile",
"City_Banks",
"Countryside_Banks",
"DEALERSHIP",
"GRAPESEED_PLANES",
"KORTZ_SECURITY",
"LOST_BIKERS",
"LSA_Planes",
"LSA_Planes",
"MP_POLICE",
"Observatory_Bikers", 
"POLICE_POUND1",
"POLICE_POUND2",
"POLICE_POUND3",
"POLICE_POUND4",
"POLICE_POUND5"
"QUARRY",
"SANDY_PLANES",
"SCRAP_SECURITY",
"SEW_MACHINE",
"SOLOMON_GATE",
"Triathlon_1_Start", 
"Triathlon_2_Start", 
"Triathlon_3_Start"

Sometimes used with IS_SCENARIO_GROUP_ENABLED:
if (TASK::DOES_SCENARIO_GROUP_EXIST("Observatory_Bikers") && (!TASK::IS_SCENARIO_GROUP_ENABLED("Observatory_Bikers"))) {
else if (TASK::IS_SCENARIO_GROUP_ENABLED("BLIMP")) {

--]]
function TASK.DOES_SCENARIO_GROUP_EXIST(scenarioGroup)
  return native.invoke(
    Type.Bool, 5544, false,
    arg(Type.String, scenarioGroup)
  )
end

-- BOOL IS_SCENARIO_GROUP_ENABLED(const char* scenarioGroup) // 0x367A09DED4E05B99
--[[
Full list of scenario groups used in scripts by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scenarioGroupNames.json
Occurrences in the b617d scripts: 

 "ARMY_GUARD",
 "ARMY_HELI",
 "BLIMP",
 "Cinema_Downtown",
 "Cinema_Morningwood",
 "Cinema_Textile",
 "City_Banks",
 "Countryside_Banks",
 "DEALERSHIP",
 "KORTZ_SECURITY",
 "LSA_Planes",
 "MP_POLICE",
 "Observatory_Bikers",
 "POLICE_POUND1",
 "POLICE_POUND2",
 "POLICE_POUND3",
 "POLICE_POUND4",
 "POLICE_POUND5",
 "Rampage1",
 "SANDY_PLANES",
 "SCRAP_SECURITY",
 "SEW_MACHINE",
 "SOLOMON_GATE"

Sometimes used with DOES_SCENARIO_GROUP_EXIST:
if (TASK::DOES_SCENARIO_GROUP_EXIST("Observatory_Bikers") &&   (!TASK::IS_SCENARIO_GROUP_ENABLED("Observatory_Bikers"))) {
else if (TASK::IS_SCENARIO_GROUP_ENABLED("BLIMP")) {
--]]
function TASK.IS_SCENARIO_GROUP_ENABLED(scenarioGroup)
  return native.invoke(
    Type.Bool, 5545, false,
    arg(Type.String, scenarioGroup)
  )
end

-- void SET_SCENARIO_GROUP_ENABLED(const char* scenarioGroup, BOOL enabled) // 0x02C8E5B49848664E
--[[
Full list of scenario groups used in scripts by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scenarioGroupNames.json
Occurrences in the b617d scripts: https://pastebin.com/Tvg2PRHU
--]]
function TASK.SET_SCENARIO_GROUP_ENABLED(scenarioGroup, enabled)
  native.invoke(
    Type.Void, 5546, false,
    arg(Type.String, scenarioGroup),
    arg(Type.Bool, enabled)
  )
end

-- void RESET_SCENARIO_GROUPS_ENABLED() // 0xDD902D0349AFAD3A
function TASK.RESET_SCENARIO_GROUPS_ENABLED()
  native.invoke(
    Type.Void, 5547, false
  )
end

-- void SET_EXCLUSIVE_SCENARIO_GROUP(const char* scenarioGroup) // 0x535E97E1F7FC0C6A
--[[
Full list of scenario groups used in scripts by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scenarioGroupNames.json
Groups found in the scripts used with this native:

"AMMUNATION",
"QUARRY",
"Triathlon_1",
"Triathlon_2",
"Triathlon_3"
--]]
function TASK.SET_EXCLUSIVE_SCENARIO_GROUP(scenarioGroup)
  native.invoke(
    Type.Void, 5548, false,
    arg(Type.String, scenarioGroup)
  )
end

-- void RESET_EXCLUSIVE_SCENARIO_GROUP() // 0x4202BBCB8684563D
function TASK.RESET_EXCLUSIVE_SCENARIO_GROUP()
  native.invoke(
    Type.Void, 5549, false
  )
end

-- BOOL IS_SCENARIO_TYPE_ENABLED(const char* scenarioType) // 0x3A815DB3EA088722
--[[
Full list of scenario types used in scripts by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scenariosCompact.json
Occurrences in the b617d scripts:
"PROP_HUMAN_SEAT_CHAIR",
"WORLD_HUMAN_DRINKING",
"WORLD_HUMAN_HANG_OUT_STREET",
"WORLD_HUMAN_SMOKING",
"WORLD_MOUNTAIN_LION_WANDER",
"WORLD_HUMAN_DRINKING"

Sometimes used together with MISC::IS_STRING_NULL_OR_EMPTY in the scripts.

scenarioType could be the same as scenarioName, used in for example TASK::TASK_START_SCENARIO_AT_POSITION.

--]]
function TASK.IS_SCENARIO_TYPE_ENABLED(scenarioType)
  return native.invoke(
    Type.Bool, 5550, false,
    arg(Type.String, scenarioType)
  )
end

-- void SET_SCENARIO_TYPE_ENABLED(const char* scenarioType, BOOL toggle) // 0xEB47EC4E34FB7EE1
--[[
Full list of scenario types used in scripts by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scenariosCompact.json
seems to enable/disable specific scenario-types from happening in the game world.

Here are some scenario types from the scripts:
"WORLD_MOUNTAIN_LION_REST"                                             
"WORLD_MOUNTAIN_LION_WANDER"                                            
"DRIVE"                                                                  
"WORLD_VEHICLE_POLICE_BIKE"                                             
"WORLD_VEHICLE_POLICE_CAR"                                             
"WORLD_VEHICLE_POLICE_NEXT_TO_CAR"                                        
"WORLD_VEHICLE_DRIVE_SOLO"                                                 
"WORLD_VEHICLE_BIKER"                                                      
"WORLD_VEHICLE_DRIVE_PASSENGERS"                                           
"WORLD_VEHICLE_SALTON_DIRT_BIKE"                                           
"WORLD_VEHICLE_BICYCLE_MOUNTAIN"                                           
"PROP_HUMAN_SEAT_CHAIR"                                             
"WORLD_VEHICLE_ATTRACTOR"                                             
"WORLD_HUMAN_LEANING"                                                 
"WORLD_HUMAN_HANG_OUT_STREET"                                        
"WORLD_HUMAN_DRINKING"                                                
"WORLD_HUMAN_SMOKING"                                                
"WORLD_HUMAN_GUARD_STAND"                                            
"WORLD_HUMAN_CLIPBOARD"                                              
"WORLD_HUMAN_HIKER"                                                  
"WORLD_VEHICLE_EMPTY"                                                      
"WORLD_VEHICLE_BIKE_OFF_ROAD_RACE"                                      
"WORLD_HUMAN_PAPARAZZI"                                               
"WORLD_VEHICLE_PARK_PERPENDICULAR_NOSE_IN"                            
"WORLD_VEHICLE_PARK_PARALLEL"                                              
"WORLD_VEHICLE_CONSTRUCTION_SOLO"                               
"WORLD_VEHICLE_CONSTRUCTION_PASSENGERS"                                                                    
"WORLD_VEHICLE_TRUCK_LOGS"

scenarioType could be the same as scenarioName, used in for example TASK::TASK_START_SCENARIO_AT_POSITION.
--]]
function TASK.SET_SCENARIO_TYPE_ENABLED(scenarioType, toggle)
  native.invoke(
    Type.Void, 5551, false,
    arg(Type.String, scenarioType),
    arg(Type.Bool, toggle)
  )
end

-- void RESET_SCENARIO_TYPES_ENABLED() // 0x0D40EE2A7F2B2D6D
function TASK.RESET_SCENARIO_TYPES_ENABLED()
  native.invoke(
    Type.Void, 5552, false
  )
end

-- BOOL IS_PED_ACTIVE_IN_SCENARIO(Ped ped) // 0xAA135F9482C82CC3
function TASK.IS_PED_ACTIVE_IN_SCENARIO(ped)
  return native.invoke(
    Type.Bool, 5553, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_PLAYING_BASE_CLIP_IN_SCENARIO(Ped ped) // 0x621C6E4729388E41
--[[
Used only once (am_mp_property_int)

ped was PLAYER_PED_ID()

Related to CTaskAmbientClips.
--]]
function TASK.IS_PED_PLAYING_BASE_CLIP_IN_SCENARIO(ped)
  return native.invoke(
    Type.Bool, 5554, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_CAN_PLAY_AMBIENT_IDLES(Ped ped, BOOL blockIdleClips, BOOL removeIdleClipIfPlaying) // 0x8FD89A6240813FD0
--[[
Appears only in fm_mission_controller and used only 3 times.

ped was always PLAYER_PED_ID()
p1 was always true
p2 was always true
--]]
function TASK.SET_PED_CAN_PLAY_AMBIENT_IDLES(ped, blockIdleClips, removeIdleClipIfPlaying)
  native.invoke(
    Type.Void, 5555, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, blockIdleClips),
    arg(Type.Bool, removeIdleClipIfPlaying)
  )
end

-- void TASK_COMBAT_HATED_TARGETS_IN_AREA(Ped ped, float x, float y, float z, float radius, int combatFlags) // 0x4CF5F55DAC3280A0
--[[
Despite its name, it only attacks ONE hated target. The one closest to the specified position.
--]]
function TASK.TASK_COMBAT_HATED_TARGETS_IN_AREA(ped, x, y, z, radius, combatFlags)
  native.invoke(
    Type.Void, 5556, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Int, combatFlags)
  )
end

-- void TASK_COMBAT_HATED_TARGETS_AROUND_PED(Ped ped, float radius, int combatFlags) // 0x7BF835BB9E2698C8
--[[
Despite its name, it only attacks ONE hated target. The one closest hated target.

p2 seems to be always 0
--]]
function TASK.TASK_COMBAT_HATED_TARGETS_AROUND_PED(ped, radius, combatFlags)
  native.invoke(
    Type.Void, 5557, false,
    arg(Type.Ped, ped),
    arg(Type.Float, radius),
    arg(Type.Int, combatFlags)
  )
end

-- void TASK_COMBAT_HATED_TARGETS_AROUND_PED_TIMED(Ped ped, float radius, int time, int combatFlags) // 0x2BBA30B854534A0C
function TASK.TASK_COMBAT_HATED_TARGETS_AROUND_PED_TIMED(ped, radius, time, combatFlags)
  native.invoke(
    Type.Void, 5558, false,
    arg(Type.Ped, ped),
    arg(Type.Float, radius),
    arg(Type.Int, time),
    arg(Type.Int, combatFlags)
  )
end

-- void TASK_THROW_PROJECTILE(Ped ped, float x, float y, float z, int ignoreCollisionEntityIndex, BOOL createInvincibleProjectile) // 0x7285951DBF6B5A51
--[[
In every case of this native, I've only seen the first parameter passed as 0, although I believe it's a Ped after seeing tasks around it using 0. That's because it's used in a Sequence Task.

The last 3 parameters are definitely coordinates after seeing them passed in other scripts, and even being used straight from the player's coordinates.
---
It seems that - in the decompiled scripts - this native was used on a ped who was in a vehicle to throw a projectile out the window at the player. This is something any ped will naturally do if they have a throwable and they are doing driveby-combat (although not very accurately).
It is possible, however, that this is how SWAT throws smoke grenades at the player when in cover.
----------------------------------------------------
The first comment is right it definately is the ped as if you look in script finale_heist2b.c line 59628 in Xbox Scripts atleast you will see task_throw_projectile and the first param is Local_559[2 <14>] if you look above it a little bit line 59622 give_weapon_to_ped uses the same exact param Local_559[2 <14>] and we all know the first param of that native is ped. So it guaranteed has to be ped. 0 just may mean to use your ped by default for some reason.
--]]
function TASK.TASK_THROW_PROJECTILE(ped, x, y, z, ignoreCollisionEntityIndex, createInvincibleProjectile)
  native.invoke(
    Type.Void, 5559, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, ignoreCollisionEntityIndex),
    arg(Type.Bool, createInvincibleProjectile)
  )
end

-- void TASK_SWAP_WEAPON(Ped ped, BOOL drawWeapon) // 0xA21C51255B205245
function TASK.TASK_SWAP_WEAPON(ped, drawWeapon)
  native.invoke(
    Type.Void, 5560, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, drawWeapon)
  )
end

-- void TASK_RELOAD_WEAPON(Ped ped, BOOL drawWeapon) // 0x62D2916F56B9CD2D
--[[
The 2nd param (drawWeapon) is not implemented.

-----------------------------------------------------------------------

The only occurrence I found in a R* script ("assassin_construction.ysc.c4"):

            if (((v_3 < v_4) && (TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), 0x6a67a5cc) != 1)) && (v_5 > v_3)) {
                TASK::TASK_RELOAD_WEAPON(PLAYER::PLAYER_PED_ID(), 1);
            }
--]]
function TASK.TASK_RELOAD_WEAPON(ped, drawWeapon)
  native.invoke(
    Type.Void, 5561, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, drawWeapon)
  )
end

-- BOOL IS_PED_GETTING_UP(Ped ped) // 0x2A74E1D5F2F00EEC
function TASK.IS_PED_GETTING_UP(ped)
  return native.invoke(
    Type.Bool, 5562, false,
    arg(Type.Ped, ped)
  )
end

-- void TASK_WRITHE(Ped ped, Ped target, int minFireLoops, int startState, BOOL forceShootOnGround, int shootFromGroundTimer) // 0xCDDC2B77CE54AC6E
--[[
EX: Function.Call(Ped1, Ped2, Time, 0);

The last parameter is always 0 for some reason I do not know. The first parameter is the pedestrian who will writhe to the pedestrian in the other parameter. The third paremeter is how long until the Writhe task ends. When the task ends, the ped will die. If set to -1, he will not die automatically, and the task will continue until something causes it to end. This can be being touched by an entity, being shot, explosion, going into ragdoll, having task cleared. Anything that ends the current task will kill the ped at this point.



Third parameter does not appear to be time. The last parameter is not implemented (It's not used, regardless of value).
--]]
function TASK.TASK_WRITHE(ped, target, minFireLoops, startState, forceShootOnGround, shootFromGroundTimer)
  native.invoke(
    Type.Void, 5563, false,
    arg(Type.Ped, ped),
    arg(Type.Ped, target),
    arg(Type.Int, minFireLoops),
    arg(Type.Int, startState),
    arg(Type.Bool, forceShootOnGround),
    arg(Type.Int, shootFromGroundTimer)
  )
end

-- BOOL IS_PED_IN_WRITHE(Ped ped) // 0xDEB6D52126E7D640
--[[
This native checks if a ped is on the ground, in pain from a (gunshot) wound.
Returns `true` if the ped is in writhe, `false` otherwise.
--]]
function TASK.IS_PED_IN_WRITHE(ped)
  return native.invoke(
    Type.Bool, 5564, false,
    arg(Type.Ped, ped)
  )
end

-- void OPEN_PATROL_ROUTE(const char* patrolRoute) // 0xA36BFB5EE89F3D82
--[[
 patrolRoutes found in the b617d scripts:
 "miss_Ass0",
 "miss_Ass1",
 "miss_Ass2",
 "miss_Ass3",
 "miss_Ass4",
 "miss_Ass5",
 "miss_Ass6",
 "MISS_PATROL_6",
 "MISS_PATROL_7",
 "MISS_PATROL_8",
 "MISS_PATROL_9",
 "miss_Tower_01",
 "miss_Tower_02",
 "miss_Tower_03",
 "miss_Tower_04",
 "miss_Tower_05",
 "miss_Tower_06",
 "miss_Tower_07",
 "miss_Tower_08",
 "miss_Tower_10"
--]]
function TASK.OPEN_PATROL_ROUTE(patrolRoute)
  native.invoke(
    Type.Void, 5565, false,
    arg(Type.String, patrolRoute)
  )
end

-- void CLOSE_PATROL_ROUTE() // 0xB043ECA801B8CBC1
function TASK.CLOSE_PATROL_ROUTE()
  native.invoke(
    Type.Void, 5566, false
  )
end

-- void ADD_PATROL_ROUTE_NODE(int nodeId, const char* nodeType, float posX, float posY, float posZ, float headingX, float headingY, float headingZ, int duration) // 0x8EDF950167586B7C
--[[
Example: 
TASK::ADD_PATROL_ROUTE_NODE(2, "WORLD_HUMAN_GUARD_STAND", -193.4915, -2378.864990234375, 10.9719, -193.4915, -2378.864990234375, 10.9719, 3000);

p0 is between 0 and 4 in the scripts.

p1 is "WORLD_HUMAN_GUARD_STAND" or "StandGuard".

p2, p3 and p4 is only one parameter sometimes in the scripts. Most likely a Vector3 hence p2, p3 and p4 are coordinates. 
Examples: 
TASK::ADD_PATROL_ROUTE_NODE(1, "WORLD_HUMAN_GUARD_STAND", l_739[7/*3*/], 0.0, 0.0, 0.0, 0);

TASK::ADD_PATROL_ROUTE_NODE(1, "WORLD_HUMAN_GUARD_STAND", l_B0[17/*44*/]._f3, l_B0[17/*44*/]._f3, 2000);

p5, p6 and p7 are for example set to: 1599.0406494140625, 2713.392578125, 44.4309.

p8 is an int, often random set to for example: MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000).
--]]
function TASK.ADD_PATROL_ROUTE_NODE(nodeId, nodeType, posX, posY, posZ, headingX, headingY, headingZ, duration)
  native.invoke(
    Type.Void, 5567, false,
    arg(Type.Int, nodeId),
    arg(Type.String, nodeType),
    arg(Type.Float, posX),
    arg(Type.Float, posY),
    arg(Type.Float, posZ),
    arg(Type.Float, headingX),
    arg(Type.Float, headingY),
    arg(Type.Float, headingZ),
    arg(Type.Int, duration)
  )
end

-- void ADD_PATROL_ROUTE_LINK(int nodeId1, int nodeId2) // 0x23083260DEC3A551
function TASK.ADD_PATROL_ROUTE_LINK(nodeId1, nodeId2)
  native.invoke(
    Type.Void, 5568, false,
    arg(Type.Int, nodeId1),
    arg(Type.Int, nodeId2)
  )
end

-- void CREATE_PATROL_ROUTE() // 0xAF8A443CCC8018DC
function TASK.CREATE_PATROL_ROUTE()
  native.invoke(
    Type.Void, 5569, false
  )
end

-- void DELETE_PATROL_ROUTE(const char* patrolRoute) // 0x7767DD9D65E91319
--[[
From the b617d scripts:

TASK::DELETE_PATROL_ROUTE("miss_merc0");
TASK::DELETE_PATROL_ROUTE("miss_merc1");
TASK::DELETE_PATROL_ROUTE("miss_merc2");
TASK::DELETE_PATROL_ROUTE("miss_dock");
--]]
function TASK.DELETE_PATROL_ROUTE(patrolRoute)
  native.invoke(
    Type.Void, 5570, false,
    arg(Type.String, patrolRoute)
  )
end

-- BOOL GET_PATROL_TASK_INFO(Ped ped, int* timeLeftAtNode, int* nodeId) // 0x52F734CEBE20DFBA
function TASK.GET_PATROL_TASK_INFO(ped, timeLeftAtNode, nodeId)
  return native.invoke(
    Type.Bool, 5571, false,
    arg(Type.Ped, ped),
    arg(Type.Int, timeLeftAtNode),
    arg(Type.Int, nodeId)
  )
end

-- void TASK_PATROL(Ped ped, const char* patrolRouteName, int alertState, BOOL canChatToPeds, BOOL useHeadLookAt) // 0xBDA5DF49D080FE4E
--[[
After looking at some scripts the second parameter seems to be an id of some kind. Here are some I found from some R* scripts:

"miss_Tower_01" (this went from 01 - 10)
"miss_Ass0" (0, 4, 6, 3)
"MISS_PATROL_8"

I think they're patrol routes, but I'm not sure. And I believe the 3rd parameter is a BOOL, but I can't confirm other than only seeing 0 and 1 being passed.


As far as I can see the patrol routes names such as "miss_Ass0" have been defined earlier in the scripts. This leads me to believe we can defined our own new patrol routes by following the same approach. 
From the scripts

    TASK::OPEN_PATROL_ROUTE("miss_Ass0");
    TASK::ADD_PATROL_ROUTE_NODE(0, "WORLD_HUMAN_GUARD_STAND", l_738[0/*3*/], -139.4076690673828, -993.4732055664062, 26.2754, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));
    TASK::ADD_PATROL_ROUTE_NODE(1, "WORLD_HUMAN_GUARD_STAND", l_738[1/*3*/], -116.1391830444336, -987.4984130859375, 26.38541030883789, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));
    TASK::ADD_PATROL_ROUTE_NODE(2, "WORLD_HUMAN_GUARD_STAND", l_738[2/*3*/], -128.46847534179688, -979.0340576171875, 26.2754, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));
    TASK::ADD_PATROL_ROUTE_LINK(0, 1);
    TASK::ADD_PATROL_ROUTE_LINK(1, 2);
    TASK::ADD_PATROL_ROUTE_LINK(2, 0);
    TASK::CLOSE_PATROL_ROUTE();
    TASK::CREATE_PATROL_ROUTE();


--]]
function TASK.TASK_PATROL(ped, patrolRouteName, alertState, canChatToPeds, useHeadLookAt)
  native.invoke(
    Type.Void, 5572, false,
    arg(Type.Ped, ped),
    arg(Type.String, patrolRouteName),
    arg(Type.Int, alertState),
    arg(Type.Bool, canChatToPeds),
    arg(Type.Bool, useHeadLookAt)
  )
end

-- void TASK_STAY_IN_COVER(Ped ped) // 0xE5DA8615A6180789
--[[
Makes the ped run to take cover
--]]
function TASK.TASK_STAY_IN_COVER(ped)
  native.invoke(
    Type.Void, 5573, false,
    arg(Type.Ped, ped)
  )
end

-- void ADD_VEHICLE_SUBTASK_ATTACK_COORD(Ped ped, float x, float y, float z) // 0x5CF0D8F9BBA0DD75
--[[
x, y, z: offset in world coords from some entity.
--]]
function TASK.ADD_VEHICLE_SUBTASK_ATTACK_COORD(ped, x, y, z)
  native.invoke(
    Type.Void, 5574, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void ADD_VEHICLE_SUBTASK_ATTACK_PED(Ped ped, Ped target) // 0x85F462BADC7DA47F
function TASK.ADD_VEHICLE_SUBTASK_ATTACK_PED(ped, target)
  native.invoke(
    Type.Void, 5575, false,
    arg(Type.Ped, ped),
    arg(Type.Ped, target)
  )
end

-- void TASK_VEHICLE_SHOOT_AT_PED(Ped ped, Ped target, float fireTolerance) // 0x10AB107B887214D8
function TASK.TASK_VEHICLE_SHOOT_AT_PED(ped, target, fireTolerance)
  native.invoke(
    Type.Void, 5576, false,
    arg(Type.Ped, ped),
    arg(Type.Ped, target),
    arg(Type.Float, fireTolerance)
  )
end

-- void TASK_VEHICLE_AIM_AT_PED(Ped ped, Ped target) // 0xE41885592B08B097
function TASK.TASK_VEHICLE_AIM_AT_PED(ped, target)
  native.invoke(
    Type.Void, 5577, false,
    arg(Type.Ped, ped),
    arg(Type.Ped, target)
  )
end

-- void TASK_VEHICLE_SHOOT_AT_COORD(Ped ped, float x, float y, float z, float fireTolerance) // 0x5190796ED39C9B6D
function TASK.TASK_VEHICLE_SHOOT_AT_COORD(ped, x, y, z, fireTolerance)
  native.invoke(
    Type.Void, 5578, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, fireTolerance)
  )
end

-- void TASK_VEHICLE_AIM_AT_COORD(Ped ped, float x, float y, float z) // 0x447C1E9EF844BC0F
function TASK.TASK_VEHICLE_AIM_AT_COORD(ped, x, y, z)
  native.invoke(
    Type.Void, 5579, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void TASK_VEHICLE_GOTO_NAVMESH(Ped ped, Vehicle vehicle, float x, float y, float z, float speed, int behaviorFlag, float stoppingRange) // 0x195AEEB13CEFE2EE
--[[
Differs from TASK_VEHICLE_DRIVE_TO_COORDS in that it will pick the shortest possible road route without taking one-way streets and other "road laws" into consideration.

WARNING:
A behaviorFlag value of 0 will result in a clunky, stupid driver!

Recommended settings:
speed = 30.0f,
behaviorFlag = 156, 
stoppingRange = 5.0f;

If you simply want to have your driver move to a fixed location, call it only once, or, when necessary in the event of interruption. 

If using this to continually follow a Ped who is on foot:  You will need to run this in a tick loop.  Call it in with the Ped's updated coordinates every 20 ticks or so and you will have one hell of a smart, fast-reacting NPC driver -- provided he doesn't get stuck.  If your update frequency is too fast, the Ped may not have enough time to figure his way out of being stuck, and thus, remain stuck.  One way around this would be to implement an "anti-stuck" mechanism, which allows the driver to realize he's stuck, temporarily pause the tick, unstuck, then resume the tick.

EDIT:  This is being discussed in more detail at http://gtaforums.com/topic/818504-any-idea-on-how-to-make-peds-clever-and-insanely-fast-c/  
--]]
function TASK.TASK_VEHICLE_GOTO_NAVMESH(ped, vehicle, x, y, z, speed, behaviorFlag, stoppingRange)
  native.invoke(
    Type.Void, 5580, false,
    arg(Type.Ped, ped),
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, speed),
    arg(Type.Int, behaviorFlag),
    arg(Type.Float, stoppingRange)
  )
end

-- void TASK_GO_TO_COORD_WHILE_AIMING_AT_COORD(Ped ped, float x, float y, float z, float aimAtX, float aimAtY, float aimAtZ, float moveBlendRatio, BOOL shoot, float targetRadius, float slowDistance, BOOL useNavMesh, int navFlags, BOOL instantBlendToAim, Hash firingPattern) // 0x11315AB3385B8AC0
--[[
movement_speed: mostly 2f, but also 1/1.2f, etc.
p8: always false
p9: 2f
p10: 0.5f
p11: true
p12: 0 / 512 / 513, etc.
p13: 0
firing_pattern: ${firing_pattern_full_auto}, 0xC6EE6B4C
--]]
function TASK.TASK_GO_TO_COORD_WHILE_AIMING_AT_COORD(ped, x, y, z, aimAtX, aimAtY, aimAtZ, moveBlendRatio, shoot, targetRadius, slowDistance, useNavMesh, navFlags, instantBlendToAim, firingPattern)
  native.invoke(
    Type.Void, 5581, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, aimAtX),
    arg(Type.Float, aimAtY),
    arg(Type.Float, aimAtZ),
    arg(Type.Float, moveBlendRatio),
    arg(Type.Bool, shoot),
    arg(Type.Float, targetRadius),
    arg(Type.Float, slowDistance),
    arg(Type.Bool, useNavMesh),
    arg(Type.Int, navFlags),
    arg(Type.Bool, instantBlendToAim),
    arg(Type.Hash, firingPattern)
  )
end

-- void TASK_GO_TO_COORD_WHILE_AIMING_AT_ENTITY(Ped ped, float x, float y, float z, Entity aimAtID, float moveBlendRatio, BOOL shoot, float targetRadius, float slowDistance, BOOL useNavMesh, int navFlags, BOOL instantBlendToAim, Hash firingPattern, int time) // 0xB2A16444EAD9AE47
function TASK.TASK_GO_TO_COORD_WHILE_AIMING_AT_ENTITY(ped, x, y, z, aimAtID, moveBlendRatio, shoot, targetRadius, slowDistance, useNavMesh, navFlags, instantBlendToAim, firingPattern, time)
  native.invoke(
    Type.Void, 5582, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Entity, aimAtID),
    arg(Type.Float, moveBlendRatio),
    arg(Type.Bool, shoot),
    arg(Type.Float, targetRadius),
    arg(Type.Float, slowDistance),
    arg(Type.Bool, useNavMesh),
    arg(Type.Int, navFlags),
    arg(Type.Bool, instantBlendToAim),
    arg(Type.Hash, firingPattern),
    arg(Type.Int, time)
  )
end

-- void TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(Ped pedHandle, float goToLocationX, float goToLocationY, float goToLocationZ, float focusLocationX, float focusLocationY, float focusLocationZ, float speed, BOOL shootAtEnemies, float distanceToStopAt, float noRoadsDistance, BOOL useNavMesh, int navFlags, int taskFlags, Hash firingPattern) // 0xA55547801EB331FC
--[[
The ped will walk or run towards goToLocation, aiming towards goToLocation or focusLocation (depending on the aimingFlag) and shooting if shootAtEnemies = true to any enemy in his path.

If the ped is closer than noRoadsDistance, the ped will ignore pathing/navmesh and go towards goToLocation directly. This could cause the ped to get stuck behind tall walls if the goToLocation is on the other side. To avoid this, use 0.0f and the ped will always use pathing/navmesh to reach his destination.

If the speed is set to 0.0f, the ped will just stand there while aiming, if set to 1.0f he will walk while aiming, 2.0f will run while aiming.

The ped will stop aiming when he is closer than distanceToStopAt to goToLocation.

I still can't figure out what unkTrue is used for. I don't notice any difference if I set it to false but in the decompiled scripts is always true.

I think that unkFlag, like the driving styles, could be a flag that "work as a list of 32 bits converted to a decimal integer. Each bit acts as a flag, and enables or disables a function". What leads me to this conclusion is the fact that in the decompiled scripts, unkFlag takes values like: 0, 1, 5 (101 in binary) and 4097 (4096 + 1 or 1000000000001 in binary). For now, I don't know what behavior enable or disable this possible flag so I leave it at 0.

Note: After some testing, using unkFlag = 16 (0x10) enables the use of sidewalks while moving towards goToLocation.

The aimingFlag takes 2 values: 0 to aim at the focusLocation, 1 to aim at where the ped is heading (goToLocation).

Example:

enum AimFlag
{
   AimAtFocusLocation,
   AimAtGoToLocation
};

Vector3 goToLocation1 = { 996.2867f, 0, -2143.044f, 0, 28.4763f, 0 }; // remember the padding.

Vector3 goToLocation2 = { 990.2867f, 0, -2140.044f, 0, 28.4763f, 0 }; // remember the padding.

Vector3 focusLocation = { 994.3478f, 0, -2136.118f, 0, 29.2463f, 0 }; // the coord z should be a little higher, around +1.0f to avoid aiming at the ground

// 1st example
TASK::TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(pedHandle, goToLocation1.x, goToLocation1.y, goToLocation1.z, focusLocation.x, focusLocation.y, focusLocation.z, 2.0f /*run*/, true /*shoot*/, 3.0f /*stop at*/, 0.0f /*noRoadsDistance*/, true /*always true*/, 0 /*possible flag*/, AimFlag::AimAtGoToLocation, -957453492 /*FullAuto pattern*/);

// 2nd example
TASK::TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(pedHandle, goToLocation2.x, goToLocation2.y, goToLocation2.z, focusLocation.x, focusLocation.y, focusLocation.z, 1.0f /*walk*/, false /*don't shoot*/, 3.0f /*stop at*/, 0.0f /*noRoadsDistance*/, true /*always true*/, 0 /*possible flag*/, AimFlag::AimAtFocusLocation, -957453492 /*FullAuto pattern*/);


1st example: The ped (pedhandle) will run towards goToLocation1. While running and aiming towards goToLocation1, the ped will shoot on sight to any enemy in his path, using "FullAuto" firing pattern. The ped will stop once he is closer than distanceToStopAt to goToLocation1.

2nd example: The ped will walk towards goToLocation2. This time, while walking towards goToLocation2 and aiming at focusLocation, the ped will point his weapon on sight to any enemy in his path without shooting. The ped will stop once he is closer than distanceToStopAt to goToLocation2.
--]]
function TASK.TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(pedHandle, goToLocationX, goToLocationY, goToLocationZ, focusLocationX, focusLocationY, focusLocationZ, speed, shootAtEnemies, distanceToStopAt, noRoadsDistance, useNavMesh, navFlags, taskFlags, firingPattern)
  native.invoke(
    Type.Void, 5583, false,
    arg(Type.Ped, pedHandle),
    arg(Type.Float, goToLocationX),
    arg(Type.Float, goToLocationY),
    arg(Type.Float, goToLocationZ),
    arg(Type.Float, focusLocationX),
    arg(Type.Float, focusLocationY),
    arg(Type.Float, focusLocationZ),
    arg(Type.Float, speed),
    arg(Type.Bool, shootAtEnemies),
    arg(Type.Float, distanceToStopAt),
    arg(Type.Float, noRoadsDistance),
    arg(Type.Bool, useNavMesh),
    arg(Type.Int, navFlags),
    arg(Type.Int, taskFlags),
    arg(Type.Hash, firingPattern)
  )
end

-- void TASK_GO_TO_ENTITY_WHILE_AIMING_AT_COORD(Ped ped, Entity entity, float aimX, float aimY, float aimZ, float moveBlendRatio, BOOL shoot, float targetRadius, float slowDistance, BOOL useNavMesh, BOOL instantBlendToAim, Hash firingPattern) // 0x04701832B739DCE5
function TASK.TASK_GO_TO_ENTITY_WHILE_AIMING_AT_COORD(ped, entity, aimX, aimY, aimZ, moveBlendRatio, shoot, targetRadius, slowDistance, useNavMesh, instantBlendToAim, firingPattern)
  native.invoke(
    Type.Void, 5584, false,
    arg(Type.Ped, ped),
    arg(Type.Entity, entity),
    arg(Type.Float, aimX),
    arg(Type.Float, aimY),
    arg(Type.Float, aimZ),
    arg(Type.Float, moveBlendRatio),
    arg(Type.Bool, shoot),
    arg(Type.Float, targetRadius),
    arg(Type.Float, slowDistance),
    arg(Type.Bool, useNavMesh),
    arg(Type.Bool, instantBlendToAim),
    arg(Type.Hash, firingPattern)
  )
end

-- void TASK_GO_TO_ENTITY_WHILE_AIMING_AT_ENTITY(Ped ped, Entity entityToWalkTo, Entity entityToAimAt, float speed, BOOL shootatEntity, float targetRadius, float slowDistance, BOOL useNavMesh, BOOL instantBlendToAim, Hash firingPattern) // 0x97465886D35210E9
--[[
shootatEntity:
If true, peds will shoot at Entity till it is dead.
If false, peds will just walk till they reach the entity and will cease shooting.
--]]
function TASK.TASK_GO_TO_ENTITY_WHILE_AIMING_AT_ENTITY(ped, entityToWalkTo, entityToAimAt, speed, shootatEntity, targetRadius, slowDistance, useNavMesh, instantBlendToAim, firingPattern)
  native.invoke(
    Type.Void, 5585, false,
    arg(Type.Ped, ped),
    arg(Type.Entity, entityToWalkTo),
    arg(Type.Entity, entityToAimAt),
    arg(Type.Float, speed),
    arg(Type.Bool, shootatEntity),
    arg(Type.Float, targetRadius),
    arg(Type.Float, slowDistance),
    arg(Type.Bool, useNavMesh),
    arg(Type.Bool, instantBlendToAim),
    arg(Type.Hash, firingPattern)
  )
end

-- void SET_HIGH_FALL_TASK(Ped ped, int minTime, int maxTime, int entryType) // 0x8C825BDC7741D37C
--[[
Makes the ped ragdoll like when falling from a great height
--]]
function TASK.SET_HIGH_FALL_TASK(ped, minTime, maxTime, entryType)
  native.invoke(
    Type.Void, 5586, false,
    arg(Type.Ped, ped),
    arg(Type.Int, minTime),
    arg(Type.Int, maxTime),
    arg(Type.Int, entryType)
  )
end

-- void REQUEST_WAYPOINT_RECORDING(const char* name) // 0x9EEFB62EB27B5792
--[[
Full list of waypoint recordings by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/waypointRecordings.json
For a full list of the points, see here: goo.gl/wIH0vn

Max number of loaded recordings is 32.
--]]
function TASK.REQUEST_WAYPOINT_RECORDING(name)
  native.invoke(
    Type.Void, 5587, false,
    arg(Type.String, name)
  )
end

-- BOOL GET_IS_WAYPOINT_RECORDING_LOADED(const char* name) // 0xCB4E8BE8A0063C5D
--[[
Full list of waypoint recordings by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/waypointRecordings.json
--]]
function TASK.GET_IS_WAYPOINT_RECORDING_LOADED(name)
  return native.invoke(
    Type.Bool, 5588, false,
    arg(Type.String, name)
  )
end

-- void REMOVE_WAYPOINT_RECORDING(const char* name) // 0xFF1B8B4AA1C25DC8
--[[
Full list of waypoint recordings by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/waypointRecordings.json
--]]
function TASK.REMOVE_WAYPOINT_RECORDING(name)
  native.invoke(
    Type.Void, 5589, false,
    arg(Type.String, name)
  )
end

-- BOOL WAYPOINT_RECORDING_GET_NUM_POINTS(const char* name, int* points) // 0x5343532C01A07234
--[[
Full list of waypoint recordings by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/waypointRecordings.json
For a full list of the points, see here: goo.gl/wIH0vn
--]]
function TASK.WAYPOINT_RECORDING_GET_NUM_POINTS(name, points)
  return native.invoke(
    Type.Bool, 5590, false,
    arg(Type.String, name),
    arg(Type.Int, points)
  )
end

-- BOOL WAYPOINT_RECORDING_GET_COORD(const char* name, int point, Vector3* coord) // 0x2FB897405C90B361
--[[
Full list of waypoint recordings by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/waypointRecordings.json
For a full list of the points, see here: goo.gl/wIH0vn
--]]
function TASK.WAYPOINT_RECORDING_GET_COORD(name, point, coord)
  return native.invoke(
    Type.Bool, 5591, true,
    arg(Type.String, name),
    arg(Type.Int, point),
    arg(Type.Vector3, coord)
  )
end

-- float WAYPOINT_RECORDING_GET_SPEED_AT_POINT(const char* name, int point) // 0x005622AEBC33ACA9
--[[
Full list of waypoint recordings by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/waypointRecordings.json
--]]
function TASK.WAYPOINT_RECORDING_GET_SPEED_AT_POINT(name, point)
  return native.invoke(
    Type.Float, 5592, false,
    arg(Type.String, name),
    arg(Type.Int, point)
  )
end

-- BOOL WAYPOINT_RECORDING_GET_CLOSEST_WAYPOINT(const char* name, float x, float y, float z, int* point) // 0xB629A298081F876F
--[[
Full list of waypoint recordings by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/waypointRecordings.json
For a full list of the points, see here: goo.gl/wIH0vn
--]]
function TASK.WAYPOINT_RECORDING_GET_CLOSEST_WAYPOINT(name, x, y, z, point)
  return native.invoke(
    Type.Bool, 5593, false,
    arg(Type.String, name),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, point)
  )
end

-- void TASK_FOLLOW_WAYPOINT_RECORDING(Ped ped, const char* name, int p2, int p3, int p4) // 0x0759591819534F7B
function TASK.TASK_FOLLOW_WAYPOINT_RECORDING(ped, name, p2, p3, p4)
  native.invoke(
    Type.Void, 5594, false,
    arg(Type.Ped, ped),
    arg(Type.String, name),
    arg(Type.Int, p2),
    arg(Type.Int, p3),
    arg(Type.Int, p4)
  )
end

-- BOOL IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_PED(Ped ped) // 0xE03B3F2D3DC59B64
function TASK.IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_PED(ped)
  return native.invoke(
    Type.Bool, 5595, false,
    arg(Type.Ped, ped)
  )
end

-- int GET_PED_WAYPOINT_PROGRESS(Ped ped) // 0x2720AAA75001E094
function TASK.GET_PED_WAYPOINT_PROGRESS(ped)
  return native.invoke(
    Type.Int, 5596, false,
    arg(Type.Ped, ped)
  )
end

-- float GET_PED_WAYPOINT_DISTANCE(Any p0) // 0xE6A877C64CAF1BC5
function TASK.GET_PED_WAYPOINT_DISTANCE(p0)
  return native.invoke(
    Type.Float, 5597, false,
    arg(Type.Any, p0)
  )
end

-- BOOL SET_PED_WAYPOINT_ROUTE_OFFSET(Ped ped, float x, float y, float z) // 0xED98E10B0AFCE4B4
function TASK.SET_PED_WAYPOINT_ROUTE_OFFSET(ped, x, y, z)
  return native.invoke(
    Type.Bool, 5598, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- float GET_WAYPOINT_DISTANCE_ALONG_ROUTE(const char* name, int point) // 0xA5B769058763E497
function TASK.GET_WAYPOINT_DISTANCE_ALONG_ROUTE(name, point)
  return native.invoke(
    Type.Float, 5599, false,
    arg(Type.String, name),
    arg(Type.Int, point)
  )
end

-- BOOL WAYPOINT_PLAYBACK_GET_IS_PAUSED(Any p0) // 0x701375A7D43F01CB
function TASK.WAYPOINT_PLAYBACK_GET_IS_PAUSED(p0)
  return native.invoke(
    Type.Bool, 5600, false,
    arg(Type.Any, p0)
  )
end

-- void WAYPOINT_PLAYBACK_PAUSE(Any p0, BOOL p1, BOOL p2) // 0x0F342546AA06FED5
function TASK.WAYPOINT_PLAYBACK_PAUSE(p0, p1, p2)
  native.invoke(
    Type.Void, 5601, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void WAYPOINT_PLAYBACK_RESUME(Any p0, BOOL p1, Any p2, Any p3) // 0x244F70C84C547D2D
function TASK.WAYPOINT_PLAYBACK_RESUME(p0, p1, p2, p3)
  native.invoke(
    Type.Void, 5602, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3)
  )
end

-- void WAYPOINT_PLAYBACK_OVERRIDE_SPEED(Any p0, float p1, BOOL p2) // 0x7D7D2B47FA788E85
function TASK.WAYPOINT_PLAYBACK_OVERRIDE_SPEED(p0, p1, p2)
  native.invoke(
    Type.Void, 5603, false,
    arg(Type.Any, p0),
    arg(Type.Float, p1),
    arg(Type.Bool, p2)
  )
end

-- void WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED(Any p0) // 0x6599D834B12D0800
function TASK.WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED(p0)
  native.invoke(
    Type.Void, 5604, false,
    arg(Type.Any, p0)
  )
end

-- void USE_WAYPOINT_RECORDING_AS_ASSISTED_MOVEMENT_ROUTE(const char* name, BOOL p1, float p2, float p3) // 0x5A353B8E6B1095B5
function TASK.USE_WAYPOINT_RECORDING_AS_ASSISTED_MOVEMENT_ROUTE(name, p1, p2, p3)
  native.invoke(
    Type.Void, 5605, false,
    arg(Type.String, name),
    arg(Type.Bool, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3)
  )
end

-- void WAYPOINT_PLAYBACK_START_AIMING_AT_PED(Ped ped, Ped target, BOOL p2) // 0x20E330937C399D29
function TASK.WAYPOINT_PLAYBACK_START_AIMING_AT_PED(ped, target, p2)
  native.invoke(
    Type.Void, 5606, false,
    arg(Type.Ped, ped),
    arg(Type.Ped, target),
    arg(Type.Bool, p2)
  )
end

-- void WAYPOINT_PLAYBACK_START_AIMING_AT_COORD(Ped ped, float x, float y, float z, BOOL p4) // 0x8968400D900ED8B3
function TASK.WAYPOINT_PLAYBACK_START_AIMING_AT_COORD(ped, x, y, z, p4)
  native.invoke(
    Type.Void, 5607, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Bool, p4)
  )
end

-- void WAYPOINT_PLAYBACK_START_SHOOTING_AT_PED(Ped ped, Ped ped2, BOOL p2, BOOL p3) // 0xE70BA7B90F8390DC
function TASK.WAYPOINT_PLAYBACK_START_SHOOTING_AT_PED(ped, ped2, p2, p3)
  native.invoke(
    Type.Void, 5608, false,
    arg(Type.Ped, ped),
    arg(Type.Ped, ped2),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3)
  )
end

-- void WAYPOINT_PLAYBACK_START_SHOOTING_AT_COORD(Ped ped, float x, float y, float z, BOOL p4, Hash firingPattern) // 0x057A25CFCC9DB671
function TASK.WAYPOINT_PLAYBACK_START_SHOOTING_AT_COORD(ped, x, y, z, p4, firingPattern)
  native.invoke(
    Type.Void, 5609, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Bool, p4),
    arg(Type.Hash, firingPattern)
  )
end

-- void WAYPOINT_PLAYBACK_STOP_AIMING_OR_SHOOTING(Ped ped) // 0x47EFA040EBB8E2EA
function TASK.WAYPOINT_PLAYBACK_STOP_AIMING_OR_SHOOTING(ped)
  native.invoke(
    Type.Void, 5610, false,
    arg(Type.Ped, ped)
  )
end

-- void ASSISTED_MOVEMENT_REQUEST_ROUTE(const char* route) // 0x817268968605947A
--[[
Routes: "1_FIBStairs", "2_FIBStairs", "3_FIBStairs", "4_FIBStairs", "5_FIBStairs", "5_TowardsFire", "6a_FIBStairs", "7_FIBStairs", "8_FIBStairs", "Aprtmnt_1", "AssAfterLift", "ATM_1", "coroner2", "coroner_stairs", "f5_jimmy1", "fame1", "family5b", "family5c", "Family5d", "family5d", "FIB_Glass1", "FIB_Glass2", "FIB_Glass3", "finaBroute1A", "finalb1st", "finalB1sta", "finalbround", "finalbroute2", "Hairdresser1", "jan_foyet_ft_door", "Jo_3", "Lemar1", "Lemar2", "mansion_1", "Mansion_1", "pols_1", "pols_2", "pols_3", "pols_4", "pols_5", "pols_6", "pols_7", "pols_8", "Pro_S1", "Pro_S1a", "Pro_S2", "Towards_case", "trev_steps", "tunrs1", "tunrs2", "tunrs3", "Wave01457s"
--]]
function TASK.ASSISTED_MOVEMENT_REQUEST_ROUTE(route)
  native.invoke(
    Type.Void, 5611, false,
    arg(Type.String, route)
  )
end

-- void ASSISTED_MOVEMENT_REMOVE_ROUTE(const char* route) // 0x3548536485DD792B
function TASK.ASSISTED_MOVEMENT_REMOVE_ROUTE(route)
  native.invoke(
    Type.Void, 5612, false,
    arg(Type.String, route)
  )
end

-- BOOL ASSISTED_MOVEMENT_IS_ROUTE_LOADED(const char* route) // 0x60F9A4393A21F741
function TASK.ASSISTED_MOVEMENT_IS_ROUTE_LOADED(route)
  return native.invoke(
    Type.Bool, 5613, false,
    arg(Type.String, route)
  )
end

-- void ASSISTED_MOVEMENT_SET_ROUTE_PROPERTIES(const char* route, int props) // 0xD5002D78B7162E1B
function TASK.ASSISTED_MOVEMENT_SET_ROUTE_PROPERTIES(route, props)
  native.invoke(
    Type.Void, 5614, false,
    arg(Type.String, route),
    arg(Type.Int, props)
  )
end

-- void ASSISTED_MOVEMENT_OVERRIDE_LOAD_DISTANCE_THIS_FRAME(float dist) // 0x13945951E16EF912
function TASK.ASSISTED_MOVEMENT_OVERRIDE_LOAD_DISTANCE_THIS_FRAME(dist)
  native.invoke(
    Type.Void, 5615, false,
    arg(Type.Float, dist)
  )
end

-- void TASK_VEHICLE_FOLLOW_WAYPOINT_RECORDING(Ped ped, Vehicle vehicle, const char* WPRecording, int p3, int p4, int p5, int p6, float p7, BOOL p8, float p9) // 0x3123FAA6DB1CF7ED
--[[


p2 = Waypoint recording string (found in update\update.rpf\x64\levels\gta5\waypointrec.rpf
p3 = 786468
p4 = 0
p5 = 16
p6 = -1 (angle?)
p7/8/9 = usually v3.zero
p10 = bool (repeat?)
p11 = 1073741824

Full list of waypoint recordings by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/waypointRecordings.json
--]]
function TASK.TASK_VEHICLE_FOLLOW_WAYPOINT_RECORDING(ped, vehicle, WPRecording, p3, p4, p5, p6, p7, p8, p9)
  native.invoke(
    Type.Void, 5616, false,
    arg(Type.Ped, ped),
    arg(Type.Vehicle, vehicle),
    arg(Type.String, WPRecording),
    arg(Type.Int, p3),
    arg(Type.Int, p4),
    arg(Type.Int, p5),
    arg(Type.Int, p6),
    arg(Type.Float, p7),
    arg(Type.Bool, p8),
    arg(Type.Float, p9)
  )
end

-- BOOL IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_VEHICLE(Vehicle vehicle) // 0xF5134943EA29868C
function TASK.IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_VEHICLE(vehicle)
  return native.invoke(
    Type.Bool, 5617, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- int GET_VEHICLE_WAYPOINT_PROGRESS(Vehicle vehicle) // 0x9824CFF8FC66E159
function TASK.GET_VEHICLE_WAYPOINT_PROGRESS(vehicle)
  return native.invoke(
    Type.Int, 5618, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- int GET_VEHICLE_WAYPOINT_TARGET_POINT(Vehicle vehicle) // 0x416B62AC8B9E5BBD
function TASK.GET_VEHICLE_WAYPOINT_TARGET_POINT(vehicle)
  return native.invoke(
    Type.Int, 5619, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void VEHICLE_WAYPOINT_PLAYBACK_PAUSE(Vehicle vehicle) // 0x8A4E6AC373666BC5
function TASK.VEHICLE_WAYPOINT_PLAYBACK_PAUSE(vehicle)
  native.invoke(
    Type.Void, 5620, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void VEHICLE_WAYPOINT_PLAYBACK_RESUME(Vehicle vehicle) // 0xDC04FCAA7839D492
function TASK.VEHICLE_WAYPOINT_PLAYBACK_RESUME(vehicle)
  native.invoke(
    Type.Void, 5621, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void VEHICLE_WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED(Vehicle vehicle) // 0x5CEB25A7D2848963
function TASK.VEHICLE_WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED(vehicle)
  native.invoke(
    Type.Void, 5622, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void VEHICLE_WAYPOINT_PLAYBACK_OVERRIDE_SPEED(Vehicle vehicle, float speed) // 0x121F0593E0A431D7
function TASK.VEHICLE_WAYPOINT_PLAYBACK_OVERRIDE_SPEED(vehicle, speed)
  native.invoke(
    Type.Void, 5623, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, speed)
  )
end

-- void TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(Ped ped, BOOL toggle) // 0x90D2156198831D69
--[[
I cant believe I have to define this, this is one of the best natives.

It makes the ped ignore basically all shocking events around it. Occasionally the ped may comment or gesture, but other than that they just continue their daily activities. This includes shooting and wounding the ped. And - most importantly - they do not flee.

Since it is a task, every time the native is called the ped will stop for a moment. 
--]]
function TASK.TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(ped, toggle)
  native.invoke(
    Type.Void, 5624, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void TASK_FORCE_MOTION_STATE(Ped ped, Hash state, BOOL forceRestart) // 0x4F056E1AFFEF17AB
--[[
p2 always false

[30/03/2017] ins1de :

See FORCE_PED_MOTION_STATE
--]]
function TASK.TASK_FORCE_MOTION_STATE(ped, state, forceRestart)
  native.invoke(
    Type.Void, 5625, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, state),
    arg(Type.Bool, forceRestart)
  )
end

-- void TASK_MOVE_NETWORK_BY_NAME(Ped ped, const char* task, float multiplier, BOOL allowOverrideCloneUpdate, const char* animDict, int flags) // 0x2D537BA194896636
--[[
Example:
TASK::TASK_MOVE_NETWORK_BY_NAME(PLAYER::PLAYER_PED_ID(), "arm_wrestling_sweep_paired_a_rev3", 0.0f, true, "mini@arm_wrestling", 0);
--]]
function TASK.TASK_MOVE_NETWORK_BY_NAME(ped, task, multiplier, allowOverrideCloneUpdate, animDict, flags)
  native.invoke(
    Type.Void, 5626, false,
    arg(Type.Ped, ped),
    arg(Type.String, task),
    arg(Type.Float, multiplier),
    arg(Type.Bool, allowOverrideCloneUpdate),
    arg(Type.String, animDict),
    arg(Type.Int, flags)
  )
end

-- void TASK_MOVE_NETWORK_ADVANCED_BY_NAME(Ped ped, const char* network, float x, float y, float z, float rotX, float rotY, float rotZ, int rotOrder, float blendDuration, BOOL allowOverrideCloneUpdate, const char* animDict, int flags) // 0xD5B35BEA41919ACB
--[[
Example:
TASK::TASK_MOVE_NETWORK_ADVANCED_BY_NAME(PLAYER::PLAYER_PED_ID(), "minigame_tattoo_michael_parts", 324.13f, 181.29f, 102.6f, 0.0f, 0.0f, 22.32f, 2, 0, false, 0, 0);
--]]
function TASK.TASK_MOVE_NETWORK_ADVANCED_BY_NAME(ped, network, x, y, z, rotX, rotY, rotZ, rotOrder, blendDuration, allowOverrideCloneUpdate, animDict, flags)
  native.invoke(
    Type.Void, 5627, false,
    arg(Type.Ped, ped),
    arg(Type.String, network),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, rotX),
    arg(Type.Float, rotY),
    arg(Type.Float, rotZ),
    arg(Type.Int, rotOrder),
    arg(Type.Float, blendDuration),
    arg(Type.Bool, allowOverrideCloneUpdate),
    arg(Type.String, animDict),
    arg(Type.Int, flags)
  )
end

-- void TASK_MOVE_NETWORK_BY_NAME_WITH_INIT_PARAMS(Ped ped, const char* network, int* initialParameters, float blendDuration, BOOL allowOverrideCloneUpdate, const char* animDict, int flags) // 0x3D45B0B355C5E0C9
--[[
Used only once in the scripts (am_mp_nightclub)
--]]
function TASK.TASK_MOVE_NETWORK_BY_NAME_WITH_INIT_PARAMS(ped, network, initialParameters, blendDuration, allowOverrideCloneUpdate, animDict, flags)
  native.invoke(
    Type.Void, 5628, false,
    arg(Type.Ped, ped),
    arg(Type.String, network),
    arg(Type.Int, initialParameters),
    arg(Type.Float, blendDuration),
    arg(Type.Bool, allowOverrideCloneUpdate),
    arg(Type.String, animDict),
    arg(Type.Int, flags)
  )
end

-- void TASK_MOVE_NETWORK_ADVANCED_BY_NAME_WITH_INIT_PARAMS(Ped ped, const char* network, int* initialParameters, float x, float y, float z, float rotX, float rotY, float rotZ, int rotOrder, float blendDuration, BOOL allowOverrideCloneUpdate, const char* dictionary, int flags) // 0x29682E2CCF21E9B5
function TASK.TASK_MOVE_NETWORK_ADVANCED_BY_NAME_WITH_INIT_PARAMS(ped, network, initialParameters, x, y, z, rotX, rotY, rotZ, rotOrder, blendDuration, allowOverrideCloneUpdate, dictionary, flags)
  native.invoke(
    Type.Void, 5629, false,
    arg(Type.Ped, ped),
    arg(Type.String, network),
    arg(Type.Int, initialParameters),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, rotX),
    arg(Type.Float, rotY),
    arg(Type.Float, rotZ),
    arg(Type.Int, rotOrder),
    arg(Type.Float, blendDuration),
    arg(Type.Bool, allowOverrideCloneUpdate),
    arg(Type.String, dictionary),
    arg(Type.Int, flags)
  )
end

-- BOOL IS_TASK_MOVE_NETWORK_ACTIVE(Ped ped) // 0x921CE12C489C4C41
function TASK.IS_TASK_MOVE_NETWORK_ACTIVE(ped)
  return native.invoke(
    Type.Bool, 5630, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_TASK_MOVE_NETWORK_READY_FOR_TRANSITION(Ped ped) // 0x30ED88D5E0C56A37
function TASK.IS_TASK_MOVE_NETWORK_READY_FOR_TRANSITION(ped)
  return native.invoke(
    Type.Bool, 5631, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL REQUEST_TASK_MOVE_NETWORK_STATE_TRANSITION(Ped ped, const char* name) // 0xD01015C7316AE176
function TASK.REQUEST_TASK_MOVE_NETWORK_STATE_TRANSITION(ped, name)
  return native.invoke(
    Type.Bool, 5632, false,
    arg(Type.Ped, ped),
    arg(Type.String, name)
  )
end

-- BOOL SET_EXPECTED_CLONE_NEXT_TASK_MOVE_NETWORK_STATE(Ped ped, const char* state) // 0xAB13A5565480B6D9
--[[
Used only once in the scripts (fm_mission_controller) like so:

TASK::SET_EXPECTED_CLONE_NEXT_TASK_MOVE_NETWORK_STATE(iLocal_3160, "Cutting");
--]]
function TASK.SET_EXPECTED_CLONE_NEXT_TASK_MOVE_NETWORK_STATE(ped, state)
  return native.invoke(
    Type.Bool, 5633, false,
    arg(Type.Ped, ped),
    arg(Type.String, state)
  )
end

-- const char* GET_TASK_MOVE_NETWORK_STATE(Ped ped) // 0x717E4D1F2048376D
function TASK.GET_TASK_MOVE_NETWORK_STATE(ped)
  return native.invoke(
    Type.Const char, 5634, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_TASK_MOVE_NETWORK_ANIM_SET(Ped ped, Hash clipSet, Hash variableClipSet) // 0x8423541E8B3A1589
function TASK.SET_TASK_MOVE_NETWORK_ANIM_SET(ped, clipSet, variableClipSet)
  native.invoke(
    Type.Void, 5635, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, clipSet),
    arg(Type.Hash, variableClipSet)
  )
end

-- void SET_TASK_MOVE_NETWORK_SIGNAL_FLOAT(Ped ped, const char* signalName, float value) // 0xD5BB4025AE449A4E
--[[
signalName - "Phase", "Wobble", "x_axis","y_axis","introphase","speed".
p2 - From what i can see it goes up to 1f (maybe).

Example: TASK::SET_TASK_MOVE_NETWORK_SIGNAL_FLOAT(PLAYER::PLAYER_PED_ID(), "Phase", 0.5);
--]]
function TASK.SET_TASK_MOVE_NETWORK_SIGNAL_FLOAT(ped, signalName, value)
  native.invoke(
    Type.Void, 5636, false,
    arg(Type.Ped, ped),
    arg(Type.String, signalName),
    arg(Type.Float, value)
  )
end

-- void SET_TASK_MOVE_NETWORK_SIGNAL_LOCAL_FLOAT(Ped ped, const char* signalName, float value) // 0x373EF409B82697A3
function TASK.SET_TASK_MOVE_NETWORK_SIGNAL_LOCAL_FLOAT(ped, signalName, value)
  native.invoke(
    Type.Void, 5637, false,
    arg(Type.Ped, ped),
    arg(Type.String, signalName),
    arg(Type.Float, value)
  )
end

-- void SET_TASK_MOVE_NETWORK_SIGNAL_FLOAT_LERP_RATE(Ped ped, const char* signalName, float value) // 0x8634CEF2522D987B
function TASK.SET_TASK_MOVE_NETWORK_SIGNAL_FLOAT_LERP_RATE(ped, signalName, value)
  native.invoke(
    Type.Void, 5638, false,
    arg(Type.Ped, ped),
    arg(Type.String, signalName),
    arg(Type.Float, value)
  )
end

-- void SET_TASK_MOVE_NETWORK_SIGNAL_BOOL(Ped ped, const char* signalName, BOOL value) // 0xB0A6CFD2C69C1088
function TASK.SET_TASK_MOVE_NETWORK_SIGNAL_BOOL(ped, signalName, value)
  native.invoke(
    Type.Void, 5639, false,
    arg(Type.Ped, ped),
    arg(Type.String, signalName),
    arg(Type.Bool, value)
  )
end

-- float GET_TASK_MOVE_NETWORK_SIGNAL_FLOAT(Ped ped, const char* signalName) // 0x44AB0B3AFECCE242
function TASK.GET_TASK_MOVE_NETWORK_SIGNAL_FLOAT(ped, signalName)
  return native.invoke(
    Type.Float, 5640, false,
    arg(Type.Ped, ped),
    arg(Type.String, signalName)
  )
end

-- BOOL GET_TASK_MOVE_NETWORK_SIGNAL_BOOL(Ped ped, const char* signalName) // 0xA7FFBA498E4AAF67
function TASK.GET_TASK_MOVE_NETWORK_SIGNAL_BOOL(ped, signalName)
  return native.invoke(
    Type.Bool, 5641, false,
    arg(Type.Ped, ped),
    arg(Type.String, signalName)
  )
end

-- BOOL GET_TASK_MOVE_NETWORK_EVENT(Ped ped, const char* eventName) // 0xB4F47213DF45A64C
function TASK.GET_TASK_MOVE_NETWORK_EVENT(ped, eventName)
  return native.invoke(
    Type.Bool, 5642, false,
    arg(Type.Ped, ped),
    arg(Type.String, eventName)
  )
end

-- BOOL SET_TASK_MOVE_NETWORK_ENABLE_COLLISION_ON_NETWORK_CLONE_WHEN_FIXED(Ped ped, BOOL enable) // 0x0FFB3C758E8C07B9
--[[
Doesn't actually return anything.
--]]
function TASK.SET_TASK_MOVE_NETWORK_ENABLE_COLLISION_ON_NETWORK_CLONE_WHEN_FIXED(ped, enable)
  return native.invoke(
    Type.Bool, 5643, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, enable)
  )
end

-- void _SET_SCRIPT_TASK_ENABLE_COLLISION_ON_NETWORK_CLONE_WHEN_FIXED(Ped ped, BOOL enable) // 0x32F6EEF031F943DC
function TASK._SET_SCRIPT_TASK_ENABLE_COLLISION_ON_NETWORK_CLONE_WHEN_FIXED(ped, enable)
  native.invoke(
    Type.Void, 5644, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, enable)
  )
end

-- BOOL IS_MOVE_BLEND_RATIO_STILL(Ped ped) // 0x349CE7B56DAFD95C
function TASK.IS_MOVE_BLEND_RATIO_STILL(ped)
  return native.invoke(
    Type.Bool, 5645, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_MOVE_BLEND_RATIO_WALKING(Ped ped) // 0xF133BBBE91E1691F
function TASK.IS_MOVE_BLEND_RATIO_WALKING(ped)
  return native.invoke(
    Type.Bool, 5646, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_MOVE_BLEND_RATIO_RUNNING(Ped ped) // 0xD4D8636C0199A939
function TASK.IS_MOVE_BLEND_RATIO_RUNNING(ped)
  return native.invoke(
    Type.Bool, 5647, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_MOVE_BLEND_RATIO_SPRINTING(Ped ped) // 0x24A2AD74FA9814E2
function TASK.IS_MOVE_BLEND_RATIO_SPRINTING(ped)
  return native.invoke(
    Type.Bool, 5648, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_STILL(Ped ped) // 0xAC29253EEF8F0180
function TASK.IS_PED_STILL(ped)
  return native.invoke(
    Type.Bool, 5649, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_WALKING(Ped ped) // 0xDE4C184B2B9B071A
function TASK.IS_PED_WALKING(ped)
  return native.invoke(
    Type.Bool, 5650, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_RUNNING(Ped ped) // 0xC5286FFC176F28A2
function TASK.IS_PED_RUNNING(ped)
  return native.invoke(
    Type.Bool, 5651, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_SPRINTING(Ped ped) // 0x57E457CD2C0FC168
function TASK.IS_PED_SPRINTING(ped)
  return native.invoke(
    Type.Bool, 5652, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_STRAFING(Ped ped) // 0xE45B7F222DE47E09
--[[
What's strafing?
--]]
function TASK.IS_PED_STRAFING(ped)
  return native.invoke(
    Type.Bool, 5653, false,
    arg(Type.Ped, ped)
  )
end

-- void TASK_SYNCHRONIZED_SCENE(Ped ped, int scene, const char* animDictionary, const char* animationName, float blendIn, float blendOut, int flags, int ragdollBlockingFlags, float moverBlendDelta, int ikFlags) // 0xEEA929141F699854
--[[
 TASK::TASK_SYNCHRONIZED_SCENE(ped, scene, "creatures@rottweiler@in_vehicle@std_car", "get_in", 1000.0, -8.0, 4, 0, 0x447a0000, 0);

Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
--]]
function TASK.TASK_SYNCHRONIZED_SCENE(ped, scene, animDictionary, animationName, blendIn, blendOut, flags, ragdollBlockingFlags, moverBlendDelta, ikFlags)
  native.invoke(
    Type.Void, 5654, false,
    arg(Type.Ped, ped),
    arg(Type.Int, scene),
    arg(Type.String, animDictionary),
    arg(Type.String, animationName),
    arg(Type.Float, blendIn),
    arg(Type.Float, blendOut),
    arg(Type.Int, flags),
    arg(Type.Int, ragdollBlockingFlags),
    arg(Type.Float, moverBlendDelta),
    arg(Type.Int, ikFlags)
  )
end

-- void TASK_AGITATED_ACTION_CONFRONT_RESPONSE(Ped ped, Ped ped2) // 0x19D1B791CB3670FE
function TASK.TASK_AGITATED_ACTION_CONFRONT_RESPONSE(ped, ped2)
  native.invoke(
    Type.Void, 5655, false,
    arg(Type.Ped, ped),
    arg(Type.Ped, ped2)
  )
end

-- void TASK_SWEEP_AIM_ENTITY(Ped ped, const char* animDict, const char* lowAnimName, const char* medAnimName, const char* hiAnimName, int runtime, Entity targetEntity, float turnRate, float blendInDuration) // 0x2047C02158D6405A
--[[
This function is called on peds in vehicles.

anim: animation name
p2, p3, p4: "sweep_low", "sweep_med" or "sweep_high"
p5: no idea what it does but is usually -1
--]]
function TASK.TASK_SWEEP_AIM_ENTITY(ped, animDict, lowAnimName, medAnimName, hiAnimName, runtime, targetEntity, turnRate, blendInDuration)
  native.invoke(
    Type.Void, 5656, false,
    arg(Type.Ped, ped),
    arg(Type.String, animDict),
    arg(Type.String, lowAnimName),
    arg(Type.String, medAnimName),
    arg(Type.String, hiAnimName),
    arg(Type.Int, runtime),
    arg(Type.Entity, targetEntity),
    arg(Type.Float, turnRate),
    arg(Type.Float, blendInDuration)
  )
end

-- void UPDATE_TASK_SWEEP_AIM_ENTITY(Ped ped, Entity entity) // 0xE4973DBDBE6E44B3
function TASK.UPDATE_TASK_SWEEP_AIM_ENTITY(ped, entity)
  native.invoke(
    Type.Void, 5657, false,
    arg(Type.Ped, ped),
    arg(Type.Entity, entity)
  )
end

-- void TASK_SWEEP_AIM_POSITION(Ped ped, const char* animDict, const char* lowAnimName, const char* medAnimName, const char* hiAnimName, int runtime, float x, float y, float z, float turnRate, float blendInDuration) // 0x7AFE8FDC10BC07D2
function TASK.TASK_SWEEP_AIM_POSITION(ped, animDict, lowAnimName, medAnimName, hiAnimName, runtime, x, y, z, turnRate, blendInDuration)
  native.invoke(
    Type.Void, 5658, false,
    arg(Type.Ped, ped),
    arg(Type.String, animDict),
    arg(Type.String, lowAnimName),
    arg(Type.String, medAnimName),
    arg(Type.String, hiAnimName),
    arg(Type.Int, runtime),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, turnRate),
    arg(Type.Float, blendInDuration)
  )
end

-- void UPDATE_TASK_SWEEP_AIM_POSITION(Ped ped, float x, float y, float z) // 0xBB106883F5201FC4
function TASK.UPDATE_TASK_SWEEP_AIM_POSITION(ped, x, y, z)
  native.invoke(
    Type.Void, 5659, false,
    arg(Type.Ped, ped),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void TASK_ARREST_PED(Ped ped, Ped target) // 0xF3B9A78A178572B1
--[[
Example from "me_amanda1.ysc.c4":
TASK::TASK_ARREST_PED(l_19F /* This is a Ped */ , PLAYER::PLAYER_PED_ID());

Example from "armenian1.ysc.c4":
if (!PED::IS_PED_INJURED(l_B18[0/*1*/])) {
    TASK::TASK_ARREST_PED(l_B18[0/*1*/], PLAYER::PLAYER_PED_ID());
}

I would love to have time to experiment to see if a player Ped can arrest another Ped. Might make for a good cop mod.


Looks like only the player can be arrested this way. Peds react and try to arrest you if you task them, but the player charater doesn't do anything if tasked to arrest another ped.
--]]
function TASK.TASK_ARREST_PED(ped, target)
  native.invoke(
    Type.Void, 5660, false,
    arg(Type.Ped, ped),
    arg(Type.Ped, target)
  )
end

-- BOOL IS_PED_RUNNING_ARREST_TASK(Ped ped) // 0x3DC52677769B4AE0
function TASK.IS_PED_RUNNING_ARREST_TASK(ped)
  return native.invoke(
    Type.Bool, 5661, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_BEING_ARRESTED(Ped ped) // 0x90A09F3A45FED688
--[[
This function is hard-coded to always return 0.
--]]
function TASK.IS_PED_BEING_ARRESTED(ped)
  return native.invoke(
    Type.Bool, 5662, false,
    arg(Type.Ped, ped)
  )
end

-- void UNCUFF_PED(Ped ped) // 0x67406F2C8F87FC4F
function TASK.UNCUFF_PED(ped)
  native.invoke(
    Type.Void, 5663, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_CUFFED(Ped ped) // 0x74E559B3BC910685
function TASK.IS_PED_CUFFED(ped)
  return native.invoke(
    Type.Bool, 5664, false,
    arg(Type.Ped, ped)
  )
end


VEHICLE = {}

-- Vehicle CREATE_VEHICLE(Hash modelHash, float x, float y, float z, float heading, BOOL isNetwork, BOOL bScriptHostVeh, BOOL p7) // 0xAF35D0D2583051B0
--[[
p7 when set to true allows you to spawn vehicles under -100 z.
Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
--]]
function VEHICLE.CREATE_VEHICLE(modelHash, x, y, z, heading, isNetwork, bScriptHostVeh, p7)
  return native.invoke(
    Type.Vehicle, 5665, false,
    arg(Type.Hash, modelHash),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, heading),
    arg(Type.Bool, isNetwork),
    arg(Type.Bool, bScriptHostVeh),
    arg(Type.Bool, p7)
  )
end

-- void DELETE_VEHICLE(Vehicle* vehicle) // 0xEA386986E786A54F
--[[
Deletes a vehicle.
The vehicle must be a mission entity to delete, so call this before deleting: SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);

eg how to use:
SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
DELETE_VEHICLE(&vehicle);

Deletes the specified vehicle, then sets the handle pointed to by the pointer to NULL.
--]]
function VEHICLE.DELETE_VEHICLE(vehicle)
  native.invoke(
    Type.Void, 5666, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_ALLOW_HOMING_MISSLE_LOCKON(Vehicle vehicle, BOOL toggle, BOOL p2) // 0x7D6F9A3EF26136A0
function VEHICLE.SET_VEHICLE_ALLOW_HOMING_MISSLE_LOCKON(vehicle, toggle, p2)
  native.invoke(
    Type.Void, 5667, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle),
    arg(Type.Bool, p2)
  )
end

-- void SET_VEHICLE_ALLOW_HOMING_MISSLE_LOCKON_SYNCED(Vehicle vehicle, BOOL canBeLockedOn, BOOL p2) // 0x1DDA078D12879EEE
function VEHICLE.SET_VEHICLE_ALLOW_HOMING_MISSLE_LOCKON_SYNCED(vehicle, canBeLockedOn, p2)
  native.invoke(
    Type.Void, 5668, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, canBeLockedOn),
    arg(Type.Bool, p2)
  )
end

-- void SET_VEHICLE_ALLOW_NO_PASSENGERS_LOCKON(Vehicle veh, BOOL toggle) // 0x5D14D4154BFE7B2C
--[[
Makes the vehicle accept no passengers.
--]]
function VEHICLE.SET_VEHICLE_ALLOW_NO_PASSENGERS_LOCKON(veh, toggle)
  native.invoke(
    Type.Void, 5669, false,
    arg(Type.Vehicle, veh),
    arg(Type.Bool, toggle)
  )
end

-- int GET_VEHICLE_HOMING_LOCKON_STATE(Vehicle vehicle) // 0xE6B0E8CFC3633BF0
--[[
Returns a value depending on the lock-on state of vehicle weapons.
0: not locked on
1: locking on
2: locked on
--]]
function VEHICLE.GET_VEHICLE_HOMING_LOCKON_STATE(vehicle)
  return native.invoke(
    Type.Int, 5670, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- int GET_VEHICLE_HOMING_LOCKEDONTO_STATE(Any p0) // 0x6EAAEFC76ACC311F
function VEHICLE.GET_VEHICLE_HOMING_LOCKEDONTO_STATE(p0)
  return native.invoke(
    Type.Int, 5671, false,
    arg(Type.Any, p0)
  )
end

-- void SET_VEHICLE_HOMING_LOCKEDONTO_STATE(Any p0, Any p1) // 0x407DC5E97DB1A4D3
function VEHICLE.SET_VEHICLE_HOMING_LOCKEDONTO_STATE(p0, p1)
  native.invoke(
    Type.Void, 5672, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL IS_VEHICLE_MODEL(Vehicle vehicle, Hash model) // 0x423E8DE37D934D89
function VEHICLE.IS_VEHICLE_MODEL(vehicle, model)
  return native.invoke(
    Type.Bool, 5673, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Hash, model)
  )
end

-- BOOL DOES_SCRIPT_VEHICLE_GENERATOR_EXIST(int vehicleGenerator) // 0xF6086BC836400876
function VEHICLE.DOES_SCRIPT_VEHICLE_GENERATOR_EXIST(vehicleGenerator)
  return native.invoke(
    Type.Bool, 5674, false,
    arg(Type.Int, vehicleGenerator)
  )
end

-- int CREATE_SCRIPT_VEHICLE_GENERATOR(float x, float y, float z, float heading, float p4, float p5, Hash modelHash, int p7, int p8, int p9, int p10, BOOL p11, BOOL p12, BOOL p13, BOOL p14, BOOL p15, int p16) // 0x9DEF883114668116
--[[
Creates a script vehicle generator at the given coordinates. Most parameters after the model hash are unknown.

Parameters:
x/y/z - Generator position
heading - Generator heading
p4 - Unknown (always 5.0)
p5 - Unknown (always 3.0)
modelHash - Vehicle model hash
p7/8/9/10 - Unknown (always -1)
p11 - Unknown (usually TRUE, only one instance of FALSE)
p12/13 - Unknown (always FALSE)
p14 - Unknown (usally FALSE, only two instances of TRUE)
p15 - Unknown (always TRUE)
p16 - Unknown (always -1)

Vector3 coords = GET_ENTITY_COORDS(PLAYER_PED_ID(), 0);    CREATE_SCRIPT_VEHICLE_GENERATOR(coords.x, coords.y, coords.z, 1.0f, 5.0f, 3.0f, GET_HASH_KEY("adder"), -1. -1, -1, -1, -1, true, false, false, false, true, -1);
--]]
function VEHICLE.CREATE_SCRIPT_VEHICLE_GENERATOR(x, y, z, heading, p4, p5, modelHash, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16)
  return native.invoke(
    Type.Int, 5675, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, heading),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Hash, modelHash),
    arg(Type.Int, p7),
    arg(Type.Int, p8),
    arg(Type.Int, p9),
    arg(Type.Int, p10),
    arg(Type.Bool, p11),
    arg(Type.Bool, p12),
    arg(Type.Bool, p13),
    arg(Type.Bool, p14),
    arg(Type.Bool, p15),
    arg(Type.Int, p16)
  )
end

-- void DELETE_SCRIPT_VEHICLE_GENERATOR(int vehicleGenerator) // 0x22102C9ABFCF125D
function VEHICLE.DELETE_SCRIPT_VEHICLE_GENERATOR(vehicleGenerator)
  native.invoke(
    Type.Void, 5676, false,
    arg(Type.Int, vehicleGenerator)
  )
end

-- void SET_SCRIPT_VEHICLE_GENERATOR(int vehicleGenerator, BOOL enabled) // 0xD9D620E0AC6DC4B0
--[[
Only called once in the decompiled scripts. Presumably activates the specified generator.
--]]
function VEHICLE.SET_SCRIPT_VEHICLE_GENERATOR(vehicleGenerator, enabled)
  native.invoke(
    Type.Void, 5677, false,
    arg(Type.Int, vehicleGenerator),
    arg(Type.Bool, enabled)
  )
end

-- void SET_ALL_VEHICLE_GENERATORS_ACTIVE_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, BOOL toggle, BOOL p7) // 0xC12321827687FE4D
--[[
When p6 is true, vehicle generators are active.
p7 seems to always be true in story mode scripts, but it's sometimes false in online scripts.
--]]
function VEHICLE.SET_ALL_VEHICLE_GENERATORS_ACTIVE_IN_AREA(x1, y1, z1, x2, y2, z2, toggle, p7)
  native.invoke(
    Type.Void, 5678, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Bool, toggle),
    arg(Type.Bool, p7)
  )
end

-- void SET_ALL_VEHICLE_GENERATORS_ACTIVE() // 0x34AD89078831A4BC
function VEHICLE.SET_ALL_VEHICLE_GENERATORS_ACTIVE()
  native.invoke(
    Type.Void, 5679, false
  )
end

-- void SET_ALL_LOW_PRIORITY_VEHICLE_GENERATORS_ACTIVE(BOOL active) // 0x608207E7A8FB787C
function VEHICLE.SET_ALL_LOW_PRIORITY_VEHICLE_GENERATORS_ACTIVE(active)
  native.invoke(
    Type.Void, 5680, false,
    arg(Type.Bool, active)
  )
end

-- void SET_VEHICLE_GENERATOR_AREA_OF_INTEREST(float x, float y, float z, float radius) // 0x9A75585FB2E54FAD
--[[
Related to car generators & CPlayerSwitchMgrLong
--]]
function VEHICLE.SET_VEHICLE_GENERATOR_AREA_OF_INTEREST(x, y, z, radius)
  native.invoke(
    Type.Void, 5681, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius)
  )
end

-- void CLEAR_VEHICLE_GENERATOR_AREA_OF_INTEREST() // 0x0A436B8643716D14
function VEHICLE.CLEAR_VEHICLE_GENERATOR_AREA_OF_INTEREST()
  native.invoke(
    Type.Void, 5682, false
  )
end

-- BOOL SET_VEHICLE_ON_GROUND_PROPERLY(Vehicle vehicle, float p1) // 0x49733E92263139D1
--[[
Sets a vehicle on the ground on all wheels.  Returns whether or not the operation was successful.

sfink: This has an additional param(Vehicle vehicle, float p1) which is always set to 5.0f in the b944 scripts.
--]]
function VEHICLE.SET_VEHICLE_ON_GROUND_PROPERLY(vehicle, p1)
  return native.invoke(
    Type.Bool, 5683, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, p1)
  )
end

-- BOOL SET_VEHICLE_USE_CUTSCENE_WHEEL_COMPRESSION(Vehicle p0, BOOL p1, BOOL p2, BOOL p3) // 0xE023E8AC4EF7C117
function VEHICLE.SET_VEHICLE_USE_CUTSCENE_WHEEL_COMPRESSION(p0, p1, p2, p3)
  return native.invoke(
    Type.Bool, 5684, false,
    arg(Type.Vehicle, p0),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3)
  )
end

-- BOOL IS_VEHICLE_STUCK_ON_ROOF(Vehicle vehicle) // 0xB497F06B288DCFDF
function VEHICLE.IS_VEHICLE_STUCK_ON_ROOF(vehicle)
  return native.invoke(
    Type.Bool, 5685, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void ADD_VEHICLE_UPSIDEDOWN_CHECK(Vehicle vehicle) // 0xB72E26D81006005B
function VEHICLE.ADD_VEHICLE_UPSIDEDOWN_CHECK(vehicle)
  native.invoke(
    Type.Void, 5686, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void REMOVE_VEHICLE_UPSIDEDOWN_CHECK(Vehicle vehicle) // 0xC53EB42A499A7E90
function VEHICLE.REMOVE_VEHICLE_UPSIDEDOWN_CHECK(vehicle)
  native.invoke(
    Type.Void, 5687, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL IS_VEHICLE_STOPPED(Vehicle vehicle) // 0x5721B434AD84D57A
--[[
Returns true if the vehicle's current speed is less than, or equal to 0.0025f.

For some vehicles it returns true if the current speed is <= 0.00039999999.
--]]
function VEHICLE.IS_VEHICLE_STOPPED(vehicle)
  return native.invoke(
    Type.Bool, 5688, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- int GET_VEHICLE_NUMBER_OF_PASSENGERS(Vehicle vehicle, BOOL includeDriver, BOOL includeDeadOccupants) // 0x24CB2137731FFE89
--[[
Gets the number of passengers.

This native was modified in b2545 to take two additional parameters, allowing you to include the driver or exclude dead passengers.

To keep it working like before b2545, set includeDriver to false and includeDeadOccupants to true.
--]]
function VEHICLE.GET_VEHICLE_NUMBER_OF_PASSENGERS(vehicle, includeDriver, includeDeadOccupants)
  return native.invoke(
    Type.Int, 5689, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, includeDriver),
    arg(Type.Bool, includeDeadOccupants)
  )
end

-- int GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(Vehicle vehicle) // 0xA7C4F2C6E744A550
function VEHICLE.GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(vehicle)
  return native.invoke(
    Type.Int, 5690, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- int GET_VEHICLE_MODEL_NUMBER_OF_SEATS(Hash modelHash) // 0x2AD93716F184EDA4
--[[
Returns max number of passengers (including the driver) for the specified vehicle model.

Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
--]]
function VEHICLE.GET_VEHICLE_MODEL_NUMBER_OF_SEATS(modelHash)
  return native.invoke(
    Type.Int, 5691, false,
    arg(Type.Hash, modelHash)
  )
end

-- BOOL IS_SEAT_WARP_ONLY(Vehicle vehicle, int seatIndex) // 0xF7F203E31F96F6A1
function VEHICLE.IS_SEAT_WARP_ONLY(vehicle, seatIndex)
  return native.invoke(
    Type.Bool, 5692, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, seatIndex)
  )
end

-- BOOL IS_TURRET_SEAT(Vehicle vehicle, int seatIndex) // 0xE33FFA906CE74880
function VEHICLE.IS_TURRET_SEAT(vehicle, seatIndex)
  return native.invoke(
    Type.Bool, 5693, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, seatIndex)
  )
end

-- BOOL DOES_VEHICLE_ALLOW_RAPPEL(Vehicle vehicle) // 0x4E417C547182C84D
--[[
Returns true if the vehicle has the FLAG_ALLOWS_RAPPEL flag set.
--]]
function VEHICLE.DOES_VEHICLE_ALLOW_RAPPEL(vehicle)
  return native.invoke(
    Type.Bool, 5694, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME(float multiplier) // 0x245A6883D966D537
--[[
Use this native inside a looped function.
Values:
- `0.0` = no vehicles on streets
- `1.0` = normal vehicles on streets
--]]
function VEHICLE.SET_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME(multiplier)
  native.invoke(
    Type.Void, 5695, false,
    arg(Type.Float, multiplier)
  )
end

-- void SET_RANDOM_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME(float multiplier) // 0xB3B3359379FE77D3
function VEHICLE.SET_RANDOM_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME(multiplier)
  native.invoke(
    Type.Void, 5696, false,
    arg(Type.Float, multiplier)
  )
end

-- void SET_PARKED_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME(float multiplier) // 0xEAE6DCC7EEE3DB1D
function VEHICLE.SET_PARKED_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME(multiplier)
  native.invoke(
    Type.Void, 5697, false,
    arg(Type.Float, multiplier)
  )
end

-- void SET_DISABLE_RANDOM_TRAINS_THIS_FRAME(BOOL toggle) // 0xD4B8E3D1917BC86B
function VEHICLE.SET_DISABLE_RANDOM_TRAINS_THIS_FRAME(toggle)
  native.invoke(
    Type.Void, 5698, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_AMBIENT_VEHICLE_RANGE_MULTIPLIER_THIS_FRAME(float value) // 0x90B6DA738A9A25DA
function VEHICLE.SET_AMBIENT_VEHICLE_RANGE_MULTIPLIER_THIS_FRAME(value)
  native.invoke(
    Type.Void, 5699, false,
    arg(Type.Float, value)
  )
end

-- void SET_FAR_DRAW_VEHICLES(BOOL toggle) // 0x26324F33423F3CC3
function VEHICLE.SET_FAR_DRAW_VEHICLES(toggle)
  native.invoke(
    Type.Void, 5700, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_NUMBER_OF_PARKED_VEHICLES(int value) // 0xCAA15F13EBD417FF
function VEHICLE.SET_NUMBER_OF_PARKED_VEHICLES(value)
  native.invoke(
    Type.Void, 5701, false,
    arg(Type.Int, value)
  )
end

-- void SET_VEHICLE_DOORS_LOCKED(Vehicle vehicle, int doorLockStatus) // 0xB664292EAECF7FA6
--[[
enum eVehicleLockState
{
	VEHICLELOCK_NONE,
	VEHICLELOCK_UNLOCKED,
	VEHICLELOCK_LOCKED,
	VEHICLELOCK_LOCKOUT_PLAYER_ONLY,
	VEHICLELOCK_LOCKED_PLAYER_INSIDE,
	VEHICLELOCK_LOCKED_INITIALLY,
	VEHICLELOCK_FORCE_SHUT_DOORS,
	VEHICLELOCK_LOCKED_BUT_CAN_BE_DAMAGED,
	VEHICLELOCK_LOCKED_BUT_BOOT_UNLOCKED,
	VEHICLELOCK_LOCKED_NO_PASSENGERS,
	VEHICLELOCK_CANNOT_ENTER	
};
--]]
function VEHICLE.SET_VEHICLE_DOORS_LOCKED(vehicle, doorLockStatus)
  native.invoke(
    Type.Void, 5702, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, doorLockStatus)
  )
end

-- void SET_VEHICLE_INDIVIDUAL_DOORS_LOCKED(Vehicle vehicle, int doorId, int doorLockStatus) // 0xBE70724027F85BCD
--[[
doorId: see SET_VEHICLE_DOOR_SHUT
--]]
function VEHICLE.SET_VEHICLE_INDIVIDUAL_DOORS_LOCKED(vehicle, doorId, doorLockStatus)
  native.invoke(
    Type.Void, 5703, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, doorId),
    arg(Type.Int, doorLockStatus)
  )
end

-- void SET_VEHICLE_HAS_MUTED_SIRENS(Vehicle vehicle, BOOL toggle) // 0xD8050E0EB60CF274
--[[
If set to true, prevents vehicle sirens from having sound, leaving only the lights.
--]]
function VEHICLE.SET_VEHICLE_HAS_MUTED_SIRENS(vehicle, toggle)
  native.invoke(
    Type.Void, 5704, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(Vehicle vehicle, Player player, BOOL toggle) // 0x517AAF684BB50CD1
function VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(vehicle, player, toggle)
  native.invoke(
    Type.Void, 5705, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Player, player),
    arg(Type.Bool, toggle)
  )
end

-- BOOL GET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(Vehicle vehicle, Player player) // 0xF6AF6CB341349015
function VEHICLE.GET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(vehicle, player)
  return native.invoke(
    Type.Bool, 5706, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Player, player)
  )
end

-- void SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(Vehicle vehicle, BOOL toggle) // 0xA2F80B8D040727CC
--[[
After some analysis, I've decided that these are what the parameters are.

We can see this being used in R* scripts such as "am_mp_property_int.ysc.c4":
l_11A1 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 1);
...
VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(l_11A1, 1);
--]]
function VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(vehicle, toggle)
  native.invoke(
    Type.Void, 5707, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_DOORS_LOCKED_FOR_NON_SCRIPT_PLAYERS(Vehicle vehicle, BOOL toggle) // 0x9737A37136F07E75
function VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_NON_SCRIPT_PLAYERS(vehicle, toggle)
  native.invoke(
    Type.Void, 5708, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_DOORS_LOCKED_FOR_TEAM(Vehicle vehicle, int team, BOOL toggle) // 0xB81F6D4A8F5EEBA8
function VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_TEAM(vehicle, team, toggle)
  native.invoke(
    Type.Void, 5709, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, team),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_DOORS_LOCKED_FOR_ALL_TEAMS(Vehicle vehicle, BOOL toggle) // 0x203B527D1B77904C
function VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_ALL_TEAMS(vehicle, toggle)
  native.invoke(
    Type.Void, 5710, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_DONT_TERMINATE_TASK_WHEN_ACHIEVED(Vehicle vehicle) // 0x76D26A22750E849E
function VEHICLE.SET_VEHICLE_DONT_TERMINATE_TASK_WHEN_ACHIEVED(vehicle)
  native.invoke(
    Type.Void, 5711, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void _SET_VEHICLE_MAX_LAUNCH_ENGINE_REVS(Vehicle vehicle, float modifier) // 0x5AE614ECA5FDD423
--[[
0.0f = engine rev minimum
1.0f = engine rev limit
--]]
function VEHICLE._SET_VEHICLE_MAX_LAUNCH_ENGINE_REVS(vehicle, modifier)
  native.invoke(
    Type.Void, 5712, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, modifier)
  )
end

-- float _GET_VEHICLE_THROTTLE(Vehicle vehicle) // 0x92D96892FC06AF22
function VEHICLE._GET_VEHICLE_THROTTLE(vehicle)
  return native.invoke(
    Type.Float, 5713, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void EXPLODE_VEHICLE(Vehicle vehicle, BOOL isAudible, BOOL isInvisible) // 0xBA71116ADF5B514C
--[[
Explodes a selected vehicle.

Vehicle vehicle = Vehicle you want to explode.
BOOL isAudible = If explosion makes a sound.
BOOL isInvisible = If the explosion is invisible or not.

First BOOL does not give any visual explosion, the vehicle just falls apart completely but slowly and starts to burn.
--]]
function VEHICLE.EXPLODE_VEHICLE(vehicle, isAudible, isInvisible)
  native.invoke(
    Type.Void, 5714, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, isAudible),
    arg(Type.Bool, isInvisible)
  )
end

-- void SET_VEHICLE_OUT_OF_CONTROL(Vehicle vehicle, BOOL killDriver, BOOL explodeOnImpact) // 0xF19D095E42D430CC
--[[
Tested on the player's current vehicle. Unless you kill the driver, the vehicle doesn't loose control, however, if enabled, explodeOnImpact is still active. The moment you crash, boom.
--]]
function VEHICLE.SET_VEHICLE_OUT_OF_CONTROL(vehicle, killDriver, explodeOnImpact)
  native.invoke(
    Type.Void, 5715, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, killDriver),
    arg(Type.Bool, explodeOnImpact)
  )
end

-- void SET_VEHICLE_TIMED_EXPLOSION(Vehicle vehicle, Ped ped, BOOL toggle) // 0x2E0A74E1002380B1
function VEHICLE.SET_VEHICLE_TIMED_EXPLOSION(vehicle, ped, toggle)
  native.invoke(
    Type.Void, 5716, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void ADD_VEHICLE_PHONE_EXPLOSIVE_DEVICE(Vehicle vehicle) // 0x99AD4CCCB128CBC9
function VEHICLE.ADD_VEHICLE_PHONE_EXPLOSIVE_DEVICE(vehicle)
  native.invoke(
    Type.Void, 5717, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void CLEAR_VEHICLE_PHONE_EXPLOSIVE_DEVICE() // 0xAA3F739ABDDCF21F
function VEHICLE.CLEAR_VEHICLE_PHONE_EXPLOSIVE_DEVICE()
  native.invoke(
    Type.Void, 5718, false
  )
end

-- BOOL HAS_VEHICLE_PHONE_EXPLOSIVE_DEVICE() // 0x6ADAABD3068C5235
function VEHICLE.HAS_VEHICLE_PHONE_EXPLOSIVE_DEVICE()
  return native.invoke(
    Type.Bool, 5719, false
  )
end

-- void DETONATE_VEHICLE_PHONE_EXPLOSIVE_DEVICE() // 0xEF49CF0270307CBE
function VEHICLE.DETONATE_VEHICLE_PHONE_EXPLOSIVE_DEVICE()
  native.invoke(
    Type.Void, 5720, false
  )
end

-- BOOL HAVE_VEHICLE_REAR_DOORS_BEEN_BLOWN_OPEN_BY_STICKYBOMB(Vehicle vehicle) // 0x6B407F2525E93644
function VEHICLE.HAVE_VEHICLE_REAR_DOORS_BEEN_BLOWN_OPEN_BY_STICKYBOMB(vehicle)
  return native.invoke(
    Type.Bool, 5721, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_TAXI_LIGHTS(Vehicle vehicle, BOOL state) // 0x598803E85E8448D9
--[[
This is not tested - it's just an assumption.
- Nac

Doesn't seem to work.  I'll try with an int instead. --JT

Read the scripts, im dumpass. 

                            if (!VEHICLE::IS_TAXI_LIGHT_ON(l_115)) {
                                VEHICLE::SET_TAXI_LIGHTS(l_115, 1);
                            }
--]]
function VEHICLE.SET_TAXI_LIGHTS(vehicle, state)
  native.invoke(
    Type.Void, 5722, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, state)
  )
end

-- BOOL IS_TAXI_LIGHT_ON(Vehicle vehicle) // 0x7504C0F113AB50FC
function VEHICLE.IS_TAXI_LIGHT_ON(vehicle)
  return native.invoke(
    Type.Bool, 5723, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL IS_VEHICLE_IN_GARAGE_AREA(const char* garageName, Vehicle vehicle) // 0xCEE4490CD57BB3C2
--[[
garageName example "Michael - Beverly Hills"

Full list of garages by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/garages.json
--]]
function VEHICLE.IS_VEHICLE_IN_GARAGE_AREA(garageName, vehicle)
  return native.invoke(
    Type.Bool, 5724, false,
    arg(Type.String, garageName),
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_COLOURS(Vehicle vehicle, int colorPrimary, int colorSecondary) // 0x4F1D4BE3A7F24601
--[[
colorPrimary & colorSecondary are the paint index for the vehicle.
For a list of valid paint indexes, view: https://pastebin.com/pwHci0xK
-------------------------------------------------------------------------
Note: minimum color index is 0, maximum color index is (numColorIndices - 1)

Full list of vehicle colors by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicleColors.json
--]]
function VEHICLE.SET_VEHICLE_COLOURS(vehicle, colorPrimary, colorSecondary)
  native.invoke(
    Type.Void, 5725, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, colorPrimary),
    arg(Type.Int, colorSecondary)
  )
end

-- void SET_VEHICLE_FULLBEAM(Vehicle vehicle, BOOL toggle) // 0x8B7FD87F0DDB421E
--[[
It switch to highbeam when p1 is set to true.
--]]
function VEHICLE.SET_VEHICLE_FULLBEAM(vehicle, toggle)
  native.invoke(
    Type.Void, 5726, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_IS_RACING(Vehicle vehicle, BOOL toggle) // 0x07116E24E9D1929D
--[[
p1 (toggle) was always 1 (true) except in one case in the b678 scripts.
--]]
function VEHICLE.SET_VEHICLE_IS_RACING(vehicle, toggle)
  native.invoke(
    Type.Void, 5727, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(Vehicle vehicle, int r, int g, int b) // 0x7141766F91D15BEA
--[[
p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)
--]]
function VEHICLE.SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(vehicle, r, g, b)
  native.invoke(
    Type.Void, 5728, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b)
  )
end

-- void GET_VEHICLE_CUSTOM_PRIMARY_COLOUR(Vehicle vehicle, int* r, int* g, int* b) // 0xB64CF2CCA9D95F52
function VEHICLE.GET_VEHICLE_CUSTOM_PRIMARY_COLOUR(vehicle, r, g, b)
  native.invoke(
    Type.Void, 5729, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b)
  )
end

-- void CLEAR_VEHICLE_CUSTOM_PRIMARY_COLOUR(Vehicle vehicle) // 0x55E1D2758F34E437
function VEHICLE.CLEAR_VEHICLE_CUSTOM_PRIMARY_COLOUR(vehicle)
  native.invoke(
    Type.Void, 5730, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL GET_IS_VEHICLE_PRIMARY_COLOUR_CUSTOM(Vehicle vehicle) // 0xF095C0405307B21B
function VEHICLE.GET_IS_VEHICLE_PRIMARY_COLOUR_CUSTOM(vehicle)
  return native.invoke(
    Type.Bool, 5731, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_CUSTOM_SECONDARY_COLOUR(Vehicle vehicle, int r, int g, int b) // 0x36CED73BFED89754
--[[
p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)
--]]
function VEHICLE.SET_VEHICLE_CUSTOM_SECONDARY_COLOUR(vehicle, r, g, b)
  native.invoke(
    Type.Void, 5732, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b)
  )
end

-- void GET_VEHICLE_CUSTOM_SECONDARY_COLOUR(Vehicle vehicle, int* r, int* g, int* b) // 0x8389CD56CA8072DC
function VEHICLE.GET_VEHICLE_CUSTOM_SECONDARY_COLOUR(vehicle, r, g, b)
  native.invoke(
    Type.Void, 5733, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b)
  )
end

-- void CLEAR_VEHICLE_CUSTOM_SECONDARY_COLOUR(Vehicle vehicle) // 0x5FFBDEEC3E8E2009
function VEHICLE.CLEAR_VEHICLE_CUSTOM_SECONDARY_COLOUR(vehicle)
  native.invoke(
    Type.Void, 5734, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL GET_IS_VEHICLE_SECONDARY_COLOUR_CUSTOM(Vehicle vehicle) // 0x910A32E7AAD2656C
--[[
Check if Vehicle Secondary is avaliable for customize
--]]
function VEHICLE.GET_IS_VEHICLE_SECONDARY_COLOUR_CUSTOM(vehicle)
  return native.invoke(
    Type.Bool, 5735, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_ENVEFF_SCALE(Vehicle vehicle, float fade) // 0x3AFDC536C3D01674
--[[
The parameter fade is a value from 0-1, where 0 is fresh paint.
--]]
function VEHICLE.SET_VEHICLE_ENVEFF_SCALE(vehicle, fade)
  native.invoke(
    Type.Void, 5736, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, fade)
  )
end

-- float GET_VEHICLE_ENVEFF_SCALE(Vehicle vehicle) // 0xA82819CAC9C4C403
--[[
The result is a value from 0-1, where 0 is fresh paint.
--]]
function VEHICLE.GET_VEHICLE_ENVEFF_SCALE(vehicle)
  return native.invoke(
    Type.Float, 5737, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_CAN_RESPRAY_VEHICLE(Vehicle vehicle, BOOL state) // 0x52BBA29D5EC69356
--[[
Hardcoded to not work in multiplayer.
--]]
function VEHICLE.SET_CAN_RESPRAY_VEHICLE(vehicle, state)
  native.invoke(
    Type.Void, 5738, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, state)
  )
end

-- void SET_GOON_BOSS_VEHICLE(Vehicle vehicle, BOOL toggle) // 0xAB31EF4DE6800CE9
--[[
Used for GTAO CEO/Associate spawned vehicles.
--]]
function VEHICLE.SET_GOON_BOSS_VEHICLE(vehicle, toggle)
  native.invoke(
    Type.Void, 5739, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_OPEN_REAR_DOORS_ON_EXPLOSION(Vehicle vehicle, BOOL toggle) // 0x1B212B26DD3C04DF
function VEHICLE.SET_OPEN_REAR_DOORS_ON_EXPLOSION(vehicle, toggle)
  native.invoke(
    Type.Void, 5740, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void FORCE_SUBMARINE_SURFACE_MODE(Vehicle vehicle, BOOL toggle) // 0x33506883545AC0DF
function VEHICLE.FORCE_SUBMARINE_SURFACE_MODE(vehicle, toggle)
  native.invoke(
    Type.Void, 5741, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void FORCE_SUBMARINE_NEURTAL_BUOYANCY(Any p0, Any p1) // 0xC67DB108A9ADE3BE
function VEHICLE.FORCE_SUBMARINE_NEURTAL_BUOYANCY(p0, p1)
  native.invoke(
    Type.Void, 5742, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void SET_SUBMARINE_CRUSH_DEPTHS(Vehicle vehicle, BOOL p1, float depth1, float depth2, float depth3) // 0xC59872A5134879C7
function VEHICLE.SET_SUBMARINE_CRUSH_DEPTHS(vehicle, p1, depth1, depth2, depth3)
  native.invoke(
    Type.Void, 5743, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1),
    arg(Type.Float, depth1),
    arg(Type.Float, depth2),
    arg(Type.Float, depth3)
  )
end

-- BOOL GET_SUBMARINE_IS_UNDER_DESIGN_DEPTH(Vehicle submarine) // 0x3E71D0B300B7AA79
function VEHICLE.GET_SUBMARINE_IS_UNDER_DESIGN_DEPTH(submarine)
  return native.invoke(
    Type.Bool, 5744, false,
    arg(Type.Vehicle, submarine)
  )
end

-- int GET_SUBMARINE_NUMBER_OF_AIR_LEAKS(Vehicle submarine) // 0x093D6DDCA5B8FBAE
function VEHICLE.GET_SUBMARINE_NUMBER_OF_AIR_LEAKS(submarine)
  return native.invoke(
    Type.Int, 5745, false,
    arg(Type.Vehicle, submarine)
  )
end

-- void SET_BOAT_IGNORE_LAND_PROBES(Any p0, Any p1) // 0xED5EDE9E676643C9
function VEHICLE.SET_BOAT_IGNORE_LAND_PROBES(p0, p1)
  native.invoke(
    Type.Void, 5746, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void _SET_BOUNDS_AFFECT_WATER_PROBES(Vehicle vehicle, BOOL toggle) // 0x85FC953F6C6CBDE1
--[[
Use the vehicle bounds (instead of viewport) when deciding if a vehicle is sufficiently above the water (waterheight.dat), bypassing wave simulation checks
--]]
function VEHICLE._SET_BOUNDS_AFFECT_WATER_PROBES(vehicle, toggle)
  native.invoke(
    Type.Void, 5747, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_BOAT_ANCHOR(Vehicle vehicle, BOOL toggle) // 0x75DBEC174AEEAD10
function VEHICLE.SET_BOAT_ANCHOR(vehicle, toggle)
  native.invoke(
    Type.Void, 5748, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- BOOL CAN_ANCHOR_BOAT_HERE(Vehicle vehicle) // 0x26C10ECBDA5D043B
function VEHICLE.CAN_ANCHOR_BOAT_HERE(vehicle)
  return native.invoke(
    Type.Bool, 5749, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL CAN_ANCHOR_BOAT_HERE_IGNORE_PLAYERS(Vehicle vehicle) // 0x24F4121D07579880
function VEHICLE.CAN_ANCHOR_BOAT_HERE_IGNORE_PLAYERS(vehicle)
  return native.invoke(
    Type.Bool, 5750, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_BOAT_REMAINS_ANCHORED_WHILE_PLAYER_IS_DRIVER(Vehicle vehicle, BOOL toggle) // 0xE3EBAAE484798530
function VEHICLE.SET_BOAT_REMAINS_ANCHORED_WHILE_PLAYER_IS_DRIVER(vehicle, toggle)
  native.invoke(
    Type.Void, 5751, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_FORCE_LOW_LOD_ANCHOR_MODE(Vehicle vehicle, BOOL p1) // 0xB28B1FE5BFADD7F5
--[[
No observed effect.
--]]
function VEHICLE.SET_FORCE_LOW_LOD_ANCHOR_MODE(vehicle, p1)
  native.invoke(
    Type.Void, 5752, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1)
  )
end

-- void SET_BOAT_LOW_LOD_ANCHOR_DISTANCE(Vehicle vehicle, float value) // 0xE842A9398079BD82
function VEHICLE.SET_BOAT_LOW_LOD_ANCHOR_DISTANCE(vehicle, value)
  native.invoke(
    Type.Void, 5753, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, value)
  )
end

-- BOOL IS_BOAT_ANCHORED(Vehicle vehicle) // 0xB0AD1238A709B1A2
function VEHICLE.IS_BOAT_ANCHORED(vehicle)
  return native.invoke(
    Type.Bool, 5754, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_BOAT_SINKS_WHEN_WRECKED(Vehicle vehicle, BOOL toggle) // 0x8F719973E1445BA2
function VEHICLE.SET_BOAT_SINKS_WHEN_WRECKED(vehicle, toggle)
  native.invoke(
    Type.Void, 5755, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_BOAT_WRECKED(Vehicle vehicle) // 0xBD32E46AA95C1DD2
function VEHICLE.SET_BOAT_WRECKED(vehicle)
  native.invoke(
    Type.Void, 5756, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_SIREN(Vehicle vehicle, BOOL toggle) // 0xF4924635A19EB37D
--[[
Activate siren on vehicle (Only works if the vehicle has a siren).
--]]
function VEHICLE.SET_VEHICLE_SIREN(vehicle, toggle)
  native.invoke(
    Type.Void, 5757, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_VEHICLE_SIREN_ON(Vehicle vehicle) // 0x4C9BF537BE2634B2
function VEHICLE.IS_VEHICLE_SIREN_ON(vehicle)
  return native.invoke(
    Type.Bool, 5758, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL IS_VEHICLE_SIREN_AUDIO_ON(Vehicle vehicle) // 0xB5CC40FBCB586380
function VEHICLE.IS_VEHICLE_SIREN_AUDIO_ON(vehicle)
  return native.invoke(
    Type.Bool, 5759, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_STRONG(Vehicle vehicle, BOOL toggle) // 0x3E8C8727991A8A0B
--[[
If set to true, vehicle will not take crash damage, but is still susceptible to damage from bullets and explosives
--]]
function VEHICLE.SET_VEHICLE_STRONG(vehicle, toggle)
  native.invoke(
    Type.Void, 5760, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void REMOVE_VEHICLE_STUCK_CHECK(Vehicle vehicle) // 0x8386BFB614D06749
function VEHICLE.REMOVE_VEHICLE_STUCK_CHECK(vehicle)
  native.invoke(
    Type.Void, 5761, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void GET_VEHICLE_COLOURS(Vehicle vehicle, int* colorPrimary, int* colorSecondary) // 0xA19435F193E081AC
function VEHICLE.GET_VEHICLE_COLOURS(vehicle, colorPrimary, colorSecondary)
  native.invoke(
    Type.Void, 5762, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, colorPrimary),
    arg(Type.Int, colorSecondary)
  )
end

-- BOOL IS_VEHICLE_SEAT_FREE(Vehicle vehicle, int seatIndex, BOOL isTaskRunning) // 0x22AC59A870E6A669
--[[
Check if a vehicle seat is free.

seatIndex  = -1 being the driver seat.
Use GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(vehicle) - 1 for last seat index.
isTaskRunning = on true the function returns already false while a task on the target seat is running (TASK_ENTER_VEHICLE/TASK_SHUFFLE_TO_NEXT_VEHICLE_SEAT) - on false only when a ped is finally sitting in the seat.
--]]
function VEHICLE.IS_VEHICLE_SEAT_FREE(vehicle, seatIndex, isTaskRunning)
  return native.invoke(
    Type.Bool, 5763, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, seatIndex),
    arg(Type.Bool, isTaskRunning)
  )
end

-- Ped GET_PED_IN_VEHICLE_SEAT(Vehicle vehicle, int seatIndex, BOOL p2) // 0xBB40DD2270B65366
--[[
If there is no ped in the seat, and the game considers the vehicle as ambient population, this will create a random occupant ped in the seat, which may be cleaned up by the game fairly soon if not marked as script-owned mission entity.

Seat indexes:
-1 = Driver
0 = Front Right Passenger
1 = Back Left Passenger
2 = Back Right Passenger
3 = Further Back Left Passenger (vehicles > 4 seats)
4 = Further Back Right Passenger (vehicles > 4 seats)
etc.

If p2 is true it uses a different GetOccupant function.
--]]
function VEHICLE.GET_PED_IN_VEHICLE_SEAT(vehicle, seatIndex, p2)
  return native.invoke(
    Type.Ped, 5764, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, seatIndex),
    arg(Type.Bool, p2)
  )
end

-- Ped GET_LAST_PED_IN_VEHICLE_SEAT(Vehicle vehicle, int seatIndex) // 0x83F969AA1EE2A664
function VEHICLE.GET_LAST_PED_IN_VEHICLE_SEAT(vehicle, seatIndex)
  return native.invoke(
    Type.Ped, 5765, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, seatIndex)
  )
end

-- BOOL GET_VEHICLE_LIGHTS_STATE(Vehicle vehicle, BOOL* lightsOn, BOOL* highbeamsOn) // 0xB91B4C20085BD12F
function VEHICLE.GET_VEHICLE_LIGHTS_STATE(vehicle, lightsOn, highbeamsOn)
  return native.invoke(
    Type.Bool, 5766, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, lightsOn),
    arg(Type.Bool, highbeamsOn)
  )
end

-- BOOL IS_VEHICLE_TYRE_BURST(Vehicle vehicle, int wheelID, BOOL completely) // 0xBA291848A0815CA9
--[[
wheelID used for 4 wheelers seem to be (0, 1, 4, 5)
completely - is to check if tire completely gone from rim.

'0 = wheel_lf / bike, plane or jet front
'1 = wheel_rf
'2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left
'3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right
'4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left
'5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right
'45 = 6 wheels trailer mid wheel left
'47 = 6 wheels trailer mid wheel right
--]]
function VEHICLE.IS_VEHICLE_TYRE_BURST(vehicle, wheelID, completely)
  return native.invoke(
    Type.Bool, 5767, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, wheelID),
    arg(Type.Bool, completely)
  )
end

-- void SET_VEHICLE_FORWARD_SPEED(Vehicle vehicle, float speed) // 0xAB54A438726D25D5
--[[
SCALE: Setting the speed to 30 would result in a speed of roughly 60mph, according to speedometer.

Speed is in meters per second
You can convert meters/s to mph here:
http://www.calculateme.com/Speed/MetersperSecond/ToMilesperHour.htm
--]]
function VEHICLE.SET_VEHICLE_FORWARD_SPEED(vehicle, speed)
  native.invoke(
    Type.Void, 5768, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, speed)
  )
end

-- void SET_VEHICLE_FORWARD_SPEED_XY(Vehicle vehicle, float speed) // 0x6501129C9E0FFA05
--[[
Seems to be identical to SET_VEHICLE_FORWARD_SPEED
--]]
function VEHICLE.SET_VEHICLE_FORWARD_SPEED_XY(vehicle, speed)
  native.invoke(
    Type.Void, 5769, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, speed)
  )
end

-- void BRING_VEHICLE_TO_HALT(Vehicle vehicle, float distance, int duration, BOOL p3) // 0x260BE8F09E326A20
--[[
This native makes the vehicle stop immediately, as happens when we enter a MP garage.

. distance defines how far it will travel until stopping. Garage doors use 3.0.

. If killEngine is set to 1, you cannot resume driving the vehicle once it stops. This looks like is a bitmapped integer.
--]]
function VEHICLE.BRING_VEHICLE_TO_HALT(vehicle, distance, duration, p3)
  native.invoke(
    Type.Void, 5770, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, distance),
    arg(Type.Int, duration),
    arg(Type.Bool, p3)
  )
end

-- void SET_VEHICLE_STEER_FOR_BUILDINGS(Vehicle vehicle, Any p1) // 0xDCE97BDF8A0EABC8
function VEHICLE.SET_VEHICLE_STEER_FOR_BUILDINGS(vehicle, p1)
  native.invoke(
    Type.Void, 5771, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Any, p1)
  )
end

-- void SET_VEHICLE_CAUSES_SWERVING(Vehicle vehicle, BOOL toggle) // 0x9849DE24FCF23CCC
function VEHICLE.SET_VEHICLE_CAUSES_SWERVING(vehicle, toggle)
  native.invoke(
    Type.Void, 5772, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_IGNORE_PLANES_SMALL_PITCH_CHANGE(Any p0, Any p1) // 0x8664170EF165C4A6
function VEHICLE.SET_IGNORE_PLANES_SMALL_PITCH_CHANGE(p0, p1)
  native.invoke(
    Type.Void, 5773, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void STOP_BRINGING_VEHICLE_TO_HALT(Vehicle vehicle) // 0x7C06330BFDDA182E
--[[
Stops CTaskBringVehicleToHalt
--]]
function VEHICLE.STOP_BRINGING_VEHICLE_TO_HALT(vehicle)
  native.invoke(
    Type.Void, 5774, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL IS_VEHICLE_BEING_BROUGHT_TO_HALT(Vehicle vehicle) // 0xC69BB1D832A710EF
--[[
Returns true if vehicle is halted by BRING_VEHICLE_TO_HALT
--]]
function VEHICLE.IS_VEHICLE_BEING_BROUGHT_TO_HALT(vehicle)
  return native.invoke(
    Type.Bool, 5775, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void LOWER_FORKLIFT_FORKS(Vehicle forklift) // 0x923A293361DF44E5
function VEHICLE.LOWER_FORKLIFT_FORKS(forklift)
  native.invoke(
    Type.Void, 5776, false,
    arg(Type.Vehicle, forklift)
  )
end

-- void SET_FORKLIFT_FORK_HEIGHT(Vehicle vehicle, float height) // 0x37EBBF3117BD6A25
--[[
0.0 = Lowest 1.0 = Highest. This is best to be used if you wanna pick-up a car since un-realistically on GTA V forklifts can't pick up much of anything due to vehicle mass. If you put this under a car then set it above 0.0 to a 'lifted-value' it will raise the car with no issue lol
--]]
function VEHICLE.SET_FORKLIFT_FORK_HEIGHT(vehicle, height)
  native.invoke(
    Type.Void, 5777, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, height)
  )
end

-- BOOL IS_ENTITY_ATTACHED_TO_HANDLER_FRAME(Vehicle vehicle, Entity entity) // 0x57715966069157AD
function VEHICLE.IS_ENTITY_ATTACHED_TO_HANDLER_FRAME(vehicle, entity)
  return native.invoke(
    Type.Bool, 5778, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Entity, entity)
  )
end

-- BOOL IS_ANY_ENTITY_ATTACHED_TO_HANDLER_FRAME(Vehicle vehicle) // 0x62CA17B74C435651
function VEHICLE.IS_ANY_ENTITY_ATTACHED_TO_HANDLER_FRAME(vehicle)
  return native.invoke(
    Type.Bool, 5779, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- Vehicle FIND_HANDLER_VEHICLE_CONTAINER_IS_ATTACHED_TO(Entity entity) // 0x375E7FC44F21C8AB
--[[
Finds the vehicle that is carrying this entity with a handler frame.
The model of the entity must be prop_contr_03b_ld or the function will return 0.
--]]
function VEHICLE.FIND_HANDLER_VEHICLE_CONTAINER_IS_ATTACHED_TO(entity)
  return native.invoke(
    Type.Vehicle, 5780, false,
    arg(Type.Entity, entity)
  )
end

-- BOOL IS_HANDLER_FRAME_LINED_UP_WITH_CONTAINER(Vehicle vehicle, Entity entity) // 0x89D630CF5EA96D23
function VEHICLE.IS_HANDLER_FRAME_LINED_UP_WITH_CONTAINER(vehicle, entity)
  return native.invoke(
    Type.Bool, 5781, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Entity, entity)
  )
end

-- void ATTACH_CONTAINER_TO_HANDLER_FRAME_WHEN_LINED_UP(Vehicle vehicle, Entity entity) // 0x6A98C2ECF57FA5D4
function VEHICLE.ATTACH_CONTAINER_TO_HANDLER_FRAME_WHEN_LINED_UP(vehicle, entity)
  native.invoke(
    Type.Void, 5782, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Entity, entity)
  )
end

-- void DETACH_CONTAINER_FROM_HANDLER_FRAME(Vehicle vehicle) // 0x7C0043FDFF6436BC
function VEHICLE.DETACH_CONTAINER_FROM_HANDLER_FRAME(vehicle)
  native.invoke(
    Type.Void, 5783, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_DISABLE_HEIGHT_MAP_AVOIDANCE(Vehicle vehicle, BOOL p1) // 0x8AA9180DE2FEDD45
function VEHICLE.SET_VEHICLE_DISABLE_HEIGHT_MAP_AVOIDANCE(vehicle, p1)
  native.invoke(
    Type.Void, 5784, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1)
  )
end

-- void SET_BOAT_DISABLE_AVOIDANCE(Vehicle vehicle, BOOL p1) // 0x0A6A279F3AA4FD70
function VEHICLE.SET_BOAT_DISABLE_AVOIDANCE(vehicle, p1)
  native.invoke(
    Type.Void, 5785, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1)
  )
end

-- BOOL IS_HELI_LANDING_AREA_BLOCKED(Vehicle vehicle) // 0x634148744F385576
function VEHICLE.IS_HELI_LANDING_AREA_BLOCKED(vehicle)
  return native.invoke(
    Type.Bool, 5786, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_SHORT_SLOWDOWN_FOR_LANDING(Vehicle vehicle) // 0x107A473D7A6647A9
--[[
Used on helicopters and blimps during the CTaskVehicleLand task. Sets a value on the task to 10f
--]]
function VEHICLE.SET_SHORT_SLOWDOWN_FOR_LANDING(vehicle)
  native.invoke(
    Type.Void, 5787, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_HELI_TURBULENCE_SCALAR(Vehicle vehicle, float p1) // 0xE6F13851780394DA
function VEHICLE.SET_HELI_TURBULENCE_SCALAR(vehicle, p1)
  native.invoke(
    Type.Void, 5788, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, p1)
  )
end

-- void SET_CAR_BOOT_OPEN(Vehicle vehicle) // 0xFC40CBF7B90CA77C
--[[
Initially used in Max Payne 3, that's why we know the name.
--]]
function VEHICLE.SET_CAR_BOOT_OPEN(vehicle)
  native.invoke(
    Type.Void, 5789, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_TYRE_BURST(Vehicle vehicle, int index, BOOL onRim, float p3) // 0xEC6A202EE4960385
--[[
"To burst tyres VEHICLE::SET_VEHICLE_TYRE_BURST(vehicle, 0, true, 1000.0)
to burst all tyres type it 8 times where p1 = 0 to 7.

p3 seems to be how much damage it has taken. 0 doesn't deflate them, 1000 completely deflates them.

'0 = wheel_lf / bike, plane or jet front
'1 = wheel_rf
'2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left
'3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right
'4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left
'5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right
'45 = 6 wheels trailer mid wheel left
'47 = 6 wheels trailer mid wheel right
--]]
function VEHICLE.SET_VEHICLE_TYRE_BURST(vehicle, index, onRim, p3)
  native.invoke(
    Type.Void, 5790, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, index),
    arg(Type.Bool, onRim),
    arg(Type.Float, p3)
  )
end

-- void SET_VEHICLE_DOORS_SHUT(Vehicle vehicle, BOOL closeInstantly) // 0x781B3D62BB013EF5
--[[
Closes all doors of a vehicle:
--]]
function VEHICLE.SET_VEHICLE_DOORS_SHUT(vehicle, closeInstantly)
  native.invoke(
    Type.Void, 5791, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, closeInstantly)
  )
end

-- void SET_VEHICLE_TYRES_CAN_BURST(Vehicle vehicle, BOOL toggle) // 0xEB9DC3C7D8596C46
--[[
Allows you to toggle bulletproof tires.
--]]
function VEHICLE.SET_VEHICLE_TYRES_CAN_BURST(vehicle, toggle)
  native.invoke(
    Type.Void, 5792, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- BOOL GET_VEHICLE_TYRES_CAN_BURST(Vehicle vehicle) // 0x678B9BB8C3F58FEB
function VEHICLE.GET_VEHICLE_TYRES_CAN_BURST(vehicle)
  return native.invoke(
    Type.Bool, 5793, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_WHEELS_CAN_BREAK(Vehicle vehicle, BOOL enabled) // 0x29B18B4FD460CA8F
function VEHICLE.SET_VEHICLE_WHEELS_CAN_BREAK(vehicle, enabled)
  native.invoke(
    Type.Void, 5794, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, enabled)
  )
end

-- void SET_VEHICLE_DOOR_OPEN(Vehicle vehicle, int doorId, BOOL loose, BOOL openInstantly) // 0x7C65DAC73C35C862
--[[
doorId: see SET_VEHICLE_DOOR_SHUT
--]]
function VEHICLE.SET_VEHICLE_DOOR_OPEN(vehicle, doorId, loose, openInstantly)
  native.invoke(
    Type.Void, 5795, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, doorId),
    arg(Type.Bool, loose),
    arg(Type.Bool, openInstantly)
  )
end

-- void SET_VEHICLE_DOOR_AUTO_LOCK(Vehicle vehicle, int doorId, BOOL toggle) // 0x3B458DDB57038F08
--[[
doorId: see SET_VEHICLE_DOOR_SHUT

Usually used alongside other vehicle door natives.
--]]
function VEHICLE.SET_VEHICLE_DOOR_AUTO_LOCK(vehicle, doorId, toggle)
  native.invoke(
    Type.Void, 5796, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, doorId),
    arg(Type.Bool, toggle)
  )
end

-- void SET_FLEEING_VEHICLES_USE_SWITCHED_OFF_NODES(Any p0) // 0xA247F9EF01D8082E
function VEHICLE.SET_FLEEING_VEHICLES_USE_SWITCHED_OFF_NODES(p0)
  native.invoke(
    Type.Void, 5797, false,
    arg(Type.Any, p0)
  )
end

-- void REMOVE_VEHICLE_WINDOW(Vehicle vehicle, int windowIndex) // 0xA711568EEDB43069
--[[
windowIndex:
0 = Front Right Window
1 = Front Left Window
2 = Back Right Window
3 = Back Left Window
4 = Unknown
5 = Unknown
6 = Windscreen
7 = Rear Windscreen
--]]
function VEHICLE.REMOVE_VEHICLE_WINDOW(vehicle, windowIndex)
  native.invoke(
    Type.Void, 5798, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, windowIndex)
  )
end

-- void ROLL_DOWN_WINDOWS(Vehicle vehicle) // 0x85796B0549DDE156
--[[
Roll down all the windows of the vehicle passed through the first parameter.
--]]
function VEHICLE.ROLL_DOWN_WINDOWS(vehicle)
  native.invoke(
    Type.Void, 5799, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void ROLL_DOWN_WINDOW(Vehicle vehicle, int windowIndex) // 0x7AD9E6CE657D69E3
--[[
windowIndex:
0 = Front Left Window
1 = Front Right Window
2 = Rear Left Window
3 = Rear Right Window
4 = Front Windscreen
5 = Rear Windscreen
6 = Mid Left
7 = Mid Right
8 = Invalid
--]]
function VEHICLE.ROLL_DOWN_WINDOW(vehicle, windowIndex)
  native.invoke(
    Type.Void, 5800, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, windowIndex)
  )
end

-- void ROLL_UP_WINDOW(Vehicle vehicle, int windowIndex) // 0x602E548F46E24D59
--[[
windowIndex:
0 = Front Left Window
1 = Front Right Window
2 = Rear Left Window
3 = Rear Right Window
4 = Front Windscreen
5 = Rear Windscreen
6 = Mid Left
7 = Mid Right
8 = Invalid
--]]
function VEHICLE.ROLL_UP_WINDOW(vehicle, windowIndex)
  native.invoke(
    Type.Void, 5801, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, windowIndex)
  )
end

-- void SMASH_VEHICLE_WINDOW(Vehicle vehicle, int windowIndex) // 0x9E5B5E4D2CCD2259
--[[
windowIndex:
0 = Front Left Window
1 = Front Right Window
2 = Rear Left Window
3 = Rear Right Window
4 = Front Windscreen
5 = Rear Windscreen
6 = Mid Left
7 = Mid Right
8 = Invalid
--]]
function VEHICLE.SMASH_VEHICLE_WINDOW(vehicle, windowIndex)
  native.invoke(
    Type.Void, 5802, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, windowIndex)
  )
end

-- void FIX_VEHICLE_WINDOW(Vehicle vehicle, int windowIndex) // 0x772282EBEB95E682
--[[
windowIndex:
0 = Front Left Window
1 = Front Right Window
2 = Rear Left Window
3 = Rear Right Window
4 = Front Windscreen
5 = Rear Windscreen
6 = Mid Left
7 = Mid Right
8 = Invalid

Additional information: FIX_VEHICLE_WINDOW (0x140D0BB88) references an array of bone vehicle indices (0x141D4B3E0) { 2Ah, 2Bh, 2Ch, 2Dh, 2Eh, 2Fh, 28h, 29h } that correspond to: window_lf, window_rf, window_lr, window_rr, window_lm, window_rm, windscreen, windscreen_r. This array is used by most vehwindow natives.

Also, this function is coded to not work on vehicles of type: CBike, Bmx, CBoat, CTrain, and CSubmarine.
--]]
function VEHICLE.FIX_VEHICLE_WINDOW(vehicle, windowIndex)
  native.invoke(
    Type.Void, 5803, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, windowIndex)
  )
end

-- void POP_OUT_VEHICLE_WINDSCREEN(Vehicle vehicle) // 0x6D645D59FB5F5AD3
--[[
Detaches the vehicle's windscreen.
For further information, see : gtaforums.com/topic/859570-glass/#entry1068894566
--]]
function VEHICLE.POP_OUT_VEHICLE_WINDSCREEN(vehicle)
  native.invoke(
    Type.Void, 5804, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void POP_OFF_VEHICLE_ROOF_WITH_IMPULSE(Vehicle vehicle, float x, float y, float z) // 0xE38CB9D7D39FDBCC
--[[
Pops off the "roof" bone in the direction of the specified offset from the vehicle.
--]]
function VEHICLE.POP_OFF_VEHICLE_ROOF_WITH_IMPULSE(vehicle, x, y, z)
  native.invoke(
    Type.Void, 5805, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void SET_VEHICLE_LIGHTS(Vehicle vehicle, int state) // 0x34E710FF01247C5A
--[[
set's if the vehicle has lights or not.
not an on off toggle.
p1 = 0 ;vehicle normal lights, off then lowbeams, then highbeams
p1 = 1 ;vehicle doesn't have lights, always off
p1 = 2 ;vehicle has always on lights
p1 = 3 ;or even larger like 4,5,... normal lights like =1
note1: when using =2 on day it's lowbeam,highbeam
but at night it's lowbeam,lowbeam,highbeam
note2: when using =0 it's affected by day or night for highbeams don't exist in daytime.
--]]
function VEHICLE.SET_VEHICLE_LIGHTS(vehicle, state)
  native.invoke(
    Type.Void, 5806, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, state)
  )
end

-- void SET_VEHICLE_USE_PLAYER_LIGHT_SETTINGS(Vehicle vehicle, BOOL toggle) // 0xC45C27EF50F36ADC
function VEHICLE.SET_VEHICLE_USE_PLAYER_LIGHT_SETTINGS(vehicle, toggle)
  native.invoke(
    Type.Void, 5807, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_HEADLIGHT_SHADOWS(Vehicle vehicle, int p1) // 0x1FD09E7390A74D54
--[[
p1 can be either 0, 1 or 2.

Determines how vehicle lights behave when toggled.

0 = Default (Lights can be toggled between off, normal and high beams)
1 = Lights Disabled (Lights are fully disabled, cannot be toggled)
2 = Always On (Lights can be toggled between normal and high beams)
--]]
function VEHICLE.SET_VEHICLE_HEADLIGHT_SHADOWS(vehicle, p1)
  native.invoke(
    Type.Void, 5808, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, p1)
  )
end

-- void SET_VEHICLE_ALARM(Vehicle vehicle, BOOL state) // 0xCDE5E70C1DDB954C
function VEHICLE.SET_VEHICLE_ALARM(vehicle, state)
  native.invoke(
    Type.Void, 5809, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, state)
  )
end

-- void START_VEHICLE_ALARM(Vehicle vehicle) // 0xB8FF7AB45305C345
function VEHICLE.START_VEHICLE_ALARM(vehicle)
  native.invoke(
    Type.Void, 5810, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL IS_VEHICLE_ALARM_ACTIVATED(Vehicle vehicle) // 0x4319E335B71FFF34
function VEHICLE.IS_VEHICLE_ALARM_ACTIVATED(vehicle)
  return native.invoke(
    Type.Bool, 5811, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_INTERIORLIGHT(Vehicle vehicle, BOOL toggle) // 0xBC2042F090AF6AD3
function VEHICLE.SET_VEHICLE_INTERIORLIGHT(vehicle, toggle)
  native.invoke(
    Type.Void, 5812, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_FORCE_INTERIORLIGHT(Vehicle vehicle, BOOL toggle) // 0x8821196D91FA2DE5
--[[
Sets some bit of vehicle
--]]
function VEHICLE.SET_VEHICLE_FORCE_INTERIORLIGHT(vehicle, toggle)
  native.invoke(
    Type.Void, 5813, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_LIGHT_MULTIPLIER(Vehicle vehicle, float multiplier) // 0xB385454F8791F57C
--[[
multiplier = brightness of head lights.
this value isn't capped afaik.

multiplier = 0.0 no lights
multiplier = 1.0 default game value

--]]
function VEHICLE.SET_VEHICLE_LIGHT_MULTIPLIER(vehicle, multiplier)
  native.invoke(
    Type.Void, 5814, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, multiplier)
  )
end

-- void ATTACH_VEHICLE_TO_TRAILER(Vehicle vehicle, Vehicle trailer, float radius) // 0x3C7D42D58F770B54
function VEHICLE.ATTACH_VEHICLE_TO_TRAILER(vehicle, trailer, radius)
  native.invoke(
    Type.Void, 5815, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Vehicle, trailer),
    arg(Type.Float, radius)
  )
end

-- void ATTACH_VEHICLE_ON_TO_TRAILER(Vehicle vehicle, Vehicle trailer, float offsetX, float offsetY, float offsetZ, float coordsX, float coordsY, float coordsZ, float rotationX, float rotationY, float rotationZ, float disableCollisions) // 0x16B5E274BDE402F8
--[[
This is the proper way of attaching vehicles to the car carrier, it's what Rockstar uses. Video Demo: https://www.youtube.com/watch?v=2lVEIzf7bgo
--]]
function VEHICLE.ATTACH_VEHICLE_ON_TO_TRAILER(vehicle, trailer, offsetX, offsetY, offsetZ, coordsX, coordsY, coordsZ, rotationX, rotationY, rotationZ, disableCollisions)
  native.invoke(
    Type.Void, 5816, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Vehicle, trailer),
    arg(Type.Float, offsetX),
    arg(Type.Float, offsetY),
    arg(Type.Float, offsetZ),
    arg(Type.Float, coordsX),
    arg(Type.Float, coordsY),
    arg(Type.Float, coordsZ),
    arg(Type.Float, rotationX),
    arg(Type.Float, rotationY),
    arg(Type.Float, rotationZ),
    arg(Type.Float, disableCollisions)
  )
end

-- void STABILISE_ENTITY_ATTACHED_TO_HELI(Vehicle vehicle, Entity entity, float p2) // 0x374706271354CB18
function VEHICLE.STABILISE_ENTITY_ATTACHED_TO_HELI(vehicle, entity, p2)
  native.invoke(
    Type.Void, 5817, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Entity, entity),
    arg(Type.Float, p2)
  )
end

-- void DETACH_VEHICLE_FROM_TRAILER(Vehicle vehicle) // 0x90532EDF0D2BDD86
function VEHICLE.DETACH_VEHICLE_FROM_TRAILER(vehicle)
  native.invoke(
    Type.Void, 5818, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL IS_VEHICLE_ATTACHED_TO_TRAILER(Vehicle vehicle) // 0xE7CF3C4F9F489F0C
function VEHICLE.IS_VEHICLE_ATTACHED_TO_TRAILER(vehicle)
  return native.invoke(
    Type.Bool, 5819, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_TRAILER_INVERSE_MASS_SCALE(Vehicle vehicle, float p1) // 0x2A8F319B392E7B3F
function VEHICLE.SET_TRAILER_INVERSE_MASS_SCALE(vehicle, p1)
  native.invoke(
    Type.Void, 5820, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, p1)
  )
end

-- void SET_TRAILER_LEGS_RAISED(Vehicle vehicle) // 0x95CF53B3D687F9FA
--[[
in the decompiled scripts, seems to be always called on the vehicle right after being attached to a trailer.
--]]
function VEHICLE.SET_TRAILER_LEGS_RAISED(vehicle)
  native.invoke(
    Type.Void, 5821, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_TRAILER_LEGS_LOWERED(Vehicle vehicle) // 0x878C75C09FBDB942
function VEHICLE.SET_TRAILER_LEGS_LOWERED(vehicle)
  native.invoke(
    Type.Void, 5822, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_TYRE_FIXED(Vehicle vehicle, int tyreIndex) // 0x6E13FC662B882D1D
--[[
tyreIndex = 0 to 4 on normal vehicles

'0 = wheel_lf / bike, plane or jet front
'1 = wheel_rf
'2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left
'3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right
'4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left
'5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right
'45 = 6 wheels trailer mid wheel left
'47 = 6 wheels trailer mid wheel right
--]]
function VEHICLE.SET_VEHICLE_TYRE_FIXED(vehicle, tyreIndex)
  native.invoke(
    Type.Void, 5823, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, tyreIndex)
  )
end

-- void SET_VEHICLE_NUMBER_PLATE_TEXT(Vehicle vehicle, const char* plateText) // 0x95A88F0B409CDA47
--[[
Sets a vehicle's license plate text.  8 chars maximum.

Example:
Ped playerPed = PLAYER::PLAYER_PED_ID();
Vehicle veh = PED::GET_VEHICLE_PED_IS_USING(playerPed);
char *plateText = "KING";
VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(veh, plateText);
--]]
function VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT(vehicle, plateText)
  native.invoke(
    Type.Void, 5824, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.String, plateText)
  )
end

-- const char* GET_VEHICLE_NUMBER_PLATE_TEXT(Vehicle vehicle) // 0x7CE1CCB9B293020E
--[[
Returns the license plate text from a vehicle. 8 chars maximum.
--]]
function VEHICLE.GET_VEHICLE_NUMBER_PLATE_TEXT(vehicle)
  return native.invoke(
    Type.Const char, 5825, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- int GET_NUMBER_OF_VEHICLE_NUMBER_PLATES() // 0x4C4D6B2644F458CB
--[[
Returns the number of *types* of licence plates, enumerated below in SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX.
--]]
function VEHICLE.GET_NUMBER_OF_VEHICLE_NUMBER_PLATES()
  return native.invoke(
    Type.Int, 5826, false
  )
end

-- void SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(Vehicle vehicle, int plateIndex) // 0x9088EB5A43FFB0A1
--[[
Plates:
Blue/White - 0
Yellow/black - 1
Yellow/Blue - 2
Blue/White2 - 3
Blue/White3 - 4
Yankton - 5
--]]
function VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(vehicle, plateIndex)
  native.invoke(
    Type.Void, 5827, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, plateIndex)
  )
end

-- int GET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(Vehicle vehicle) // 0xF11BC2DD9A3E7195
--[[
Returns the PlateType of a vehicle
      Blue_on_White_1 = 3,
      Blue_on_White_2 = 0,
      Blue_on_White_3 = 4,
      Yellow_on_Blue = 2,
       Yellow_on_Black = 1,
      North_Yankton = 5,
--]]
function VEHICLE.GET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(vehicle)
  return native.invoke(
    Type.Int, 5828, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_RANDOM_TRAINS(BOOL toggle) // 0x80D9F74197EA47D9
function VEHICLE.SET_RANDOM_TRAINS(toggle)
  native.invoke(
    Type.Void, 5829, false,
    arg(Type.Bool, toggle)
  )
end

-- Vehicle CREATE_MISSION_TRAIN(int variation, float x, float y, float z, BOOL direction, Any p5, Any p6) // 0x63C6CCA8E68AE8C8
--[[
Train models HAVE TO be loaded (requested) before you use this.
For variation 15 - request:

freight
freightcar
freightgrain
freightcont1
freightcont2
freighttrailer


--]]
function VEHICLE.CREATE_MISSION_TRAIN(variation, x, y, z, direction, p5, p6)
  return native.invoke(
    Type.Vehicle, 5830, false,
    arg(Type.Int, variation),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Bool, direction),
    arg(Type.Any, p5),
    arg(Type.Any, p6)
  )
end

-- void SWITCH_TRAIN_TRACK(int trackId, BOOL state) // 0xFD813BB7DB977F20
--[[
Toggles whether ambient trains can spawn on the specified track or not

`trackId` is the internal id of the train track to switch.
`state` is whether ambient trains can spawn or not

trackIds
0 (`trains1.dat`) Main track around SA
1 (`trains2.dat`) Davis Quartz Quarry branch
2 (`trains3.dat`) Second track alongside live track along Roy Lewenstein Blv.
3 (`trains4.dat`) Metro track circuit
4 (`trains5.dat`) Branch in Mirror Park Railyard
5 (`trains6.dat`) Branch in Mirror Park Railyard
6 (`trains7.dat`) LS branch to Mirror Park Railyard
7 (`trains8.dat`) Overground part of metro track along Forum Dr.
8 (`trains9.dat`) Branch to Mirror Park Railyard
9 (`trains10.dat`) Yankton train
10 (`trains11.dat`) Part of metro track near mission row
11 (`trains12.dat`) Yankton prologue mission train
Full list of all train tracks + track nodes by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/traintracks.json
--]]
function VEHICLE.SWITCH_TRAIN_TRACK(trackId, state)
  native.invoke(
    Type.Void, 5831, false,
    arg(Type.Int, trackId),
    arg(Type.Bool, state)
  )
end

-- void SET_TRAIN_TRACK_SPAWN_FREQUENCY(int trackIndex, int frequency) // 0x21973BBF8D17EDFA
--[[
Only called once inside main_persitant with the parameters p0 = 0, p1 = 120000

trackIndex: 0 - 26
Full list of all train tracks + track nodes by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/traintracks.json
--]]
function VEHICLE.SET_TRAIN_TRACK_SPAWN_FREQUENCY(trackIndex, frequency)
  native.invoke(
    Type.Void, 5832, false,
    arg(Type.Int, trackIndex),
    arg(Type.Int, frequency)
  )
end

-- void ALLOW_TRAIN_TO_BE_REMOVED_BY_POPULATION(Any p0) // 0x2310A8F9421EBF43
function VEHICLE.ALLOW_TRAIN_TO_BE_REMOVED_BY_POPULATION(p0)
  native.invoke(
    Type.Void, 5833, false,
    arg(Type.Any, p0)
  )
end

-- void DELETE_ALL_TRAINS() // 0x736A718577F39C7D
function VEHICLE.DELETE_ALL_TRAINS()
  native.invoke(
    Type.Void, 5834, false
  )
end

-- void SET_TRAIN_SPEED(Vehicle train, float speed) // 0xAA0BC91BE0B796E3
function VEHICLE.SET_TRAIN_SPEED(train, speed)
  native.invoke(
    Type.Void, 5835, false,
    arg(Type.Vehicle, train),
    arg(Type.Float, speed)
  )
end

-- void SET_TRAIN_CRUISE_SPEED(Vehicle train, float speed) // 0x16469284DB8C62B5
function VEHICLE.SET_TRAIN_CRUISE_SPEED(train, speed)
  native.invoke(
    Type.Void, 5836, false,
    arg(Type.Vehicle, train),
    arg(Type.Float, speed)
  )
end

-- void SET_RANDOM_BOATS(BOOL toggle) // 0x84436EC293B1415F
function VEHICLE.SET_RANDOM_BOATS(toggle)
  native.invoke(
    Type.Void, 5837, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_RANDOM_BOATS_MP(BOOL toggle) // 0xDA5E12F728DB30CA
function VEHICLE.SET_RANDOM_BOATS_MP(toggle)
  native.invoke(
    Type.Void, 5838, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_GARBAGE_TRUCKS(BOOL toggle) // 0x2AFD795EEAC8D30D
function VEHICLE.SET_GARBAGE_TRUCKS(toggle)
  native.invoke(
    Type.Void, 5839, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL DOES_VEHICLE_HAVE_STUCK_VEHICLE_CHECK(Vehicle vehicle) // 0x57E4C39DE5EE8470
--[[
Maximum amount of vehicles with vehicle stuck check appears to be 16.
--]]
function VEHICLE.DOES_VEHICLE_HAVE_STUCK_VEHICLE_CHECK(vehicle)
  return native.invoke(
    Type.Bool, 5840, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- int GET_VEHICLE_RECORDING_ID(int recording, const char* script) // 0x21543C612379DB3C
--[[
See REQUEST_VEHICLE_RECORDING
--]]
function VEHICLE.GET_VEHICLE_RECORDING_ID(recording, script)
  return native.invoke(
    Type.Int, 5841, false,
    arg(Type.Int, recording),
    arg(Type.String, script)
  )
end

-- void REQUEST_VEHICLE_RECORDING(int recording, const char* script) // 0xAF514CABE74CBF15
--[[
Request the vehicle recording defined by the lowercase format string "%s%03d.yvr". For example, REQUEST_VEHICLE_RECORDING(1, "FBIs1UBER") corresponds to fbis1uber001.yvr.
For all vehicle recording/playback natives, "script" is a common prefix that usually corresponds to the script/mission the recording is used in, "recording" is its int suffix, and "id" (e.g., in native GET_TOTAL_DURATION_OF_VEHICLE_RECORDING_ID) corresponds to a unique identifier within the recording streaming module.
Note that only 24 recordings (hardcoded in multiple places) can ever active at a given time before clobbering begins.
--]]
function VEHICLE.REQUEST_VEHICLE_RECORDING(recording, script)
  native.invoke(
    Type.Void, 5842, false,
    arg(Type.Int, recording),
    arg(Type.String, script)
  )
end

-- BOOL HAS_VEHICLE_RECORDING_BEEN_LOADED(int recording, const char* script) // 0x300D614A4C785FC4
--[[
See REQUEST_VEHICLE_RECORDING
--]]
function VEHICLE.HAS_VEHICLE_RECORDING_BEEN_LOADED(recording, script)
  return native.invoke(
    Type.Bool, 5843, false,
    arg(Type.Int, recording),
    arg(Type.String, script)
  )
end

-- void REMOVE_VEHICLE_RECORDING(int recording, const char* script) // 0xF1160ACCF98A3FC8
--[[
See REQUEST_VEHICLE_RECORDING
--]]
function VEHICLE.REMOVE_VEHICLE_RECORDING(recording, script)
  native.invoke(
    Type.Void, 5844, false,
    arg(Type.Int, recording),
    arg(Type.String, script)
  )
end

-- Vector3 GET_POSITION_OF_VEHICLE_RECORDING_ID_AT_TIME(int id, float time) // 0x92523B76657A517D
function VEHICLE.GET_POSITION_OF_VEHICLE_RECORDING_ID_AT_TIME(id, time)
  return native.invoke(
    Type.Vector3, 5845, false,
    arg(Type.Int, id),
    arg(Type.Float, time)
  )
end

-- Vector3 GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME(int recording, float time, const char* script) // 0xD242728AA6F0FBA2
--[[
This native does no interpolation between pathpoints. The same position will be returned for all times up to the next pathpoint in the recording.

See REQUEST_VEHICLE_RECORDING
--]]
function VEHICLE.GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME(recording, time, script)
  return native.invoke(
    Type.Vector3, 5846, false,
    arg(Type.Int, recording),
    arg(Type.Float, time),
    arg(Type.String, script)
  )
end

-- Vector3 GET_ROTATION_OF_VEHICLE_RECORDING_ID_AT_TIME(int id, float time) // 0xF0F2103EFAF8CBA7
function VEHICLE.GET_ROTATION_OF_VEHICLE_RECORDING_ID_AT_TIME(id, time)
  return native.invoke(
    Type.Vector3, 5847, false,
    arg(Type.Int, id),
    arg(Type.Float, time)
  )
end

-- Vector3 GET_ROTATION_OF_VEHICLE_RECORDING_AT_TIME(int recording, float time, const char* script) // 0x2058206FBE79A8AD
--[[
This native does no interpolation between pathpoints. The same rotation will be returned for all times up to the next pathpoint in the recording.

See REQUEST_VEHICLE_RECORDING
--]]
function VEHICLE.GET_ROTATION_OF_VEHICLE_RECORDING_AT_TIME(recording, time, script)
  return native.invoke(
    Type.Vector3, 5848, false,
    arg(Type.Int, recording),
    arg(Type.Float, time),
    arg(Type.String, script)
  )
end

-- float GET_TOTAL_DURATION_OF_VEHICLE_RECORDING_ID(int id) // 0x102D125411A7B6E6
function VEHICLE.GET_TOTAL_DURATION_OF_VEHICLE_RECORDING_ID(id)
  return native.invoke(
    Type.Float, 5849, false,
    arg(Type.Int, id)
  )
end

-- float GET_TOTAL_DURATION_OF_VEHICLE_RECORDING(int recording, const char* script) // 0x0E48D1C262390950
--[[
See REQUEST_VEHICLE_RECORDING
--]]
function VEHICLE.GET_TOTAL_DURATION_OF_VEHICLE_RECORDING(recording, script)
  return native.invoke(
    Type.Float, 5850, false,
    arg(Type.Int, recording),
    arg(Type.String, script)
  )
end

-- float GET_POSITION_IN_RECORDING(Vehicle vehicle) // 0x2DACD605FC681475
--[[
Distance traveled in the vehicles current recording.
--]]
function VEHICLE.GET_POSITION_IN_RECORDING(vehicle)
  return native.invoke(
    Type.Float, 5851, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- float GET_TIME_POSITION_IN_RECORDING(Vehicle vehicle) // 0x5746F3A7AB7FE544
--[[
Can be used with GET_TOTAL_DURATION_OF_VEHICLE_RECORDING{_ID} to compute a percentage.
--]]
function VEHICLE.GET_TIME_POSITION_IN_RECORDING(vehicle)
  return native.invoke(
    Type.Float, 5852, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void START_PLAYBACK_RECORDED_VEHICLE(Vehicle vehicle, int recording, const char* script, BOOL p3) // 0x3F878F92B3A7A071
--[[
p3 is some flag related to 'trailers' (invokes CVehicle::GetTrailer).

See REQUEST_VEHICLE_RECORDING
--]]
function VEHICLE.START_PLAYBACK_RECORDED_VEHICLE(vehicle, recording, script, p3)
  native.invoke(
    Type.Void, 5853, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, recording),
    arg(Type.String, script),
    arg(Type.Bool, p3)
  )
end

-- void START_PLAYBACK_RECORDED_VEHICLE_WITH_FLAGS(Vehicle vehicle, int recording, const char* script, int flags, int time, int drivingStyle) // 0x7D80FD645D4DA346
--[[
flags requires further research, e.g., 0x4/0x8 are related to the AI driving task and 0x20 is internally set and interacts with dynamic entity components.

time, often zero and capped at 500, is related to SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER
--]]
function VEHICLE.START_PLAYBACK_RECORDED_VEHICLE_WITH_FLAGS(vehicle, recording, script, flags, time, drivingStyle)
  native.invoke(
    Type.Void, 5854, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, recording),
    arg(Type.String, script),
    arg(Type.Int, flags),
    arg(Type.Int, time),
    arg(Type.Int, drivingStyle)
  )
end

-- void FORCE_PLAYBACK_RECORDED_VEHICLE_UPDATE(Vehicle vehicle, BOOL p1) // 0x1F2E4E06DEA8992B
--[[
Often called after START_PLAYBACK_RECORDED_VEHICLE and SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE; similar in use to FORCE_ENTITY_AI_AND_ANIMATION_UPDATE.
--]]
function VEHICLE.FORCE_PLAYBACK_RECORDED_VEHICLE_UPDATE(vehicle, p1)
  native.invoke(
    Type.Void, 5855, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1)
  )
end

-- void STOP_PLAYBACK_RECORDED_VEHICLE(Vehicle vehicle) // 0x54833611C17ABDEA
function VEHICLE.STOP_PLAYBACK_RECORDED_VEHICLE(vehicle)
  native.invoke(
    Type.Void, 5856, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void PAUSE_PLAYBACK_RECORDED_VEHICLE(Vehicle vehicle) // 0x632A689BF42301B1
function VEHICLE.PAUSE_PLAYBACK_RECORDED_VEHICLE(vehicle)
  native.invoke(
    Type.Void, 5857, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void UNPAUSE_PLAYBACK_RECORDED_VEHICLE(Vehicle vehicle) // 0x8879EE09268305D5
function VEHICLE.UNPAUSE_PLAYBACK_RECORDED_VEHICLE(vehicle)
  native.invoke(
    Type.Void, 5858, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL IS_PLAYBACK_GOING_ON_FOR_VEHICLE(Vehicle vehicle) // 0x1C8A4C2C19E68EEC
function VEHICLE.IS_PLAYBACK_GOING_ON_FOR_VEHICLE(vehicle)
  return native.invoke(
    Type.Bool, 5859, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL IS_PLAYBACK_USING_AI_GOING_ON_FOR_VEHICLE(Vehicle vehicle) // 0xAEA8FD591FAD4106
function VEHICLE.IS_PLAYBACK_USING_AI_GOING_ON_FOR_VEHICLE(vehicle)
  return native.invoke(
    Type.Bool, 5860, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- int GET_CURRENT_PLAYBACK_FOR_VEHICLE(Vehicle vehicle) // 0x42BC05C27A946054
function VEHICLE.GET_CURRENT_PLAYBACK_FOR_VEHICLE(vehicle)
  return native.invoke(
    Type.Int, 5861, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SKIP_TO_END_AND_STOP_PLAYBACK_RECORDED_VEHICLE(Vehicle vehicle) // 0xAB8E2EDA0C0A5883
function VEHICLE.SKIP_TO_END_AND_STOP_PLAYBACK_RECORDED_VEHICLE(vehicle)
  native.invoke(
    Type.Void, 5862, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_PLAYBACK_SPEED(Vehicle vehicle, float speed) // 0x6683AB880E427778
function VEHICLE.SET_PLAYBACK_SPEED(vehicle, speed)
  native.invoke(
    Type.Void, 5863, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, speed)
  )
end

-- void START_PLAYBACK_RECORDED_VEHICLE_USING_AI(Vehicle vehicle, int recording, const char* script, float speed, int drivingStyle) // 0x29DE5FA52D00428C
--[[
AI abides by the provided driving style (e.g., stopping at red lights or waiting behind traffic) while executing the specificed vehicle recording.

FORCE_PLAYBACK_RECORDED_VEHICLE_UPDATE is a related native that deals with the AI physics for such recordings.
--]]
function VEHICLE.START_PLAYBACK_RECORDED_VEHICLE_USING_AI(vehicle, recording, script, speed, drivingStyle)
  native.invoke(
    Type.Void, 5864, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, recording),
    arg(Type.String, script),
    arg(Type.Float, speed),
    arg(Type.Int, drivingStyle)
  )
end

-- void SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE(Vehicle vehicle, float time) // 0x9438F7AD68771A20
--[[
SET_TIME_POSITION_IN_RECORDING can be emulated by: desired_time - GET_TIME_POSITION_IN_RECORDING(vehicle)
--]]
function VEHICLE.SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE(vehicle, time)
  native.invoke(
    Type.Void, 5865, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, time)
  )
end

-- void SET_PLAYBACK_TO_USE_AI(Vehicle vehicle, int drivingStyle) // 0xA549C3B37EA28131
--[[
Identical to SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER with 0 as arguments for p1 and p3.
--]]
function VEHICLE.SET_PLAYBACK_TO_USE_AI(vehicle, drivingStyle)
  native.invoke(
    Type.Void, 5866, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, drivingStyle)
  )
end

-- void SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER(Vehicle vehicle, int time, int drivingStyle, BOOL p3) // 0x6E63860BBB190730
--[[
Time is number of milliseconds before reverting, zero for indefinitely.
--]]
function VEHICLE.SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER(vehicle, time, drivingStyle, p3)
  native.invoke(
    Type.Void, 5867, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, time),
    arg(Type.Int, drivingStyle),
    arg(Type.Bool, p3)
  )
end

-- void SET_ADDITIONAL_ROTATION_FOR_RECORDED_VEHICLE_PLAYBACK(Vehicle vehicle, float x, float y, float z, Any p4) // 0x5845066D8A1EA7F7
function VEHICLE.SET_ADDITIONAL_ROTATION_FOR_RECORDED_VEHICLE_PLAYBACK(vehicle, x, y, z, p4)
  native.invoke(
    Type.Void, 5868, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Any, p4)
  )
end

-- void SET_POSITION_OFFSET_FOR_RECORDED_VEHICLE_PLAYBACK(Vehicle vehicle, float x, float y, float z) // 0x796A877E459B99EA
function VEHICLE.SET_POSITION_OFFSET_FOR_RECORDED_VEHICLE_PLAYBACK(vehicle, x, y, z)
  native.invoke(
    Type.Void, 5869, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void SET_GLOBAL_POSITION_OFFSET_FOR_RECORDED_VEHICLE_PLAYBACK(Vehicle vehicle, float x, float y, float z) // 0xFAF2A78061FD9EF4
function VEHICLE.SET_GLOBAL_POSITION_OFFSET_FOR_RECORDED_VEHICLE_PLAYBACK(vehicle, x, y, z)
  native.invoke(
    Type.Void, 5870, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void SET_SHOULD_LERP_FROM_AI_TO_FULL_RECORDING(Vehicle vehicle, BOOL p1) // 0x063AE2B2CC273588
--[[
A vehicle recording playback flag only used in jewelry_heist
--]]
function VEHICLE.SET_SHOULD_LERP_FROM_AI_TO_FULL_RECORDING(vehicle, p1)
  native.invoke(
    Type.Void, 5871, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1)
  )
end

-- void EXPLODE_VEHICLE_IN_CUTSCENE(Vehicle vehicle, BOOL p1) // 0x786A4EB67B01BF0B
function VEHICLE.EXPLODE_VEHICLE_IN_CUTSCENE(vehicle, p1)
  native.invoke(
    Type.Void, 5872, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1)
  )
end

-- void ADD_VEHICLE_STUCK_CHECK_WITH_WARP(Any p0, float p1, Any p2, BOOL p3, BOOL p4, BOOL p5, Any p6) // 0x2FA9923062DD396C
function VEHICLE.ADD_VEHICLE_STUCK_CHECK_WITH_WARP(p0, p1, p2, p3, p4, p5, p6)
  native.invoke(
    Type.Void, 5873, false,
    arg(Type.Any, p0),
    arg(Type.Float, p1),
    arg(Type.Any, p2),
    arg(Type.Bool, p3),
    arg(Type.Bool, p4),
    arg(Type.Bool, p5),
    arg(Type.Any, p6)
  )
end

-- void SET_VEHICLE_MODEL_IS_SUPPRESSED(Hash model, BOOL suppressed) // 0x0FC2D89AC25A5814
--[[
Makes the vehicle stop spawning naturally in traffic. Here's an essential example:

VEHICLE::SET_VEHICLE_MODEL_IS_SUPPRESSED(MISC::GET_HASH_KEY("taco"), true);

Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
--]]
function VEHICLE.SET_VEHICLE_MODEL_IS_SUPPRESSED(model, suppressed)
  native.invoke(
    Type.Void, 5874, false,
    arg(Type.Hash, model),
    arg(Type.Bool, suppressed)
  )
end

-- Vehicle GET_RANDOM_VEHICLE_IN_SPHERE(float x, float y, float z, float radius, Hash modelHash, int flags) // 0x386F6CE5BAF6091C
--[[
Gets a random vehicle in a sphere at the specified position, of the specified radius.

x: The X-component of the position of the sphere.
y: The Y-component of the position of the sphere.
z: The Z-component of the position of the sphere.
radius: The radius of the sphere. Max is 9999.9004.
modelHash: The vehicle model to limit the selection to. Pass 0 for any model.
flags: The bitwise flags that modifies the behaviour of this function.

Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
--]]
function VEHICLE.GET_RANDOM_VEHICLE_IN_SPHERE(x, y, z, radius, modelHash, flags)
  return native.invoke(
    Type.Vehicle, 5875, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Hash, modelHash),
    arg(Type.Int, flags)
  )
end

-- Vehicle GET_RANDOM_VEHICLE_FRONT_BUMPER_IN_SPHERE(float p0, float p1, float p2, float p3, int p4, int p5, int p6) // 0xC5574E0AEB86BA68
function VEHICLE.GET_RANDOM_VEHICLE_FRONT_BUMPER_IN_SPHERE(p0, p1, p2, p3, p4, p5, p6)
  return native.invoke(
    Type.Vehicle, 5876, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Int, p4),
    arg(Type.Int, p5),
    arg(Type.Int, p6)
  )
end

-- Vehicle GET_RANDOM_VEHICLE_BACK_BUMPER_IN_SPHERE(float p0, float p1, float p2, float p3, int p4, int p5, int p6) // 0xB50807EABE20A8DC
function VEHICLE.GET_RANDOM_VEHICLE_BACK_BUMPER_IN_SPHERE(p0, p1, p2, p3, p4, p5, p6)
  return native.invoke(
    Type.Vehicle, 5877, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Int, p4),
    arg(Type.Int, p5),
    arg(Type.Int, p6)
  )
end

-- Vehicle GET_CLOSEST_VEHICLE(float x, float y, float z, float radius, Hash modelHash, int flags) // 0xF73EB622C4F1689B
--[[
Example usage
VEHICLE::GET_CLOSEST_VEHICLE(x, y, z, radius, hash, unknown leave at 70) 

x, y, z: Position to get closest vehicle to.
radius: Max radius to get a vehicle.
modelHash: Limit to vehicles with this model. 0 for any.
flags: The bitwise flags altering the function's behaviour.

Does not return police cars or helicopters.

It seems to return police cars for me, does not seem to return helicopters, planes or boats for some reason

Only returns non police cars and motorbikes with the flag set to 70 and modelHash to 0. ModelHash seems to always be 0 when not a modelHash in the scripts, as stated above. 

These flags were found in the b617d scripts: 0,2,4,6,7,23,127,260,2146,2175,12294,16384,16386,20503,32768,67590,67711,98309,100359.
Converted to binary, each bit probably represents a flag as explained regarding another native here: gtaforums.com/topic/822314-guide-driving-styles

Conversion of found flags to binary: https://pastebin.com/kghNFkRi

At exactly 16384 which is 0100000000000000 in binary and 4000 in hexadecimal only planes are returned. 

It's probably more convenient to use worldGetAllVehicles(int *arr, int arrSize) and check the shortest distance yourself and sort if you want by checking the vehicle type with for example VEHICLE::IS_THIS_MODEL_A_BOAT

-------------------------------------------------------------------------

Conclusion: This native is not worth trying to use. Use something like this instead: https://pastebin.com/xiFdXa7h

Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
--]]
function VEHICLE.GET_CLOSEST_VEHICLE(x, y, z, radius, modelHash, flags)
  return native.invoke(
    Type.Vehicle, 5878, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Hash, modelHash),
    arg(Type.Int, flags)
  )
end

-- Vehicle GET_TRAIN_CARRIAGE(Vehicle train, int trailerNumber) // 0x08AAFD0814722BC3
--[[
Corrected p1. it's basically the 'carriage/trailer number'. So if the train has 3 trailers you'd call the native once with a var or 3 times with 1, 2, 3.
--]]
function VEHICLE.GET_TRAIN_CARRIAGE(train, trailerNumber)
  return native.invoke(
    Type.Vehicle, 5879, false,
    arg(Type.Vehicle, train),
    arg(Type.Int, trailerNumber)
  )
end

-- BOOL IS_MISSION_TRAIN(Vehicle train) // 0xAD464F2E18836BFC
function VEHICLE.IS_MISSION_TRAIN(train)
  return native.invoke(
    Type.Bool, 5880, false,
    arg(Type.Vehicle, train)
  )
end

-- void DELETE_MISSION_TRAIN(Vehicle* train) // 0x5B76B14AE875C795
function VEHICLE.DELETE_MISSION_TRAIN(train)
  native.invoke(
    Type.Void, 5881, false,
    arg(Type.Vehicle, train)
  )
end

-- void SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED(Vehicle* train, BOOL p1) // 0xBBE7648349B49BE8
--[[
p1 is always 0
--]]
function VEHICLE.SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED(train, p1)
  native.invoke(
    Type.Void, 5882, false,
    arg(Type.Vehicle, train),
    arg(Type.Bool, p1)
  )
end

-- void SET_MISSION_TRAIN_COORDS(Vehicle train, float x, float y, float z) // 0x591CA673AA6AB736
function VEHICLE.SET_MISSION_TRAIN_COORDS(train, x, y, z)
  native.invoke(
    Type.Void, 5883, false,
    arg(Type.Vehicle, train),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- BOOL IS_THIS_MODEL_A_BOAT(Hash model) // 0x45A9187928F4B9E3
function VEHICLE.IS_THIS_MODEL_A_BOAT(model)
  return native.invoke(
    Type.Bool, 5884, false,
    arg(Type.Hash, model)
  )
end

-- BOOL IS_THIS_MODEL_A_JETSKI(Hash model) // 0x9537097412CF75FE
--[[
Checks if model is a boat, then checks for FLAG_IS_JETSKI.
--]]
function VEHICLE.IS_THIS_MODEL_A_JETSKI(model)
  return native.invoke(
    Type.Bool, 5885, false,
    arg(Type.Hash, model)
  )
end

-- BOOL IS_THIS_MODEL_A_PLANE(Hash model) // 0xA0948AB42D7BA0DE
function VEHICLE.IS_THIS_MODEL_A_PLANE(model)
  return native.invoke(
    Type.Bool, 5886, false,
    arg(Type.Hash, model)
  )
end

-- BOOL IS_THIS_MODEL_A_HELI(Hash model) // 0xDCE4334788AF94EA
function VEHICLE.IS_THIS_MODEL_A_HELI(model)
  return native.invoke(
    Type.Bool, 5887, false,
    arg(Type.Hash, model)
  )
end

-- BOOL IS_THIS_MODEL_A_CAR(Hash model) // 0x7F6DB52EEFC96DF8
--[[
To check if the model is an amphibious car, use IS_THIS_MODEL_AN_AMPHIBIOUS_CAR.
--]]
function VEHICLE.IS_THIS_MODEL_A_CAR(model)
  return native.invoke(
    Type.Bool, 5888, false,
    arg(Type.Hash, model)
  )
end

-- BOOL IS_THIS_MODEL_A_TRAIN(Hash model) // 0xAB935175B22E822B
function VEHICLE.IS_THIS_MODEL_A_TRAIN(model)
  return native.invoke(
    Type.Bool, 5889, false,
    arg(Type.Hash, model)
  )
end

-- BOOL IS_THIS_MODEL_A_BIKE(Hash model) // 0xB50C0B0CEDC6CE84
function VEHICLE.IS_THIS_MODEL_A_BIKE(model)
  return native.invoke(
    Type.Bool, 5890, false,
    arg(Type.Hash, model)
  )
end

-- BOOL IS_THIS_MODEL_A_BICYCLE(Hash model) // 0xBF94DD42F63BDED2
function VEHICLE.IS_THIS_MODEL_A_BICYCLE(model)
  return native.invoke(
    Type.Bool, 5891, false,
    arg(Type.Hash, model)
  )
end

-- BOOL IS_THIS_MODEL_A_QUADBIKE(Hash model) // 0x39DAC362EE65FA28
function VEHICLE.IS_THIS_MODEL_A_QUADBIKE(model)
  return native.invoke(
    Type.Bool, 5892, false,
    arg(Type.Hash, model)
  )
end

-- BOOL IS_THIS_MODEL_AN_AMPHIBIOUS_CAR(Hash model) // 0x633F6F44A537EBB6
function VEHICLE.IS_THIS_MODEL_AN_AMPHIBIOUS_CAR(model)
  return native.invoke(
    Type.Bool, 5893, false,
    arg(Type.Hash, model)
  )
end

-- BOOL IS_THIS_MODEL_AN_AMPHIBIOUS_QUADBIKE(Hash model) // 0xA1A9FC1C76A6730D
function VEHICLE.IS_THIS_MODEL_AN_AMPHIBIOUS_QUADBIKE(model)
  return native.invoke(
    Type.Bool, 5894, false,
    arg(Type.Hash, model)
  )
end

-- void SET_HELI_BLADES_FULL_SPEED(Vehicle vehicle) // 0xA178472EBB8AE60D
--[[
Equivalent of SET_HELI_BLADES_SPEED(vehicleHandle, 1.0f);

this native works on planes to?
--]]
function VEHICLE.SET_HELI_BLADES_FULL_SPEED(vehicle)
  native.invoke(
    Type.Void, 5895, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_HELI_BLADES_SPEED(Vehicle vehicle, float speed) // 0xFD280B4D7F3ABC4D
--[[
Sets the speed of the helicopter blades in percentage of the full speed.

vehicleHandle: The helicopter.
speed: The speed in percentage, 0.0f being 0% and 1.0f being 100%.
--]]
function VEHICLE.SET_HELI_BLADES_SPEED(vehicle, speed)
  native.invoke(
    Type.Void, 5896, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, speed)
  )
end

-- void FORCE_SUB_THROTTLE_FOR_TIME(Vehicle vehicle, float p1, float p2) // 0x99CAD8E7AFDB60FA
function VEHICLE.FORCE_SUB_THROTTLE_FOR_TIME(vehicle, p1, p2)
  native.invoke(
    Type.Void, 5897, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, p1),
    arg(Type.Float, p2)
  )
end

-- void SET_VEHICLE_CAN_BE_TARGETTED(Vehicle vehicle, BOOL state) // 0x3750146A28097A82
--[[
This has not yet been tested - it's just an assumption of what the types could be.
--]]
function VEHICLE.SET_VEHICLE_CAN_BE_TARGETTED(vehicle, state)
  native.invoke(
    Type.Void, 5898, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, state)
  )
end

-- void SET_DONT_ALLOW_PLAYER_TO_ENTER_VEHICLE_IF_LOCKED_FOR_PLAYER(Vehicle vehicle, BOOL p1) // 0xDBC631F109350B8C
function VEHICLE.SET_DONT_ALLOW_PLAYER_TO_ENTER_VEHICLE_IF_LOCKED_FOR_PLAYER(vehicle, p1)
  native.invoke(
    Type.Void, 5899, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1)
  )
end

-- void SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED(Vehicle vehicle, BOOL state) // 0x4C7028F78FFD3681
function VEHICLE.SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED(vehicle, state)
  native.invoke(
    Type.Void, 5900, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, state)
  )
end

-- void SET_VEHICLE_HAS_UNBREAKABLE_LIGHTS(Vehicle vehicle, BOOL toggle) // 0x1AA8A837D2169D94
function VEHICLE.SET_VEHICLE_HAS_UNBREAKABLE_LIGHTS(vehicle, toggle)
  native.invoke(
    Type.Void, 5901, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_RESPECTS_LOCKS_WHEN_HAS_DRIVER(Vehicle vehicle, BOOL p1) // 0x2311DD7159F00582
function VEHICLE.SET_VEHICLE_RESPECTS_LOCKS_WHEN_HAS_DRIVER(vehicle, p1)
  native.invoke(
    Type.Void, 5902, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1)
  )
end

-- void SET_VEHICLE_CAN_EJECT_PASSENGERS_IF_LOCKED(Any p0, Any p1) // 0x065D03A9D6B2C6B5
function VEHICLE.SET_VEHICLE_CAN_EJECT_PASSENGERS_IF_LOCKED(p0, p1)
  native.invoke(
    Type.Void, 5903, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- float GET_VEHICLE_DIRT_LEVEL(Vehicle vehicle) // 0x8F17BC8BA08DA62B
--[[
Dirt level does not become greater than 15.0
--]]
function VEHICLE.GET_VEHICLE_DIRT_LEVEL(vehicle)
  return native.invoke(
    Type.Float, 5904, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_DIRT_LEVEL(Vehicle vehicle, float dirtLevel) // 0x79D3B596FE44EE8B
--[[
You can't use values greater than 15.0
Also, R* does (float)(rand() % 15) to get a random dirt level when generating a vehicle.
--]]
function VEHICLE.SET_VEHICLE_DIRT_LEVEL(vehicle, dirtLevel)
  native.invoke(
    Type.Void, 5905, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, dirtLevel)
  )
end

-- BOOL GET_DOES_VEHICLE_HAVE_DAMAGE_DECALS(Vehicle vehicle) // 0xBCDC5017D3CE1E9E
--[[
Appears to return true if the vehicle has any damage, including cosmetically.
--]]
function VEHICLE.GET_DOES_VEHICLE_HAVE_DAMAGE_DECALS(vehicle)
  return native.invoke(
    Type.Bool, 5906, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL IS_VEHICLE_DOOR_FULLY_OPEN(Vehicle vehicle, int doorId) // 0x3E933CFF7B111C22
--[[
doorId: see SET_VEHICLE_DOOR_SHUT
--]]
function VEHICLE.IS_VEHICLE_DOOR_FULLY_OPEN(vehicle, doorId)
  return native.invoke(
    Type.Bool, 5907, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, doorId)
  )
end

-- void SET_VEHICLE_ENGINE_ON(Vehicle vehicle, BOOL value, BOOL instantly, BOOL disableAutoStart) // 0x2497C4717C8B881E
--[[
Starts or stops the engine on the specified vehicle.

vehicle: The vehicle to start or stop the engine on.
value: true to turn the vehicle on; false to turn it off.
instantly: if true, the vehicle will be set to the state immediately; otherwise, the current driver will physically turn on or off the engine.
disableAutoStart: If true, the system will prevent the engine from starting when the player got into it.

from what I've tested when I do this to a helicopter the propellers turn off after the engine has started. so is there any way to keep the heli propellers on?
--]]
function VEHICLE.SET_VEHICLE_ENGINE_ON(vehicle, value, instantly, disableAutoStart)
  native.invoke(
    Type.Void, 5908, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, value),
    arg(Type.Bool, instantly),
    arg(Type.Bool, disableAutoStart)
  )
end

-- void SET_VEHICLE_UNDRIVEABLE(Vehicle vehicle, BOOL toggle) // 0x8ABA6AF54B942B95
function VEHICLE.SET_VEHICLE_UNDRIVEABLE(vehicle, toggle)
  native.invoke(
    Type.Void, 5909, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_PROVIDES_COVER(Vehicle vehicle, BOOL toggle) // 0x5AFEEDD9BB2899D7
function VEHICLE.SET_VEHICLE_PROVIDES_COVER(vehicle, toggle)
  native.invoke(
    Type.Void, 5910, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_DOOR_CONTROL(Vehicle vehicle, int doorId, int speed, float angle) // 0xF2BFA0430F0A0FCB
--[[
doorId: see SET_VEHICLE_DOOR_SHUT
--]]
function VEHICLE.SET_VEHICLE_DOOR_CONTROL(vehicle, doorId, speed, angle)
  native.invoke(
    Type.Void, 5911, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, doorId),
    arg(Type.Int, speed),
    arg(Type.Float, angle)
  )
end

-- void SET_VEHICLE_DOOR_LATCHED(Vehicle vehicle, int doorId, BOOL p2, BOOL p3, BOOL p4) // 0xA5A9653A8D2CAF48
--[[
doorId: see SET_VEHICLE_DOOR_SHUT
--]]
function VEHICLE.SET_VEHICLE_DOOR_LATCHED(vehicle, doorId, p2, p3, p4)
  native.invoke(
    Type.Void, 5912, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, doorId),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3),
    arg(Type.Bool, p4)
  )
end

-- float GET_VEHICLE_DOOR_ANGLE_RATIO(Vehicle vehicle, int doorId) // 0xFE3F9C29F7B32BD5
--[[
doorId: see SET_VEHICLE_DOOR_SHUT
--]]
function VEHICLE.GET_VEHICLE_DOOR_ANGLE_RATIO(vehicle, doorId)
  return native.invoke(
    Type.Float, 5913, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, doorId)
  )
end

-- Ped GET_PED_USING_VEHICLE_DOOR(Vehicle vehicle, int doord) // 0x218297BF0CFD853B
--[[
doorId: see SET_VEHICLE_DOOR_SHUT
--]]
function VEHICLE.GET_PED_USING_VEHICLE_DOOR(vehicle, doord)
  return native.invoke(
    Type.Ped, 5914, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, doord)
  )
end

-- void SET_VEHICLE_DOOR_SHUT(Vehicle vehicle, int doorId, BOOL closeInstantly) // 0x93D9BD300D7789E5
--[[
enum eDoorId
{
	VEH_EXT_DOOR_INVALID_ID = -1,
	VEH_EXT_DOOR_DSIDE_F,
	VEH_EXT_DOOR_DSIDE_R,
	VEH_EXT_DOOR_PSIDE_F,
	VEH_EXT_DOOR_PSIDE_R,
	VEH_EXT_BONNET,
	VEH_EXT_BOOT
};
--]]
function VEHICLE.SET_VEHICLE_DOOR_SHUT(vehicle, doorId, closeInstantly)
  native.invoke(
    Type.Void, 5915, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, doorId),
    arg(Type.Bool, closeInstantly)
  )
end

-- void SET_VEHICLE_DOOR_BROKEN(Vehicle vehicle, int doorId, BOOL deleteDoor) // 0xD4D4F6A4AB575A33
--[[
doorId: see SET_VEHICLE_DOOR_SHUT
--]]
function VEHICLE.SET_VEHICLE_DOOR_BROKEN(vehicle, doorId, deleteDoor)
  native.invoke(
    Type.Void, 5916, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, doorId),
    arg(Type.Bool, deleteDoor)
  )
end

-- void SET_VEHICLE_CAN_BREAK(Vehicle vehicle, BOOL toggle) // 0x59BF8C3D52C92F66
function VEHICLE.SET_VEHICLE_CAN_BREAK(vehicle, toggle)
  native.invoke(
    Type.Void, 5917, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- BOOL DOES_VEHICLE_HAVE_ROOF(Vehicle vehicle) // 0x8AC862B0B32C5B80
function VEHICLE.DOES_VEHICLE_HAVE_ROOF(vehicle)
  return native.invoke(
    Type.Bool, 5918, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_REMOVE_AGGRESSIVE_CARJACK_MISSION(Any p0) // 0xC4B3347BD68BD609
function VEHICLE.SET_VEHICLE_REMOVE_AGGRESSIVE_CARJACK_MISSION(p0)
  native.invoke(
    Type.Void, 5919, false,
    arg(Type.Any, p0)
  )
end

-- void SET_VEHICLE_AVOID_PLAYER_VEHICLE_RIOT_VAN_MISSION(Any p0) // 0xD3301660A57C9272
function VEHICLE.SET_VEHICLE_AVOID_PLAYER_VEHICLE_RIOT_VAN_MISSION(p0)
  native.invoke(
    Type.Void, 5920, false,
    arg(Type.Any, p0)
  )
end

-- void SET_CARJACK_MISSION_REMOVAL_PARAMETERS(Any p0, Any p1) // 0xB9562064627FF9DB
function VEHICLE.SET_CARJACK_MISSION_REMOVAL_PARAMETERS(p0, p1)
  native.invoke(
    Type.Void, 5921, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL IS_BIG_VEHICLE(Vehicle vehicle) // 0x9F243D3919F442FE
--[[
Returns true if MF_IS_BIG (strModelFlags 0x8) handling model flag is set.
--]]
function VEHICLE.IS_BIG_VEHICLE(vehicle)
  return native.invoke(
    Type.Bool, 5922, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- int GET_NUMBER_OF_VEHICLE_COLOURS(Vehicle vehicle) // 0x3B963160CD65D41E
--[[
Returns the total amount of color combinations found in the vehicle's carvariations.meta entry.
--]]
function VEHICLE.GET_NUMBER_OF_VEHICLE_COLOURS(vehicle)
  return native.invoke(
    Type.Int, 5923, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_COLOUR_COMBINATION(Vehicle vehicle, int colorCombination) // 0x33E8CD3322E2FE31
--[[
Sets the selected vehicle's colors to the specified index of the color combination found in the vehicle's carvariations.meta entry.
--]]
function VEHICLE.SET_VEHICLE_COLOUR_COMBINATION(vehicle, colorCombination)
  native.invoke(
    Type.Void, 5924, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, colorCombination)
  )
end

-- int GET_VEHICLE_COLOUR_COMBINATION(Vehicle vehicle) // 0x6A842D197F845D56
--[[
Returns the index of the color combination found in the vehicle's carvariations.meta entry.
--]]
function VEHICLE.GET_VEHICLE_COLOUR_COMBINATION(vehicle)
  return native.invoke(
    Type.Int, 5925, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_XENON_LIGHT_COLOR_INDEX(Vehicle vehicle, int colorIndex) // 0xE41033B25D003A07
--[[
`color`: is the paint index for the vehicle.
Paint index goes from 0 to 12.
Be aware that it only works on xenon lights. Example: https://i.imgur.com/yV3cpG9.png
Full list of all vehicle xenon lights by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicleColors.json
--]]
function VEHICLE.SET_VEHICLE_XENON_LIGHT_COLOR_INDEX(vehicle, colorIndex)
  native.invoke(
    Type.Void, 5926, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, colorIndex)
  )
end

-- int GET_VEHICLE_XENON_LIGHT_COLOR_INDEX(Vehicle vehicle) // 0x3DFF319A831E0CDB
--[[
Returns the headlight color index from the vehicle. Value between 0, 12.
Use SET_VEHICLE_XENON_LIGHT_COLOR_INDEX to set the headlights color for the vehicle.
Must enable xenon headlights before it'll take affect.

Returns an int, value between 0-12 or 255 if no color is set.
--]]
function VEHICLE.GET_VEHICLE_XENON_LIGHT_COLOR_INDEX(vehicle)
  return native.invoke(
    Type.Int, 5927, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_IS_CONSIDERED_BY_PLAYER(Vehicle vehicle, BOOL toggle) // 0x31B927BBC44156CD
--[[
Setting this to false, makes the specified vehicle to where if you press Y your character doesn't even attempt the animation to enter the vehicle. Hence it's not considered aka ignored.
--]]
function VEHICLE.SET_VEHICLE_IS_CONSIDERED_BY_PLAYER(vehicle, toggle)
  native.invoke(
    Type.Void, 5928, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_WILL_FORCE_OTHER_VEHICLES_TO_STOP(Vehicle vehicle, BOOL toggle) // 0xBE5C1255A1830FF5
function VEHICLE.SET_VEHICLE_WILL_FORCE_OTHER_VEHICLES_TO_STOP(vehicle, toggle)
  native.invoke(
    Type.Void, 5929, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_ACT_AS_IF_HAS_SIREN_ON(Vehicle vehicle, BOOL p1) // 0x9BECD4B9FEF3F8A6
function VEHICLE.SET_VEHICLE_ACT_AS_IF_HAS_SIREN_ON(vehicle, p1)
  native.invoke(
    Type.Void, 5930, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1)
  )
end

-- void SET_VEHICLE_USE_MORE_RESTRICTIVE_SPAWN_CHECKS(Vehicle vehicle, BOOL p1) // 0x88BC673CA9E0AE99
function VEHICLE.SET_VEHICLE_USE_MORE_RESTRICTIVE_SPAWN_CHECKS(vehicle, p1)
  native.invoke(
    Type.Void, 5931, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1)
  )
end

-- void SET_VEHICLE_MAY_BE_USED_BY_GOTO_POINT_ANY_MEANS(Vehicle vehicle, BOOL p1) // 0xE851E480B814D4BA
function VEHICLE.SET_VEHICLE_MAY_BE_USED_BY_GOTO_POINT_ANY_MEANS(vehicle, p1)
  native.invoke(
    Type.Void, 5932, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1)
  )
end

-- void GET_RANDOM_VEHICLE_MODEL_IN_MEMORY(BOOL p0, Hash* modelHash, int* successIndicator) // 0x055BF0AC0C34F4FD
--[[
Not present in the retail version! It's just a nullsub.

p0 always true (except in one case)
successIndicator: 0 if success, -1 if failed
--]]
function VEHICLE.GET_RANDOM_VEHICLE_MODEL_IN_MEMORY(p0, modelHash, successIndicator)
  native.invoke(
    Type.Void, 5933, false,
    arg(Type.Bool, p0),
    arg(Type.Hash, modelHash),
    arg(Type.Int, successIndicator)
  )
end

-- int GET_VEHICLE_DOOR_LOCK_STATUS(Vehicle vehicle) // 0x25BC98A59C2EA962
--[[
enum VehicleLockStatus = {
    None = 0,
    Unlocked = 1,
    Locked = 2,
    LockedForPlayer = 3,
    StickPlayerInside = 4, -- Doesn't allow players to exit the vehicle with the exit vehicle key.
    CanBeBrokenInto = 7, -- Can be broken into the car. If the glass is broken, the value will be set to 1
    CanBeBrokenIntoPersist = 8, -- Can be broken into persist
    CannotBeTriedToEnter = 10, -- Cannot be tried to enter (Nothing happens when you press the vehicle enter key).
}
--]]
function VEHICLE.GET_VEHICLE_DOOR_LOCK_STATUS(vehicle)
  return native.invoke(
    Type.Int, 5934, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- int GET_VEHICLE_INDIVIDUAL_DOOR_LOCK_STATUS(Vehicle vehicle, int doorId) // 0xCA4AC3EAAE46EC7B
--[[
Returns vehicle door lock state previously set with SET_VEHICLE_INDIVIDUAL_DOORS_LOCKED
--]]
function VEHICLE.GET_VEHICLE_INDIVIDUAL_DOOR_LOCK_STATUS(vehicle, doorId)
  return native.invoke(
    Type.Int, 5935, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, doorId)
  )
end

-- BOOL IS_VEHICLE_DOOR_DAMAGED(Vehicle veh, int doorID) // 0xB8E181E559464527
--[[
doorID starts at 0, not seeming to skip any numbers. Four door vehicles intuitively range from 0 to 3.
--]]
function VEHICLE.IS_VEHICLE_DOOR_DAMAGED(veh, doorID)
  return native.invoke(
    Type.Bool, 5936, false,
    arg(Type.Vehicle, veh),
    arg(Type.Int, doorID)
  )
end

-- void SET_DOOR_ALLOWED_TO_BE_BROKEN_OFF(Vehicle vehicle, int doorId, BOOL isBreakable) // 0x2FA133A4A9D37ED8
--[[
doorId: see SET_VEHICLE_DOOR_SHUT
--]]
function VEHICLE.SET_DOOR_ALLOWED_TO_BE_BROKEN_OFF(vehicle, doorId, isBreakable)
  native.invoke(
    Type.Void, 5937, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, doorId),
    arg(Type.Bool, isBreakable)
  )
end

-- BOOL IS_VEHICLE_BUMPER_BOUNCING(Vehicle vehicle, BOOL frontBumper) // 0x27B926779DEB502D
function VEHICLE.IS_VEHICLE_BUMPER_BOUNCING(vehicle, frontBumper)
  return native.invoke(
    Type.Bool, 5938, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, frontBumper)
  )
end

-- BOOL IS_VEHICLE_BUMPER_BROKEN_OFF(Vehicle vehicle, BOOL frontBumper) // 0x468056A6BB6F3846
function VEHICLE.IS_VEHICLE_BUMPER_BROKEN_OFF(vehicle, frontBumper)
  return native.invoke(
    Type.Bool, 5939, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, frontBumper)
  )
end

-- BOOL IS_COP_VEHICLE_IN_AREA_3D(float x1, float x2, float y1, float y2, float z1, float z2) // 0x7EEF65D5F153E26A
--[[
Usage:

public bool isCopInRange(Vector3 Location, float Range)
        {
            return Function.Call<bool>(Hash.IS_COP_PED_IN_AREA_3D, Location.X - Range, Location.Y - Range, Location.Z - Range, Location.X + Range, Location.Y + Range, Location.Z + Range);
        }
--]]
function VEHICLE.IS_COP_VEHICLE_IN_AREA_3D(x1, x2, y1, y2, z1, z2)
  return native.invoke(
    Type.Bool, 5940, false,
    arg(Type.Float, x1),
    arg(Type.Float, x2),
    arg(Type.Float, y1),
    arg(Type.Float, y2),
    arg(Type.Float, z1),
    arg(Type.Float, z2)
  )
end

-- BOOL IS_VEHICLE_ON_ALL_WHEELS(Vehicle vehicle) // 0xB104CD1BABF302E2
--[[
 Public Function isVehicleOnAllWheels(vh As Vehicle) As Boolean
        Return Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_ON_ALL_WHEELS, vh)
    End Function

--]]
function VEHICLE.IS_VEHICLE_ON_ALL_WHEELS(vehicle)
  return native.invoke(
    Type.Bool, 5941, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- int GET_VEHICLE_MODEL_VALUE(Hash vehicleModel) // 0x5873C14A52D74236
--[[
Returns `nMonetaryValue` from handling.meta for specific model.
--]]
function VEHICLE.GET_VEHICLE_MODEL_VALUE(vehicleModel)
  return native.invoke(
    Type.Int, 5942, false,
    arg(Type.Hash, vehicleModel)
  )
end

-- Hash GET_VEHICLE_LAYOUT_HASH(Vehicle vehicle) // 0x28D37D4F71AC5C58
--[[
Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
--]]
function VEHICLE.GET_VEHICLE_LAYOUT_HASH(vehicle)
  return native.invoke(
    Type.Hash, 5943, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- Hash GET_IN_VEHICLE_CLIPSET_HASH_FOR_SEAT(Vehicle vehicle, int p1) // 0xA01BC64DD4BFBBAC
function VEHICLE.GET_IN_VEHICLE_CLIPSET_HASH_FOR_SEAT(vehicle, p1)
  return native.invoke(
    Type.Hash, 5944, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, p1)
  )
end

-- void SET_RENDER_TRAIN_AS_DERAILED(Vehicle train, BOOL toggle) // 0x317B11A312DF5534
--[[
Makes the train all jumbled up and derailed as it moves on the tracks (though that wont stop it from its normal operations)
--]]
function VEHICLE.SET_RENDER_TRAIN_AS_DERAILED(train, toggle)
  native.invoke(
    Type.Void, 5945, false,
    arg(Type.Vehicle, train),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_EXTRA_COLOURS(Vehicle vehicle, int pearlescentColor, int wheelColor) // 0x2036F561ADD12E33
--[[
They use the same color indexs as SET_VEHICLE_COLOURS.
--]]
function VEHICLE.SET_VEHICLE_EXTRA_COLOURS(vehicle, pearlescentColor, wheelColor)
  native.invoke(
    Type.Void, 5946, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, pearlescentColor),
    arg(Type.Int, wheelColor)
  )
end

-- void GET_VEHICLE_EXTRA_COLOURS(Vehicle vehicle, int* pearlescentColor, int* wheelColor) // 0x3BC4245933A166F7
function VEHICLE.GET_VEHICLE_EXTRA_COLOURS(vehicle, pearlescentColor, wheelColor)
  native.invoke(
    Type.Void, 5947, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, pearlescentColor),
    arg(Type.Int, wheelColor)
  )
end

-- void SET_VEHICLE_EXTRA_COLOUR_5(Vehicle vehicle, int color) // 0xF40DD601A65F7F19
function VEHICLE.SET_VEHICLE_EXTRA_COLOUR_5(vehicle, color)
  native.invoke(
    Type.Void, 5948, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, color)
  )
end

-- void GET_VEHICLE_EXTRA_COLOUR_5(Vehicle vehicle, int* color) // 0x7D1464D472D32136
function VEHICLE.GET_VEHICLE_EXTRA_COLOUR_5(vehicle, color)
  native.invoke(
    Type.Void, 5949, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, color)
  )
end

-- void SET_VEHICLE_EXTRA_COLOUR_6(Vehicle vehicle, int color) // 0x6089CDF6A57F326C
function VEHICLE.SET_VEHICLE_EXTRA_COLOUR_6(vehicle, color)
  native.invoke(
    Type.Void, 5950, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, color)
  )
end

-- void GET_VEHICLE_EXTRA_COLOUR_6(Vehicle vehicle, int* color) // 0xB7635E80A5C31BFF
function VEHICLE.GET_VEHICLE_EXTRA_COLOUR_6(vehicle, color)
  native.invoke(
    Type.Void, 5951, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, color)
  )
end

-- void STOP_ALL_GARAGE_ACTIVITY() // 0x0F87E938BDF29D66
function VEHICLE.STOP_ALL_GARAGE_ACTIVITY()
  native.invoke(
    Type.Void, 5952, false
  )
end

-- void SET_VEHICLE_FIXED(Vehicle vehicle) // 0x115722B1B9C14C1C
--[[
This fixes a vehicle.
If the vehicle's engine's broken then you cannot fix it with this native.
--]]
function VEHICLE.SET_VEHICLE_FIXED(vehicle)
  native.invoke(
    Type.Void, 5953, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_DEFORMATION_FIXED(Vehicle vehicle) // 0x953DA1E1B12C0491
--[[
This fixes the deformation of a vehicle but the vehicle health doesn't improve
--]]
function VEHICLE.SET_VEHICLE_DEFORMATION_FIXED(vehicle)
  native.invoke(
    Type.Void, 5954, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_CAN_ENGINE_MISSFIRE(Vehicle vehicle, BOOL toggle) // 0x206BC5DC9D1AC70A
function VEHICLE.SET_VEHICLE_CAN_ENGINE_MISSFIRE(vehicle, toggle)
  native.invoke(
    Type.Void, 5955, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_CAN_LEAK_OIL(Vehicle vehicle, BOOL toggle) // 0x51BB2D88D31A914B
function VEHICLE.SET_VEHICLE_CAN_LEAK_OIL(vehicle, toggle)
  native.invoke(
    Type.Void, 5956, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_CAN_LEAK_PETROL(Vehicle vehicle, BOOL toggle) // 0x192547247864DFDD
function VEHICLE.SET_VEHICLE_CAN_LEAK_PETROL(vehicle, toggle)
  native.invoke(
    Type.Void, 5957, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_DISABLE_VEHICLE_PETROL_TANK_FIRES(Vehicle vehicle, BOOL toggle) // 0x465BF26AB9684352
function VEHICLE.SET_DISABLE_VEHICLE_PETROL_TANK_FIRES(vehicle, toggle)
  native.invoke(
    Type.Void, 5958, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_DISABLE_VEHICLE_PETROL_TANK_DAMAGE(Vehicle vehicle, BOOL toggle) // 0x37C8252A7C92D017
function VEHICLE.SET_DISABLE_VEHICLE_PETROL_TANK_DAMAGE(vehicle, toggle)
  native.invoke(
    Type.Void, 5959, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_DISABLE_VEHICLE_ENGINE_FIRES(Vehicle vehicle, BOOL toggle) // 0x91A0BD635321F145
function VEHICLE.SET_DISABLE_VEHICLE_ENGINE_FIRES(vehicle, toggle)
  native.invoke(
    Type.Void, 5960, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_LIMIT_SPEED_WHEN_PLAYER_INACTIVE(Vehicle vehicle, BOOL toggle) // 0xC50CE861B55EAB8B
function VEHICLE.SET_VEHICLE_LIMIT_SPEED_WHEN_PLAYER_INACTIVE(vehicle, toggle)
  native.invoke(
    Type.Void, 5961, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_STOP_INSTANTLY_WHEN_PLAYER_INACTIVE(Vehicle vehicle, BOOL toggle) // 0x6EBFB22D646FFC18
--[[
sfink: sets bit in vehicle's structure, used by maintransition, fm_mission_controller, mission_race and a couple of other scripts. see dissassembly: 
CVehicle *__fastcall sub_140CDAA10(signed int a1, char a2)
{
    CVehicle *result; // rax@1

    result = EntityAsCVehicle(a1);
    if ( result )
    {
        result->field_886 &= 0xEFu;
        result->field_886 |= 16 * (a2 & 1);
    }
    return result;
}
--]]
function VEHICLE.SET_VEHICLE_STOP_INSTANTLY_WHEN_PLAYER_INACTIVE(vehicle, toggle)
  native.invoke(
    Type.Void, 5962, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_DISABLE_PRETEND_OCCUPANTS(Vehicle vehicle, BOOL toggle) // 0x25367DE49D64CF16
function VEHICLE.SET_DISABLE_PRETEND_OCCUPANTS(vehicle, toggle)
  native.invoke(
    Type.Void, 5963, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void REMOVE_VEHICLES_FROM_GENERATORS_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, Any p6) // 0x46A1E1A299EC4BBA
function VEHICLE.REMOVE_VEHICLES_FROM_GENERATORS_IN_AREA(x1, y1, z1, x2, y2, z2, p6)
  native.invoke(
    Type.Void, 5964, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Any, p6)
  )
end

-- void SET_VEHICLE_STEER_BIAS(Vehicle vehicle, float value) // 0x42A8EC77D5150CBE
--[[
Locks the vehicle's steering to the desired angle, explained below.

Requires to be called onTick. Steering is unlocked the moment the function stops being called on the vehicle.

Steer bias:
-1.0 = full right
0.0 = centered steering
1.0 = full left
--]]
function VEHICLE.SET_VEHICLE_STEER_BIAS(vehicle, value)
  native.invoke(
    Type.Void, 5965, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, value)
  )
end

-- BOOL IS_VEHICLE_EXTRA_TURNED_ON(Vehicle vehicle, int extraId) // 0xD2E6822DBFD6C8BD
function VEHICLE.IS_VEHICLE_EXTRA_TURNED_ON(vehicle, extraId)
  return native.invoke(
    Type.Bool, 5966, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, extraId)
  )
end

-- void SET_VEHICLE_EXTRA(Vehicle vehicle, int extraId, BOOL disable) // 0x7EE3A3C5E4A40CC9
--[[
Available extraIds are 1-14, however none of the vehicles have extras above 12.
--]]
function VEHICLE.SET_VEHICLE_EXTRA(vehicle, extraId, disable)
  native.invoke(
    Type.Void, 5967, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, extraId),
    arg(Type.Bool, disable)
  )
end

-- BOOL DOES_EXTRA_EXIST(Vehicle vehicle, int extraId) // 0x1262D55792428154
--[[
Checks via CVehicleModelInfo
--]]
function VEHICLE.DOES_EXTRA_EXIST(vehicle, extraId)
  return native.invoke(
    Type.Bool, 5968, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, extraId)
  )
end

-- BOOL IS_EXTRA_BROKEN_OFF(Vehicle vehicle, int extraId) // 0x534E36D4DB9ECC5D
--[[
Returns true if specified extra part is broken off. It only works for extras that can break off during collisions, non-breakable extras always return false. Also returns true if the breakable extra is toggled off through script.
--]]
function VEHICLE.IS_EXTRA_BROKEN_OFF(vehicle, extraId)
  return native.invoke(
    Type.Bool, 5969, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, extraId)
  )
end

-- void SET_CONVERTIBLE_ROOF(Vehicle vehicle, BOOL p1) // 0xF39C4F538B5124C2
function VEHICLE.SET_CONVERTIBLE_ROOF(vehicle, p1)
  native.invoke(
    Type.Void, 5970, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1)
  )
end

-- void LOWER_CONVERTIBLE_ROOF(Vehicle vehicle, BOOL instantlyLower) // 0xDED51F703D0FA83D
function VEHICLE.LOWER_CONVERTIBLE_ROOF(vehicle, instantlyLower)
  native.invoke(
    Type.Void, 5971, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, instantlyLower)
  )
end

-- void RAISE_CONVERTIBLE_ROOF(Vehicle vehicle, BOOL instantlyRaise) // 0x8F5FB35D7E88FC70
function VEHICLE.RAISE_CONVERTIBLE_ROOF(vehicle, instantlyRaise)
  native.invoke(
    Type.Void, 5972, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, instantlyRaise)
  )
end

-- int GET_CONVERTIBLE_ROOF_STATE(Vehicle vehicle) // 0xF8C397922FC03F41
--[[
0 -> up
1 -> lowering down
2 -> down
3 -> raising up
--]]
function VEHICLE.GET_CONVERTIBLE_ROOF_STATE(vehicle)
  return native.invoke(
    Type.Int, 5973, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL IS_VEHICLE_A_CONVERTIBLE(Vehicle vehicle, BOOL p1) // 0x52F357A30698BCCE
--[[
Returns true if the vehicle has a convertible roof.

p1 is false almost always. However, in launcher_carwash/carwash1/carwash2 scripts, p1 is true and is accompanied by DOES_VEHICLE_HAVE_ROOF. If p1 is true, it seems that every single vehicle will return true irrespective of being a convertible.
--]]
function VEHICLE.IS_VEHICLE_A_CONVERTIBLE(vehicle, p1)
  return native.invoke(
    Type.Bool, 5974, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1)
  )
end

-- BOOL TRANSFORM_TO_SUBMARINE(Vehicle vehicle, BOOL noAnimation) // 0xBE4C854FFDB6EEBE
--[[
Transforms the `stormberg`/`toreador` to its "submarine" variant. If the vehicle is already in that state then the vehicle transformation audio will still play, but the vehicle won't change at all.
--]]
function VEHICLE.TRANSFORM_TO_SUBMARINE(vehicle, noAnimation)
  return native.invoke(
    Type.Bool, 5975, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, noAnimation)
  )
end

-- void TRANSFORM_TO_CAR(Vehicle vehicle, BOOL noAnimation) // 0x2A69FFD1B42BFF9E
--[[
Transforms the `stormberg`/`toreador` to its "road vehicle" variant. If the vehicle is already in that state then the vehicle transformation audio will still play, but the vehicle won't change at all.
--]]
function VEHICLE.TRANSFORM_TO_CAR(vehicle, noAnimation)
  native.invoke(
    Type.Void, 5976, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, noAnimation)
  )
end

-- BOOL IS_VEHICLE_IN_SUBMARINE_MODE(Vehicle vehicle) // 0xA77DC70BD689A1E5
function VEHICLE.IS_VEHICLE_IN_SUBMARINE_MODE(vehicle)
  return native.invoke(
    Type.Bool, 5977, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL IS_VEHICLE_STOPPED_AT_TRAFFIC_LIGHTS(Vehicle vehicle) // 0x2959F696AE390A99
function VEHICLE.IS_VEHICLE_STOPPED_AT_TRAFFIC_LIGHTS(vehicle)
  return native.invoke(
    Type.Bool, 5978, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_DAMAGE(Vehicle vehicle, float xOffset, float yOffset, float zOffset, float damage, float radius, BOOL focusOnModel) // 0xA1DD317EA8FD4F29
--[[
Apply damage to vehicle at a location. Location is relative to vehicle model (not world).

Radius of effect damage applied in a sphere at impact location
When `focusOnModel` set to `true`, the damage sphere will travel towards the vehicle from the given point, thus guaranteeing an impact
--]]
function VEHICLE.SET_VEHICLE_DAMAGE(vehicle, xOffset, yOffset, zOffset, damage, radius, focusOnModel)
  native.invoke(
    Type.Void, 5979, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, xOffset),
    arg(Type.Float, yOffset),
    arg(Type.Float, zOffset),
    arg(Type.Float, damage),
    arg(Type.Float, radius),
    arg(Type.Bool, focusOnModel)
  )
end

-- void SET_VEHICLE_OCCUPANTS_TAKE_EXPLOSIVE_DAMAGE(Vehicle vehicle, BOOL toggle) // 0x35BB21DE06784373
function VEHICLE.SET_VEHICLE_OCCUPANTS_TAKE_EXPLOSIVE_DAMAGE(vehicle, toggle)
  native.invoke(
    Type.Void, 5980, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- float GET_VEHICLE_ENGINE_HEALTH(Vehicle vehicle) // 0xC45D23BAF168AAB8
--[[
Returns 1000.0 if the function is unable to get the address of the specified vehicle or if it's not a vehicle.

Minimum: -4000
Maximum: 1000

-4000: Engine is destroyed
0 and below: Engine catches fire and health rapidly declines
300: Engine is smoking and losing functionality
1000: Engine is perfect
--]]
function VEHICLE.GET_VEHICLE_ENGINE_HEALTH(vehicle)
  return native.invoke(
    Type.Float, 5981, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_ENGINE_HEALTH(Vehicle vehicle, float health) // 0x45F6D8EEF34ABEF1
--[[
1000 is max health
Begins leaking gas at around 650 health
Minimum: -4000
Maximum: 1000

-4000: Engine is destroyed
0 and below: Engine catches fire and health rapidly declines
300: Engine is smoking and losing functionality
1000: Engine is perfect
--]]
function VEHICLE.SET_VEHICLE_ENGINE_HEALTH(vehicle, health)
  native.invoke(
    Type.Void, 5982, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, health)
  )
end

-- void SET_PLANE_ENGINE_HEALTH(Vehicle vehicle, float health) // 0x2A86A0475B6A1434
--[[
Works just like SET_VEHICLE_ENGINE_HEALTH, but only for planes.
--]]
function VEHICLE.SET_PLANE_ENGINE_HEALTH(vehicle, health)
  native.invoke(
    Type.Void, 5983, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, health)
  )
end

-- float GET_VEHICLE_PETROL_TANK_HEALTH(Vehicle vehicle) // 0x7D5DABE888D2D074
--[[
1000 is max health
Begins leaking gas at around 650 health
-999.90002441406 appears to be minimum health, although nothing special occurs
--]]
function VEHICLE.GET_VEHICLE_PETROL_TANK_HEALTH(vehicle)
  return native.invoke(
    Type.Float, 5984, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_PETROL_TANK_HEALTH(Vehicle vehicle, float health) // 0x70DB57649FA8D0D8
--[[
1000 is max health
Begins leaking gas at around 650 health
-999.90002441406 appears to be minimum health, although nothing special occurs
--]]
function VEHICLE.SET_VEHICLE_PETROL_TANK_HEALTH(vehicle, health)
  native.invoke(
    Type.Void, 5985, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, health)
  )
end

-- BOOL IS_VEHICLE_STUCK_TIMER_UP(Vehicle vehicle, int p1, int ms) // 0x679BE1DAF71DA874
--[[
p1 can be anywhere from 0 to 3 in the scripts.
p2 being how long in milliseconds the vehicle has been stuck
--]]
function VEHICLE.IS_VEHICLE_STUCK_TIMER_UP(vehicle, p1, ms)
  return native.invoke(
    Type.Bool, 5986, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, p1),
    arg(Type.Int, ms)
  )
end

-- void RESET_VEHICLE_STUCK_TIMER(Vehicle vehicle, int nullAttributes) // 0xD7591B0065AFAA7A
--[[
The inner function has a switch on the second parameter. It's the stuck timer index.

Here's some pseudo code I wrote for the inner function:
void __fastcall NATIVE_RESET_VEHICLE_STUCK_TIMER_INNER(CUnknown* unknownClassInVehicle, int timerIndex)
{
 switch (timerIndex)
   {
 case 0:
       unknownClassInVehicle->FirstStuckTimer = (WORD)0u;
 case 1:
       unknownClassInVehicle->SecondStuckTimer = (WORD)0u;
    case 2:
       unknownClassInVehicle->ThirdStuckTimer = (WORD)0u;
 case 3:
       unknownClassInVehicle->FourthStuckTimer = (WORD)0u;
    case 4:
       unknownClassInVehicle->FirstStuckTimer = (WORD)0u;
     unknownClassInVehicle->SecondStuckTimer = (WORD)0u;
        unknownClassInVehicle->ThirdStuckTimer = (WORD)0u;
     unknownClassInVehicle->FourthStuckTimer = (WORD)0u;
        break;
    };
}
--]]
function VEHICLE.RESET_VEHICLE_STUCK_TIMER(vehicle, nullAttributes)
  native.invoke(
    Type.Void, 5987, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, nullAttributes)
  )
end

-- BOOL IS_VEHICLE_DRIVEABLE(Vehicle vehicle, BOOL isOnFireCheck) // 0x4C241E39B23DF959
--[[
p1 is always 0 in the scripts.

p1 = check if vehicle is on fire
--]]
function VEHICLE.IS_VEHICLE_DRIVEABLE(vehicle, isOnFireCheck)
  return native.invoke(
    Type.Bool, 5988, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, isOnFireCheck)
  )
end

-- void SET_VEHICLE_HAS_BEEN_OWNED_BY_PLAYER(Vehicle vehicle, BOOL owned) // 0x2B5F9D2AF1F1722D
function VEHICLE.SET_VEHICLE_HAS_BEEN_OWNED_BY_PLAYER(vehicle, owned)
  native.invoke(
    Type.Void, 5989, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, owned)
  )
end

-- void SET_VEHICLE_NEEDS_TO_BE_HOTWIRED(Vehicle vehicle, BOOL toggle) // 0xFBA550EA44404EE6
function VEHICLE.SET_VEHICLE_NEEDS_TO_BE_HOTWIRED(vehicle, toggle)
  native.invoke(
    Type.Void, 5990, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_BLIP_THROTTLE_RANDOMLY(Vehicle vehicle, BOOL p1) // 0x9F3F689B814F2599
function VEHICLE.SET_VEHICLE_BLIP_THROTTLE_RANDOMLY(vehicle, p1)
  native.invoke(
    Type.Void, 5991, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1)
  )
end

-- void SET_POLICE_FOCUS_WILL_TRACK_VEHICLE(Vehicle vehicle, BOOL toggle) // 0x4E74E62E0A97E901
function VEHICLE.SET_POLICE_FOCUS_WILL_TRACK_VEHICLE(vehicle, toggle)
  native.invoke(
    Type.Void, 5992, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void START_VEHICLE_HORN(Vehicle vehicle, int duration, Hash mode, BOOL forever) // 0x9C8C6504B5B63D2C
--[[
Sounds the horn for the specified vehicle.

vehicle: The vehicle to activate the horn for.
mode: The hash of "NORMAL" or "HELDDOWN". Can be 0.
duration: The duration to sound the horn, in milliseconds.

Note: If a player is in the vehicle, it will only sound briefly.
--]]
function VEHICLE.START_VEHICLE_HORN(vehicle, duration, mode, forever)
  native.invoke(
    Type.Void, 5993, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, duration),
    arg(Type.Hash, mode),
    arg(Type.Bool, forever)
  )
end

-- void SET_VEHICLE_IN_CAR_MOD_SHOP(Vehicle vehicle, BOOL toggle) // 0x9D44FCCE98450843
--[[
If set to TRUE, it seems to suppress door noises and doesn't allow the horn to be continuous.
--]]
function VEHICLE.SET_VEHICLE_IN_CAR_MOD_SHOP(vehicle, toggle)
  native.invoke(
    Type.Void, 5994, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_HAS_STRONG_AXLES(Vehicle vehicle, BOOL toggle) // 0x92F0CF722BC4202F
--[[
if true, axles won't bend.
--]]
function VEHICLE.SET_VEHICLE_HAS_STRONG_AXLES(vehicle, toggle)
  native.invoke(
    Type.Void, 5995, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- const char* GET_DISPLAY_NAME_FROM_VEHICLE_MODEL(Hash modelHash) // 0xB215AAC32D25D019
--[[
Returns model name of vehicle in all caps. Needs to be displayed through localizing text natives to get proper display name.
-----------------------------------------------------------------------------------------------------------------------------------------
While often the case, this does not simply return the model name of the vehicle (which could be hashed to return the model hash). Variations of the same vehicle may also use the same display name.
-----------------------------------------------------------------------------------------------------------------------------------------

Returns "CARNOTFOUND" if the hash doesn't match a vehicle hash.

Using HUD::GET_FILENAME_FOR_AUDIO_CONVERSATION, you can get the localized name.

Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
--]]
function VEHICLE.GET_DISPLAY_NAME_FROM_VEHICLE_MODEL(modelHash)
  return native.invoke(
    Type.Const char, 5996, false,
    arg(Type.Hash, modelHash)
  )
end

-- const char* GET_MAKE_NAME_FROM_VEHICLE_MODEL(Hash modelHash) // 0xF7AF4F159FF99F97
--[[
Will return a vehicle's manufacturer display label.
Returns "CARNOTFOUND" if the hash doesn't match a vehicle hash.

Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
--]]
function VEHICLE.GET_MAKE_NAME_FROM_VEHICLE_MODEL(modelHash)
  return native.invoke(
    Type.Const char, 5997, false,
    arg(Type.Hash, modelHash)
  )
end

-- Vector3 GET_VEHICLE_DEFORMATION_AT_POS(Vehicle vehicle, float offsetX, float offsetY, float offsetZ) // 0x4EC6CFBC7B2E9536
--[[
The only example I can find of this function in the scripts, is this:

struct _s = VEHICLE::GET_VEHICLE_DEFORMATION_AT_POS(rPtr((A_0) + 4), 1.21f, 6.15f, 0.3f);

-----------------------------------------------------------------------------------------------------------------------------------------
PC scripts:

v_5/*{3}*/ = VEHICLE::GET_VEHICLE_DEFORMATION_AT_POS(a_0._f1, 1.21, 6.15, 0.3);
--]]
function VEHICLE.GET_VEHICLE_DEFORMATION_AT_POS(vehicle, offsetX, offsetY, offsetZ)
  return native.invoke(
    Type.Vector3, 5998, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, offsetX),
    arg(Type.Float, offsetY),
    arg(Type.Float, offsetZ)
  )
end

-- void SET_VEHICLE_LIVERY(Vehicle vehicle, int livery) // 0x60BF608F1B8CD1B6
function VEHICLE.SET_VEHICLE_LIVERY(vehicle, livery)
  native.invoke(
    Type.Void, 5999, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, livery)
  )
end

-- int GET_VEHICLE_LIVERY(Vehicle vehicle) // 0x2BB9230590DA5E8A
--[[
-1 = no livery
--]]
function VEHICLE.GET_VEHICLE_LIVERY(vehicle)
  return native.invoke(
    Type.Int, 6000, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- int GET_VEHICLE_LIVERY_COUNT(Vehicle vehicle) // 0x87B63E25A529D526
--[[
Returns -1 if the vehicle has no livery
--]]
function VEHICLE.GET_VEHICLE_LIVERY_COUNT(vehicle)
  return native.invoke(
    Type.Int, 6001, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_LIVERY2(Vehicle vehicle, int livery) // 0xA6D3A8750DC73270
--[[
Used to set the secondary livery (the roof on Tornado Custom being one such example.)

Livery value is dependent on the amount of liveries present in the vehicle's texture dictionary, for Tornado Custom this would be 0-6.
--]]
function VEHICLE.SET_VEHICLE_LIVERY2(vehicle, livery)
  native.invoke(
    Type.Void, 6002, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, livery)
  )
end

-- int GET_VEHICLE_LIVERY2(Vehicle vehicle) // 0x60190048C0764A26
--[[
Returns index of the current vehicle's secondary livery. A getter for SET_VEHICLE_LIVERY2.
--]]
function VEHICLE.GET_VEHICLE_LIVERY2(vehicle)
  return native.invoke(
    Type.Int, 6003, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- int GET_VEHICLE_LIVERY2_COUNT(Vehicle vehicle) // 0x5ECB40269053C0D4
--[[
Returns a number of available secondary liveries, or -1 if vehicle has no secondary liveries available.
--]]
function VEHICLE.GET_VEHICLE_LIVERY2_COUNT(vehicle)
  return native.invoke(
    Type.Int, 6004, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL IS_VEHICLE_WINDOW_INTACT(Vehicle vehicle, int windowIndex) // 0x46E571A0E20D01F1
--[[
This will return false if the window is broken, or rolled down.
Window indexes:
0 = Front Right Window
1 = Front Left Window
2 = Back Right Window
3 = Back Left Window


Those numbers go on for vehicles that have more than 4 doors with windows.
--]]
function VEHICLE.IS_VEHICLE_WINDOW_INTACT(vehicle, windowIndex)
  return native.invoke(
    Type.Bool, 6005, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, windowIndex)
  )
end

-- BOOL ARE_ALL_VEHICLE_WINDOWS_INTACT(Vehicle vehicle) // 0x11D862A3E977A9EF
--[[
Appears to return false if any window is broken.
--]]
function VEHICLE.ARE_ALL_VEHICLE_WINDOWS_INTACT(vehicle)
  return native.invoke(
    Type.Bool, 6006, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL ARE_ANY_VEHICLE_SEATS_FREE(Vehicle vehicle) // 0x2D34FC3BC4ADB780
--[[
Returns false if every seat is occupied.
--]]
function VEHICLE.ARE_ANY_VEHICLE_SEATS_FREE(vehicle)
  return native.invoke(
    Type.Bool, 6007, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void RESET_VEHICLE_WHEELS(Vehicle vehicle, BOOL toggle) // 0x21D2E5662C1F6FED
function VEHICLE.RESET_VEHICLE_WHEELS(vehicle, toggle)
  native.invoke(
    Type.Void, 6008, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_HELI_PART_BROKEN(Vehicle vehicle, BOOL p1, BOOL p2, BOOL p3) // 0xBC74B4BE25EB6C8A
function VEHICLE.IS_HELI_PART_BROKEN(vehicle, p1, p2, p3)
  return native.invoke(
    Type.Bool, 6009, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2),
    arg(Type.Bool, p3)
  )
end

-- float GET_HELI_MAIN_ROTOR_HEALTH(Vehicle vehicle) // 0xE4CB7541F413D2C5
--[[
Max 1000.
At 0 the main rotor will stall.
--]]
function VEHICLE.GET_HELI_MAIN_ROTOR_HEALTH(vehicle)
  return native.invoke(
    Type.Float, 6010, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- float GET_HELI_TAIL_ROTOR_HEALTH(Vehicle vehicle) // 0xAE8CE82A4219AC8C
--[[
Max 1000.
At 0 the tail rotor will stall.
--]]
function VEHICLE.GET_HELI_TAIL_ROTOR_HEALTH(vehicle)
  return native.invoke(
    Type.Float, 6011, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- float GET_HELI_TAIL_BOOM_HEALTH(Vehicle vehicle) // 0xAC51915D27E4A5F7
--[[
Max 1000.
At -100 both helicopter rotors will stall.
--]]
function VEHICLE.GET_HELI_TAIL_BOOM_HEALTH(vehicle)
  return native.invoke(
    Type.Float, 6012, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_HELI_MAIN_ROTOR_HEALTH(Vehicle vehicle, float health) // 0x4056EA1105F5ABD7
function VEHICLE.SET_HELI_MAIN_ROTOR_HEALTH(vehicle, health)
  native.invoke(
    Type.Void, 6013, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, health)
  )
end

-- void SET_HELI_TAIL_ROTOR_HEALTH(Vehicle vehicle, float health) // 0xFE205F38AAA58E5B
function VEHICLE.SET_HELI_TAIL_ROTOR_HEALTH(vehicle, health)
  native.invoke(
    Type.Void, 6014, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, health)
  )
end

-- BOOL SET_HELI_TAIL_BOOM_CAN_BREAK_OFF(Vehicle vehicle, BOOL toggle) // 0x3EC8BF18AA453FE9
function VEHICLE.SET_HELI_TAIL_BOOM_CAN_BREAK_OFF(vehicle, toggle)
  return native.invoke(
    Type.Bool, 6015, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_NAME_DEBUG(Vehicle vehicle, const char* name) // 0xBFDF984E2C22B94F
--[[
NOTE: Debugging functions are not present in the retail version of the game.
--]]
function VEHICLE.SET_VEHICLE_NAME_DEBUG(vehicle, name)
  native.invoke(
    Type.Void, 6016, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.String, name)
  )
end

-- void SET_VEHICLE_EXPLODES_ON_HIGH_EXPLOSION_DAMAGE(Vehicle vehicle, BOOL toggle) // 0x71B0892EC081D60A
--[[
Sets a vehicle to be strongly resistant to explosions. p0 is the vehicle; set p1 to false to toggle the effect on/off.
--]]
function VEHICLE.SET_VEHICLE_EXPLODES_ON_HIGH_EXPLOSION_DAMAGE(vehicle, toggle)
  native.invoke(
    Type.Void, 6017, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_EXPLODES_ON_EXPLOSION_DAMAGE_AT_ZERO_BODY_HEALTH(Vehicle vehicle, BOOL toggle) // 0xD565F438137F0E10
function VEHICLE.SET_VEHICLE_EXPLODES_ON_EXPLOSION_DAMAGE_AT_ZERO_BODY_HEALTH(vehicle, toggle)
  native.invoke(
    Type.Void, 6018, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_ALLOW_VEHICLE_EXPLODES_ON_CONTACT(Vehicle vehicle, BOOL toggle) // 0x3441CAD2F2231923
function VEHICLE.SET_ALLOW_VEHICLE_EXPLODES_ON_CONTACT(vehicle, toggle)
  native.invoke(
    Type.Void, 6019, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_DISABLE_TOWING(Vehicle vehicle, BOOL toggle) // 0x2B6747FAA9DB9D6B
function VEHICLE.SET_VEHICLE_DISABLE_TOWING(vehicle, toggle)
  native.invoke(
    Type.Void, 6020, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- BOOL GET_VEHICLE_HAS_LANDING_GEAR(Vehicle vehicle) // 0xE43701C36CAFF1A4
function VEHICLE.GET_VEHICLE_HAS_LANDING_GEAR(vehicle)
  return native.invoke(
    Type.Bool, 6021, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void CONTROL_LANDING_GEAR(Vehicle vehicle, int state) // 0xCFC8BE9A5E1FE575
--[[
Works for vehicles with a retractable landing gear

Landing gear states:

0: Deployed
1: Closing
2: Opening
3: Retracted
--]]
function VEHICLE.CONTROL_LANDING_GEAR(vehicle, state)
  native.invoke(
    Type.Void, 6022, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, state)
  )
end

-- int GET_LANDING_GEAR_STATE(Vehicle vehicle) // 0x9B0F3DCA3DB0F4CD
--[[
Landing gear states:

0: Deployed
1: Closing (Retracting)
2: (Landing gear state 2 is never used.)
3: Opening (Deploying)
4: Retracted

Returns the current state of the vehicles landing gear.
--]]
function VEHICLE.GET_LANDING_GEAR_STATE(vehicle)
  return native.invoke(
    Type.Int, 6023, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL IS_ANY_VEHICLE_NEAR_POINT(float x, float y, float z, float radius) // 0x61E1DD6125A3EEE6
function VEHICLE.IS_ANY_VEHICLE_NEAR_POINT(x, y, z, radius)
  return native.invoke(
    Type.Bool, 6024, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius)
  )
end

-- void REQUEST_VEHICLE_HIGH_DETAIL_MODEL(Vehicle vehicle) // 0xA6E9FDCB2C76785E
function VEHICLE.REQUEST_VEHICLE_HIGH_DETAIL_MODEL(vehicle)
  native.invoke(
    Type.Void, 6025, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- int _GET_VEHICLE_MODEL_NUM_DRIVE_GEARS(Hash vehicleModel) // 0x61F02E4E9A7A61EA
function VEHICLE._GET_VEHICLE_MODEL_NUM_DRIVE_GEARS(vehicleModel)
  return native.invoke(
    Type.Int, 6026, false,
    arg(Type.Hash, vehicleModel)
  )
end

-- int _GET_VEHICLE_MAX_DRIVE_GEAR_COUNT(Vehicle vehicle) // 0x24910C3D66BA770D
function VEHICLE._GET_VEHICLE_MAX_DRIVE_GEAR_COUNT(vehicle)
  return native.invoke(
    Type.Int, 6027, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- int _GET_VEHICLE_CURRENT_DRIVE_GEAR(Vehicle vehicle) // 0x56185A25D45A0DCD
function VEHICLE._GET_VEHICLE_CURRENT_DRIVE_GEAR(vehicle)
  return native.invoke(
    Type.Int, 6028, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- float _GET_VEHICLE_CURRENT_REV_RATIO(Vehicle vehicle) // 0xF9DDA40BC293A61E
function VEHICLE._GET_VEHICLE_CURRENT_REV_RATIO(vehicle)
  return native.invoke(
    Type.Float, 6029, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void REMOVE_VEHICLE_HIGH_DETAIL_MODEL(Vehicle vehicle) // 0x00689CDE5F7C6787
function VEHICLE.REMOVE_VEHICLE_HIGH_DETAIL_MODEL(vehicle)
  native.invoke(
    Type.Void, 6030, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL IS_VEHICLE_HIGH_DETAIL(Vehicle vehicle) // 0x1F25887F3C104278
function VEHICLE.IS_VEHICLE_HIGH_DETAIL(vehicle)
  return native.invoke(
    Type.Bool, 6031, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void REQUEST_VEHICLE_ASSET(Hash vehicleHash, int vehicleAsset) // 0x81A15811460FAB3A
--[[
REQUEST_VEHICLE_ASSET(GET_HASH_KEY(cargobob3), 3);

vehicle found that have asset's:
cargobob3
submersible
blazer
--]]
function VEHICLE.REQUEST_VEHICLE_ASSET(vehicleHash, vehicleAsset)
  native.invoke(
    Type.Void, 6032, false,
    arg(Type.Hash, vehicleHash),
    arg(Type.Int, vehicleAsset)
  )
end

-- BOOL HAS_VEHICLE_ASSET_LOADED(int vehicleAsset) // 0x1BBE0523B8DB9A21
function VEHICLE.HAS_VEHICLE_ASSET_LOADED(vehicleAsset)
  return native.invoke(
    Type.Bool, 6033, false,
    arg(Type.Int, vehicleAsset)
  )
end

-- void REMOVE_VEHICLE_ASSET(int vehicleAsset) // 0xACE699C71AB9DEB5
function VEHICLE.REMOVE_VEHICLE_ASSET(vehicleAsset)
  native.invoke(
    Type.Void, 6034, false,
    arg(Type.Int, vehicleAsset)
  )
end

-- void SET_VEHICLE_TOW_TRUCK_ARM_POSITION(Vehicle vehicle, float position) // 0xFE54B92A344583CA
--[[
Sets how much the crane on the tow truck is raised, where 0.0 is fully lowered and 1.0 is fully raised.
--]]
function VEHICLE.SET_VEHICLE_TOW_TRUCK_ARM_POSITION(vehicle, position)
  native.invoke(
    Type.Void, 6035, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, position)
  )
end

-- void _SET_ATTACHED_VEHICLE_TO_TOW_TRUCK_ARM(Vehicle towTruck, Vehicle vehicle) // 0x48BD57D0DD17786A
function VEHICLE._SET_ATTACHED_VEHICLE_TO_TOW_TRUCK_ARM(towTruck, vehicle)
  native.invoke(
    Type.Void, 6036, false,
    arg(Type.Vehicle, towTruck),
    arg(Type.Vehicle, vehicle)
  )
end

-- void ATTACH_VEHICLE_TO_TOW_TRUCK(Vehicle towTruck, Vehicle vehicle, BOOL rear, float hookOffsetX, float hookOffsetY, float hookOffsetZ) // 0x29A16F8D621C4508
--[[
HookOffset defines where the hook is attached. leave at 0 for default attachment.
--]]
function VEHICLE.ATTACH_VEHICLE_TO_TOW_TRUCK(towTruck, vehicle, rear, hookOffsetX, hookOffsetY, hookOffsetZ)
  native.invoke(
    Type.Void, 6037, false,
    arg(Type.Vehicle, towTruck),
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, rear),
    arg(Type.Float, hookOffsetX),
    arg(Type.Float, hookOffsetY),
    arg(Type.Float, hookOffsetZ)
  )
end

-- void DETACH_VEHICLE_FROM_TOW_TRUCK(Vehicle towTruck, Vehicle vehicle) // 0xC2DB6B6708350ED8
--[[
First two parameters swapped. Scripts verify that towTruck is the first parameter, not the second.
--]]
function VEHICLE.DETACH_VEHICLE_FROM_TOW_TRUCK(towTruck, vehicle)
  native.invoke(
    Type.Void, 6038, false,
    arg(Type.Vehicle, towTruck),
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL DETACH_VEHICLE_FROM_ANY_TOW_TRUCK(Vehicle vehicle) // 0xD0E9CE05A1E68CD8
function VEHICLE.DETACH_VEHICLE_FROM_ANY_TOW_TRUCK(vehicle)
  return native.invoke(
    Type.Bool, 6039, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL IS_VEHICLE_ATTACHED_TO_TOW_TRUCK(Vehicle towTruck, Vehicle vehicle) // 0x146DF9EC4C4B9FD4
--[[
Scripts verify that towTruck is the first parameter, not the second.
--]]
function VEHICLE.IS_VEHICLE_ATTACHED_TO_TOW_TRUCK(towTruck, vehicle)
  return native.invoke(
    Type.Bool, 6040, false,
    arg(Type.Vehicle, towTruck),
    arg(Type.Vehicle, vehicle)
  )
end

-- Entity GET_ENTITY_ATTACHED_TO_TOW_TRUCK(Vehicle towTruck) // 0xEFEA18DCF10F8F75
function VEHICLE.GET_ENTITY_ATTACHED_TO_TOW_TRUCK(towTruck)
  return native.invoke(
    Type.Entity, 6041, false,
    arg(Type.Vehicle, towTruck)
  )
end

-- Entity SET_VEHICLE_AUTOMATICALLY_ATTACHES(Vehicle vehicle, BOOL p1, Any p2) // 0x8BA6F76BC53A1493
function VEHICLE.SET_VEHICLE_AUTOMATICALLY_ATTACHES(vehicle, p1, p2)
  return native.invoke(
    Type.Entity, 6042, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1),
    arg(Type.Any, p2)
  )
end

-- void SET_VEHICLE_BULLDOZER_ARM_POSITION(Vehicle vehicle, float position, BOOL p2) // 0xF8EBCCC96ADB9FB7
--[[
Sets the arm position of a bulldozer. Position must be a value between 0.0 and 1.0. Ignored when `p2` is set to false, instead incrementing arm position by 0.1 (or 10%).
--]]
function VEHICLE.SET_VEHICLE_BULLDOZER_ARM_POSITION(vehicle, position, p2)
  native.invoke(
    Type.Void, 6043, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, position),
    arg(Type.Bool, p2)
  )
end

-- void SET_VEHICLE_TANK_TURRET_POSITION(Vehicle vehicle, float position, BOOL p2) // 0x56B94C6D7127DFBA
function VEHICLE.SET_VEHICLE_TANK_TURRET_POSITION(vehicle, position, p2)
  native.invoke(
    Type.Void, 6044, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, position),
    arg(Type.Bool, p2)
  )
end

-- void SET_VEHICLE_TURRET_TARGET(Vehicle vehicle, BOOL p1, float x, float y, float z, BOOL p5) // 0x0581730AB9380412
function VEHICLE.SET_VEHICLE_TURRET_TARGET(vehicle, p1, x, y, z, p5)
  native.invoke(
    Type.Void, 6045, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Bool, p5)
  )
end

-- void SET_VEHICLE_TANK_STATIONARY(Vehicle vehicle, BOOL p1) // 0x737E398138550FFF
function VEHICLE.SET_VEHICLE_TANK_STATIONARY(vehicle, p1)
  native.invoke(
    Type.Void, 6046, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1)
  )
end

-- void SET_VEHICLE_TURRET_SPEED_THIS_FRAME(Vehicle vehicle, float speed) // 0x1093408B4B9D1146
function VEHICLE.SET_VEHICLE_TURRET_SPEED_THIS_FRAME(vehicle, speed)
  native.invoke(
    Type.Void, 6047, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, speed)
  )
end

-- void DISABLE_VEHICLE_TURRET_MOVEMENT_THIS_FRAME(Vehicle vehicle) // 0x32CAEDF24A583345
function VEHICLE.DISABLE_VEHICLE_TURRET_MOVEMENT_THIS_FRAME(vehicle)
  native.invoke(
    Type.Void, 6048, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_FLIGHT_NOZZLE_POSITION(Vehicle vehicle, float angleRatio) // 0x30D779DE7C4F6DD3
function VEHICLE.SET_VEHICLE_FLIGHT_NOZZLE_POSITION(vehicle, angleRatio)
  native.invoke(
    Type.Void, 6049, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, angleRatio)
  )
end

-- void SET_VEHICLE_FLIGHT_NOZZLE_POSITION_IMMEDIATE(Vehicle vehicle, float angle) // 0x9AA47FFF660CB932
function VEHICLE.SET_VEHICLE_FLIGHT_NOZZLE_POSITION_IMMEDIATE(vehicle, angle)
  native.invoke(
    Type.Void, 6050, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, angle)
  )
end

-- float GET_VEHICLE_FLIGHT_NOZZLE_POSITION(Vehicle plane) // 0xDA62027C8BDB326E
function VEHICLE.GET_VEHICLE_FLIGHT_NOZZLE_POSITION(plane)
  return native.invoke(
    Type.Float, 6051, false,
    arg(Type.Vehicle, plane)
  )
end

-- void SET_DISABLE_VERTICAL_FLIGHT_MODE_TRANSITION(Vehicle vehicle, BOOL toggle) // 0xCE2B43770B655F8F
--[[
True stops vtols from switching modes. Doesn't stop the sound though.
--]]
function VEHICLE.SET_DISABLE_VERTICAL_FLIGHT_MODE_TRANSITION(vehicle, toggle)
  native.invoke(
    Type.Void, 6052, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- BOOL GENERATE_VEHICLE_CREATION_POS_FROM_PATHS(Vector3* outVec, Any p1, Vector3* outVec1, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8) // 0xA4822F1CF23F4810
function VEHICLE.GENERATE_VEHICLE_CREATION_POS_FROM_PATHS(outVec, p1, outVec1, p3, p4, p5, p6, p7, p8)
  return native.invoke(
    Type.Bool, 6053, true,
    arg(Type.Vector3, outVec),
    arg(Type.Any, p1),
    arg(Type.Vector3, outVec1),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5),
    arg(Type.Any, p6),
    arg(Type.Any, p7),
    arg(Type.Any, p8)
  )
end

-- void SET_VEHICLE_BURNOUT(Vehicle vehicle, BOOL toggle) // 0xFB8794444A7D60FB
--[[
On accelerating, spins the driven wheels with the others braked, so you don't go anywhere.
--]]
function VEHICLE.SET_VEHICLE_BURNOUT(vehicle, toggle)
  native.invoke(
    Type.Void, 6054, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_VEHICLE_IN_BURNOUT(Vehicle vehicle) // 0x1297A88E081430EB
--[[
Returns whether the specified vehicle is currently in a burnout.


vb.net
Public Function isVehicleInBurnout(vh As Vehicle) As Boolean
        Return Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_IN_BURNOUT, vh)
    End Function
--]]
function VEHICLE.IS_VEHICLE_IN_BURNOUT(vehicle)
  return native.invoke(
    Type.Bool, 6055, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_REDUCE_GRIP(Vehicle vehicle, BOOL toggle) // 0x222FF6A823D122E2
--[[
Reduces grip significantly so it's hard to go anywhere.
--]]
function VEHICLE.SET_VEHICLE_REDUCE_GRIP(vehicle, toggle)
  native.invoke(
    Type.Void, 6056, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_REDUCE_GRIP_LEVEL(Vehicle vehicle, int val) // 0x6DEE944E1EE90CFB
--[[
val is 0-3
Often used in conjunction with: SET_VEHICLE_REDUCE_GRIP
--]]
function VEHICLE.SET_VEHICLE_REDUCE_GRIP_LEVEL(vehicle, val)
  native.invoke(
    Type.Void, 6057, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, val)
  )
end

-- void SET_VEHICLE_INDICATOR_LIGHTS(Vehicle vehicle, int turnSignal, BOOL toggle) // 0xB5D45264751B7DF0
--[[
Sets the turn signal enabled for a vehicle.
Set turnSignal to 1 for left light, 0 for right light.
--]]
function VEHICLE.SET_VEHICLE_INDICATOR_LIGHTS(vehicle, turnSignal, toggle)
  native.invoke(
    Type.Void, 6058, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, turnSignal),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_BRAKE_LIGHTS(Vehicle vehicle, BOOL toggle) // 0x92B35082E0B42F66
function VEHICLE.SET_VEHICLE_BRAKE_LIGHTS(vehicle, toggle)
  native.invoke(
    Type.Void, 6059, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_TAIL_LIGHTS(Vehicle vehicle, BOOL toggle) // 0x5815BD2763178DF4
function VEHICLE.SET_VEHICLE_TAIL_LIGHTS(vehicle, toggle)
  native.invoke(
    Type.Void, 6060, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_HANDBRAKE(Vehicle vehicle, BOOL toggle) // 0x684785568EF26A22
function VEHICLE.SET_VEHICLE_HANDBRAKE(vehicle, toggle)
  native.invoke(
    Type.Void, 6061, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_BRAKE(Vehicle vehicle, BOOL toggle) // 0xE4E2FD323574965C
function VEHICLE.SET_VEHICLE_BRAKE(vehicle, toggle)
  native.invoke(
    Type.Void, 6062, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void INSTANTLY_FILL_VEHICLE_POPULATION() // 0x48ADC8A773564670
function VEHICLE.INSTANTLY_FILL_VEHICLE_POPULATION()
  native.invoke(
    Type.Void, 6063, false
  )
end

-- BOOL HAS_INSTANT_FILL_VEHICLE_POPULATION_FINISHED() // 0x91D6DD290888CBAB
function VEHICLE.HAS_INSTANT_FILL_VEHICLE_POPULATION_FINISHED()
  return native.invoke(
    Type.Bool, 6064, false
  )
end

-- void NETWORK_ENABLE_EMPTY_CROWDING_VEHICLES_REMOVAL(BOOL toggle) // 0x51DB102F4A3BA5E0
function VEHICLE.NETWORK_ENABLE_EMPTY_CROWDING_VEHICLES_REMOVAL(toggle)
  native.invoke(
    Type.Void, 6065, false,
    arg(Type.Bool, toggle)
  )
end

-- void NETWORK_CAP_EMPTY_CROWDING_VEHICLES_REMOVAL(int p0) // 0xA4A9A4C40E615885
--[[
Default:1000||This sets a value which is used when NETWORK_ENABLE_EMPTY_CROWDING_VEHICLES_REMOVAL(true) is called each frame.
--]]
function VEHICLE.NETWORK_CAP_EMPTY_CROWDING_VEHICLES_REMOVAL(p0)
  native.invoke(
    Type.Void, 6066, false,
    arg(Type.Int, p0)
  )
end

-- BOOL GET_VEHICLE_TRAILER_VEHICLE(Vehicle vehicle, Vehicle* trailer) // 0x1CDD6BADC297830D
--[[
Gets the trailer of a vehicle and puts it into the trailer parameter.
--]]
function VEHICLE.GET_VEHICLE_TRAILER_VEHICLE(vehicle, trailer)
  return native.invoke(
    Type.Bool, 6067, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Vehicle, trailer)
  )
end

-- Vehicle _GET_VEHICLE_TRAILER_PARENT_VEHICLE(Vehicle trailer) // 0x80D9D32636369C92
function VEHICLE._GET_VEHICLE_TRAILER_PARENT_VEHICLE(trailer)
  return native.invoke(
    Type.Vehicle, 6068, false,
    arg(Type.Vehicle, trailer)
  )
end

-- void SET_VEHICLE_USES_LARGE_REAR_RAMP(Vehicle vehicle, BOOL toggle) // 0xCAC66558B944DA67
--[[
vehicle must be a plane
--]]
function VEHICLE.SET_VEHICLE_USES_LARGE_REAR_RAMP(vehicle, toggle)
  native.invoke(
    Type.Void, 6069, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_RUDDER_BROKEN(Vehicle vehicle, BOOL toggle) // 0x09606148B6C71DEF
function VEHICLE.SET_VEHICLE_RUDDER_BROKEN(vehicle, toggle)
  native.invoke(
    Type.Void, 6070, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_CONVERTIBLE_ROOF_LATCH_STATE(Vehicle vehicle, BOOL state) // 0x1A78AD3D8240536F
function VEHICLE.SET_CONVERTIBLE_ROOF_LATCH_STATE(vehicle, state)
  native.invoke(
    Type.Void, 6071, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, state)
  )
end

-- float GET_VEHICLE_ESTIMATED_MAX_SPEED(Vehicle vehicle) // 0x53AF99BAA671CA47
function VEHICLE.GET_VEHICLE_ESTIMATED_MAX_SPEED(vehicle)
  return native.invoke(
    Type.Float, 6072, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- float GET_VEHICLE_MAX_BRAKING(Vehicle vehicle) // 0xAD7E85FC227197C4
function VEHICLE.GET_VEHICLE_MAX_BRAKING(vehicle)
  return native.invoke(
    Type.Float, 6073, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- float GET_VEHICLE_MAX_TRACTION(Vehicle vehicle) // 0xA132FB5370554DB0
function VEHICLE.GET_VEHICLE_MAX_TRACTION(vehicle)
  return native.invoke(
    Type.Float, 6074, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- float GET_VEHICLE_ACCELERATION(Vehicle vehicle) // 0x5DD35C8D074E57AE
--[[
static - max acceleration
--]]
function VEHICLE.GET_VEHICLE_ACCELERATION(vehicle)
  return native.invoke(
    Type.Float, 6075, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- float GET_VEHICLE_MODEL_ESTIMATED_MAX_SPEED(Hash modelHash) // 0xF417C2502FFFED43
--[[
Returns max speed (without mods) of the specified vehicle model in m/s.

Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
--]]
function VEHICLE.GET_VEHICLE_MODEL_ESTIMATED_MAX_SPEED(modelHash)
  return native.invoke(
    Type.Float, 6076, false,
    arg(Type.Hash, modelHash)
  )
end

-- float GET_VEHICLE_MODEL_MAX_BRAKING(Hash modelHash) // 0xDC53FD41B4ED944C
--[[
Returns max braking of the specified vehicle model.

Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
--]]
function VEHICLE.GET_VEHICLE_MODEL_MAX_BRAKING(modelHash)
  return native.invoke(
    Type.Float, 6077, false,
    arg(Type.Hash, modelHash)
  )
end

-- float GET_VEHICLE_MODEL_MAX_BRAKING_MAX_MODS(Hash modelHash) // 0xBFBA3BA79CFF7EBF
--[[
Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
--]]
function VEHICLE.GET_VEHICLE_MODEL_MAX_BRAKING_MAX_MODS(modelHash)
  return native.invoke(
    Type.Float, 6078, false,
    arg(Type.Hash, modelHash)
  )
end

-- float GET_VEHICLE_MODEL_MAX_TRACTION(Hash modelHash) // 0x539DE94D44FDFD0D
--[[
Returns max traction of the specified vehicle model.

Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
--]]
function VEHICLE.GET_VEHICLE_MODEL_MAX_TRACTION(modelHash)
  return native.invoke(
    Type.Float, 6079, false,
    arg(Type.Hash, modelHash)
  )
end

-- float GET_VEHICLE_MODEL_ACCELERATION(Hash modelHash) // 0x8C044C5C84505B6A
--[[
Returns the acceleration of the specified model.

Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
--]]
function VEHICLE.GET_VEHICLE_MODEL_ACCELERATION(modelHash)
  return native.invoke(
    Type.Float, 6080, false,
    arg(Type.Hash, modelHash)
  )
end

-- float GET_VEHICLE_MODEL_ACCELERATION_MAX_MODS(Hash modelHash) // 0x53409B5163D5B846
--[[
9.8 * thrust if air vehicle, else 0.38 + drive force?

Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
--]]
function VEHICLE.GET_VEHICLE_MODEL_ACCELERATION_MAX_MODS(modelHash)
  return native.invoke(
    Type.Float, 6081, false,
    arg(Type.Hash, modelHash)
  )
end

-- float GET_FLYING_VEHICLE_MODEL_AGILITY(Hash modelHash) // 0xC6AD107DDC9054CC
--[[
Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
--]]
function VEHICLE.GET_FLYING_VEHICLE_MODEL_AGILITY(modelHash)
  return native.invoke(
    Type.Float, 6082, false,
    arg(Type.Hash, modelHash)
  )
end

-- float GET_BOAT_VEHICLE_MODEL_AGILITY(Hash modelHash) // 0x5AA3F878A178C4FC
--[[
Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
--]]
function VEHICLE.GET_BOAT_VEHICLE_MODEL_AGILITY(modelHash)
  return native.invoke(
    Type.Float, 6083, false,
    arg(Type.Hash, modelHash)
  )
end

-- float GET_VEHICLE_CLASS_ESTIMATED_MAX_SPEED(int vehicleClass) // 0x00C09F246ABEDD82
function VEHICLE.GET_VEHICLE_CLASS_ESTIMATED_MAX_SPEED(vehicleClass)
  return native.invoke(
    Type.Float, 6084, false,
    arg(Type.Int, vehicleClass)
  )
end

-- float GET_VEHICLE_CLASS_MAX_TRACTION(int vehicleClass) // 0xDBC86D85C5059461
function VEHICLE.GET_VEHICLE_CLASS_MAX_TRACTION(vehicleClass)
  return native.invoke(
    Type.Float, 6085, false,
    arg(Type.Int, vehicleClass)
  )
end

-- float GET_VEHICLE_CLASS_MAX_AGILITY(int vehicleClass) // 0x4F930AD022D6DE3B
function VEHICLE.GET_VEHICLE_CLASS_MAX_AGILITY(vehicleClass)
  return native.invoke(
    Type.Float, 6086, false,
    arg(Type.Int, vehicleClass)
  )
end

-- float GET_VEHICLE_CLASS_MAX_ACCELERATION(int vehicleClass) // 0x2F83E7E45D9EA7AE
function VEHICLE.GET_VEHICLE_CLASS_MAX_ACCELERATION(vehicleClass)
  return native.invoke(
    Type.Float, 6087, false,
    arg(Type.Int, vehicleClass)
  )
end

-- float GET_VEHICLE_CLASS_MAX_BRAKING(int vehicleClass) // 0x4BF54C16EC8FEC03
function VEHICLE.GET_VEHICLE_CLASS_MAX_BRAKING(vehicleClass)
  return native.invoke(
    Type.Float, 6088, false,
    arg(Type.Int, vehicleClass)
  )
end

-- int ADD_ROAD_NODE_SPEED_ZONE(float x, float y, float z, float radius, float speed, BOOL p5) // 0x2CE544C68FB812A0
function VEHICLE.ADD_ROAD_NODE_SPEED_ZONE(x, y, z, radius, speed, p5)
  return native.invoke(
    Type.Int, 6089, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Float, speed),
    arg(Type.Bool, p5)
  )
end

-- BOOL REMOVE_ROAD_NODE_SPEED_ZONE(int speedzone) // 0x1033371FC8E842A7
function VEHICLE.REMOVE_ROAD_NODE_SPEED_ZONE(speedzone)
  return native.invoke(
    Type.Bool, 6090, false,
    arg(Type.Int, speedzone)
  )
end

-- void OPEN_BOMB_BAY_DOORS(Vehicle vehicle) // 0x87E7F24270732CB1
function VEHICLE.OPEN_BOMB_BAY_DOORS(vehicle)
  native.invoke(
    Type.Void, 6091, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void CLOSE_BOMB_BAY_DOORS(Vehicle vehicle) // 0x3556041742A0DC74
function VEHICLE.CLOSE_BOMB_BAY_DOORS(vehicle)
  native.invoke(
    Type.Void, 6092, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL GET_ARE_BOMB_BAY_DOORS_OPEN(Vehicle aircraft) // 0xD0917A423314BBA8
--[[
Returns true when the bomb bay doors of this plane are open. False if they're closed.
--]]
function VEHICLE.GET_ARE_BOMB_BAY_DOORS_OPEN(aircraft)
  return native.invoke(
    Type.Bool, 6093, false,
    arg(Type.Vehicle, aircraft)
  )
end

-- BOOL IS_VEHICLE_SEARCHLIGHT_ON(Vehicle vehicle) // 0xC0F97FCE55094987
--[[
Possibly: Returns whether the searchlight (found on police vehicles) is toggled on.

@Author Nac
--]]
function VEHICLE.IS_VEHICLE_SEARCHLIGHT_ON(vehicle)
  return native.invoke(
    Type.Bool, 6094, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_SEARCHLIGHT(Vehicle heli, BOOL toggle, BOOL canBeUsedByAI) // 0x14E85C5EE7A4D542
--[[
Only works during nighttime.
--]]
function VEHICLE.SET_VEHICLE_SEARCHLIGHT(heli, toggle, canBeUsedByAI)
  native.invoke(
    Type.Void, 6095, false,
    arg(Type.Vehicle, heli),
    arg(Type.Bool, toggle),
    arg(Type.Bool, canBeUsedByAI)
  )
end

-- BOOL DOES_VEHICLE_HAVE_SEARCHLIGHT(Vehicle vehicle) // 0x99015ED7DBEA5113
function VEHICLE.DOES_VEHICLE_HAVE_SEARCHLIGHT(vehicle)
  return native.invoke(
    Type.Bool, 6096, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL IS_ENTRY_POINT_FOR_SEAT_CLEAR(Ped ped, Vehicle vehicle, int seatIndex, BOOL side, BOOL onEnter) // 0x639431E895B9AA57
--[[
Check if a vehicle seat is accessible. If you park your vehicle near a wall and the ped cannot enter/exit this side, the return value toggles from true (not blocked) to false (blocked).

seatIndex  = -1 being the driver seat.
Use GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(vehicle) - 1 for last seat index.
side = only relevant for bikes/motorcycles to check if the left (false)/right (true) side is blocked.
onEnter = check if you can enter (true) or exit (false) a vehicle.
--]]
function VEHICLE.IS_ENTRY_POINT_FOR_SEAT_CLEAR(ped, vehicle, seatIndex, side, onEnter)
  return native.invoke(
    Type.Bool, 6097, false,
    arg(Type.Ped, ped),
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, seatIndex),
    arg(Type.Bool, side),
    arg(Type.Bool, onEnter)
  )
end

-- Vector3 GET_ENTRY_POINT_POSITION(Vehicle vehicle, int doorId) // 0xC0572928C0ABFDA3
--[[
doorId: see SET_VEHICLE_DOOR_SHUT
--]]
function VEHICLE.GET_ENTRY_POINT_POSITION(vehicle, doorId)
  return native.invoke(
    Type.Vector3, 6098, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, doorId)
  )
end

-- BOOL CAN_SHUFFLE_SEAT(Vehicle vehicle, int seatIndex) // 0x30785D90C956BF35
function VEHICLE.CAN_SHUFFLE_SEAT(vehicle, seatIndex)
  return native.invoke(
    Type.Bool, 6099, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, seatIndex)
  )
end

-- int GET_NUM_MOD_KITS(Vehicle vehicle) // 0x33F2E3FE70EAAE1D
function VEHICLE.GET_NUM_MOD_KITS(vehicle)
  return native.invoke(
    Type.Int, 6100, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_MOD_KIT(Vehicle vehicle, int modKit) // 0x1F2AA07F00B3217A
--[[
Set modKit to 0 if you plan to call SET_VEHICLE_MOD. That's what the game does. Most body modifications through SET_VEHICLE_MOD will not take effect until this is set to 0.

Full list of vehicle mod kits and mods by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicleModKits.json
--]]
function VEHICLE.SET_VEHICLE_MOD_KIT(vehicle, modKit)
  native.invoke(
    Type.Void, 6101, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, modKit)
  )
end

-- int GET_VEHICLE_MOD_KIT(Vehicle vehicle) // 0x6325D1A044AE510D
function VEHICLE.GET_VEHICLE_MOD_KIT(vehicle)
  return native.invoke(
    Type.Int, 6102, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- int GET_VEHICLE_MOD_KIT_TYPE(Vehicle vehicle) // 0xFC058F5121E54C32
function VEHICLE.GET_VEHICLE_MOD_KIT_TYPE(vehicle)
  return native.invoke(
    Type.Int, 6103, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- int GET_VEHICLE_WHEEL_TYPE(Vehicle vehicle) // 0xB3ED1BFB4BE636DC
--[[
Returns an int

Wheel Types:
0: Sport
1: Muscle
2: Lowrider
3: SUV
4: Offroad
5: Tuner
6: Bike Wheels
7: High End
8: Benny's Originals
9: Benny's Bespoke
10: Racing
11: Street
12: Track

Tested in Los Santos Customs
--]]
function VEHICLE.GET_VEHICLE_WHEEL_TYPE(vehicle)
  return native.invoke(
    Type.Int, 6104, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_WHEEL_TYPE(Vehicle vehicle, int WheelType) // 0x487EB21CC7295BA1
--[[
0: Sport
1: Muscle
2: Lowrider
3: SUV
4: Offroad
5: Tuner
6: Bike Wheels
7: High End
8: Benny's Originals
9: Benny's Bespoke
10: Racing
11: Street
12: Track
--]]
function VEHICLE.SET_VEHICLE_WHEEL_TYPE(vehicle, WheelType)
  native.invoke(
    Type.Void, 6105, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, WheelType)
  )
end

-- int GET_NUM_MOD_COLORS(int paintType, BOOL p1) // 0xA551BE18C11A476D
--[[
paintType:
0: Normal
1: Metallic
2: Pearl
3: Matte
4: Metal
5: Chrome
6: Chameleon
--]]
function VEHICLE.GET_NUM_MOD_COLORS(paintType, p1)
  return native.invoke(
    Type.Int, 6106, false,
    arg(Type.Int, paintType),
    arg(Type.Bool, p1)
  )
end

-- void SET_VEHICLE_MOD_COLOR_1(Vehicle vehicle, int paintType, int color, int pearlescentColor) // 0x43FEB945EE7F85B8
--[[
paintType:
0: Normal
1: Metallic
2: Pearl
3: Matte
4: Metal
5: Chrome
6: Chameleon

color: number of the color.

p3 seems to always be 0.

Full list of vehicle colors and vehicle plates by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicleColors.json
--]]
function VEHICLE.SET_VEHICLE_MOD_COLOR_1(vehicle, paintType, color, pearlescentColor)
  native.invoke(
    Type.Void, 6107, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, paintType),
    arg(Type.Int, color),
    arg(Type.Int, pearlescentColor)
  )
end

-- void SET_VEHICLE_MOD_COLOR_2(Vehicle vehicle, int paintType, int color) // 0x816562BADFDEC83E
--[[
Changes the secondary paint type and color
paintType:
0: Normal
1: Metallic
2: Pearl
3: Matte
4: Metal
5: Chrome
6: Chameleon

color: number of the color

Full list of vehicle colors and vehicle plates by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicleColors.json
--]]
function VEHICLE.SET_VEHICLE_MOD_COLOR_2(vehicle, paintType, color)
  native.invoke(
    Type.Void, 6108, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, paintType),
    arg(Type.Int, color)
  )
end

-- void GET_VEHICLE_MOD_COLOR_1(Vehicle vehicle, int* paintType, int* color, int* pearlescentColor) // 0xE8D65CA700C9A693
function VEHICLE.GET_VEHICLE_MOD_COLOR_1(vehicle, paintType, color, pearlescentColor)
  native.invoke(
    Type.Void, 6109, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, paintType),
    arg(Type.Int, color),
    arg(Type.Int, pearlescentColor)
  )
end

-- void GET_VEHICLE_MOD_COLOR_2(Vehicle vehicle, int* paintType, int* color) // 0x81592BE4E3878728
function VEHICLE.GET_VEHICLE_MOD_COLOR_2(vehicle, paintType, color)
  native.invoke(
    Type.Void, 6110, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, paintType),
    arg(Type.Int, color)
  )
end

-- const char* GET_VEHICLE_MOD_COLOR_1_NAME(Vehicle vehicle, BOOL p1) // 0xB45085B721EFD38C
--[[
Returns a string which is the codename of the vehicle's currently selected primary color

p1 is always 0
--]]
function VEHICLE.GET_VEHICLE_MOD_COLOR_1_NAME(vehicle, p1)
  return native.invoke(
    Type.Const char, 6111, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1)
  )
end

-- const char* GET_VEHICLE_MOD_COLOR_2_NAME(Vehicle vehicle) // 0x4967A516ED23A5A1
--[[
Returns a string which is the codename of the vehicle's currently selected secondary color
--]]
function VEHICLE.GET_VEHICLE_MOD_COLOR_2_NAME(vehicle)
  return native.invoke(
    Type.Const char, 6112, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL HAVE_VEHICLE_MODS_STREAMED_IN(Vehicle vehicle) // 0x9A83F5F9963775EF
function VEHICLE.HAVE_VEHICLE_MODS_STREAMED_IN(vehicle)
  return native.invoke(
    Type.Bool, 6113, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL IS_VEHICLE_MOD_GEN9_EXCLUSIVE(Vehicle vehicle, int modType, int modIndex) // 0x00834EAC4A96E010
--[[
Returns true for any mod part listed in GEN9_EXCLUSIVE_ASSETS_VEHICLES_FILE.
--]]
function VEHICLE.IS_VEHICLE_MOD_GEN9_EXCLUSIVE(vehicle, modType, modIndex)
  return native.invoke(
    Type.Bool, 6114, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, modType),
    arg(Type.Int, modIndex)
  )
end

-- void SET_VEHICLE_MOD(Vehicle vehicle, int modType, int modIndex, BOOL customTires) // 0x6AF0636DDEDCB6DD
--[[
In b944, there are 50 (0 - 49) mod types.

Sets the vehicle mod.
The vehicle must have a mod kit first.

Any out of range ModIndex is stock.

#Mod Type
Spoilers - 0
Front Bumper - 1
Rear Bumper - 2
Side Skirt - 3
Exhaust - 4
Frame - 5
Grille - 6
Hood - 7
Fender - 8
Right Fender - 9
Roof - 10
Engine - 11
Brakes - 12
Transmission - 13
Horns - 14 (modIndex from 0 to 51)
Suspension - 15
Armor - 16
Front Wheels - 23
Back Wheels - 24 //only for motocycles
Plate holders - 25
Trim Design - 27
Ornaments - 28
Dial Design - 30
Steering Wheel - 33
Shifter Leavers - 34
Plaques - 35
Hydraulics - 38
Livery - 48

ENUMS: https://pastebin.com/QzEAn02v
--]]
function VEHICLE.SET_VEHICLE_MOD(vehicle, modType, modIndex, customTires)
  native.invoke(
    Type.Void, 6115, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, modType),
    arg(Type.Int, modIndex),
    arg(Type.Bool, customTires)
  )
end

-- int GET_VEHICLE_MOD(Vehicle vehicle, int modType) // 0x772960298DA26FDB
--[[
In b944, there are 50 (0 - 49) mod types. See SET_VEHICLE_MOD for the list.

Returns -1 if the vehicle mod is stock
--]]
function VEHICLE.GET_VEHICLE_MOD(vehicle, modType)
  return native.invoke(
    Type.Int, 6116, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, modType)
  )
end

-- int GET_VEHICLE_MOD_VARIATION(Vehicle vehicle, int modType) // 0xB3924ECD70E095DC
--[[
Only used for wheels(ModType = 23/24) Returns true if the wheels are custom wheels
--]]
function VEHICLE.GET_VEHICLE_MOD_VARIATION(vehicle, modType)
  return native.invoke(
    Type.Int, 6117, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, modType)
  )
end

-- int GET_NUM_VEHICLE_MODS(Vehicle vehicle, int modType) // 0xE38E9162A2500646
--[[
Returns how many possible mods a vehicle has for a given mod type
--]]
function VEHICLE.GET_NUM_VEHICLE_MODS(vehicle, modType)
  return native.invoke(
    Type.Int, 6118, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, modType)
  )
end

-- void REMOVE_VEHICLE_MOD(Vehicle vehicle, int modType) // 0x92D619E420858204
function VEHICLE.REMOVE_VEHICLE_MOD(vehicle, modType)
  native.invoke(
    Type.Void, 6119, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, modType)
  )
end

-- void TOGGLE_VEHICLE_MOD(Vehicle vehicle, int modType, BOOL toggle) // 0x2A1F4F37F95BAD08
--[[
Toggles:
UNK17 - 17
Turbo - 18
UNK19 - 19
Tire Smoke - 20
UNK21 - 21
Xenon Headlights - 22
--]]
function VEHICLE.TOGGLE_VEHICLE_MOD(vehicle, modType, toggle)
  native.invoke(
    Type.Void, 6120, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, modType),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_TOGGLE_MOD_ON(Vehicle vehicle, int modType) // 0x84B233A8C8FC8AE7
function VEHICLE.IS_TOGGLE_MOD_ON(vehicle, modType)
  return native.invoke(
    Type.Bool, 6121, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, modType)
  )
end

-- const char* GET_MOD_TEXT_LABEL(Vehicle vehicle, int modType, int modValue) // 0x8935624F8C5592CC
--[[
Returns the text label of a mod type for a given vehicle

Use GET_FILENAME_FOR_AUDIO_CONVERSATION to get the part name in the game's language
--]]
function VEHICLE.GET_MOD_TEXT_LABEL(vehicle, modType, modValue)
  return native.invoke(
    Type.Const char, 6122, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, modType),
    arg(Type.Int, modValue)
  )
end

-- const char* GET_MOD_SLOT_NAME(Vehicle vehicle, int modType) // 0x51F0FEB9F6AE98C0
--[[
Returns the name for the type of vehicle mod(Armour, engine etc)

--]]
function VEHICLE.GET_MOD_SLOT_NAME(vehicle, modType)
  return native.invoke(
    Type.Const char, 6123, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, modType)
  )
end

-- const char* GET_LIVERY_NAME(Vehicle vehicle, int liveryIndex) // 0xB4C7A93837C91A1F
--[[
Returns the text label of the vehicle's liveryIndex, as specified by the liveryNames section of the vehicle's modkit data in the carcols file.

example 

int count = VEHICLE::GET_VEHICLE_LIVERY_COUNT(veh);
for (int i = 0; i < count; i++)  
  {
     const char* LiveryName = VEHICLE::GET_LIVERY_NAME(veh, i);
  }


this example will work fine to fetch all names 
for example for Sanchez we get 

SANC_LV1
SANC_LV2
SANC_LV3
SANC_LV4
SANC_LV5


Use GET_FILENAME_FOR_AUDIO_CONVERSATION, to get the localized livery name.

Full list of vehicle mod kits and mods by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicleModKits.json
--]]
function VEHICLE.GET_LIVERY_NAME(vehicle, liveryIndex)
  return native.invoke(
    Type.Const char, 6124, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, liveryIndex)
  )
end

-- int GET_VEHICLE_MOD_MODIFIER_VALUE(Vehicle vehicle, int modType, int modIndex) // 0x90A38E9838E0A8C1
function VEHICLE.GET_VEHICLE_MOD_MODIFIER_VALUE(vehicle, modType, modIndex)
  return native.invoke(
    Type.Int, 6125, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, modType),
    arg(Type.Int, modIndex)
  )
end

-- Hash GET_VEHICLE_MOD_IDENTIFIER_HASH(Vehicle vehicle, int modType, int modIndex) // 0x4593CF82AA179706
--[[
Can be used for IS_DLC_VEHICLE_MOD and GET_DLC_VEHICLE_MOD_LOCK_HASH
--]]
function VEHICLE.GET_VEHICLE_MOD_IDENTIFIER_HASH(vehicle, modType, modIndex)
  return native.invoke(
    Type.Hash, 6126, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, modType),
    arg(Type.Int, modIndex)
  )
end

-- void PRELOAD_VEHICLE_MOD(Vehicle vehicle, int modType, int modIndex) // 0x758F49C24925568A
function VEHICLE.PRELOAD_VEHICLE_MOD(vehicle, modType, modIndex)
  native.invoke(
    Type.Void, 6127, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, modType),
    arg(Type.Int, modIndex)
  )
end

-- BOOL HAS_PRELOAD_MODS_FINISHED(Vehicle vehicle) // 0x06F43E5175EB6D96
function VEHICLE.HAS_PRELOAD_MODS_FINISHED(vehicle)
  return native.invoke(
    Type.Bool, 6128, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void RELEASE_PRELOAD_MODS(Vehicle vehicle) // 0x445D79F995508307
function VEHICLE.RELEASE_PRELOAD_MODS(vehicle)
  native.invoke(
    Type.Void, 6129, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_TYRE_SMOKE_COLOR(Vehicle vehicle, int r, int g, int b) // 0xB5BA80F839791C0F
--[[
Sets the tire smoke's color of this vehicle.

vehicle: The vehicle that is the target of this method.
r: The red level in the RGB color code.
g: The green level in the RGB color code.
b: The blue level in the RGB color code.

Note: setting r,g,b to 0 will give the car the "Patriot" tire smoke.
--]]
function VEHICLE.SET_VEHICLE_TYRE_SMOKE_COLOR(vehicle, r, g, b)
  native.invoke(
    Type.Void, 6130, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b)
  )
end

-- void GET_VEHICLE_TYRE_SMOKE_COLOR(Vehicle vehicle, int* r, int* g, int* b) // 0xB635392A4938B3C3
function VEHICLE.GET_VEHICLE_TYRE_SMOKE_COLOR(vehicle, r, g, b)
  native.invoke(
    Type.Void, 6131, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b)
  )
end

-- void SET_VEHICLE_WINDOW_TINT(Vehicle vehicle, int tint) // 0x57C51E6BAD752696
--[[
enum WindowTints
{
 WINDOWTINT_NONE,
  WINDOWTINT_PURE_BLACK,
    WINDOWTINT_DARKSMOKE,
 WINDOWTINT_LIGHTSMOKE,
    WINDOWTINT_STOCK,
 WINDOWTINT_LIMO,
  WINDOWTINT_GREEN
};
Full list of all vehicle window tints by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicleColors.json
--]]
function VEHICLE.SET_VEHICLE_WINDOW_TINT(vehicle, tint)
  native.invoke(
    Type.Void, 6132, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, tint)
  )
end

-- int GET_VEHICLE_WINDOW_TINT(Vehicle vehicle) // 0x0EE21293DAD47C95
function VEHICLE.GET_VEHICLE_WINDOW_TINT(vehicle)
  return native.invoke(
    Type.Int, 6133, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- int GET_NUM_VEHICLE_WINDOW_TINTS() // 0x9D1224004B3A6707
function VEHICLE.GET_NUM_VEHICLE_WINDOW_TINTS()
  return native.invoke(
    Type.Int, 6134, false
  )
end

-- void GET_VEHICLE_COLOR(Vehicle vehicle, int* r, int* g, int* b) // 0xF3CC740D36221548
--[[
What's this for? Primary and Secondary RGB have their own natives and this one doesn't seem specific.
--]]
function VEHICLE.GET_VEHICLE_COLOR(vehicle, r, g, b)
  native.invoke(
    Type.Void, 6135, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b)
  )
end

-- int GET_VEHICLE_COLOURS_WHICH_CAN_BE_SET(Vehicle vehicle) // 0xEEBFC7A7EFDC35B4
--[[
Some kind of flags.
--]]
function VEHICLE.GET_VEHICLE_COLOURS_WHICH_CAN_BE_SET(vehicle)
  return native.invoke(
    Type.Int, 6136, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- Hash GET_VEHICLE_CAUSE_OF_DESTRUCTION(Vehicle vehicle) // 0xE495D1EF4C91FD20
--[[
iVar3 = get_vehicle_cause_of_destruction(uLocal_248[iVar2]);
if (iVar3 == joaat("weapon_stickybomb"))
{
	func_171(726);
	iLocal_260 = 1;
}
--]]
function VEHICLE.GET_VEHICLE_CAUSE_OF_DESTRUCTION(vehicle)
  return native.invoke(
    Type.Hash, 6137, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void OVERRIDE_PLANE_DAMAGE_THREHSOLD(Vehicle vehicle, float health) // 0x5EE5632F47AE9695
--[[
Used for helis.
--]]
function VEHICLE.OVERRIDE_PLANE_DAMAGE_THREHSOLD(vehicle, health)
  native.invoke(
    Type.Void, 6138, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, health)
  )
end

-- void _SET_TRANSMISSION_REDUCED_GEAR_RATIO(Vehicle vehicle, BOOL toggle) // 0x337EF33DA3DDB990
function VEHICLE._SET_TRANSMISSION_REDUCED_GEAR_RATIO(vehicle, toggle)
  native.invoke(
    Type.Void, 6139, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- int _GET_VEHICLE_DESIRED_DRIVE_GEAR(Vehicle vehicle) // 0xFD8CE53356B5D745
function VEHICLE._GET_VEHICLE_DESIRED_DRIVE_GEAR(vehicle)
  return native.invoke(
    Type.Int, 6140, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL GET_IS_LEFT_VEHICLE_HEADLIGHT_DAMAGED(Vehicle vehicle) // 0x5EF77C9ADD3B11A3
--[[
From the driver's perspective, is the left headlight broken.
--]]
function VEHICLE.GET_IS_LEFT_VEHICLE_HEADLIGHT_DAMAGED(vehicle)
  return native.invoke(
    Type.Bool, 6141, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL GET_IS_RIGHT_VEHICLE_HEADLIGHT_DAMAGED(Vehicle vehicle) // 0xA7ECB73355EB2F20
--[[
From the driver's perspective, is the right headlight broken.
--]]
function VEHICLE.GET_IS_RIGHT_VEHICLE_HEADLIGHT_DAMAGED(vehicle)
  return native.invoke(
    Type.Bool, 6142, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL GET_BOTH_VEHICLE_HEADLIGHTS_DAMAGED(Vehicle vehicle) // 0xEC69ADF931AAE0C3
--[[
Returns true when both headlights are broken. This does not include extralights.
--]]
function VEHICLE.GET_BOTH_VEHICLE_HEADLIGHTS_DAMAGED(vehicle)
  return native.invoke(
    Type.Bool, 6143, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void MODIFY_VEHICLE_TOP_SPEED(Vehicle vehicle, float value) // 0x93A3996368C94158
function VEHICLE.MODIFY_VEHICLE_TOP_SPEED(vehicle, value)
  native.invoke(
    Type.Void, 6144, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, value)
  )
end

-- void SET_VEHICLE_MAX_SPEED(Vehicle vehicle, float speed) // 0xBAA045B4E42F3C06
--[[
To reset the max speed, set the `speed` value to `0.0` or lower.
--]]
function VEHICLE.SET_VEHICLE_MAX_SPEED(vehicle, speed)
  native.invoke(
    Type.Void, 6145, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, speed)
  )
end

-- void SET_VEHICLE_STAYS_FROZEN_WHEN_CLEANED_UP(Vehicle vehicle, BOOL toggle) // 0x1CF38D529D7441D9
--[[
Has something to do with trains. Always precedes SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED.
May be true that it can be used with trains not sure, but not specifically for trains. Go find Xbox360 decompiled scripts and search for 'func_1333' in freemode.c it isn't used just for trains. Thanks for the info tho.
--]]
function VEHICLE.SET_VEHICLE_STAYS_FROZEN_WHEN_CLEANED_UP(vehicle, toggle)
  native.invoke(
    Type.Void, 6146, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_ACT_AS_IF_HIGH_SPEED_FOR_FRAG_SMASHING(Vehicle vehicle, BOOL p1) // 0x1F9FB66F3A3842D2
function VEHICLE.SET_VEHICLE_ACT_AS_IF_HIGH_SPEED_FOR_FRAG_SMASHING(vehicle, p1)
  native.invoke(
    Type.Void, 6147, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1)
  )
end

-- void SET_PEDS_CAN_FALL_OFF_THIS_VEHICLE_FROM_LARGE_FALL_DAMAGE(Vehicle vehicle, BOOL toggle, float p2) // 0x59C3757B3B7408E8
--[[
Sets some bit and float of vehicle. float is >= 0
--]]
function VEHICLE.SET_PEDS_CAN_FALL_OFF_THIS_VEHICLE_FROM_LARGE_FALL_DAMAGE(vehicle, toggle, p2)
  native.invoke(
    Type.Void, 6148, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle),
    arg(Type.Float, p2)
  )
end

-- int ADD_VEHICLE_COMBAT_ANGLED_AVOIDANCE_AREA(float p0, float p1, float p2, float p3, float p4, float p5, float p6) // 0x54B0F614960F4A5F
function VEHICLE.ADD_VEHICLE_COMBAT_ANGLED_AVOIDANCE_AREA(p0, p1, p2, p3, p4, p5, p6)
  return native.invoke(
    Type.Int, 6149, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Float, p6)
  )
end

-- void REMOVE_VEHICLE_COMBAT_AVOIDANCE_AREA(int p0) // 0xE30524E1871F481D
function VEHICLE.REMOVE_VEHICLE_COMBAT_AVOIDANCE_AREA(p0)
  native.invoke(
    Type.Void, 6150, false,
    arg(Type.Int, p0)
  )
end

-- BOOL IS_ANY_PED_RAPPELLING_FROM_HELI(Vehicle vehicle) // 0x291E373D483E7EE7
function VEHICLE.IS_ANY_PED_RAPPELLING_FROM_HELI(vehicle)
  return native.invoke(
    Type.Bool, 6151, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_CHEAT_POWER_INCREASE(Vehicle vehicle, float value) // 0xB59E4BD37AE292DB
--[[
<1.0 - Decreased torque
=1.0 - Default torque
>1.0 - Increased torque

Negative values will cause the vehicle to go backwards instead of forwards while accelerating.

value - is between 0.2 and 1.8 in the decompiled scripts. 

This needs to be called every frame to take effect.
--]]
function VEHICLE.SET_VEHICLE_CHEAT_POWER_INCREASE(vehicle, value)
  native.invoke(
    Type.Void, 6152, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, value)
  )
end

-- void SET_VEHICLE_INFLUENCES_WANTED_LEVEL(Any p0, BOOL p1) // 0x0AD9E8F87FF7C16F
function VEHICLE.SET_VEHICLE_INFLUENCES_WANTED_LEVEL(p0, p1)
  native.invoke(
    Type.Void, 6153, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1)
  )
end

-- void SET_VEHICLE_IS_WANTED(Vehicle vehicle, BOOL state) // 0xF7EC25A3EBEEC726
--[[
Sets the wanted state of this vehicle.
--]]
function VEHICLE.SET_VEHICLE_IS_WANTED(vehicle, state)
  native.invoke(
    Type.Void, 6154, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, state)
  )
end

-- void SWING_BOAT_BOOM_TO_RATIO(Vehicle vehicle, float ratio) // 0xF488C566413B4232
--[[
Sets the boat boom position for the `TR3` trailer.
Ratio value is between `0.0` and `1.0`, where `0.0` is 90 degrees to the left of the boat, and `1.0` is just slightly to the right/back of the boat.
To get the current boom position ratio, use GET_BOAT_BOOM_POSITION_RATIO
--]]
function VEHICLE.SWING_BOAT_BOOM_TO_RATIO(vehicle, ratio)
  native.invoke(
    Type.Void, 6155, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, ratio)
  )
end

-- void SWING_BOAT_BOOM_FREELY(Vehicle vehicle, BOOL toggle) // 0xC1F981A6F74F0C23
--[[
Same call as ALLOW_BOAT_BOOM_TO_ANIMATE
--]]
function VEHICLE.SWING_BOAT_BOOM_FREELY(vehicle, toggle)
  native.invoke(
    Type.Void, 6156, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void ALLOW_BOAT_BOOM_TO_ANIMATE(Vehicle vehicle, BOOL toggle) // 0x0F3B4D4E43177236
function VEHICLE.ALLOW_BOAT_BOOM_TO_ANIMATE(vehicle, toggle)
  native.invoke(
    Type.Void, 6157, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- float GET_BOAT_BOOM_POSITION_RATIO(Vehicle vehicle) // 0x6636C535F6CC2725
function VEHICLE.GET_BOAT_BOOM_POSITION_RATIO(vehicle)
  return native.invoke(
    Type.Float, 6158, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void DISABLE_PLANE_AILERON(Vehicle vehicle, BOOL p1, BOOL p2) // 0x23428FC53C60919C
function VEHICLE.DISABLE_PLANE_AILERON(vehicle, p1, p2)
  native.invoke(
    Type.Void, 6159, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- BOOL GET_IS_VEHICLE_ENGINE_RUNNING(Vehicle vehicle) // 0xAE31E7DF9B5B132E
--[[
Returns true when in a vehicle, false whilst entering/exiting.
--]]
function VEHICLE.GET_IS_VEHICLE_ENGINE_RUNNING(vehicle)
  return native.invoke(
    Type.Bool, 6160, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_USE_ALTERNATE_HANDLING(Vehicle vehicle, BOOL toggle) // 0x1D97D1E3A70A649F
function VEHICLE.SET_VEHICLE_USE_ALTERNATE_HANDLING(vehicle, toggle)
  native.invoke(
    Type.Void, 6161, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_BIKE_ON_STAND(Vehicle vehicle, float x, float y) // 0x9CFA4896C3A53CBB
--[[
Only works on bikes, both X and Y work in the -1 - 1 range.

X forces the bike to turn left or right (-1, 1)
Y forces the bike to lean to the left or to the right (-1, 1)

Example with X -1/Y 1
http://i.imgur.com/TgIuAPJ.jpg
--]]
function VEHICLE.SET_BIKE_ON_STAND(vehicle, x, y)
  native.invoke(
    Type.Void, 6162, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, x),
    arg(Type.Float, y)
  )
end

-- void SET_VEHICLE_NOT_STEALABLE_AMBIENTLY(Vehicle vehicle, BOOL p1) // 0xAB04325045427AAE
function VEHICLE.SET_VEHICLE_NOT_STEALABLE_AMBIENTLY(vehicle, p1)
  native.invoke(
    Type.Void, 6163, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1)
  )
end

-- void LOCK_DOORS_WHEN_NO_LONGER_NEEDED(Vehicle vehicle) // 0xCFD778E7904C255E
function VEHICLE.LOCK_DOORS_WHEN_NO_LONGER_NEEDED(vehicle)
  native.invoke(
    Type.Void, 6164, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_LAST_DRIVEN_VEHICLE(Vehicle vehicle) // 0xACFB2463CC22BED2
function VEHICLE.SET_LAST_DRIVEN_VEHICLE(vehicle)
  native.invoke(
    Type.Void, 6165, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- Vehicle GET_LAST_DRIVEN_VEHICLE() // 0xB2D06FAEDE65B577
function VEHICLE.GET_LAST_DRIVEN_VEHICLE()
  return native.invoke(
    Type.Vehicle, 6166, false
  )
end

-- void CLEAR_LAST_DRIVEN_VEHICLE() // 0xE01903C47C7AC89E
function VEHICLE.CLEAR_LAST_DRIVEN_VEHICLE()
  native.invoke(
    Type.Void, 6167, false
  )
end

-- void SET_VEHICLE_HAS_BEEN_DRIVEN_FLAG(Vehicle vehicle, BOOL toggle) // 0x02398B627547189C
function VEHICLE.SET_VEHICLE_HAS_BEEN_DRIVEN_FLAG(vehicle, toggle)
  native.invoke(
    Type.Void, 6168, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_TASK_VEHICLE_GOTO_PLANE_MIN_HEIGHT_ABOVE_TERRAIN(Vehicle plane, int height) // 0xB893215D8D4C015B
function VEHICLE.SET_TASK_VEHICLE_GOTO_PLANE_MIN_HEIGHT_ABOVE_TERRAIN(plane, height)
  native.invoke(
    Type.Void, 6169, false,
    arg(Type.Vehicle, plane),
    arg(Type.Int, height)
  )
end

-- void SET_VEHICLE_LOD_MULTIPLIER(Vehicle vehicle, float multiplier) // 0x93AE6A61BE015BF1
function VEHICLE.SET_VEHICLE_LOD_MULTIPLIER(vehicle, multiplier)
  native.invoke(
    Type.Void, 6170, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, multiplier)
  )
end

-- void SET_VEHICLE_CAN_SAVE_IN_GARAGE(Vehicle vehicle, BOOL toggle) // 0x428BACCDF5E26EAD
function VEHICLE.SET_VEHICLE_CAN_SAVE_IN_GARAGE(vehicle, toggle)
  native.invoke(
    Type.Void, 6171, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- int GET_VEHICLE_NUM_OF_BROKEN_OFF_PARTS(Vehicle vehicle) // 0x42A4BEB35D372407
--[[
Also includes some "turnOffBones" when vehicle mods are installed.
--]]
function VEHICLE.GET_VEHICLE_NUM_OF_BROKEN_OFF_PARTS(vehicle)
  return native.invoke(
    Type.Int, 6172, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- int GET_VEHICLE_NUM_OF_BROKEN_LOOSEN_PARTS(Vehicle vehicle) // 0x2C8CBFE1EA5FC631
function VEHICLE.GET_VEHICLE_NUM_OF_BROKEN_LOOSEN_PARTS(vehicle)
  return native.invoke(
    Type.Int, 6173, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_FORCE_VEHICLE_ENGINE_DAMAGE_BY_BULLET(Any p0, BOOL p1) // 0x4D9D109F63FEE1D4
function VEHICLE.SET_FORCE_VEHICLE_ENGINE_DAMAGE_BY_BULLET(p0, p1)
  native.invoke(
    Type.Void, 6174, false,
    arg(Type.Any, p0),
    arg(Type.Bool, p1)
  )
end

-- void SET_VEHICLE_GENERATES_ENGINE_SHOCKING_EVENTS(Vehicle vehicle, BOOL toggle) // 0x279D50DE5652D935
--[[
Allows creation of CEventShockingPlaneFlyby, CEventShockingHelicopterOverhead, and other(?) Shocking events
--]]
function VEHICLE.SET_VEHICLE_GENERATES_ENGINE_SHOCKING_EVENTS(vehicle, toggle)
  native.invoke(
    Type.Void, 6175, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void COPY_VEHICLE_DAMAGES(Vehicle sourceVehicle, Vehicle targetVehicle) // 0xE44A982368A4AF23
--[[
Copies sourceVehicle's damage (broken bumpers, broken lights, etc.) to targetVehicle.
--]]
function VEHICLE.COPY_VEHICLE_DAMAGES(sourceVehicle, targetVehicle)
  native.invoke(
    Type.Void, 6176, false,
    arg(Type.Vehicle, sourceVehicle),
    arg(Type.Vehicle, targetVehicle)
  )
end

-- void DISABLE_VEHICLE_EXPLOSION_BREAK_OFF_PARTS() // 0xF25E02CB9C5818F8
function VEHICLE.DISABLE_VEHICLE_EXPLOSION_BREAK_OFF_PARTS()
  native.invoke(
    Type.Void, 6177, false
  )
end

-- void SET_LIGHTS_CUTOFF_DISTANCE_TWEAK(float distance) // 0xBC3CCA5844452B06
function VEHICLE.SET_LIGHTS_CUTOFF_DISTANCE_TWEAK(distance)
  native.invoke(
    Type.Void, 6178, false,
    arg(Type.Float, distance)
  )
end

-- void SET_VEHICLE_SHOOT_AT_TARGET(Ped driver, Entity entity, float xTarget, float yTarget, float zTarget) // 0x74CD9A9327A282EA
--[[
Commands the driver of an armed vehicle (p0) to shoot its weapon at a target (p1). p3, p4 and p5 are the coordinates of the target. Example:

WEAPON::SET_CURRENT_PED_VEHICLE_WEAPON(pilot,MISC::GET_HASH_KEY("VEHICLE_WEAPON_PLANE_ROCKET"));                        VEHICLE::SET_VEHICLE_SHOOT_AT_TARGET(pilot, target, targPos.x, targPos.y, targPos.z);
--]]
function VEHICLE.SET_VEHICLE_SHOOT_AT_TARGET(driver, entity, xTarget, yTarget, zTarget)
  native.invoke(
    Type.Void, 6179, false,
    arg(Type.Ped, driver),
    arg(Type.Entity, entity),
    arg(Type.Float, xTarget),
    arg(Type.Float, yTarget),
    arg(Type.Float, zTarget)
  )
end

-- BOOL GET_VEHICLE_LOCK_ON_TARGET(Vehicle vehicle, Entity* entity) // 0x8F5EBAB1F260CFCE
function VEHICLE.GET_VEHICLE_LOCK_ON_TARGET(vehicle, entity)
  return native.invoke(
    Type.Bool, 6180, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Entity, entity)
  )
end

-- void SET_FORCE_HD_VEHICLE(Vehicle vehicle, BOOL toggle) // 0x97CE68CB032583F0
function VEHICLE.SET_FORCE_HD_VEHICLE(vehicle, toggle)
  native.invoke(
    Type.Void, 6181, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_CUSTOM_PATH_NODE_STREAMING_RADIUS(Vehicle vehicle, float p1) // 0x182F266C2D9E2BEB
function VEHICLE.SET_VEHICLE_CUSTOM_PATH_NODE_STREAMING_RADIUS(vehicle, p1)
  native.invoke(
    Type.Void, 6182, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, p1)
  )
end

-- int GET_VEHICLE_PLATE_TYPE(Vehicle vehicle) // 0x9CCC9525BF2408E0
function VEHICLE.GET_VEHICLE_PLATE_TYPE(vehicle)
  return native.invoke(
    Type.Int, 6183, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void TRACK_VEHICLE_VISIBILITY(Vehicle vehicle) // 0x64473AEFDCF47DCA
--[[
in script hook .net 

Vehicle v = ...;
Function.Call(Hash.TRACK_VEHICLE_VISIBILITY, v.Handle);
--]]
function VEHICLE.TRACK_VEHICLE_VISIBILITY(vehicle)
  native.invoke(
    Type.Void, 6184, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL IS_VEHICLE_VISIBLE(Vehicle vehicle) // 0xAA0A52D24FB98293
--[[
must be called after TRACK_VEHICLE_VISIBILITY 

it's not instant so probabilly must pass an 'update' to see correct result.
--]]
function VEHICLE.IS_VEHICLE_VISIBLE(vehicle)
  return native.invoke(
    Type.Bool, 6185, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_GRAVITY(Vehicle vehicle, BOOL toggle) // 0x89F149B6131E57DA
function VEHICLE.SET_VEHICLE_GRAVITY(vehicle, toggle)
  native.invoke(
    Type.Void, 6186, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_ENABLE_VEHICLE_SLIPSTREAMING(BOOL toggle) // 0xE6C0C80B8C867537
--[[
Enable/Disables global slipstream physics
--]]
function VEHICLE.SET_ENABLE_VEHICLE_SLIPSTREAMING(toggle)
  native.invoke(
    Type.Void, 6187, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_SLIPSTREAMING_SHOULD_TIME_OUT(BOOL toggle) // 0xF051D9BFB6BA39C0
function VEHICLE.SET_VEHICLE_SLIPSTREAMING_SHOULD_TIME_OUT(toggle)
  native.invoke(
    Type.Void, 6188, false,
    arg(Type.Bool, toggle)
  )
end

-- float GET_VEHICLE_CURRENT_TIME_IN_SLIP_STREAM(Vehicle vehicle) // 0x36492C2F0D134C56
--[[
Returns a float value between 0.0 and 3.0 related to its slipstream draft (boost/speedup).
--]]
function VEHICLE.GET_VEHICLE_CURRENT_TIME_IN_SLIP_STREAM(vehicle)
  return native.invoke(
    Type.Float, 6189, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL IS_VEHICLE_PRODUCING_SLIP_STREAM(Vehicle vehicle) // 0x48C633E94A8142A7
--[[
Returns true if the vehicle is being slipstreamed by another vehicle
--]]
function VEHICLE.IS_VEHICLE_PRODUCING_SLIP_STREAM(vehicle)
  return native.invoke(
    Type.Bool, 6190, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_INACTIVE_DURING_PLAYBACK(Vehicle vehicle, BOOL toggle) // 0x06582AFF74894C75
function VEHICLE.SET_VEHICLE_INACTIVE_DURING_PLAYBACK(vehicle, toggle)
  native.invoke(
    Type.Void, 6191, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_ACTIVE_DURING_PLAYBACK(Vehicle vehicle, BOOL toggle) // 0xDFFCEF48E511DB48
function VEHICLE.SET_VEHICLE_ACTIVE_DURING_PLAYBACK(vehicle, toggle)
  native.invoke(
    Type.Void, 6192, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_VEHICLE_SPRAYABLE(Vehicle vehicle) // 0x8D474C8FAEFF6CDE
--[[
Returns false if the vehicle has the FLAG_NO_RESPRAY flag set.
--]]
function VEHICLE.IS_VEHICLE_SPRAYABLE(vehicle)
  return native.invoke(
    Type.Bool, 6193, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_ENGINE_CAN_DEGRADE(Vehicle vehicle, BOOL toggle) // 0x983765856F2564F9
function VEHICLE.SET_VEHICLE_ENGINE_CAN_DEGRADE(vehicle, toggle)
  native.invoke(
    Type.Void, 6194, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void DISABLE_VEHCILE_DYNAMIC_AMBIENT_SCALES(Vehicle vehicle, int p1, int p2) // 0xF0E4BA16D1DB546C
--[[
Adds some kind of shadow to the vehicle.

p1 and p2 use values from 0-255 and both make the shadow darker the lower the value is. -1 disables the effect.
--]]
function VEHICLE.DISABLE_VEHCILE_DYNAMIC_AMBIENT_SCALES(vehicle, p1, p2)
  native.invoke(
    Type.Void, 6195, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, p1),
    arg(Type.Int, p2)
  )
end

-- void ENABLE_VEHICLE_DYNAMIC_AMBIENT_SCALES(Vehicle vehicle) // 0xF87D9F2301F7D206
--[[
Remove the weird shadow applied by DISABLE_VEHCILE_DYNAMIC_AMBIENT_SCALES.
--]]
function VEHICLE.ENABLE_VEHICLE_DYNAMIC_AMBIENT_SCALES(vehicle)
  native.invoke(
    Type.Void, 6196, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL IS_PLANE_LANDING_GEAR_INTACT(Vehicle plane) // 0x4198AB0022B15F87
function VEHICLE.IS_PLANE_LANDING_GEAR_INTACT(plane)
  return native.invoke(
    Type.Bool, 6197, false,
    arg(Type.Vehicle, plane)
  )
end

-- BOOL ARE_PLANE_PROPELLERS_INTACT(Vehicle plane) // 0x755D6D5267CBBD7E
function VEHICLE.ARE_PLANE_PROPELLERS_INTACT(plane)
  return native.invoke(
    Type.Bool, 6198, false,
    arg(Type.Vehicle, plane)
  )
end

-- BOOL SET_PLANE_PROPELLER_HEALTH(Vehicle plane, float health) // 0x4C815EB175086F84
function VEHICLE.SET_PLANE_PROPELLER_HEALTH(plane, health)
  return native.invoke(
    Type.Bool, 6199, false,
    arg(Type.Vehicle, plane),
    arg(Type.Float, health)
  )
end

-- void SET_VEHICLE_CAN_DEFORM_WHEELS(Vehicle vehicle, BOOL toggle) // 0x0CDDA42F9E360CA6
function VEHICLE.SET_VEHICLE_CAN_DEFORM_WHEELS(vehicle, toggle)
  native.invoke(
    Type.Void, 6200, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- BOOL IS_VEHICLE_STOLEN(Vehicle vehicle) // 0x4AF9BD80EEBEB453
--[[
Only returns true if the vehicle was marked as stolen with SET_VEHICLE_IS_STOLEN.
--]]
function VEHICLE.IS_VEHICLE_STOLEN(vehicle)
  return native.invoke(
    Type.Bool, 6201, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_IS_STOLEN(Vehicle vehicle, BOOL isStolen) // 0x67B2C79AA7FF5738
function VEHICLE.SET_VEHICLE_IS_STOLEN(vehicle, isStolen)
  native.invoke(
    Type.Void, 6202, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, isStolen)
  )
end

-- void SET_PLANE_TURBULENCE_MULTIPLIER(Vehicle vehicle, float multiplier) // 0xAD2D28A1AFDFF131
--[[
This native sets the turbulence multiplier. It only works for planes.
0.0 = no turbulence at all.
1.0 = heavy turbulence.
Works by just calling it once, does not need to be called every tick.
--]]
function VEHICLE.SET_PLANE_TURBULENCE_MULTIPLIER(vehicle, multiplier)
  native.invoke(
    Type.Void, 6203, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, multiplier)
  )
end

-- BOOL ARE_WINGS_OF_PLANE_INTACT(Vehicle plane) // 0x5991A01434CE9677
function VEHICLE.ARE_WINGS_OF_PLANE_INTACT(plane)
  return native.invoke(
    Type.Bool, 6204, false,
    arg(Type.Vehicle, plane)
  )
end

-- void ALLOW_AMBIENT_VEHICLES_TO_AVOID_ADVERSE_CONDITIONS(Vehicle vehicle) // 0xB264C4D2F2B0A78B
--[[
This native doesn't seem to do anything, might be a debug-only native.

Confirmed, it is a debug native.
--]]
function VEHICLE.ALLOW_AMBIENT_VEHICLES_TO_AVOID_ADVERSE_CONDITIONS(vehicle)
  native.invoke(
    Type.Void, 6205, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void DETACH_VEHICLE_FROM_CARGOBOB(Vehicle vehicle, Vehicle cargobob) // 0x0E21D3DF1051399D
function VEHICLE.DETACH_VEHICLE_FROM_CARGOBOB(vehicle, cargobob)
  native.invoke(
    Type.Void, 6206, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Vehicle, cargobob)
  )
end

-- BOOL DETACH_VEHICLE_FROM_ANY_CARGOBOB(Vehicle vehicle) // 0xADF7BE450512C12F
function VEHICLE.DETACH_VEHICLE_FROM_ANY_CARGOBOB(vehicle)
  return native.invoke(
    Type.Bool, 6207, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL DETACH_ENTITY_FROM_CARGOBOB(Vehicle cargobob, Entity entity) // 0xAF03011701811146
function VEHICLE.DETACH_ENTITY_FROM_CARGOBOB(cargobob, entity)
  return native.invoke(
    Type.Bool, 6208, false,
    arg(Type.Vehicle, cargobob),
    arg(Type.Entity, entity)
  )
end

-- BOOL IS_VEHICLE_ATTACHED_TO_CARGOBOB(Vehicle cargobob, Vehicle vehicleAttached) // 0xD40148F22E81A1D9
function VEHICLE.IS_VEHICLE_ATTACHED_TO_CARGOBOB(cargobob, vehicleAttached)
  return native.invoke(
    Type.Bool, 6209, false,
    arg(Type.Vehicle, cargobob),
    arg(Type.Vehicle, vehicleAttached)
  )
end

-- Vehicle GET_VEHICLE_ATTACHED_TO_CARGOBOB(Vehicle cargobob) // 0x873B82D42AC2B9E5
--[[
Returns attached vehicle (Vehicle in parameter must be cargobob)
--]]
function VEHICLE.GET_VEHICLE_ATTACHED_TO_CARGOBOB(cargobob)
  return native.invoke(
    Type.Vehicle, 6210, false,
    arg(Type.Vehicle, cargobob)
  )
end

-- Entity GET_ENTITY_ATTACHED_TO_CARGOBOB(Any p0) // 0x99093F60746708CA
function VEHICLE.GET_ENTITY_ATTACHED_TO_CARGOBOB(p0)
  return native.invoke(
    Type.Entity, 6211, false,
    arg(Type.Any, p0)
  )
end

-- void ATTACH_VEHICLE_TO_CARGOBOB(Vehicle cargobob, Vehicle vehicle, int p2, float x, float y, float z) // 0x4127F1D84E347769
function VEHICLE.ATTACH_VEHICLE_TO_CARGOBOB(cargobob, vehicle, p2, x, y, z)
  native.invoke(
    Type.Void, 6212, false,
    arg(Type.Vehicle, cargobob),
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, p2),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void ATTACH_ENTITY_TO_CARGOBOB(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) // 0xA1DD82F3CCF9A01E
function VEHICLE.ATTACH_ENTITY_TO_CARGOBOB(p0, p1, p2, p3, p4, p5)
  native.invoke(
    Type.Void, 6213, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4),
    arg(Type.Any, p5)
  )
end

-- void SET_CARGOBOB_FORCE_DONT_DETACH_VEHICLE(Vehicle cargobob, BOOL toggle) // 0x571FEB383F629926
--[[
Stops cargobob from being able to detach the attached vehicle.
--]]
function VEHICLE.SET_CARGOBOB_FORCE_DONT_DETACH_VEHICLE(cargobob, toggle)
  native.invoke(
    Type.Void, 6214, false,
    arg(Type.Vehicle, cargobob),
    arg(Type.Bool, toggle)
  )
end

-- void SET_CARGOBOB_EXCLUDE_FROM_PICKUP_ENTITY(Any p0, Any p1) // 0x1F34B0626C594380
function VEHICLE.SET_CARGOBOB_EXCLUDE_FROM_PICKUP_ENTITY(p0, p1)
  native.invoke(
    Type.Void, 6215, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL CAN_CARGOBOB_PICK_UP_ENTITY(Any p0, Any p1) // 0x2C1D8B3B19E517CC
function VEHICLE.CAN_CARGOBOB_PICK_UP_ENTITY(p0, p1)
  return native.invoke(
    Type.Bool, 6216, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- Vector3 GET_ATTACHED_PICK_UP_HOOK_POSITION(Vehicle cargobob) // 0xCBDB9B923CACC92D
--[[
Gets the position of the cargobob hook, in world coords.
--]]
function VEHICLE.GET_ATTACHED_PICK_UP_HOOK_POSITION(cargobob)
  return native.invoke(
    Type.Vector3, 6217, false,
    arg(Type.Vehicle, cargobob)
  )
end

-- BOOL DOES_CARGOBOB_HAVE_PICK_UP_ROPE(Vehicle cargobob) // 0x1821D91AD4B56108
--[[
Returns true only when the hook is active, will return false if the magnet is active
--]]
function VEHICLE.DOES_CARGOBOB_HAVE_PICK_UP_ROPE(cargobob)
  return native.invoke(
    Type.Bool, 6218, false,
    arg(Type.Vehicle, cargobob)
  )
end

-- void CREATE_PICK_UP_ROPE_FOR_CARGOBOB(Vehicle cargobob, int state) // 0x7BEB0C7A235F6F3B
--[[
Drops the Hook/Magnet on a cargobob

state
enum eCargobobHook
{
  CARGOBOB_HOOK = 0,
    CARGOBOB_MAGNET = 1,
};
--]]
function VEHICLE.CREATE_PICK_UP_ROPE_FOR_CARGOBOB(cargobob, state)
  native.invoke(
    Type.Void, 6219, false,
    arg(Type.Vehicle, cargobob),
    arg(Type.Int, state)
  )
end

-- void REMOVE_PICK_UP_ROPE_FOR_CARGOBOB(Vehicle cargobob) // 0x9768CF648F54C804
--[[
Retracts the hook on the cargobob.

Note: after you retract it the natives for dropping the hook no longer work
--]]
function VEHICLE.REMOVE_PICK_UP_ROPE_FOR_CARGOBOB(cargobob)
  native.invoke(
    Type.Void, 6220, false,
    arg(Type.Vehicle, cargobob)
  )
end

-- void SET_PICKUP_ROPE_LENGTH_FOR_CARGOBOB(Vehicle cargobob, float length1, float length2, BOOL p3) // 0x877C1EAEAC531023
--[[
min: 1.9f, max: 100.0f
--]]
function VEHICLE.SET_PICKUP_ROPE_LENGTH_FOR_CARGOBOB(cargobob, length1, length2, p3)
  native.invoke(
    Type.Void, 6221, false,
    arg(Type.Vehicle, cargobob),
    arg(Type.Float, length1),
    arg(Type.Float, length2),
    arg(Type.Bool, p3)
  )
end

-- void SET_PICKUP_ROPE_LENGTH_WITHOUT_CREATING_ROPE_FOR_CARGOBOB(Any p0, Any p1, Any p2) // 0xC0ED6438E6D39BA8
function VEHICLE.SET_PICKUP_ROPE_LENGTH_WITHOUT_CREATING_ROPE_FOR_CARGOBOB(p0, p1, p2)
  native.invoke(
    Type.Void, 6222, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void SET_CARGOBOB_PICKUP_ROPE_DAMPING_MULTIPLIER(Any p0, Any p1) // 0xCF1182F682F65307
function VEHICLE.SET_CARGOBOB_PICKUP_ROPE_DAMPING_MULTIPLIER(p0, p1)
  native.invoke(
    Type.Void, 6223, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void SET_CARGOBOB_PICKUP_ROPE_TYPE(Any p0, Any p1) // 0x0D5F65A8F4EBDAB5
function VEHICLE.SET_CARGOBOB_PICKUP_ROPE_TYPE(p0, p1)
  native.invoke(
    Type.Void, 6224, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- BOOL DOES_CARGOBOB_HAVE_PICKUP_MAGNET(Vehicle cargobob) // 0x6E08BF5B3722BAC9
--[[
Returns true only when the magnet is active, will return false if the hook is active
--]]
function VEHICLE.DOES_CARGOBOB_HAVE_PICKUP_MAGNET(cargobob)
  return native.invoke(
    Type.Bool, 6225, false,
    arg(Type.Vehicle, cargobob)
  )
end

-- void SET_CARGOBOB_PICKUP_MAGNET_ACTIVE(Vehicle cargobob, BOOL isActive) // 0x9A665550F8DA349B
--[[
Won't attract or magnetize to any helicopters or planes of course, but that's common sense.
--]]
function VEHICLE.SET_CARGOBOB_PICKUP_MAGNET_ACTIVE(cargobob, isActive)
  native.invoke(
    Type.Void, 6226, false,
    arg(Type.Vehicle, cargobob),
    arg(Type.Bool, isActive)
  )
end

-- void SET_CARGOBOB_PICKUP_MAGNET_STRENGTH(Vehicle cargobob, float strength) // 0xBCBFCD9D1DAC19E2
function VEHICLE.SET_CARGOBOB_PICKUP_MAGNET_STRENGTH(cargobob, strength)
  native.invoke(
    Type.Void, 6227, false,
    arg(Type.Vehicle, cargobob),
    arg(Type.Float, strength)
  )
end

-- void SET_CARGOBOB_PICKUP_MAGNET_FALLOFF(Vehicle cargobob, float p1) // 0xA17BAD153B51547E
function VEHICLE.SET_CARGOBOB_PICKUP_MAGNET_FALLOFF(cargobob, p1)
  native.invoke(
    Type.Void, 6228, false,
    arg(Type.Vehicle, cargobob),
    arg(Type.Float, p1)
  )
end

-- void SET_CARGOBOB_PICKUP_MAGNET_REDUCED_STRENGTH(Vehicle cargobob, float p1) // 0x66979ACF5102FD2F
function VEHICLE.SET_CARGOBOB_PICKUP_MAGNET_REDUCED_STRENGTH(cargobob, p1)
  native.invoke(
    Type.Void, 6229, false,
    arg(Type.Vehicle, cargobob),
    arg(Type.Float, p1)
  )
end

-- void SET_CARGOBOB_PICKUP_MAGNET_REDUCED_FALLOFF(Vehicle cargobob, float p1) // 0x6D8EAC07506291FB
function VEHICLE.SET_CARGOBOB_PICKUP_MAGNET_REDUCED_FALLOFF(cargobob, p1)
  native.invoke(
    Type.Void, 6230, false,
    arg(Type.Vehicle, cargobob),
    arg(Type.Float, p1)
  )
end

-- void SET_CARGOBOB_PICKUP_MAGNET_PULL_STRENGTH(Vehicle cargobob, float p1) // 0xED8286F71A819BAA
function VEHICLE.SET_CARGOBOB_PICKUP_MAGNET_PULL_STRENGTH(cargobob, p1)
  native.invoke(
    Type.Void, 6231, false,
    arg(Type.Vehicle, cargobob),
    arg(Type.Float, p1)
  )
end

-- void SET_CARGOBOB_PICKUP_MAGNET_PULL_ROPE_LENGTH(Vehicle vehicle, float p1) // 0x685D5561680D088B
function VEHICLE.SET_CARGOBOB_PICKUP_MAGNET_PULL_ROPE_LENGTH(vehicle, p1)
  native.invoke(
    Type.Void, 6232, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, p1)
  )
end

-- void SET_CARGOBOB_PICKUP_MAGNET_SET_TARGETED_MODE(Vehicle vehicle, Vehicle cargobob) // 0xE301BD63E9E13CF0
function VEHICLE.SET_CARGOBOB_PICKUP_MAGNET_SET_TARGETED_MODE(vehicle, cargobob)
  native.invoke(
    Type.Void, 6233, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Vehicle, cargobob)
  )
end

-- void SET_CARGOBOB_PICKUP_MAGNET_SET_AMBIENT_MODE(Vehicle vehicle, BOOL p1, BOOL p2) // 0x9BDDC73CC6A115D4
function VEHICLE.SET_CARGOBOB_PICKUP_MAGNET_SET_AMBIENT_MODE(vehicle, p1, p2)
  native.invoke(
    Type.Void, 6234, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1),
    arg(Type.Bool, p2)
  )
end

-- void SET_CARGOBOB_PICKUP_MAGNET_ENSURE_PICKUP_ENTITY_UPRIGHT(Vehicle vehicle, BOOL p1) // 0x56EB5E94318D3FB6
function VEHICLE.SET_CARGOBOB_PICKUP_MAGNET_ENSURE_PICKUP_ENTITY_UPRIGHT(vehicle, p1)
  native.invoke(
    Type.Void, 6235, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1)
  )
end

-- BOOL DOES_VEHICLE_HAVE_WEAPONS(Vehicle vehicle) // 0x25ECB9F8017D98E0
function VEHICLE.DOES_VEHICLE_HAVE_WEAPONS(vehicle)
  return native.invoke(
    Type.Bool, 6236, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_WILL_TELL_OTHERS_TO_HURRY(Vehicle vehicle, BOOL p1) // 0x2C4A1590ABF43E8B
function VEHICLE.SET_VEHICLE_WILL_TELL_OTHERS_TO_HURRY(vehicle, p1)
  native.invoke(
    Type.Void, 6237, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1)
  )
end

-- void DISABLE_VEHICLE_WEAPON(BOOL disabled, Hash weaponHash, Vehicle vehicle, Ped owner) // 0xF4FC6A6F67D8D856
--[[
Full list of weapons by DurtyFree (Search for VEHICLE_*): https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function VEHICLE.DISABLE_VEHICLE_WEAPON(disabled, weaponHash, vehicle, owner)
  native.invoke(
    Type.Void, 6238, false,
    arg(Type.Bool, disabled),
    arg(Type.Hash, weaponHash),
    arg(Type.Vehicle, vehicle),
    arg(Type.Ped, owner)
  )
end

-- BOOL IS_VEHICLE_WEAPON_DISABLED(Hash weaponHash, Vehicle vehicle, Ped owner) // 0x563B65A643ED072E
--[[
Full list of weapons by DurtyFree (Search for VEHICLE_*): https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function VEHICLE.IS_VEHICLE_WEAPON_DISABLED(weaponHash, vehicle, owner)
  return native.invoke(
    Type.Bool, 6239, false,
    arg(Type.Hash, weaponHash),
    arg(Type.Vehicle, vehicle),
    arg(Type.Ped, owner)
  )
end

-- void SET_VEHICLE_USED_FOR_PILOT_SCHOOL(Vehicle vehicle, BOOL toggle) // 0xE05DD0E9707003A3
function VEHICLE.SET_VEHICLE_USED_FOR_PILOT_SCHOOL(vehicle, toggle)
  native.invoke(
    Type.Void, 6240, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_ACTIVE_FOR_PED_NAVIGATION(Vehicle vehicle, BOOL toggle) // 0x21115BCD6E44656A
function VEHICLE.SET_VEHICLE_ACTIVE_FOR_PED_NAVIGATION(vehicle, toggle)
  native.invoke(
    Type.Void, 6241, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- int GET_VEHICLE_CLASS(Vehicle vehicle) // 0x29439776AAA00A62
--[[
Returns an int

Vehicle Classes:
0: Compacts
1: Sedans
2: SUVs
3: Coupes
4: Muscle
5: Sports Classics
6: Sports
7: Super
8: Motorcycles
9: Off-road
10: Industrial
11: Utility
12: Vans
13: Cycles
14: Boats
15: Helicopters
16: Planes
17: Service
18: Emergency
19: Military
20: Commercial
21: Trains

char buffer[128];
std::sprintf(buffer, "VEH_CLASS_%i", VEHICLE::GET_VEHICLE_CLASS(vehicle));

const char* className = HUD::GET_FILENAME_FOR_AUDIO_CONVERSATION(buffer);
--]]
function VEHICLE.GET_VEHICLE_CLASS(vehicle)
  return native.invoke(
    Type.Int, 6242, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- int GET_VEHICLE_CLASS_FROM_NAME(Hash modelHash) // 0xDEDF1C8BD47C2200
--[[
char buffer[128];
std::sprintf(buffer, "VEH_CLASS_%i", VEHICLE::GET_VEHICLE_CLASS_FROM_NAME (hash));

const char* className = HUD::GET_FILENAME_FOR_AUDIO_CONVERSATION(buffer);

Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
--]]
function VEHICLE.GET_VEHICLE_CLASS_FROM_NAME(modelHash)
  return native.invoke(
    Type.Int, 6243, false,
    arg(Type.Hash, modelHash)
  )
end

-- void SET_PLAYERS_LAST_VEHICLE(Vehicle vehicle) // 0xBCDF8BAF56C87B6A
function VEHICLE.SET_PLAYERS_LAST_VEHICLE(vehicle)
  native.invoke(
    Type.Void, 6244, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_CAN_BE_USED_BY_FLEEING_PEDS(Vehicle vehicle, BOOL toggle) // 0x300504B23BD3B711
function VEHICLE.SET_VEHICLE_CAN_BE_USED_BY_FLEEING_PEDS(vehicle, toggle)
  native.invoke(
    Type.Void, 6245, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_AIRCRAFT_PILOT_SKILL_NOISE_SCALAR(Vehicle vehicle, float p1) // 0xE5810AC70602F2F5
function VEHICLE.SET_AIRCRAFT_PILOT_SKILL_NOISE_SCALAR(vehicle, p1)
  native.invoke(
    Type.Void, 6246, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, p1)
  )
end

-- void SET_VEHICLE_DROPS_MONEY_WHEN_BLOWN_UP(Vehicle vehicle, BOOL toggle) // 0x068F64F2470F9656
--[[
Money pickups are created around cars when they explode. Only works when the vehicle model is a car. A single pickup is between 1 and 18 dollars in size. All car models seem to give the same amount of money.

youtu.be/3arlUxzHl5Y 
i.imgur.com/WrNpYFs.jpg
--]]
function VEHICLE.SET_VEHICLE_DROPS_MONEY_WHEN_BLOWN_UP(vehicle, toggle)
  native.invoke(
    Type.Void, 6247, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_KEEP_ENGINE_ON_WHEN_ABANDONED(Vehicle vehicle, BOOL toggle) // 0xB8FBC8B1330CA9B4
function VEHICLE.SET_VEHICLE_KEEP_ENGINE_ON_WHEN_ABANDONED(vehicle, toggle)
  native.invoke(
    Type.Void, 6248, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_IMPATIENCE_TIMER(Vehicle vehicle, Any p1) // 0x6A973569BA094650
--[[
Seems to copy some values in vehicle
--]]
function VEHICLE.SET_VEHICLE_IMPATIENCE_TIMER(vehicle, p1)
  native.invoke(
    Type.Void, 6249, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Any, p1)
  )
end

-- void SET_VEHICLE_HANDLING_OVERRIDE(Vehicle vehicle, Hash hash) // 0x10655FAB9915623D
--[[
Use the "AIHandling" string found in handling.meta
--]]
function VEHICLE.SET_VEHICLE_HANDLING_OVERRIDE(vehicle, hash)
  native.invoke(
    Type.Void, 6250, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Hash, hash)
  )
end

-- void SET_VEHICLE_EXTENDED_REMOVAL_RANGE(Vehicle vehicle, int range) // 0x79DF7E806202CE01
--[[
Max value is 32767
--]]
function VEHICLE.SET_VEHICLE_EXTENDED_REMOVAL_RANGE(vehicle, range)
  native.invoke(
    Type.Void, 6251, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, range)
  )
end

-- void SET_VEHICLE_STEERING_BIAS_SCALAR(Any p0, float p1) // 0x9007A2F21DC108D4
function VEHICLE.SET_VEHICLE_STEERING_BIAS_SCALAR(p0, p1)
  native.invoke(
    Type.Void, 6252, false,
    arg(Type.Any, p0),
    arg(Type.Float, p1)
  )
end

-- void SET_HELI_CONTROL_LAGGING_RATE_SCALAR(Vehicle helicopter, float multiplier) // 0x6E0859B530A365CC
--[[
value between 0.0 and 1.0
--]]
function VEHICLE.SET_HELI_CONTROL_LAGGING_RATE_SCALAR(helicopter, multiplier)
  native.invoke(
    Type.Void, 6253, false,
    arg(Type.Vehicle, helicopter),
    arg(Type.Float, multiplier)
  )
end

-- void SET_VEHICLE_FRICTION_OVERRIDE(Vehicle vehicle, float friction) // 0x1837AF7C627009BA
--[[
Seems to be related to the metal parts, not tyres (like i was expecting lol)
--]]
function VEHICLE.SET_VEHICLE_FRICTION_OVERRIDE(vehicle, friction)
  native.invoke(
    Type.Void, 6254, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, friction)
  )
end

-- void SET_VEHICLE_WHEELS_CAN_BREAK_OFF_WHEN_BLOW_UP(Vehicle vehicle, BOOL toggle) // 0xA37B9A517B133349
function VEHICLE.SET_VEHICLE_WHEELS_CAN_BREAK_OFF_WHEN_BLOW_UP(vehicle, toggle)
  native.invoke(
    Type.Void, 6255, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- BOOL ARE_PLANE_CONTROL_PANELS_INTACT(Vehicle vehicle, BOOL p1) // 0xF78F94D60248C737
function VEHICLE.ARE_PLANE_CONTROL_PANELS_INTACT(vehicle, p1)
  return native.invoke(
    Type.Bool, 6256, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1)
  )
end

-- void SET_VEHICLE_CEILING_HEIGHT(Vehicle vehicle, float height) // 0xA46413066687A328
function VEHICLE.SET_VEHICLE_CEILING_HEIGHT(vehicle, height)
  native.invoke(
    Type.Void, 6257, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, height)
  )
end

-- void SET_VEHICLE_NO_EXPLOSION_DAMAGE_FROM_DRIVER(Vehicle vehicle, BOOL toggle) // 0x5E569EC46EC21CAE
function VEHICLE.SET_VEHICLE_NO_EXPLOSION_DAMAGE_FROM_DRIVER(vehicle, toggle)
  native.invoke(
    Type.Void, 6258, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void CLEAR_VEHICLE_ROUTE_HISTORY(Vehicle vehicle) // 0x6D6AF961B72728AE
function VEHICLE.CLEAR_VEHICLE_ROUTE_HISTORY(vehicle)
  native.invoke(
    Type.Void, 6259, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- Vehicle DOES_VEHICLE_EXIST_WITH_DECORATOR(const char* decorator) // 0x956B409B984D9BF7
function VEHICLE.DOES_VEHICLE_EXIST_WITH_DECORATOR(decorator)
  return native.invoke(
    Type.Vehicle, 6260, false,
    arg(Type.String, decorator)
  )
end

-- void SET_VEHICLE_AI_CAN_USE_EXCLUSIVE_SEATS(Vehicle vehicle, BOOL toggle) // 0x41062318F23ED854
--[[
Used to be incorrectly named SET_VEHICLE_EXCLUSIVE_DRIVER
Toggles a flag related to SET_VEHICLE_EXCLUSIVE_DRIVER, however, doesn't enable that feature (or trigger script events related to it).
--]]
function VEHICLE.SET_VEHICLE_AI_CAN_USE_EXCLUSIVE_SEATS(vehicle, toggle)
  native.invoke(
    Type.Void, 6261, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_EXCLUSIVE_DRIVER(Vehicle vehicle, Ped ped, int index) // 0xB5C51B5502E85E83
--[[
index: 0 - 1

Used to be incorrectly named _SET_VEHICLE_EXCLUSIVE_DRIVER_2
--]]
function VEHICLE.SET_VEHICLE_EXCLUSIVE_DRIVER(vehicle, ped, index)
  native.invoke(
    Type.Void, 6262, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Ped, ped),
    arg(Type.Int, index)
  )
end

-- BOOL IS_PED_EXCLUSIVE_DRIVER_OF_VEHICLE(Ped ped, Vehicle vehicle, int* outIndex) // 0xB09D25E77C33EB3F
function VEHICLE.IS_PED_EXCLUSIVE_DRIVER_OF_VEHICLE(ped, vehicle, outIndex)
  return native.invoke(
    Type.Bool, 6263, false,
    arg(Type.Ped, ped),
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, outIndex)
  )
end

-- void DISABLE_INDIVIDUAL_PLANE_PROPELLER(Vehicle vehicle, int propeller) // 0x500873A45724C863
function VEHICLE.DISABLE_INDIVIDUAL_PLANE_PROPELLER(vehicle, propeller)
  native.invoke(
    Type.Void, 6264, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, propeller)
  )
end

-- void SET_VEHICLE_FORCE_AFTERBURNER(Vehicle vehicle, BOOL toggle) // 0xB055A34527CB8FD7
function VEHICLE.SET_VEHICLE_FORCE_AFTERBURNER(vehicle, toggle)
  native.invoke(
    Type.Void, 6265, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_DONT_PROCESS_VEHICLE_GLASS(Vehicle vehicle, BOOL toggle) // 0x1087BC8EC540DAEB
--[[
R* used it to "remove" vehicle windows when "nightshark" had some mod, which adding some kind of armored windows. When enabled, you can't break vehicles glass. All your bullets wiil shoot through glass. You also will not able to break the glass with any other way (hitting and etc)
--]]
function VEHICLE.SET_DONT_PROCESS_VEHICLE_GLASS(vehicle, toggle)
  native.invoke(
    Type.Void, 6266, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_DISABLE_WANTED_CONES_RESPONSE(Vehicle vehicle, BOOL toggle) // 0x4AD280EB48B2D8E6
function VEHICLE.SET_DISABLE_WANTED_CONES_RESPONSE(vehicle, toggle)
  native.invoke(
    Type.Void, 6267, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_USE_DESIRED_Z_CRUISE_SPEED_FOR_LANDING(Vehicle vehicle, BOOL toggle) // 0xB68CFAF83A02768D
function VEHICLE.SET_USE_DESIRED_Z_CRUISE_SPEED_FOR_LANDING(vehicle, toggle)
  native.invoke(
    Type.Void, 6268, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_ARRIVE_DISTANCE_OVERRIDE_FOR_VEHICLE_PERSUIT_ATTACK(Vehicle vehicle, float p1) // 0x0205F5365292D2EB
function VEHICLE.SET_ARRIVE_DISTANCE_OVERRIDE_FOR_VEHICLE_PERSUIT_ATTACK(vehicle, p1)
  native.invoke(
    Type.Void, 6269, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, p1)
  )
end

-- void SET_VEHICLE_READY_FOR_CLEANUP(Any p0) // 0xCF9159024555488C
function VEHICLE.SET_VEHICLE_READY_FOR_CLEANUP(p0)
  native.invoke(
    Type.Void, 6270, false,
    arg(Type.Any, p0)
  )
end

-- void SET_DISTANT_CARS_ENABLED(BOOL toggle) // 0xF796359A959DF65D
--[[
Toggles to render distant vehicles. They may not be vehicles but images to look like vehicles.
--]]
function VEHICLE.SET_DISTANT_CARS_ENABLED(toggle)
  native.invoke(
    Type.Void, 6271, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_NEON_COLOUR(Vehicle vehicle, int r, int g, int b) // 0x8E0A582209A62695
--[[
Sets the color of the neon lights of the specified vehicle.
--]]
function VEHICLE.SET_VEHICLE_NEON_COLOUR(vehicle, r, g, b)
  native.invoke(
    Type.Void, 6272, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b)
  )
end

-- void SET_VEHICLE_NEON_INDEX_COLOUR(Vehicle vehicle, int index) // 0xB93B2867F7B479D1
--[[
Index references CVehicleModelColor
--]]
function VEHICLE.SET_VEHICLE_NEON_INDEX_COLOUR(vehicle, index)
  native.invoke(
    Type.Void, 6273, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, index)
  )
end

-- void GET_VEHICLE_NEON_COLOUR(Vehicle vehicle, int* r, int* g, int* b) // 0x7619EEE8C886757F
--[[
Gets the color of the neon lights of the specified vehicle.

See SET_VEHICLE_NEON_COLOUR (0x8E0A582209A62695) for more information
--]]
function VEHICLE.GET_VEHICLE_NEON_COLOUR(vehicle, r, g, b)
  native.invoke(
    Type.Void, 6274, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, r),
    arg(Type.Int, g),
    arg(Type.Int, b)
  )
end

-- void SET_VEHICLE_NEON_ENABLED(Vehicle vehicle, int index, BOOL toggle) // 0x2AA720E4287BF269
--[[
Sets the neon lights of the specified vehicle on/off.

Indices:
0 = Left
1 = Right
2 = Front
3 = Back
--]]
function VEHICLE.SET_VEHICLE_NEON_ENABLED(vehicle, index, toggle)
  native.invoke(
    Type.Void, 6275, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, index),
    arg(Type.Bool, toggle)
  )
end

-- BOOL GET_VEHICLE_NEON_ENABLED(Vehicle vehicle, int index) // 0x8C4B92553E4766A5
--[[
indices:
0 = Left
1 = Right
2 = Front
3 = Back
--]]
function VEHICLE.GET_VEHICLE_NEON_ENABLED(vehicle, index)
  return native.invoke(
    Type.Bool, 6276, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, index)
  )
end

-- void SET_AMBIENT_VEHICLE_NEON_ENABLED(BOOL p0) // 0x35E0654F4BAD7971
function VEHICLE.SET_AMBIENT_VEHICLE_NEON_ENABLED(p0)
  native.invoke(
    Type.Void, 6277, false,
    arg(Type.Bool, p0)
  )
end

-- void SUPPRESS_NEONS_ON_VEHICLE(Vehicle vehicle, BOOL toggle) // 0x83F813570FF519DE
function VEHICLE.SUPPRESS_NEONS_ON_VEHICLE(vehicle, toggle)
  native.invoke(
    Type.Void, 6278, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_DISABLE_SUPERDUMMY(Vehicle vehicle, BOOL p1) // 0xB088E9A47AE6EDD5
function VEHICLE.SET_DISABLE_SUPERDUMMY(vehicle, p1)
  native.invoke(
    Type.Void, 6279, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1)
  )
end

-- void REQUEST_VEHICLE_DIAL(Vehicle vehicle) // 0xDBA3C090E3D74690
function VEHICLE.REQUEST_VEHICLE_DIAL(vehicle)
  native.invoke(
    Type.Void, 6280, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- float GET_VEHICLE_BODY_HEALTH(Vehicle vehicle) // 0xF271147EB7B40F12
--[[
Seems related to vehicle health, like the one in IV.
Max 1000, min 0.
Vehicle does not necessarily explode or become undrivable at 0.
--]]
function VEHICLE.GET_VEHICLE_BODY_HEALTH(vehicle)
  return native.invoke(
    Type.Float, 6281, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_BODY_HEALTH(Vehicle vehicle, float value) // 0xB77D05AC8C78AADB
--[[
p2 often set to 1000.0 in the decompiled scripts.
--]]
function VEHICLE.SET_VEHICLE_BODY_HEALTH(vehicle, value)
  native.invoke(
    Type.Void, 6282, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, value)
  )
end

-- void GET_VEHICLE_SIZE(Vehicle vehicle, Vector3* out1, Vector3* out2) // 0xDF7E3EEB29642C38
--[[
Outputs 2 Vector3's.
Scripts check if out2.x - out1.x > someshit.x
Could be suspension related, as in max suspension height and min suspension height, considering the natives location.
--]]
function VEHICLE.GET_VEHICLE_SIZE(vehicle, out1, out2)
  native.invoke(
    Type.Void, 6283, true,
    arg(Type.Vehicle, vehicle),
    arg(Type.Vector3, out1),
    arg(Type.Vector3, out2)
  )
end

-- float GET_FAKE_SUSPENSION_LOWERING_AMOUNT(Vehicle vehicle) // 0x53952FD2BAA19F17
--[[
Gets the height of the vehicle's suspension.
The higher the value the lower the suspension. Each 0.002 corresponds with one more level lowered.
0.000 is the stock suspension.
0.008 is Ultra Suspension.
--]]
function VEHICLE.GET_FAKE_SUSPENSION_LOWERING_AMOUNT(vehicle)
  return native.invoke(
    Type.Float, 6284, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER(float multiplier) // 0x84FD40F56075E816
function VEHICLE.SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER(multiplier)
  native.invoke(
    Type.Void, 6285, false,
    arg(Type.Float, multiplier)
  )
end

-- int GET_NUMBER_OF_VEHICLE_DOORS(Vehicle vehicle) // 0x92922A607497B14D
function VEHICLE.GET_NUMBER_OF_VEHICLE_DOORS(vehicle)
  return native.invoke(
    Type.Int, 6286, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_HYDRAULICS_CONTROL(Vehicle vehicle, BOOL toggle) // 0x28B18377EB6E25F6
--[[
If false, lowers hydraulics (if raised) and disables hydraulics controls. If true, raises hydraulics and enables hydraulics controls.

Only used once in each carmod script, on a car that does not have hydraulics to begin with.
--]]
function VEHICLE.SET_HYDRAULICS_CONTROL(vehicle, toggle)
  native.invoke(
    Type.Void, 6287, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_CAN_ADJUST_GROUND_CLEARANCE(Vehicle vehicle, BOOL p1) // 0xA7DCDF4DED40A8F4
function VEHICLE.SET_CAN_ADJUST_GROUND_CLEARANCE(vehicle, p1)
  native.invoke(
    Type.Void, 6288, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1)
  )
end

-- float GET_VEHICLE_HEALTH_PERCENTAGE(Vehicle vehicle, float maxEngineHealth, float maxPetrolTankHealth, float maxBodyHealth, float maxMainRotorHealth, float maxTailRotorHealth, float maxUnkHealth) // 0xB8EF61207C2393A9
--[[
0 min 100 max
starts at 100
Seams to have health zones
Front of vehicle when damaged goes from 100-50 and stops at 50.
Rear can be damaged from 100-0
Only tested with two cars.

any idea how this differs from the first one?

--
May return the vehicle health on a scale of 0.0 - 100.0 (needs to be confirmed)

example:

v_F = ENTITY::GET_ENTITY_MODEL(v_3);
if (((v_F == ${tanker}) || (v_F == ${armytanker})) || (v_F == ${tanker2})) {
    if (VEHICLE::GET_VEHICLE_HEALTH_PERCENTAGE(v_3) <= 1.0) {
        NETWORK::NETWORK_EXPLODE_VEHICLE(v_3, 1, 1, -1);
    }
}
--]]
function VEHICLE.GET_VEHICLE_HEALTH_PERCENTAGE(vehicle, maxEngineHealth, maxPetrolTankHealth, maxBodyHealth, maxMainRotorHealth, maxTailRotorHealth, maxUnkHealth)
  return native.invoke(
    Type.Float, 6289, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, maxEngineHealth),
    arg(Type.Float, maxPetrolTankHealth),
    arg(Type.Float, maxBodyHealth),
    arg(Type.Float, maxMainRotorHealth),
    arg(Type.Float, maxTailRotorHealth),
    arg(Type.Float, maxUnkHealth)
  )
end

-- BOOL GET_VEHICLE_IS_MERCENARY(Vehicle vehicle) // 0xD4C4642CB7F50B5D
function VEHICLE.GET_VEHICLE_IS_MERCENARY(vehicle)
  return native.invoke(
    Type.Bool, 6290, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_BROKEN_PARTS_DONT_AFFECT_AI_HANDLING(Vehicle vehicle, BOOL p1) // 0xC361AA040D6637A8
function VEHICLE.SET_VEHICLE_BROKEN_PARTS_DONT_AFFECT_AI_HANDLING(vehicle, p1)
  native.invoke(
    Type.Void, 6291, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1)
  )
end

-- void SET_VEHICLE_KERS_ALLOWED(Vehicle vehicle, BOOL toggle) // 0x99C82F8A139F3E4E
function VEHICLE.SET_VEHICLE_KERS_ALLOWED(vehicle, toggle)
  native.invoke(
    Type.Void, 6292, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- BOOL GET_VEHICLE_HAS_KERS(Vehicle vehicle) // 0x50634E348C8D44EF
--[[
Returns true if the vehicle has a HF_HAS_KERS (strHandlingFlags 0x4) handing flag set, for instance the lectro/vindicator bikes or the open wheelers.
--]]
function VEHICLE.GET_VEHICLE_HAS_KERS(vehicle)
  return native.invoke(
    Type.Bool, 6293, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_PLANE_RESIST_TO_EXPLOSION(Vehicle vehicle, BOOL toggle) // 0xE16142B94664DEFD
function VEHICLE.SET_PLANE_RESIST_TO_EXPLOSION(vehicle, toggle)
  native.invoke(
    Type.Void, 6294, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_HELI_RESIST_TO_EXPLOSION(Vehicle vehicle, BOOL toggle) // 0x8074CC1886802912
function VEHICLE.SET_HELI_RESIST_TO_EXPLOSION(vehicle, toggle)
  native.invoke(
    Type.Void, 6295, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_DISABLE_BMX_EXTRA_TRICK_FORCES(Any p0) // 0x26D99D5A82FD18E8
function VEHICLE.SET_DISABLE_BMX_EXTRA_TRICK_FORCES(p0)
  native.invoke(
    Type.Void, 6296, false,
    arg(Type.Any, p0)
  )
end

-- void SET_HYDRAULIC_SUSPENSION_RAISE_FACTOR(Vehicle vehicle, int wheelId, float value) // 0x84EA99C62CB3EF0C
--[[
Works only on vehicles that support hydraulics.
--]]
function VEHICLE.SET_HYDRAULIC_SUSPENSION_RAISE_FACTOR(vehicle, wheelId, value)
  native.invoke(
    Type.Void, 6297, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, wheelId),
    arg(Type.Float, value)
  )
end

-- float GET_HYDRAULIC_SUSPENSION_RAISE_FACTOR(Vehicle vehicle, int wheelId) // 0x0BB5CBDDD0F25AE3
function VEHICLE.GET_HYDRAULIC_SUSPENSION_RAISE_FACTOR(vehicle, wheelId)
  return native.invoke(
    Type.Float, 6298, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, wheelId)
  )
end

-- void SET_CAN_USE_HYDRAULICS(Vehicle vehicle, BOOL toggle) // 0x1201E8A3290A3B98
function VEHICLE.SET_CAN_USE_HYDRAULICS(vehicle, toggle)
  native.invoke(
    Type.Void, 6299, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_HYDRAULIC_VEHICLE_STATE(Vehicle vehicle, int state) // 0x8EA86DF356801C7D
--[[
States:
4 = raise
5 = lower
6 = jump
--]]
function VEHICLE.SET_HYDRAULIC_VEHICLE_STATE(vehicle, state)
  native.invoke(
    Type.Void, 6300, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, state)
  )
end

-- void SET_HYDRAULIC_WHEEL_STATE(Vehicle vehicle, int wheelId, int state, float value, Any p4) // 0xC24075310A8B9CD1
--[[
Sets vehicle wheel hydraulic states transition. Known states:
0 - reset
1 - raise wheel (uses value arg, works just like _SET_VEHICLE_HYDRAULIC_WHEEL_VALUE)
2 - jump using wheel
--]]
function VEHICLE.SET_HYDRAULIC_WHEEL_STATE(vehicle, wheelId, state, value, p4)
  native.invoke(
    Type.Void, 6301, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, wheelId),
    arg(Type.Int, state),
    arg(Type.Float, value),
    arg(Type.Any, p4)
  )
end

-- BOOL HAS_VEHICLE_PETROLTANK_SET_ON_FIRE_BY_ENTITY(Any p0, Any p1) // 0x5BA68A0840D546AC
function VEHICLE.HAS_VEHICLE_PETROLTANK_SET_ON_FIRE_BY_ENTITY(p0, p1)
  return native.invoke(
    Type.Bool, 6302, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void CLEAR_VEHICLE_PETROLTANK_FIRE_CULPRIT(Vehicle vehicle) // 0x4419966C9936071A
function VEHICLE.CLEAR_VEHICLE_PETROLTANK_FIRE_CULPRIT(vehicle)
  native.invoke(
    Type.Void, 6303, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_BOBBLEHEAD_VELOCITY(float x, float y, float p2) // 0x870B8B7A766615C8
--[[
Controls how fast bobbleheads and tsurikawas move on each axis.

p2 is probably z, but changing that value didn't seem to have a noticeable effect.
--]]
function VEHICLE.SET_VEHICLE_BOBBLEHEAD_VELOCITY(x, y, p2)
  native.invoke(
    Type.Void, 6304, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, p2)
  )
end

-- BOOL GET_VEHICLE_IS_DUMMY(Any p0) // 0x8533CAFDE1F0F336
function VEHICLE.GET_VEHICLE_IS_DUMMY(p0)
  return native.invoke(
    Type.Bool, 6305, false,
    arg(Type.Any, p0)
  )
end

-- BOOL SET_VEHICLE_DAMAGE_SCALE(Vehicle vehicle, float p1) // 0x4E20D2A627011E8E
function VEHICLE.SET_VEHICLE_DAMAGE_SCALE(vehicle, p1)
  return native.invoke(
    Type.Bool, 6306, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, p1)
  )
end

-- BOOL SET_VEHICLE_WEAPON_DAMAGE_SCALE(Vehicle vehicle, float multiplier) // 0x45A561A9421AB6AD
function VEHICLE.SET_VEHICLE_WEAPON_DAMAGE_SCALE(vehicle, multiplier)
  return native.invoke(
    Type.Bool, 6307, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, multiplier)
  )
end

-- BOOL SET_DISABLE_DAMAGE_WITH_PICKED_UP_ENTITY(Any p0, Any p1) // 0xD4196117AF7BB974
function VEHICLE.SET_DISABLE_DAMAGE_WITH_PICKED_UP_ENTITY(p0, p1)
  return native.invoke(
    Type.Bool, 6308, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void SET_VEHICLE_USES_MP_PLAYER_DAMAGE_MULTIPLIER(Any p0, Any p1) // 0xBB2333BB87DDD87F
function VEHICLE.SET_VEHICLE_USES_MP_PLAYER_DAMAGE_MULTIPLIER(p0, p1)
  native.invoke(
    Type.Void, 6309, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void SET_BIKE_EASY_TO_LAND(Vehicle vehicle, BOOL toggle) // 0x73561D4425A021A2
--[[
When enabled, the player won't fall off the bike when landing from large heights.
--]]
function VEHICLE.SET_BIKE_EASY_TO_LAND(vehicle, toggle)
  native.invoke(
    Type.Void, 6310, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_INVERT_VEHICLE_CONTROLS(Vehicle vehicle, BOOL state) // 0x5B91B229243351A8
--[[
Inverts vehicle's controls. So INPUT_VEH_ACCELERATE will be INPUT_VEH_BRAKE and vise versa (same for A/D controls)
Doesn't work for planes/helis.
--]]
function VEHICLE.SET_INVERT_VEHICLE_CONTROLS(vehicle, state)
  native.invoke(
    Type.Void, 6311, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, state)
  )
end

-- void SET_SPEED_BOOST_EFFECT_DISABLED(BOOL disabled) // 0x7BBE7FF626A591FE
--[[
Disables the screen effects and sound effects when driving over a speed boost pad.
--]]
function VEHICLE.SET_SPEED_BOOST_EFFECT_DISABLED(disabled)
  native.invoke(
    Type.Void, 6312, false,
    arg(Type.Bool, disabled)
  )
end

-- void SET_SLOW_DOWN_EFFECT_DISABLED(BOOL disabled) // 0x65B080555EA48149
--[[
Disables the screen effects and sound effects when driving over a slowdown pad.
--]]
function VEHICLE.SET_SLOW_DOWN_EFFECT_DISABLED(disabled)
  native.invoke(
    Type.Void, 6313, false,
    arg(Type.Bool, disabled)
  )
end

-- void SET_FORMATION_LEADER(Vehicle vehicle, float x, float y, float z, float p4) // 0x428AD3E26C8D9EB0
function VEHICLE.SET_FORMATION_LEADER(vehicle, x, y, z, p4)
  native.invoke(
    Type.Void, 6314, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, p4)
  )
end

-- void RESET_FORMATION_LEADER() // 0xE2F53F172B45EDE1
--[[
Resets the effect of SET_FORMATION_LEADER
--]]
function VEHICLE.RESET_FORMATION_LEADER()
  native.invoke(
    Type.Void, 6315, false
  )
end

-- BOOL GET_IS_BOAT_CAPSIZED(Vehicle vehicle) // 0xBA91D045575699AD
function VEHICLE.GET_IS_BOAT_CAPSIZED(vehicle)
  return native.invoke(
    Type.Bool, 6316, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_ALLOW_RAMMING_SOOP_OR_RAMP(Any p0, Any p1) // 0x80E3357FDEF45C21
function VEHICLE.SET_ALLOW_RAMMING_SOOP_OR_RAMP(p0, p1)
  native.invoke(
    Type.Void, 6317, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void SET_SCRIPT_RAMP_IMPULSE_SCALE(Vehicle vehicle, float impulseScale) // 0xEFC13B1CE30D755D
function VEHICLE.SET_SCRIPT_RAMP_IMPULSE_SCALE(vehicle, impulseScale)
  native.invoke(
    Type.Void, 6318, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, impulseScale)
  )
end

-- BOOL GET_IS_DOOR_VALID(Vehicle vehicle, int doorId) // 0x645F4B6E8499F632
--[[
doorId: see SET_VEHICLE_DOOR_SHUT
--]]
function VEHICLE.GET_IS_DOOR_VALID(vehicle, doorId)
  return native.invoke(
    Type.Bool, 6319, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, doorId)
  )
end

-- void SET_SCRIPT_ROCKET_BOOST_RECHARGE_TIME(Vehicle vehicle, float seconds) // 0xE00F2AB100B76E89
function VEHICLE.SET_SCRIPT_ROCKET_BOOST_RECHARGE_TIME(vehicle, seconds)
  native.invoke(
    Type.Void, 6320, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, seconds)
  )
end

-- BOOL GET_HAS_ROCKET_BOOST(Vehicle vehicle) // 0x36D782F68B309BDA
function VEHICLE.GET_HAS_ROCKET_BOOST(vehicle)
  return native.invoke(
    Type.Bool, 6321, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL IS_ROCKET_BOOST_ACTIVE(Vehicle vehicle) // 0x3D34E80EED4AE3BE
function VEHICLE.IS_ROCKET_BOOST_ACTIVE(vehicle)
  return native.invoke(
    Type.Bool, 6322, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_ROCKET_BOOST_ACTIVE(Vehicle vehicle, BOOL active) // 0x81E1552E35DC3839
function VEHICLE.SET_ROCKET_BOOST_ACTIVE(vehicle, active)
  native.invoke(
    Type.Void, 6323, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, active)
  )
end

-- BOOL GET_HAS_RETRACTABLE_WHEELS(Vehicle vehicle) // 0xDCA174A42133F08C
function VEHICLE.GET_HAS_RETRACTABLE_WHEELS(vehicle)
  return native.invoke(
    Type.Bool, 6324, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL GET_IS_WHEELS_RETRACTED(Vehicle vehicle) // 0x1DA0DA9CB3F0C8BF
function VEHICLE.GET_IS_WHEELS_RETRACTED(vehicle)
  return native.invoke(
    Type.Bool, 6325, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_WHEELS_EXTENDED_INSTANTLY(Vehicle vehicle) // 0xF660602546D27BA8
function VEHICLE.SET_WHEELS_EXTENDED_INSTANTLY(vehicle)
  native.invoke(
    Type.Void, 6326, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_WHEELS_RETRACTED_INSTANTLY(Vehicle vehicle) // 0x5335BE58C083E74E
function VEHICLE.SET_WHEELS_RETRACTED_INSTANTLY(vehicle)
  native.invoke(
    Type.Void, 6327, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL GET_CAR_HAS_JUMP(Vehicle vehicle) // 0x9078C0C5EF8C19E9
--[[
Returns true if the vehicle has the FLAG_JUMPING_CAR flag set.
--]]
function VEHICLE.GET_CAR_HAS_JUMP(vehicle)
  return native.invoke(
    Type.Bool, 6328, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_USE_HIGHER_CAR_JUMP(Vehicle vehicle, BOOL toggle) // 0xF06A16CA55D138D8
--[[
Allows vehicles with the FLAG_JUMPING_CAR flag to jump higher (i.e. Ruiner 2000).
--]]
function VEHICLE.SET_USE_HIGHER_CAR_JUMP(vehicle, toggle)
  native.invoke(
    Type.Void, 6329, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_CLEAR_FREEZE_WAITING_ON_COLLISION_ONCE_PLAYER_ENTERS(Vehicle vehicle, BOOL toggle) // 0xB2E0C0D6922D31F2
function VEHICLE.SET_CLEAR_FREEZE_WAITING_ON_COLLISION_ONCE_PLAYER_ENTERS(vehicle, toggle)
  native.invoke(
    Type.Void, 6330, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_WEAPON_RESTRICTED_AMMO(Vehicle vehicle, int weaponIndex, int capacity) // 0x44CD1F493DB2A0A6
--[[
Set vehicle's primary mounted weapon 2 ammo. For example, use it on APC.
For example, you can "remove" any vehicle weapon from any vehicle.
ammoAmount -1 = infinite ammo (default value for any spawned vehicle tho)
--]]
function VEHICLE.SET_VEHICLE_WEAPON_RESTRICTED_AMMO(vehicle, weaponIndex, capacity)
  native.invoke(
    Type.Void, 6331, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, weaponIndex),
    arg(Type.Int, capacity)
  )
end

-- int GET_VEHICLE_WEAPON_RESTRICTED_AMMO(Vehicle vehicle, int weaponIndex) // 0x8181CE2F25CB9BB7
function VEHICLE.GET_VEHICLE_WEAPON_RESTRICTED_AMMO(vehicle, weaponIndex)
  return native.invoke(
    Type.Int, 6332, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, weaponIndex)
  )
end

-- BOOL GET_VEHICLE_HAS_PARACHUTE(Vehicle vehicle) // 0xBC9CFF381338CB4F
function VEHICLE.GET_VEHICLE_HAS_PARACHUTE(vehicle)
  return native.invoke(
    Type.Bool, 6333, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL GET_VEHICLE_CAN_DEPLOY_PARACHUTE(Vehicle vehicle) // 0xA916396DF4154EE3
function VEHICLE.GET_VEHICLE_CAN_DEPLOY_PARACHUTE(vehicle)
  return native.invoke(
    Type.Bool, 6334, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void VEHICLE_START_PARACHUTING(Vehicle vehicle, BOOL active) // 0x0BFFB028B3DD0A97
function VEHICLE.VEHICLE_START_PARACHUTING(vehicle, active)
  native.invoke(
    Type.Void, 6335, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, active)
  )
end

-- BOOL IS_VEHICLE_PARACHUTE_DEPLOYED(Vehicle vehicle) // 0x3DE51E9C80B116CF
function VEHICLE.IS_VEHICLE_PARACHUTE_DEPLOYED(vehicle)
  return native.invoke(
    Type.Bool, 6336, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void VEHICLE_SET_RAMP_AND_RAMMING_CARS_TAKE_DAMAGE(Vehicle vehicle, BOOL toggle) // 0x28D034A93FE31BF5
function VEHICLE.VEHICLE_SET_RAMP_AND_RAMMING_CARS_TAKE_DAMAGE(vehicle, toggle)
  native.invoke(
    Type.Void, 6337, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void VEHICLE_SET_ENABLE_RAMP_CAR_SIDE_IMPULSE(Any p0, Any p1) // 0x1BBAC99C0BC53656
function VEHICLE.VEHICLE_SET_ENABLE_RAMP_CAR_SIDE_IMPULSE(p0, p1)
  native.invoke(
    Type.Void, 6338, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void VEHICLE_SET_ENABLE_NORMALISE_RAMP_CAR_VERTICAL_VELOCTIY(Any p0, Any p1) // 0x756AE6E962168A04
function VEHICLE.VEHICLE_SET_ENABLE_NORMALISE_RAMP_CAR_VERTICAL_VELOCTIY(p0, p1)
  native.invoke(
    Type.Void, 6339, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void VEHICLE_SET_JET_WASH_FORCE_ENABLED(Any p0) // 0x9D30687C57BAA0BB
function VEHICLE.VEHICLE_SET_JET_WASH_FORCE_ENABLED(p0)
  native.invoke(
    Type.Void, 6340, false,
    arg(Type.Any, p0)
  )
end

-- void SET_VEHICLE_WEAPON_CAN_TARGET_OBJECTS(Vehicle vehicle, BOOL toggle) // 0x86B4B6212CB8B627
function VEHICLE.SET_VEHICLE_WEAPON_CAN_TARGET_OBJECTS(vehicle, toggle)
  native.invoke(
    Type.Void, 6341, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_USE_BOOST_BUTTON_FOR_WHEEL_RETRACT(BOOL toggle) // 0x41290B40FA63E6DA
--[[
Used for blazer5. Changes the quadbike-jetski transformation input from raise/lower convertible roof (hold H by default) to horn (press E by default.)
--]]
function VEHICLE.SET_VEHICLE_USE_BOOST_BUTTON_FOR_WHEEL_RETRACT(toggle)
  native.invoke(
    Type.Void, 6342, false,
    arg(Type.Bool, toggle)
  )
end

-- void _SET_VEHICLE_USE_HORN_BUTTON_FOR_NITROUS(BOOL toggle) // 0x1980F68872CC2C3D
function VEHICLE._SET_VEHICLE_USE_HORN_BUTTON_FOR_NITROUS(toggle)
  native.invoke(
    Type.Void, 6343, false,
    arg(Type.Bool, toggle)
  )
end

-- void VEHICLE_SET_PARACHUTE_MODEL_OVERRIDE(Vehicle vehicle, Hash modelHash) // 0x4D610C6B56031351
--[[
Parachute models:
- sr_prop_specraces_para_s_01
- imp_prop_impexp_para_s (SecuroServ; Default)
Plus, many more props can be used as vehicle parachutes, like umbrellas (prop_beach_parasol_03), and unlike SET_PLAYER_PARACHUTE_MODEL_OVERRIDE, you won't get stuck mid-air when using an umbrella.
--]]
function VEHICLE.VEHICLE_SET_PARACHUTE_MODEL_OVERRIDE(vehicle, modelHash)
  native.invoke(
    Type.Void, 6344, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Hash, modelHash)
  )
end

-- void VEHICLE_SET_PARACHUTE_MODEL_TINT_INDEX(Vehicle vehicle, int textureVariation) // 0xA74AD2439468C883
--[[
Variations available for the generic parachute (sr_prop_specraces_para_s_01):
- 0: Rainbow
- 1: Red
- 2: White, blue, yellow
- 3: Black, red, white
- 4: Red, white, blue
- 5: Blue
- 6: Black
- 7: Black, yellow
--]]
function VEHICLE.VEHICLE_SET_PARACHUTE_MODEL_TINT_INDEX(vehicle, textureVariation)
  native.invoke(
    Type.Void, 6345, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, textureVariation)
  )
end

-- int VEHICLE_SET_OVERRIDE_EXTENABLE_SIDE_RATIO(Any p0, Any p1) // 0x0419B167EE128F33
function VEHICLE.VEHICLE_SET_OVERRIDE_EXTENABLE_SIDE_RATIO(p0, p1)
  return native.invoke(
    Type.Int, 6346, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- int VEHICLE_SET_EXTENABLE_SIDE_TARGET_RATIO(Any p0, Any p1) // 0xF3B0E0AED097A3F5
function VEHICLE.VEHICLE_SET_EXTENABLE_SIDE_TARGET_RATIO(p0, p1)
  return native.invoke(
    Type.Int, 6347, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- int VEHICLE_SET_OVERRIDE_SIDE_RATIO(Any p0, Any p1) // 0xD3E51C0AB8C26EEE
function VEHICLE.VEHICLE_SET_OVERRIDE_SIDE_RATIO(p0, p1)
  return native.invoke(
    Type.Int, 6348, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- int GET_ALL_VEHICLES(Any* vehsStruct) // 0x9B8E1BF04B51F2E8
function VEHICLE.GET_ALL_VEHICLES(vehsStruct)
  return native.invoke(
    Type.Int, 6349, false,
    arg(Type.Any, vehsStruct)
  )
end

-- void SET_CARGOBOB_EXTA_PICKUP_RANGE(Any p0, Any p1) // 0x72BECCF4B829522E
function VEHICLE.SET_CARGOBOB_EXTA_PICKUP_RANGE(p0, p1)
  native.invoke(
    Type.Void, 6350, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void SET_OVERRIDE_VEHICLE_DOOR_TORQUE(Any p0, Any p1, Any p2) // 0x66E3AAFACE2D1EB8
function VEHICLE.SET_OVERRIDE_VEHICLE_DOOR_TORQUE(p0, p1, p2)
  native.invoke(
    Type.Void, 6351, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void SET_WHEELIE_ENABLED(Vehicle vehicle, BOOL enabled) // 0x1312DDD8385AEE4E
--[[
Enables/disables the ability to wheelie on motorcycles.
--]]
function VEHICLE.SET_WHEELIE_ENABLED(vehicle, enabled)
  native.invoke(
    Type.Void, 6352, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, enabled)
  )
end

-- void SET_DISABLE_HELI_EXPLODE_FROM_BODY_DAMAGE(Any p0, Any p1) // 0xEDBC8405B3895CC9
function VEHICLE.SET_DISABLE_HELI_EXPLODE_FROM_BODY_DAMAGE(p0, p1)
  native.invoke(
    Type.Void, 6353, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void SET_DISABLE_EXPLODE_FROM_BODY_DAMAGE_ON_COLLISION(Vehicle vehicle, float value) // 0x26E13D440E7F6064
function VEHICLE.SET_DISABLE_EXPLODE_FROM_BODY_DAMAGE_ON_COLLISION(vehicle, value)
  native.invoke(
    Type.Void, 6354, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, value)
  )
end

-- void SET_TRAILER_ATTACHMENT_ENABLED(Any p0, Any p1) // 0x2FA2494B47FDD009
function VEHICLE.SET_TRAILER_ATTACHMENT_ENABLED(p0, p1)
  native.invoke(
    Type.Void, 6355, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void SET_ROCKET_BOOST_FILL(Vehicle vehicle, float percentage) // 0xFEB2DDED3509562E
function VEHICLE.SET_ROCKET_BOOST_FILL(vehicle, percentage)
  native.invoke(
    Type.Void, 6356, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, percentage)
  )
end

-- void SET_GLIDER_ACTIVE(Vehicle vehicle, BOOL state) // 0x544996C0081ABDEB
--[[
Set state to true to extend the wings, false to retract them.
--]]
function VEHICLE.SET_GLIDER_ACTIVE(vehicle, state)
  native.invoke(
    Type.Void, 6357, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, state)
  )
end

-- void SET_SHOULD_RESET_TURRET_IN_SCRIPTED_CAMERAS(Vehicle vehicle, BOOL shouldReset) // 0x78CEEE41F49F421F
--[[
Resets the vehicle's turret to its default position in scripted cameras. Doesn't seem to affect turrets that are occupied by a ped.
--]]
function VEHICLE.SET_SHOULD_RESET_TURRET_IN_SCRIPTED_CAMERAS(vehicle, shouldReset)
  native.invoke(
    Type.Void, 6358, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, shouldReset)
  )
end

-- void SET_VEHICLE_DISABLE_COLLISION_UPON_CREATION(Vehicle vehicle, BOOL disable) // 0xAF60E6A2936F982A
function VEHICLE.SET_VEHICLE_DISABLE_COLLISION_UPON_CREATION(vehicle, disable)
  native.invoke(
    Type.Void, 6359, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, disable)
  )
end

-- void SET_GROUND_EFFECT_REDUCES_DRAG(BOOL toggle) // 0x430A7631A84C9BE7
function VEHICLE.SET_GROUND_EFFECT_REDUCES_DRAG(toggle)
  native.invoke(
    Type.Void, 6360, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_DISABLE_MAP_COLLISION(Vehicle vehicle) // 0x75627043C6AA90AD
--[[
Disables collision for this vehicle (maybe it also supports other entities, not sure).
Only world/building/fixed world objects will have their collisions disabled, props, peds, or any other entity still collides with the vehicle.
Example: https://streamable.com/6n45d5
Not sure if there is a native (and if so, which one) that resets the collisions.
--]]
function VEHICLE.SET_DISABLE_MAP_COLLISION(vehicle)
  native.invoke(
    Type.Void, 6361, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_DISABLE_PED_STAND_ON_TOP(Vehicle vehicle, BOOL toggle) // 0x8235F1BEAD557629
function VEHICLE.SET_DISABLE_PED_STAND_ON_TOP(vehicle, toggle)
  native.invoke(
    Type.Void, 6362, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_DAMAGE_SCALES(Vehicle vehicle, Any p1, Any p2, Any p3, Any p4) // 0x9640E30A7F395E4B
function VEHICLE.SET_VEHICLE_DAMAGE_SCALES(vehicle, p1, p2, p3, p4)
  native.invoke(
    Type.Void, 6363, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Any, p1),
    arg(Type.Any, p2),
    arg(Type.Any, p3),
    arg(Type.Any, p4)
  )
end

-- void SET_PLANE_SECTION_DAMAGE_SCALE(Vehicle vehicle, Any p1, Any p2) // 0x0BBB9A7A8FFE931B
function VEHICLE.SET_PLANE_SECTION_DAMAGE_SCALE(vehicle, p1, p2)
  native.invoke(
    Type.Void, 6364, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Any, p1),
    arg(Type.Any, p2)
  )
end

-- void SET_HELI_CAN_PICKUP_ENTITY_THAT_HAS_PICK_UP_DISABLED(Vehicle vehicle, BOOL toggle) // 0x94A68DA412C4007D
--[[
Stops the cargobob from being able to attach any vehicle
--]]
function VEHICLE.SET_HELI_CAN_PICKUP_ENTITY_THAT_HAS_PICK_UP_DISABLED(vehicle, toggle)
  native.invoke(
    Type.Void, 6365, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_BOMB_AMMO(Vehicle vehicle, int bombCount) // 0xF4B2ED59DEB5D774
--[[
Sets the amount of bombs that this vehicle has. As far as I know, this does _not_ impact vehicle weapons or the ammo of those weapons in any way, it is just a way to keep track of the amount of bombs in a specific plane.
--]]
function VEHICLE.SET_VEHICLE_BOMB_AMMO(vehicle, bombCount)
  native.invoke(
    Type.Void, 6366, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, bombCount)
  )
end

-- int GET_VEHICLE_BOMB_AMMO(Vehicle vehicle) // 0xEA12BD130D7569A1
--[[
Gets the amount of bombs that this vehicle has. As far as I know, this does _not_ impact vehicle weapons or the ammo of those weapons in any way, it is just a way to keep track of the amount of bombs in a specific plane.
--]]
function VEHICLE.GET_VEHICLE_BOMB_AMMO(vehicle)
  return native.invoke(
    Type.Int, 6367, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_VEHICLE_COUNTERMEASURE_AMMO(Vehicle vehicle, int counterMeasureCount) // 0x9BDA23BF666F0855
--[[
Similar to SET_VEHICLE_BOMB_AMMO, this sets the amount of countermeasures that are present on this vehicle.
Use GET_VEHICLE_BOMB_AMMO to get the current amount.
--]]
function VEHICLE.SET_VEHICLE_COUNTERMEASURE_AMMO(vehicle, counterMeasureCount)
  native.invoke(
    Type.Void, 6368, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, counterMeasureCount)
  )
end

-- int GET_VEHICLE_COUNTERMEASURE_AMMO(Vehicle vehicle) // 0xF846AA63DF56B804
--[[
Similar to `GET_VEHICLE_BOMB_AMMO`, this gets the amount of countermeasures that are present on this vehicle.
Use SET_VEHICLE_COUNTERMEASURE_AMMO to set the current amount.
--]]
function VEHICLE.GET_VEHICLE_COUNTERMEASURE_AMMO(vehicle)
  return native.invoke(
    Type.Int, 6369, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_HELI_COMBAT_OFFSET(Vehicle vehicle, float x, float y, float z) // 0x0A3F820A9A9A9AC5
function VEHICLE.SET_HELI_COMBAT_OFFSET(vehicle, x, y, z)
  native.invoke(
    Type.Void, 6370, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- BOOL GET_CAN_VEHICLE_BE_PLACED_HERE(Vehicle vehicle, float x, float y, float z, float rotX, float rotY, float rotZ, int p7, Any p8) // 0x51F30DB60626A20E
--[[
Used in decompiled scripts in combination with GET_VEHICLE_SIZE
p7 is usually 2
p8 is usually 1
--]]
function VEHICLE.GET_CAN_VEHICLE_BE_PLACED_HERE(vehicle, x, y, z, rotX, rotY, rotZ, p7, p8)
  return native.invoke(
    Type.Bool, 6371, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, rotX),
    arg(Type.Float, rotY),
    arg(Type.Float, rotZ),
    arg(Type.Int, p7),
    arg(Type.Any, p8)
  )
end

-- void SET_DISABLE_AUTOMATIC_CRASH_TASK(Vehicle vehicle, BOOL toggle) // 0x97841634EF7DF1D6
--[[
Sets a flag on heli and another vehicle type.
--]]
function VEHICLE.SET_DISABLE_AUTOMATIC_CRASH_TASK(vehicle, toggle)
  native.invoke(
    Type.Void, 6372, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_SPECIAL_FLIGHT_MODE_RATIO(Vehicle vehicle, float ratio) // 0xD138FA15C9776837
--[[
Used in conjunction with SET_SPECIAL_FLIGHT_MODE_TARGET_RATIO, in Rockstar's scripts. Using this will instantly transform the vehicle into hover mode starting from the given ratio (ranging from 0.0 to 1.0, values greater than 1.0 will put the vehicle into a glitched state.) If this is not used alongside SET_SPECIAL_FLIGHT_MODE_TARGET_RATIO, the vehicle will automatically transform back into car mode.

Usable only with the deluxo and other vehicles with deluxo-like hover mode toggle, modded or otherwise. Does nothing when used on oppressor2.

Example:
Ped playerPed = PLAYER::PLAYER_PED_ID();
Vehicle veh = PED::GET_VEHICLE_PED_IS_USING(playerPed);
VEHICLE::SET_SPECIAL_FLIGHT_MODE_RATIO(veh, 0.7f);
VEHICLE::SET_SPECIAL_FLIGHT_MODE_TARGET_RATIO(veh, 1.0f);
--]]
function VEHICLE.SET_SPECIAL_FLIGHT_MODE_RATIO(vehicle, ratio)
  native.invoke(
    Type.Void, 6373, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, ratio)
  )
end

-- void SET_SPECIAL_FLIGHT_MODE_TARGET_RATIO(Vehicle vehicle, float targetRatio) // 0x438B3D7CA026FE91
--[[
Used in conjunction with SET_SPECIAL_FLIGHT_MODE_RATIO, in Rockstar's scripts. The vehicle will transform into the given targetRatio, starting from the vehicle's current hover mode transform ratio (which can also be manually set by SET_SPECIAL_FLIGHT_MODE_RATIO,) i.e. setting targetRatio to 0.0 while the vehicle is in hover mode will transform the vehicle into car mode, likewise setting targetRatio to 1.0 while the vehicle is in car mode will transform the vehicle into hover mode, and if the current transform ratio is set to 0.7 while targetRatio is 1.0 the vehicle will transform into hover mode starting from being already partially transformed.

targetRatio is recommended to always be 0.0 or 1.0, otherwise the vehicle will transform into a glitched state.

Usable only with the deluxo and other vehicles with deluxo-like hover mode toggle, modded or otherwise. Does nothing when used on oppressor2.

Example:
Ped playerPed = PLAYER::PLAYER_PED_ID();
Vehicle veh = PED::GET_VEHICLE_PED_IS_USING(playerPed);
VEHICLE::SET_SPECIAL_FLIGHT_MODE_RATIO(veh, 0.7f);
VEHICLE::SET_SPECIAL_FLIGHT_MODE_TARGET_RATIO(veh, 1.0f);
--]]
function VEHICLE.SET_SPECIAL_FLIGHT_MODE_TARGET_RATIO(vehicle, targetRatio)
  native.invoke(
    Type.Void, 6374, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, targetRatio)
  )
end

-- void SET_SPECIAL_FLIGHT_MODE_ALLOWED(Vehicle vehicle, BOOL toggle) // 0xF1211889DF15A763
--[[
It will override the ability to transform deluxo. For oppressor it will work just like SET_DISABLE_HOVER_MODE_FLIGHT
--]]
function VEHICLE.SET_SPECIAL_FLIGHT_MODE_ALLOWED(vehicle, toggle)
  native.invoke(
    Type.Void, 6375, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_DISABLE_HOVER_MODE_FLIGHT(Vehicle vehicle, BOOL toggle) // 0x2D55FE374D5FDB91
--[[
Disables "wings" for some flying vehicles. Works only for oppressor _2_ and deluxo.
For deluxo it just immediately removes vehicle's "wings" and you will be not able to fly up.
For oppressor 2 it will remove wings right after you land. And you will not able to fly up anymore too.
But for opressor 2 you still can fly if you somehow get back in the air.
--]]
function VEHICLE.SET_DISABLE_HOVER_MODE_FLIGHT(vehicle, toggle)
  native.invoke(
    Type.Void, 6376, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- BOOL GET_OUTRIGGERS_DEPLOYED(Vehicle vehicle) // 0x3A9128352EAC9E85
--[[
Checks if Chernobog's stabilizers are deployed or not.
These are the metal supports that allow it to fire.
This native only applies to the Chernobog.
--]]
function VEHICLE.GET_OUTRIGGERS_DEPLOYED(vehicle)
  return native.invoke(
    Type.Bool, 6377, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- Vector3 FIND_SPAWN_COORDINATES_FOR_HELI(Ped ped) // 0x8DC9675797123522
--[[
Native is significantly more complicated than simply generating a random vector & length.
The 'point' is either 400.0 or 250.0 units away from the Ped's current coordinates; and paths into functions like rage::grcViewport___IsSphereVisible
--]]
function VEHICLE.FIND_SPAWN_COORDINATES_FOR_HELI(ped)
  return native.invoke(
    Type.Vector3, 6378, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_DEPLOY_FOLDING_WINGS(Vehicle vehicle, BOOL deploy, BOOL p2) // 0xB251E0B33E58B424
--[[
Only used with the "akula" and "annihilator2" in the decompiled native scripts.
--]]
function VEHICLE.SET_DEPLOY_FOLDING_WINGS(vehicle, deploy, p2)
  native.invoke(
    Type.Void, 6379, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, deploy),
    arg(Type.Bool, p2)
  )
end

-- BOOL ARE_FOLDING_WINGS_DEPLOYED(Vehicle vehicle) // 0xAEF12960FA943792
--[[
Only used with the "akula" and "annihilator2" in the decompiled native scripts.
--]]
function VEHICLE.ARE_FOLDING_WINGS_DEPLOYED(vehicle)
  return native.invoke(
    Type.Bool, 6380, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void _SET_DEPLOY_MISSILE_BAYS(Vehicle vehicle, BOOL deploy) // 0x0C02468829E4AA65
function VEHICLE._SET_DEPLOY_MISSILE_BAYS(vehicle, deploy)
  native.invoke(
    Type.Void, 6381, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, deploy)
  )
end

-- BOOL _ARE_MISSILE_BAYS_DEPLOYED(Vehicle vehicle) // 0xEA4743874D515F13
function VEHICLE._ARE_MISSILE_BAYS_DEPLOYED(vehicle)
  return native.invoke(
    Type.Bool, 6382, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_DIP_STRAIGHT_DOWN_WHEN_CRASHING_PLANE(Vehicle vehicle, BOOL toggle) // 0xAA653AE61924B0A0
function VEHICLE.SET_DIP_STRAIGHT_DOWN_WHEN_CRASHING_PLANE(vehicle, toggle)
  native.invoke(
    Type.Void, 6383, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_TURRET_HIDDEN(Vehicle vehicle, int index, BOOL toggle) // 0xC60060EB0D8AC7B1
--[[
Toggles specific flag on turret
--]]
function VEHICLE.SET_TURRET_HIDDEN(vehicle, index, toggle)
  native.invoke(
    Type.Void, 6384, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, index),
    arg(Type.Bool, toggle)
  )
end

-- void SET_HOVER_MODE_WING_RATIO(Vehicle vehicle, float ratio) // 0x70A252F60A3E036B
function VEHICLE.SET_HOVER_MODE_WING_RATIO(vehicle, ratio)
  native.invoke(
    Type.Void, 6385, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, ratio)
  )
end

-- void SET_DISABLE_TURRET_MOVEMENT(Vehicle vehicle, int turretId) // 0xE615BB7A7752C76A
--[[
Disables turret movement when called in a loop. You can still fire and aim. You cannot shoot backwards though.
--]]
function VEHICLE.SET_DISABLE_TURRET_MOVEMENT(vehicle, turretId)
  native.invoke(
    Type.Void, 6386, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, turretId)
  )
end

-- void SET_FORCE_FIX_LINK_MATRICES(Vehicle vehicle) // 0x887FA38787DE8C72
function VEHICLE.SET_FORCE_FIX_LINK_MATRICES(vehicle)
  native.invoke(
    Type.Void, 6387, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_TRANSFORM_RATE_FOR_ANIMATION(Vehicle vehicle, float transformRate) // 0x498218259FB7C72D
--[[
Affects the playback speed of the submarine car conversion animations. Does not affect hardcoded animations such as the wheels being retracted.
--]]
function VEHICLE.SET_TRANSFORM_RATE_FOR_ANIMATION(vehicle, transformRate)
  native.invoke(
    Type.Void, 6388, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, transformRate)
  )
end

-- void SET_TRANSFORM_TO_SUBMARINE_USES_ALTERNATE_INPUT(Vehicle vehicle, BOOL toggle) // 0x41B9FB92EDED32A6
--[[
When set to true, the key to transform a car to submarine mode changes from raise/lower convertible roof (hold H by default) to special vehicle transform (press X by default.)
--]]
function VEHICLE.SET_TRANSFORM_TO_SUBMARINE_USES_ALTERNATE_INPUT(vehicle, toggle)
  native.invoke(
    Type.Void, 6389, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_COMBAT_MODE(BOOL toggle) // 0x36DE109527A2C0C4
--[[
Does nothing. It's a nullsub.
--]]
function VEHICLE.SET_VEHICLE_COMBAT_MODE(toggle)
  native.invoke(
    Type.Void, 6390, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_DETONATION_MODE(BOOL toggle) // 0x82E0AC411E41A5B4
--[[
Does nothing. It's a nullsub.
--]]
function VEHICLE.SET_VEHICLE_DETONATION_MODE(toggle)
  native.invoke(
    Type.Void, 6391, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_VEHICLE_SHUNT_ON_STICK(BOOL toggle) // 0x99A05839C46CE316
--[[
Does nothing. It's a nullsub.
--]]
function VEHICLE.SET_VEHICLE_SHUNT_ON_STICK(toggle)
  native.invoke(
    Type.Void, 6392, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL GET_IS_VEHICLE_SHUNTING(Vehicle vehicle) // 0xA2459F72C14E2E8D
function VEHICLE.GET_IS_VEHICLE_SHUNTING(vehicle)
  return native.invoke(
    Type.Bool, 6393, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL GET_HAS_VEHICLE_BEEN_HIT_BY_SHUNT(Vehicle vehicle) // 0xE8718FAF591FD224
function VEHICLE.GET_HAS_VEHICLE_BEEN_HIT_BY_SHUNT(vehicle)
  return native.invoke(
    Type.Bool, 6394, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- Vehicle GET_LAST_SHUNT_VEHICLE(Vehicle vehicle) // 0x04F2FA6E234162F7
--[[
Returns last vehicle that was rammed by the given vehicle using the shunt boost.
--]]
function VEHICLE.GET_LAST_SHUNT_VEHICLE(vehicle)
  return native.invoke(
    Type.Vehicle, 6395, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_DISABLE_VEHICLE_EXPLOSIONS_DAMAGE(BOOL toggle) // 0x143921E45EC44D62
function VEHICLE.SET_DISABLE_VEHICLE_EXPLOSIONS_DAMAGE(toggle)
  native.invoke(
    Type.Void, 6396, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_OVERRIDE_NITROUS_LEVEL(Vehicle vehicle, BOOL toggle, float level, float power, float rechargeTime, BOOL disableSound) // 0xC8E9B6B71B8E660D
function VEHICLE.SET_OVERRIDE_NITROUS_LEVEL(vehicle, toggle, level, power, rechargeTime, disableSound)
  native.invoke(
    Type.Void, 6397, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle),
    arg(Type.Float, level),
    arg(Type.Float, power),
    arg(Type.Float, rechargeTime),
    arg(Type.Bool, disableSound)
  )
end

-- void SET_NITROUS_IS_ACTIVE(Vehicle vehicle, BOOL enabled) // 0x465EEA70AF251045
function VEHICLE.SET_NITROUS_IS_ACTIVE(vehicle, enabled)
  native.invoke(
    Type.Void, 6398, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, enabled)
  )
end

-- void _SET_OVERRIDE_TRACTION_LOSS_MULTIPLIER(Vehicle vehicle, float modifier) // 0xAFD262ACCA64479A
function VEHICLE._SET_OVERRIDE_TRACTION_LOSS_MULTIPLIER(vehicle, modifier)
  native.invoke(
    Type.Void, 6399, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, modifier)
  )
end

-- void _SET_DRIFT_SLIP_ANGLE_LIMITS(Vehicle vehicle, float durationScalar, float amplitudeScalar, float slipAngleLimit) // 0xDAF4C98C18AC6F06
--[[
First two floats relate to rumble, the last is a threshold
--]]
function VEHICLE._SET_DRIFT_SLIP_ANGLE_LIMITS(vehicle, durationScalar, amplitudeScalar, slipAngleLimit)
  native.invoke(
    Type.Void, 6400, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Float, durationScalar),
    arg(Type.Float, amplitudeScalar),
    arg(Type.Float, slipAngleLimit)
  )
end

-- void _SET_MINIMUM_TIME_BETWEEN_GEAR_SHIFTS(Vehicle vehicle, int time) // 0x16CFBC5E7EB32861
function VEHICLE._SET_MINIMUM_TIME_BETWEEN_GEAR_SHIFTS(vehicle, time)
  native.invoke(
    Type.Void, 6401, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, time)
  )
end

-- void FULLY_CHARGE_NITROUS(Vehicle vehicle) // 0x1A2BCC8C636F9226
function VEHICLE.FULLY_CHARGE_NITROUS(vehicle)
  native.invoke(
    Type.Void, 6402, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- float _GET_REMAINING_NITROUS_DURATION(Vehicle vehicle) // 0xBEC4B8653462450E
function VEHICLE._GET_REMAINING_NITROUS_DURATION(vehicle)
  return native.invoke(
    Type.Float, 6403, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL IS_NITROUS_ACTIVE(Vehicle vehicle) // 0x491E822B2C464FE4
function VEHICLE.IS_NITROUS_ACTIVE(vehicle)
  return native.invoke(
    Type.Bool, 6404, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void CLEAR_NITROUS(Vehicle vehicle) // 0xC889AE921400E1ED
function VEHICLE.CLEAR_NITROUS(vehicle)
  native.invoke(
    Type.Void, 6405, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_INCREASE_WHEEL_CRUSH_DAMAGE(Vehicle vehicle, BOOL toggle) // 0x2970EAA18FD5E42F
function VEHICLE.SET_INCREASE_WHEEL_CRUSH_DAMAGE(vehicle, toggle)
  native.invoke(
    Type.Void, 6406, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_DISABLE_WEAPON_BLADE_FORCES(BOOL toggle) // 0x211E95CE9903940C
--[[
Sets some global vehicle related bool
--]]
function VEHICLE.SET_DISABLE_WEAPON_BLADE_FORCES(toggle)
  native.invoke(
    Type.Void, 6407, false,
    arg(Type.Bool, toggle)
  )
end

-- void SET_USE_DOUBLE_CLICK_FOR_CAR_JUMP(BOOL toggle) // 0x5BBCF35BF6E456F7
--[[
Changes the car jump control to require a double-tap to activate.
--]]
function VEHICLE.SET_USE_DOUBLE_CLICK_FOR_CAR_JUMP(toggle)
  native.invoke(
    Type.Void, 6408, false,
    arg(Type.Bool, toggle)
  )
end

-- BOOL GET_DOES_VEHICLE_HAVE_TOMBSTONE(Vehicle vehicle) // 0x71AFB258CCED3A27
--[[
Returns true only if the "tombstone" bone is attached to the vehicle, irrespective of "FLAG_HAS_TOMBSTONE" being present or not. Detaching the tombstone will return false.
--]]
function VEHICLE.GET_DOES_VEHICLE_HAVE_TOMBSTONE(vehicle)
  return native.invoke(
    Type.Bool, 6409, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void HIDE_TOMBSTONE(Vehicle vehicle, BOOL toggle) // 0xAE71FB656C600587
--[[
Disables detachable bumber from domnator4, dominator5, dominator6, see https://gfycat.com/SecondUnluckyGosling
--]]
function VEHICLE.HIDE_TOMBSTONE(vehicle, toggle)
  native.invoke(
    Type.Void, 6410, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void APPLY_EMP_EFFECT(Vehicle vehicle) // 0x249249D74F813EB2
function VEHICLE.APPLY_EMP_EFFECT(vehicle)
  native.invoke(
    Type.Void, 6411, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- BOOL GET_IS_VEHICLE_DISABLED_BY_EMP(Vehicle vehicle) // 0x0506ED94363AD905
--[[
Returns whether this vehicle is currently disabled by an EMP mine.
--]]
function VEHICLE.GET_IS_VEHICLE_DISABLED_BY_EMP(vehicle)
  return native.invoke(
    Type.Bool, 6412, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void SET_DISABLE_RETRACTING_WEAPON_BLADES(BOOL toggle) // 0x8F0D5BA1C2CC91D7
function VEHICLE.SET_DISABLE_RETRACTING_WEAPON_BLADES(toggle)
  native.invoke(
    Type.Void, 6413, false,
    arg(Type.Bool, toggle)
  )
end

-- float GET_TYRE_HEALTH(Vehicle vehicle, int wheelIndex) // 0x55EAB010FAEE9380
--[[
Usable wheels:
0: wheel_lf
1: wheel_rf
2: wheel_lm1
3: wheel_rm1
4: wheel_lr
5: wheel_rr
--]]
function VEHICLE.GET_TYRE_HEALTH(vehicle, wheelIndex)
  return native.invoke(
    Type.Float, 6414, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, wheelIndex)
  )
end

-- void SET_TYRE_HEALTH(Vehicle vehicle, int wheelIndex, float health) // 0x74C68EF97645E79D
--[[
SET_TYRE_WEAR_RATE must be active, otherwise values set to <1000.0f will default to 350.0f

Usable wheels:
0: wheel_lf
1: wheel_rf
2: wheel_lm1
3: wheel_rm1
4: wheel_lr
5: wheel_rr
--]]
function VEHICLE.SET_TYRE_HEALTH(vehicle, wheelIndex, health)
  native.invoke(
    Type.Void, 6415, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, wheelIndex),
    arg(Type.Float, health)
  )
end

-- float GET_TYRE_WEAR_RATE(Vehicle vehicle, int wheelIndex) // 0x6E387895952F4F71
--[[
Returns the multiplier value from SET_TYRE_WEAR_RATE

Usable wheels:
0: wheel_lf
1: wheel_rf
2: wheel_lm1
3: wheel_rm1
4: wheel_lr
5: wheel_rr
--]]
function VEHICLE.GET_TYRE_WEAR_RATE(vehicle, wheelIndex)
  return native.invoke(
    Type.Float, 6416, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, wheelIndex)
  )
end

-- void SET_TYRE_WEAR_RATE(Vehicle vehicle, int wheelIndex, float multiplier) // 0x01894E2EDE923CA2
--[[
Needs to be run for tire wear to work. Multiplier affects the downforce and how fast the tires will wear out, higher values essentially make the vehicle slower on straights and its tires will wear down quicker when cornering. Value must be >0f.
Default value in Rockstar's Open Wheel Race JSON's ("owrtws", "owrtwm", "owrtwh") is 1.0

Usable wheels:
0: wheel_lf
1: wheel_rf
2: wheel_lm1
3: wheel_rm1
4: wheel_lr
5: wheel_rr
--]]
function VEHICLE.SET_TYRE_WEAR_RATE(vehicle, wheelIndex, multiplier)
  native.invoke(
    Type.Void, 6417, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, wheelIndex),
    arg(Type.Float, multiplier)
  )
end

-- void SET_TYRE_WEAR_RATE_SCALE(Vehicle vehicle, int wheelIndex, float multiplier) // 0x392183BB9EA57697
--[[
Controls how fast the tires wear out.

Default values from Rockstar's Open Wheel Race JSON's:
"owrtss" (Soft): 2.2
"owrtsm" (Medium): 1.7
"owrtsh" (Hard): 1.2

Usable wheels:
0: wheel_lf
1: wheel_rf
2: wheel_lm1
3: wheel_rm1
4: wheel_lr
5: wheel_rr
--]]
function VEHICLE.SET_TYRE_WEAR_RATE_SCALE(vehicle, wheelIndex, multiplier)
  native.invoke(
    Type.Void, 6418, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, wheelIndex),
    arg(Type.Float, multiplier)
  )
end

-- void SET_TYRE_MAXIMUM_GRIP_DIFFERENCE_DUE_TO_WEAR_RATE(Vehicle vehicle, int wheelIndex, float multiplier) // 0xC970D0E0FC31D768
--[[
Controls how much traction the wheel loses.

Default values from Rockstar's Open Wheel Race JSON's:
"owrtds" (Soft): 0.05
"owrtdm" (Medium): 0.45
"owrtdh" (Hard): 0.8

Usable wheels:
0: wheel_lf
1: wheel_rf
2: wheel_lm1
3: wheel_rm1
4: wheel_lr
5: wheel_rr
--]]
function VEHICLE.SET_TYRE_MAXIMUM_GRIP_DIFFERENCE_DUE_TO_WEAR_RATE(vehicle, wheelIndex, multiplier)
  native.invoke(
    Type.Void, 6419, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, wheelIndex),
    arg(Type.Float, multiplier)
  )
end

-- void SET_AIRCRAFT_IGNORE_HIGHTMAP_OPTIMISATION(Vehicle vehicle, int p1) // 0xF8B49F5BA7F850E7
function VEHICLE.SET_AIRCRAFT_IGNORE_HIGHTMAP_OPTIMISATION(vehicle, p1)
  native.invoke(
    Type.Void, 6420, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, p1)
  )
end

-- void SET_REDUCED_SUSPENSION_FORCE(Vehicle vehicle, BOOL enable) // 0x3A375167F5782A65
--[[
Lowers the vehicle's stance. Only works for vehicles that have strAdvancedFlags 0x8000 and 0x4000000 set.
--]]
function VEHICLE.SET_REDUCED_SUSPENSION_FORCE(vehicle, enable)
  native.invoke(
    Type.Void, 6421, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, enable)
  )
end

-- void SET_DRIFT_TYRES(Vehicle vehicle, BOOL toggle) // 0x5AC79C98C5C17F05
function VEHICLE.SET_DRIFT_TYRES(vehicle, toggle)
  native.invoke(
    Type.Void, 6422, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- BOOL GET_DRIFT_TYRES_SET(Vehicle vehicle) // 0x2F5A72430E78C8D3
function VEHICLE.GET_DRIFT_TYRES_SET(vehicle)
  return native.invoke(
    Type.Bool, 6423, false,
    arg(Type.Vehicle, vehicle)
  )
end

-- void NETWORK_USE_HIGH_PRECISION_TRAIN_BLENDING(Vehicle vehicle, BOOL toggle) // 0xEC0C1D4922AF9754
--[[
Implemented only for trains.
--]]
function VEHICLE.NETWORK_USE_HIGH_PRECISION_TRAIN_BLENDING(vehicle, toggle)
  native.invoke(
    Type.Void, 6424, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- void SET_CHECK_FOR_ENOUGH_ROOM_FOR_PED(Vehicle vehicle, BOOL p1) // 0xEF9D388F8D377F44
--[[
Only used in R* Script fm_content_cargo
--]]
function VEHICLE.SET_CHECK_FOR_ENOUGH_ROOM_FOR_PED(vehicle, p1)
  native.invoke(
    Type.Void, 6425, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, p1)
  )
end

-- void _SET_ALLOW_COLLISION_WHEN_IN_VEHICLE(Vehicle vehicle, BOOL toggle) // 0x27D27223E8EF22ED
--[[
_SET_ALLOW_R* - _SET_ALLOW_V*
--]]
function VEHICLE._SET_ALLOW_COLLISION_WHEN_IN_VEHICLE(vehicle, toggle)
  native.invoke(
    Type.Void, 6426, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Bool, toggle)
  )
end

-- BOOL _IS_VEHICLE_GEN9_EXCLUSIVE_MODEL(Hash vehicleModel) // 0x6638C0F19DE692FE
function VEHICLE._IS_VEHICLE_GEN9_EXCLUSIVE_MODEL(vehicleModel)
  return native.invoke(
    Type.Bool, 6427, false,
    arg(Type.Hash, vehicleModel)
  )
end

-- int _GET_VEHICLE_MAX_EXHAUST_BONE_COUNT() // 0x3EE18B00CD86C54F
function VEHICLE._GET_VEHICLE_MAX_EXHAUST_BONE_COUNT()
  return native.invoke(
    Type.Int, 6428, false
  )
end

-- BOOL _GET_VEHICLE_EXHAUST_BONE(Vehicle vehicle, int index, int* boneIndex, BOOL* axisX) // 0xE728F090D538CB18
function VEHICLE._GET_VEHICLE_EXHAUST_BONE(vehicle, index, boneIndex, axisX)
  return native.invoke(
    Type.Bool, 6429, false,
    arg(Type.Vehicle, vehicle),
    arg(Type.Int, index),
    arg(Type.Int, boneIndex),
    arg(Type.Bool, axisX)
  )
end


WATER = {}

-- BOOL GET_WATER_HEIGHT(float x, float y, float z, float* height) // 0xF6829842C06AE524
--[[
This function set height to the value of z-axis of the water surface.

This function works with sea and lake. However it does not work with shallow rivers (e.g. raton canyon will return -100000.0f)

note: seems to return true when you are in water
--]]
function WATER.GET_WATER_HEIGHT(x, y, z, height)
  return native.invoke(
    Type.Bool, 6430, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, height)
  )
end

-- BOOL GET_WATER_HEIGHT_NO_WAVES(float x, float y, float z, float* height) // 0x8EE6B53CE13A9794
function WATER.GET_WATER_HEIGHT_NO_WAVES(x, y, z, height)
  return native.invoke(
    Type.Bool, 6431, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, height)
  )
end

-- BOOL TEST_PROBE_AGAINST_WATER(float x1, float y1, float z1, float x2, float y2, float z2, Vector3* result) // 0xFFA5D878809819DB
function WATER.TEST_PROBE_AGAINST_WATER(x1, y1, z1, x2, y2, z2, result)
  return native.invoke(
    Type.Bool, 6432, true,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Vector3, result)
  )
end

-- int TEST_PROBE_AGAINST_ALL_WATER(float x1, float y1, float z1, float x2, float y2, float z2, int flags, float* waterHeight) // 0x8974647ED222EA5F
--[[
enum eScriptWaterTestResult
{
	SCRIPT_WATER_TEST_RESULT_NONE,
	SCRIPT_WATER_TEST_RESULT_WATER,
	SCRIPT_WATER_TEST_RESULT_BLOCKED,
};
--]]
function WATER.TEST_PROBE_AGAINST_ALL_WATER(x1, y1, z1, x2, y2, z2, flags, waterHeight)
  return native.invoke(
    Type.Int, 6433, false,
    arg(Type.Float, x1),
    arg(Type.Float, y1),
    arg(Type.Float, z1),
    arg(Type.Float, x2),
    arg(Type.Float, y2),
    arg(Type.Float, z2),
    arg(Type.Int, flags),
    arg(Type.Float, waterHeight)
  )
end

-- int TEST_VERTICAL_PROBE_AGAINST_ALL_WATER(float x, float y, float z, int flags, float* waterHeight) // 0x2B3451FA1E3142E2
--[[
See TEST_PROBE_AGAINST_ALL_WATER.
--]]
function WATER.TEST_VERTICAL_PROBE_AGAINST_ALL_WATER(x, y, z, flags, waterHeight)
  return native.invoke(
    Type.Int, 6434, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Int, flags),
    arg(Type.Float, waterHeight)
  )
end

-- void MODIFY_WATER(float x, float y, float radius, float height) // 0xC443FD757C3BA637
--[[
Sets the water height for a given position and radius.

--]]
function WATER.MODIFY_WATER(x, y, radius, height)
  native.invoke(
    Type.Void, 6435, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, radius),
    arg(Type.Float, height)
  )
end

-- int ADD_EXTRA_CALMING_QUAD(float xLow, float yLow, float xHigh, float yHigh, float height) // 0xFDBF4CDBC07E1706
function WATER.ADD_EXTRA_CALMING_QUAD(xLow, yLow, xHigh, yHigh, height)
  return native.invoke(
    Type.Int, 6436, false,
    arg(Type.Float, xLow),
    arg(Type.Float, yLow),
    arg(Type.Float, xHigh),
    arg(Type.Float, yHigh),
    arg(Type.Float, height)
  )
end

-- void REMOVE_EXTRA_CALMING_QUAD(int calmingQuad) // 0xB1252E3E59A82AAF
--[[
p0 is the handle returned from ADD_EXTRA_CALMING_QUAD
--]]
function WATER.REMOVE_EXTRA_CALMING_QUAD(calmingQuad)
  native.invoke(
    Type.Void, 6437, false,
    arg(Type.Int, calmingQuad)
  )
end

-- void SET_DEEP_OCEAN_SCALER(float intensity) // 0xB96B00E976BE977F
--[[
Sets a value that determines how aggressive the ocean waves will be. Values of 2.0 or more make for very aggressive waves like you see during a thunderstorm.

Works only ~200 meters around the player.
--]]
function WATER.SET_DEEP_OCEAN_SCALER(intensity)
  native.invoke(
    Type.Void, 6438, false,
    arg(Type.Float, intensity)
  )
end

-- float GET_DEEP_OCEAN_SCALER() // 0x2B2A2CC86778B619
--[[
Gets the aggressiveness factor of the ocean waves.
--]]
function WATER.GET_DEEP_OCEAN_SCALER()
  return native.invoke(
    Type.Float, 6439, false
  )
end

-- void SET_CALMED_WAVE_HEIGHT_SCALER(float height) // 0x547237AA71AB44DE
function WATER.SET_CALMED_WAVE_HEIGHT_SCALER(height)
  native.invoke(
    Type.Void, 6440, false,
    arg(Type.Float, height)
  )
end

-- void RESET_DEEP_OCEAN_SCALER() // 0x5E5E99285AE812DB
--[[
Sets the waves intensity back to original (1.0 in most cases).
--]]
function WATER.RESET_DEEP_OCEAN_SCALER()
  native.invoke(
    Type.Void, 6441, false
  )
end


WEAPON = {}

-- void ENABLE_LASER_SIGHT_RENDERING(BOOL toggle) // 0xC8B46D7727D864AA
--[[
Enables laser sight on any weapon.

It doesn't work. Neither on tick nor OnKeyDown
--]]
function WEAPON.ENABLE_LASER_SIGHT_RENDERING(toggle)
  native.invoke(
    Type.Void, 6442, false,
    arg(Type.Bool, toggle)
  )
end

-- Hash GET_WEAPON_COMPONENT_TYPE_MODEL(Hash componentHash) // 0x0DB57B41EC1DB083
function WEAPON.GET_WEAPON_COMPONENT_TYPE_MODEL(componentHash)
  return native.invoke(
    Type.Hash, 6443, false,
    arg(Type.Hash, componentHash)
  )
end

-- Hash GET_WEAPONTYPE_MODEL(Hash weaponHash) // 0xF46CDC33180FDA94
--[[
Returns the model of any weapon.

Can also take an ammo hash?
sub_6663a(&l_115B, WEAPON::GET_WEAPONTYPE_MODEL(${ammo_rpg}));
--]]
function WEAPON.GET_WEAPONTYPE_MODEL(weaponHash)
  return native.invoke(
    Type.Hash, 6444, false,
    arg(Type.Hash, weaponHash)
  )
end

-- Hash GET_WEAPONTYPE_SLOT(Hash weaponHash) // 0x4215460B9B8B7FA0
function WEAPON.GET_WEAPONTYPE_SLOT(weaponHash)
  return native.invoke(
    Type.Hash, 6445, false,
    arg(Type.Hash, weaponHash)
  )
end

-- Hash GET_WEAPONTYPE_GROUP(Hash weaponHash) // 0xC3287EE3050FB74C
function WEAPON.GET_WEAPONTYPE_GROUP(weaponHash)
  return native.invoke(
    Type.Hash, 6446, false,
    arg(Type.Hash, weaponHash)
  )
end

-- int GET_WEAPON_COMPONENT_VARIANT_EXTRA_COUNT(Hash componentHash) // 0x6558AC7C17BFEF58
--[[
Returns the amount of extra components the specified component has.
Returns -1 if the component isn't of type CWeaponComponentVariantModel.
--]]
function WEAPON.GET_WEAPON_COMPONENT_VARIANT_EXTRA_COUNT(componentHash)
  return native.invoke(
    Type.Int, 6447, false,
    arg(Type.Hash, componentHash)
  )
end

-- Hash GET_WEAPON_COMPONENT_VARIANT_EXTRA_MODEL(Hash componentHash, int extraComponentIndex) // 0x4D1CB8DC40208A17
--[[
Returns the model hash of the extra component at specified index.
--]]
function WEAPON.GET_WEAPON_COMPONENT_VARIANT_EXTRA_MODEL(componentHash, extraComponentIndex)
  return native.invoke(
    Type.Hash, 6448, false,
    arg(Type.Hash, componentHash),
    arg(Type.Int, extraComponentIndex)
  )
end

-- void SET_CURRENT_PED_WEAPON(Ped ped, Hash weaponHash, BOOL bForceInHand) // 0xADF692B254977C0C
--[[
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.SET_CURRENT_PED_WEAPON(ped, weaponHash, bForceInHand)
  native.invoke(
    Type.Void, 6449, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash),
    arg(Type.Bool, bForceInHand)
  )
end

-- BOOL GET_CURRENT_PED_WEAPON(Ped ped, Hash* weaponHash, BOOL p2) // 0x3A87E44BB9A01D54
--[[
The return value seems to indicate returns true if the hash of the weapon object weapon equals the weapon hash.
p2 seems to be 1 most of the time.





p2 is not implemented

disassembly said that?

--]]
function WEAPON.GET_CURRENT_PED_WEAPON(ped, weaponHash, p2)
  return native.invoke(
    Type.Bool, 6450, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash),
    arg(Type.Bool, p2)
  )
end

-- Entity GET_CURRENT_PED_WEAPON_ENTITY_INDEX(Ped ped, Any p1) // 0x3B390A939AF0B5FC
function WEAPON.GET_CURRENT_PED_WEAPON_ENTITY_INDEX(ped, p1)
  return native.invoke(
    Type.Entity, 6451, false,
    arg(Type.Ped, ped),
    arg(Type.Any, p1)
  )
end

-- Hash GET_BEST_PED_WEAPON(Ped ped, BOOL p1) // 0x8483E98E8B888AE2
--[[
p1 is always 0 in the scripts.
--]]
function WEAPON.GET_BEST_PED_WEAPON(ped, p1)
  return native.invoke(
    Type.Hash, 6452, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1)
  )
end

-- BOOL SET_CURRENT_PED_VEHICLE_WEAPON(Ped ped, Hash weaponHash) // 0x75C55983C2C39DAA
--[[
Full list of weapons by DurtyFree (Search for VEHICLE_*): https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.SET_CURRENT_PED_VEHICLE_WEAPON(ped, weaponHash)
  return native.invoke(
    Type.Bool, 6453, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash)
  )
end

-- BOOL GET_CURRENT_PED_VEHICLE_WEAPON(Ped ped, Hash* weaponHash) // 0x1017582BCD3832DC
--[[
Example in VB

    Public Shared Function GetVehicleCurrentWeapon(Ped As Ped) As Integer
        Dim arg As New OutputArgument()
        Native.Function.Call(Hash.GET_CURRENT_PED_VEHICLE_WEAPON, Ped, arg)
        Return arg.GetResult(Of Integer)()
    End Function

Usage:
If GetVehicleCurrentWeapon(Game.Player.Character) = -821520672 Then ...Do something
Note: -821520672 = VEHICLE_WEAPON_PLANE_ROCKET
--]]
function WEAPON.GET_CURRENT_PED_VEHICLE_WEAPON(ped, weaponHash)
  return native.invoke(
    Type.Bool, 6454, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash)
  )
end

-- void SET_PED_CYCLE_VEHICLE_WEAPONS_ONLY(Ped ped) // 0x50276EF8172F5F12
function WEAPON.SET_PED_CYCLE_VEHICLE_WEAPONS_ONLY(ped)
  native.invoke(
    Type.Void, 6455, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_PED_ARMED(Ped ped, int typeFlags) // 0x475768A975D5AD17
--[[
Checks if the ped is currently equipped with a weapon matching a bit specified using a bitwise-or in typeFlags.

Type flag bit values:
1 = Melee weapons
2 = Explosive weapons
4 = Any other weapons

Not specifying any bit will lead to the native *always* returning 'false', and for example specifying '4 | 2' will check for any weapon except fists and melee weapons.
7 returns true if you are equipped with any weapon except your fists.
6 returns true if you are equipped with any weapon except melee weapons.
5 returns true if you are equipped with any weapon except the Explosives weapon group.
4 returns true if you are equipped with any weapon except Explosives weapon group AND melee weapons.
3 returns true if you are equipped with either Explosives or Melee weapons (the exact opposite of 4).
2 returns true only if you are equipped with any weapon from the Explosives weapon group.
1 returns true only if you are equipped with any Melee weapon.
0 never returns true.

Note: When I say "Explosives weapon group", it does not include the Jerry can and Fire Extinguisher.
--]]
function WEAPON.IS_PED_ARMED(ped, typeFlags)
  return native.invoke(
    Type.Bool, 6456, false,
    arg(Type.Ped, ped),
    arg(Type.Int, typeFlags)
  )
end

-- BOOL IS_WEAPON_VALID(Hash weaponHash) // 0x937C71165CF334B3
--[[
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.IS_WEAPON_VALID(weaponHash)
  return native.invoke(
    Type.Bool, 6457, false,
    arg(Type.Hash, weaponHash)
  )
end

-- BOOL HAS_PED_GOT_WEAPON(Ped ped, Hash weaponHash, BOOL p2) // 0x8DECB02F88F428BC
--[[
p2 should be FALSE, otherwise it seems to always return FALSE

Bool does not check if the weapon is current equipped, unfortunately.
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.HAS_PED_GOT_WEAPON(ped, weaponHash, p2)
  return native.invoke(
    Type.Bool, 6458, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash),
    arg(Type.Bool, p2)
  )
end

-- BOOL IS_PED_WEAPON_READY_TO_SHOOT(Ped ped) // 0xB80CA294F2F26749
function WEAPON.IS_PED_WEAPON_READY_TO_SHOOT(ped)
  return native.invoke(
    Type.Bool, 6459, false,
    arg(Type.Ped, ped)
  )
end

-- Hash GET_PED_WEAPONTYPE_IN_SLOT(Ped ped, Hash weaponSlot) // 0xEFFED78E9011134D
function WEAPON.GET_PED_WEAPONTYPE_IN_SLOT(ped, weaponSlot)
  return native.invoke(
    Type.Hash, 6460, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponSlot)
  )
end

-- int GET_AMMO_IN_PED_WEAPON(Ped ped, Hash weaponhash) // 0x015A522136D7F951
--[[
WEAPON::GET_AMMO_IN_PED_WEAPON(PLAYER::PLAYER_PED_ID(), a_0)

From decompiled scripts
Returns total ammo in weapon

GTALua Example :
natives.WEAPON.GET_AMMO_IN_PED_WEAPON(plyPed, WeaponHash)
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.GET_AMMO_IN_PED_WEAPON(ped, weaponhash)
  return native.invoke(
    Type.Int, 6461, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponhash)
  )
end

-- void ADD_AMMO_TO_PED(Ped ped, Hash weaponHash, int ammo) // 0x78F0424C34306220
--[[
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.ADD_AMMO_TO_PED(ped, weaponHash, ammo)
  native.invoke(
    Type.Void, 6462, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash),
    arg(Type.Int, ammo)
  )
end

-- void SET_PED_AMMO(Ped ped, Hash weaponHash, int ammo, BOOL p3) // 0x14E56BC5B5DB6A19
--[[
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.SET_PED_AMMO(ped, weaponHash, ammo, p3)
  native.invoke(
    Type.Void, 6463, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash),
    arg(Type.Int, ammo),
    arg(Type.Bool, p3)
  )
end

-- void SET_PED_INFINITE_AMMO(Ped ped, BOOL toggle, Hash weaponHash) // 0x3EDCB0505123623B
--[[
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.SET_PED_INFINITE_AMMO(ped, toggle, weaponHash)
  native.invoke(
    Type.Void, 6464, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle),
    arg(Type.Hash, weaponHash)
  )
end

-- void SET_PED_INFINITE_AMMO_CLIP(Ped ped, BOOL toggle) // 0x183DADC6AA953186
function WEAPON.SET_PED_INFINITE_AMMO_CLIP(ped, toggle)
  native.invoke(
    Type.Void, 6465, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_STUN_GUN_FINITE_AMMO(Any p0, Any p1) // 0x24C024BA8379A70A
function WEAPON.SET_PED_STUN_GUN_FINITE_AMMO(p0, p1)
  native.invoke(
    Type.Void, 6466, false,
    arg(Type.Any, p0),
    arg(Type.Any, p1)
  )
end

-- void GIVE_WEAPON_TO_PED(Ped ped, Hash weaponHash, int ammoCount, BOOL isHidden, BOOL bForceInHand) // 0xBF0FD6E56C964FCB
--[[
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.GIVE_WEAPON_TO_PED(ped, weaponHash, ammoCount, isHidden, bForceInHand)
  native.invoke(
    Type.Void, 6467, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash),
    arg(Type.Int, ammoCount),
    arg(Type.Bool, isHidden),
    arg(Type.Bool, bForceInHand)
  )
end

-- void GIVE_DELAYED_WEAPON_TO_PED(Ped ped, Hash weaponHash, int ammoCount, BOOL bForceInHand) // 0xB282DC6EBD803C75
--[[
Gives a weapon to PED with a delay, example:

WEAPON::GIVE_DELAYED_WEAPON_TO_PED(PED::PLAYER_PED_ID(), MISC::GET_HASH_KEY("WEAPON_PISTOL"), 1000, false)
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.GIVE_DELAYED_WEAPON_TO_PED(ped, weaponHash, ammoCount, bForceInHand)
  native.invoke(
    Type.Void, 6468, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash),
    arg(Type.Int, ammoCount),
    arg(Type.Bool, bForceInHand)
  )
end

-- void REMOVE_ALL_PED_WEAPONS(Ped ped, BOOL p1) // 0xF25DF915FA38C5F3
--[[
setting the last params to false it does that same so I would suggest its not a toggle
--]]
function WEAPON.REMOVE_ALL_PED_WEAPONS(ped, p1)
  native.invoke(
    Type.Void, 6469, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1)
  )
end

-- void REMOVE_WEAPON_FROM_PED(Ped ped, Hash weaponHash) // 0x4899CB088EDF59B8
--[[
This native removes a specified weapon from your selected ped.

Example:
C#:
Function.Call(Hash.REMOVE_WEAPON_FROM_PED, Game.Player.Character, 0x99B507EA);

C++:
WEAPON::REMOVE_WEAPON_FROM_PED(PLAYER::PLAYER_PED_ID(), 0x99B507EA);

The code above removes the knife from the player.
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.REMOVE_WEAPON_FROM_PED(ped, weaponHash)
  native.invoke(
    Type.Void, 6470, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash)
  )
end

-- void HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE(Ped ped, BOOL toggle) // 0x6F6981D2253C208F
--[[
Hides the players weapon during a cutscene.
--]]
function WEAPON.HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE(ped, toggle)
  native.invoke(
    Type.Void, 6471, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_PED_CURRENT_WEAPON_VISIBLE(Ped ped, BOOL visible, BOOL deselectWeapon, BOOL p3, BOOL p4) // 0x0725A4CCFDED9A70
--[[
Has 5 parameters since latest patches.
--]]
function WEAPON.SET_PED_CURRENT_WEAPON_VISIBLE(ped, visible, deselectWeapon, p3, p4)
  native.invoke(
    Type.Void, 6472, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, visible),
    arg(Type.Bool, deselectWeapon),
    arg(Type.Bool, p3),
    arg(Type.Bool, p4)
  )
end

-- void SET_PED_DROPS_WEAPONS_WHEN_DEAD(Ped ped, BOOL toggle) // 0x476AE72C1D19D1A8
function WEAPON.SET_PED_DROPS_WEAPONS_WHEN_DEAD(ped, toggle)
  native.invoke(
    Type.Void, 6473, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- BOOL HAS_PED_BEEN_DAMAGED_BY_WEAPON(Ped ped, Hash weaponHash, int weaponType) // 0x2D343D2219CD027A
--[[
It determines what weapons caused damage:

If you want to define only a specific weapon, second parameter=weapon hash code, third parameter=0
If you want to define any melee weapon, second parameter=0, third parameter=1.
If you want to identify any weapon (firearms, melee, rockets, etc.), second parameter=0, third parameter=2.
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.HAS_PED_BEEN_DAMAGED_BY_WEAPON(ped, weaponHash, weaponType)
  return native.invoke(
    Type.Bool, 6474, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash),
    arg(Type.Int, weaponType)
  )
end

-- void CLEAR_PED_LAST_WEAPON_DAMAGE(Ped ped) // 0x0E98F88A24C5F4B8
--[[
Does NOT seem to work with HAS_PED_BEEN_DAMAGED_BY_WEAPON. Use CLEAR_ENTITY_LAST_WEAPON_DAMAGE and HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON instead.
--]]
function WEAPON.CLEAR_PED_LAST_WEAPON_DAMAGE(ped)
  native.invoke(
    Type.Void, 6475, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON(Entity entity, Hash weaponHash, int weaponType) // 0x131D401334815E94
--[[
It determines what weapons caused damage:

If you want to define only a specific weapon, second parameter=weapon hash code, third parameter=0
If you want to define any melee weapon, second parameter=0, third parameter=1.
If you want to identify any weapon (firearms, melee, rockets, etc.), second parameter=0, third parameter=2.
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON(entity, weaponHash, weaponType)
  return native.invoke(
    Type.Bool, 6476, false,
    arg(Type.Entity, entity),
    arg(Type.Hash, weaponHash),
    arg(Type.Int, weaponType)
  )
end

-- void CLEAR_ENTITY_LAST_WEAPON_DAMAGE(Entity entity) // 0xAC678E40BE7C74D2
function WEAPON.CLEAR_ENTITY_LAST_WEAPON_DAMAGE(entity)
  native.invoke(
    Type.Void, 6477, false,
    arg(Type.Entity, entity)
  )
end

-- void SET_PED_DROPS_WEAPON(Ped ped) // 0x6B7513D9966FBEC0
function WEAPON.SET_PED_DROPS_WEAPON(ped)
  native.invoke(
    Type.Void, 6478, false,
    arg(Type.Ped, ped)
  )
end

-- void SET_PED_DROPS_INVENTORY_WEAPON(Ped ped, Hash weaponHash, float xOffset, float yOffset, float zOffset, int ammoCount) // 0x208A1888007FC0E6
--[[
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.SET_PED_DROPS_INVENTORY_WEAPON(ped, weaponHash, xOffset, yOffset, zOffset, ammoCount)
  native.invoke(
    Type.Void, 6479, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash),
    arg(Type.Float, xOffset),
    arg(Type.Float, yOffset),
    arg(Type.Float, zOffset),
    arg(Type.Int, ammoCount)
  )
end

-- int GET_MAX_AMMO_IN_CLIP(Ped ped, Hash weaponHash, BOOL p2) // 0xA38DCFFCEA8962FA
--[[
p2 is mostly 1 in the scripts.
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.GET_MAX_AMMO_IN_CLIP(ped, weaponHash, p2)
  return native.invoke(
    Type.Int, 6480, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash),
    arg(Type.Bool, p2)
  )
end

-- BOOL GET_AMMO_IN_CLIP(Ped ped, Hash weaponHash, int* ammo) // 0x2E1202248937775C
--[[
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.GET_AMMO_IN_CLIP(ped, weaponHash, ammo)
  return native.invoke(
    Type.Bool, 6481, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash),
    arg(Type.Int, ammo)
  )
end

-- BOOL SET_AMMO_IN_CLIP(Ped ped, Hash weaponHash, int ammo) // 0xDCD2A934D65CB497
--[[
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.SET_AMMO_IN_CLIP(ped, weaponHash, ammo)
  return native.invoke(
    Type.Bool, 6482, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash),
    arg(Type.Int, ammo)
  )
end

-- BOOL GET_MAX_AMMO(Ped ped, Hash weaponHash, int* ammo) // 0xDC16122C7A20C933
--[[
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.GET_MAX_AMMO(ped, weaponHash, ammo)
  return native.invoke(
    Type.Bool, 6483, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash),
    arg(Type.Int, ammo)
  )
end

-- BOOL GET_MAX_AMMO_BY_TYPE(Ped ped, Hash ammoTypeHash, int* ammo) // 0x585847C5E4E11709
--[[
Returns the max ammo for an ammo type. Ammo types: https://gist.github.com/root-cause/faf41f59f7a6d818b7db0b839bd147c1
--]]
function WEAPON.GET_MAX_AMMO_BY_TYPE(ped, ammoTypeHash, ammo)
  return native.invoke(
    Type.Bool, 6484, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, ammoTypeHash),
    arg(Type.Int, ammo)
  )
end

-- void ADD_PED_AMMO_BY_TYPE(Ped ped, Hash ammoTypeHash, int ammo) // 0x2472622CE1F2D45F
--[[
Ammo types: https://gist.github.com/root-cause/faf41f59f7a6d818b7db0b839bd147c1
--]]
function WEAPON.ADD_PED_AMMO_BY_TYPE(ped, ammoTypeHash, ammo)
  native.invoke(
    Type.Void, 6485, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, ammoTypeHash),
    arg(Type.Int, ammo)
  )
end

-- void SET_PED_AMMO_BY_TYPE(Ped ped, Hash ammoTypeHash, int ammo) // 0x5FD1E1F011E76D7E
--[[
Ammo types: https://gist.github.com/root-cause/faf41f59f7a6d818b7db0b839bd147c1
--]]
function WEAPON.SET_PED_AMMO_BY_TYPE(ped, ammoTypeHash, ammo)
  native.invoke(
    Type.Void, 6486, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, ammoTypeHash),
    arg(Type.Int, ammo)
  )
end

-- int GET_PED_AMMO_BY_TYPE(Ped ped, Hash ammoTypeHash) // 0x39D22031557946C1
function WEAPON.GET_PED_AMMO_BY_TYPE(ped, ammoTypeHash)
  return native.invoke(
    Type.Int, 6487, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, ammoTypeHash)
  )
end

-- void SET_PED_AMMO_TO_DROP(Ped ped, int p1) // 0xA4EFEF9440A5B0EF
function WEAPON.SET_PED_AMMO_TO_DROP(ped, p1)
  native.invoke(
    Type.Void, 6488, false,
    arg(Type.Ped, ped),
    arg(Type.Int, p1)
  )
end

-- void SET_PICKUP_AMMO_AMOUNT_SCALER(float p0) // 0xE620FD3512A04F18
function WEAPON.SET_PICKUP_AMMO_AMOUNT_SCALER(p0)
  native.invoke(
    Type.Void, 6489, false,
    arg(Type.Float, p0)
  )
end

-- Hash GET_PED_AMMO_TYPE_FROM_WEAPON(Ped ped, Hash weaponHash) // 0x7FEAD38B326B9F74
--[[
Returns the current ammo type of the specified ped's specified weapon.
MkII magazines will change the return value, like Pistol MkII returning AMMO_PISTOL without any components and returning AMMO_PISTOL_TRACER after Tracer Rounds component is attached.
Use 0xF489B44DD5AF4BD9 if you always want AMMO_PISTOL.
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.GET_PED_AMMO_TYPE_FROM_WEAPON(ped, weaponHash)
  return native.invoke(
    Type.Hash, 6490, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash)
  )
end

-- Hash GET_PED_ORIGINAL_AMMO_TYPE_FROM_WEAPON(Ped ped, Hash weaponHash) // 0xF489B44DD5AF4BD9
--[[
Returns the base/default ammo type of the specified ped's specified weapon.
Use GET_PED_AMMO_TYPE_FROM_WEAPON if you want current ammo type (like AMMO_MG_INCENDIARY/AMMO_MG_TRACER while using MkII magazines) and use this if you want base ammo type. (AMMO_MG)
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.GET_PED_ORIGINAL_AMMO_TYPE_FROM_WEAPON(ped, weaponHash)
  return native.invoke(
    Type.Hash, 6491, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash)
  )
end

-- BOOL GET_PED_LAST_WEAPON_IMPACT_COORD(Ped ped, Vector3* coords) // 0x6C4D0409BA1A2BC2
--[[
Pass ped. Pass address of Vector3.
The coord will be put into the Vector3.
The return will determine whether there was a coord found or not.
--]]
function WEAPON.GET_PED_LAST_WEAPON_IMPACT_COORD(ped, coords)
  return native.invoke(
    Type.Bool, 6492, true,
    arg(Type.Ped, ped),
    arg(Type.Vector3, coords)
  )
end

-- void SET_PED_GADGET(Ped ped, Hash gadgetHash, BOOL p2) // 0xD0D7B1E680ED4A1A
--[[
p1/gadgetHash was always 0xFBAB5776 ("GADGET_PARACHUTE").
p2 is always true.
--]]
function WEAPON.SET_PED_GADGET(ped, gadgetHash, p2)
  native.invoke(
    Type.Void, 6493, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, gadgetHash),
    arg(Type.Bool, p2)
  )
end

-- BOOL GET_IS_PED_GADGET_EQUIPPED(Ped ped, Hash gadgetHash) // 0xF731332072F5156C
--[[
gadgetHash - was always 0xFBAB5776 ("GADGET_PARACHUTE").
--]]
function WEAPON.GET_IS_PED_GADGET_EQUIPPED(ped, gadgetHash)
  return native.invoke(
    Type.Bool, 6494, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, gadgetHash)
  )
end

-- Hash GET_SELECTED_PED_WEAPON(Ped ped) // 0x0A6DB4965674D243
--[[
Returns the hash of the weapon. 

            var num7 = WEAPON::GET_SELECTED_PED_WEAPON(num4);
            sub_27D3(num7);
            switch (num7)
            {
                case 0x24B17070:

Also see WEAPON::GET_CURRENT_PED_WEAPON. Difference?

-------------------------------------------------------------------------

The difference is that GET_SELECTED_PED_WEAPON simply returns the ped's current weapon hash but GET_CURRENT_PED_WEAPON also checks the weapon object and returns true if the hash of the weapon object equals the weapon hash
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.GET_SELECTED_PED_WEAPON(ped)
  return native.invoke(
    Type.Hash, 6495, false,
    arg(Type.Ped, ped)
  )
end

-- void EXPLODE_PROJECTILES(Ped ped, Hash weaponHash, BOOL p2) // 0xFC4BD125DE7611E4
--[[
             WEAPON::EXPLODE_PROJECTILES(PLAYER::PLAYER_PED_ID(), func_221(0x00000003), 0x00000001);
--]]
function WEAPON.EXPLODE_PROJECTILES(ped, weaponHash, p2)
  native.invoke(
    Type.Void, 6496, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash),
    arg(Type.Bool, p2)
  )
end

-- void REMOVE_ALL_PROJECTILES_OF_TYPE(Hash weaponHash, BOOL explode) // 0xFC52E0F37E446528
--[[
If `explode` true, then removal is done through exploding the projectile. Basically the same as EXPLODE_PROJECTILES but without defining the owner ped.
--]]
function WEAPON.REMOVE_ALL_PROJECTILES_OF_TYPE(weaponHash, explode)
  native.invoke(
    Type.Void, 6497, false,
    arg(Type.Hash, weaponHash),
    arg(Type.Bool, explode)
  )
end

-- float GET_LOCKON_DISTANCE_OF_CURRENT_PED_WEAPON(Ped ped) // 0x840F03E9041E2C9C
function WEAPON.GET_LOCKON_DISTANCE_OF_CURRENT_PED_WEAPON(ped)
  return native.invoke(
    Type.Float, 6498, false,
    arg(Type.Ped, ped)
  )
end

-- float GET_MAX_RANGE_OF_CURRENT_PED_WEAPON(Ped ped) // 0x814C9D19DFD69679
function WEAPON.GET_MAX_RANGE_OF_CURRENT_PED_WEAPON(ped)
  return native.invoke(
    Type.Float, 6499, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL HAS_VEHICLE_GOT_PROJECTILE_ATTACHED(Ped driver, Vehicle vehicle, Hash weaponHash, Any p3) // 0x717C8481234E3B88
--[[
Fourth Parameter = unsure, almost always -1
--]]
function WEAPON.HAS_VEHICLE_GOT_PROJECTILE_ATTACHED(driver, vehicle, weaponHash, p3)
  return native.invoke(
    Type.Bool, 6500, false,
    arg(Type.Ped, driver),
    arg(Type.Vehicle, vehicle),
    arg(Type.Hash, weaponHash),
    arg(Type.Any, p3)
  )
end

-- void GIVE_WEAPON_COMPONENT_TO_PED(Ped ped, Hash weaponHash, Hash componentHash) // 0xD966D51AA5B28BB9
--[[
Full list of weapons & components by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.GIVE_WEAPON_COMPONENT_TO_PED(ped, weaponHash, componentHash)
  native.invoke(
    Type.Void, 6501, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash),
    arg(Type.Hash, componentHash)
  )
end

-- void REMOVE_WEAPON_COMPONENT_FROM_PED(Ped ped, Hash weaponHash, Hash componentHash) // 0x1E8BE90C74FB4C09
--[[
Full list of weapons & components by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.REMOVE_WEAPON_COMPONENT_FROM_PED(ped, weaponHash, componentHash)
  native.invoke(
    Type.Void, 6502, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash),
    arg(Type.Hash, componentHash)
  )
end

-- BOOL HAS_PED_GOT_WEAPON_COMPONENT(Ped ped, Hash weaponHash, Hash componentHash) // 0xC593212475FAE340
--[[
Full list of weapons & components by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.HAS_PED_GOT_WEAPON_COMPONENT(ped, weaponHash, componentHash)
  return native.invoke(
    Type.Bool, 6503, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash),
    arg(Type.Hash, componentHash)
  )
end

-- BOOL IS_PED_WEAPON_COMPONENT_ACTIVE(Ped ped, Hash weaponHash, Hash componentHash) // 0x0D78DE0572D3969E
--[[
Full list of weapons & components by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.IS_PED_WEAPON_COMPONENT_ACTIVE(ped, weaponHash, componentHash)
  return native.invoke(
    Type.Bool, 6504, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash),
    arg(Type.Hash, componentHash)
  )
end

-- BOOL REFILL_AMMO_INSTANTLY(Ped ped) // 0x8C0D57EA686FAD87
function WEAPON.REFILL_AMMO_INSTANTLY(ped)
  return native.invoke(
    Type.Bool, 6505, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL MAKE_PED_RELOAD(Ped ped) // 0x20AE33F3AC9C0033
--[[
Forces a ped to reload only if they are able to; if they have a full magazine, they will not reload.
--]]
function WEAPON.MAKE_PED_RELOAD(ped)
  return native.invoke(
    Type.Bool, 6506, false,
    arg(Type.Ped, ped)
  )
end

-- void REQUEST_WEAPON_ASSET(Hash weaponHash, int p1, int p2) // 0x5443438F033E29C3
--[[
Nearly every instance of p1 I found was 31. Nearly every instance of p2 I found was 0.

REQUEST_WEAPON_ASSET(iLocal_1888, 31, 26);
--]]
function WEAPON.REQUEST_WEAPON_ASSET(weaponHash, p1, p2)
  native.invoke(
    Type.Void, 6507, false,
    arg(Type.Hash, weaponHash),
    arg(Type.Int, p1),
    arg(Type.Int, p2)
  )
end

-- BOOL HAS_WEAPON_ASSET_LOADED(Hash weaponHash) // 0x36E353271F0E90EE
function WEAPON.HAS_WEAPON_ASSET_LOADED(weaponHash)
  return native.invoke(
    Type.Bool, 6508, false,
    arg(Type.Hash, weaponHash)
  )
end

-- void REMOVE_WEAPON_ASSET(Hash weaponHash) // 0xAA08EF13F341C8FC
function WEAPON.REMOVE_WEAPON_ASSET(weaponHash)
  native.invoke(
    Type.Void, 6509, false,
    arg(Type.Hash, weaponHash)
  )
end

-- Object CREATE_WEAPON_OBJECT(Hash weaponHash, int ammoCount, float x, float y, float z, BOOL showWorldModel, float scale, Any p7, Any p8, Any p9) // 0x9541D3CF0D398F36
--[[
Now has 8 params.
--]]
function WEAPON.CREATE_WEAPON_OBJECT(weaponHash, ammoCount, x, y, z, showWorldModel, scale, p7, p8, p9)
  return native.invoke(
    Type.Object, 6510, false,
    arg(Type.Hash, weaponHash),
    arg(Type.Int, ammoCount),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Bool, showWorldModel),
    arg(Type.Float, scale),
    arg(Type.Any, p7),
    arg(Type.Any, p8),
    arg(Type.Any, p9)
  )
end

-- void GIVE_WEAPON_COMPONENT_TO_WEAPON_OBJECT(Object weaponObject, Hash componentHash) // 0x33E179436C0B31DB
--[[
componentHash:
(use WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL() to get hash value)
${component_at_ar_flsh}, ${component_at_ar_supp}, ${component_at_pi_flsh}, ${component_at_scope_large}, ${component_at_ar_supp_02}
--]]
function WEAPON.GIVE_WEAPON_COMPONENT_TO_WEAPON_OBJECT(weaponObject, componentHash)
  native.invoke(
    Type.Void, 6511, false,
    arg(Type.Object, weaponObject),
    arg(Type.Hash, componentHash)
  )
end

-- void REMOVE_WEAPON_COMPONENT_FROM_WEAPON_OBJECT(Object object, Hash componentHash) // 0xF7D82B0D66777611
--[[
see DOES_WEAPON_TAKE_WEAPON_COMPONENT for full list of weapons & components
--]]
function WEAPON.REMOVE_WEAPON_COMPONENT_FROM_WEAPON_OBJECT(object, componentHash)
  native.invoke(
    Type.Void, 6512, false,
    arg(Type.Object, object),
    arg(Type.Hash, componentHash)
  )
end

-- BOOL HAS_WEAPON_GOT_WEAPON_COMPONENT(Object weapon, Hash componentHash) // 0x76A18844E743BF91
--[[
see DOES_WEAPON_TAKE_WEAPON_COMPONENT for full list of weapons & components
--]]
function WEAPON.HAS_WEAPON_GOT_WEAPON_COMPONENT(weapon, componentHash)
  return native.invoke(
    Type.Bool, 6513, false,
    arg(Type.Object, weapon),
    arg(Type.Hash, componentHash)
  )
end

-- void GIVE_WEAPON_OBJECT_TO_PED(Object weaponObject, Ped ped) // 0xB1FA61371AF7C4B7
function WEAPON.GIVE_WEAPON_OBJECT_TO_PED(weaponObject, ped)
  native.invoke(
    Type.Void, 6514, false,
    arg(Type.Object, weaponObject),
    arg(Type.Ped, ped)
  )
end

-- BOOL DOES_WEAPON_TAKE_WEAPON_COMPONENT(Hash weaponHash, Hash componentHash) // 0x5CEE3DF569CECAB0
--[[
Full list of weapons & components by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.DOES_WEAPON_TAKE_WEAPON_COMPONENT(weaponHash, componentHash)
  return native.invoke(
    Type.Bool, 6515, false,
    arg(Type.Hash, weaponHash),
    arg(Type.Hash, componentHash)
  )
end

-- Object GET_WEAPON_OBJECT_FROM_PED(Ped ped, BOOL p1) // 0xCAE1DC9A0E22A16D
--[[
Drops the current weapon and returns the object

Unknown behavior when unarmed.
--]]
function WEAPON.GET_WEAPON_OBJECT_FROM_PED(ped, p1)
  return native.invoke(
    Type.Object, 6516, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, p1)
  )
end

-- void GIVE_LOADOUT_TO_PED(Ped ped, Hash loadoutHash) // 0x68F8BE6AF5CDF8A6
--[[
Gives the specified loadout to the specified ped. 
Loadouts are defined in common.rpf\data\ai\loadouts.meta
--]]
function WEAPON.GIVE_LOADOUT_TO_PED(ped, loadoutHash)
  native.invoke(
    Type.Void, 6517, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, loadoutHash)
  )
end

-- void SET_PED_WEAPON_TINT_INDEX(Ped ped, Hash weaponHash, int tintIndex) // 0x50969B9B89ED5738
--[[
tintIndex can be the following:

0 - Normal
1 - Green
2 - Gold
3 - Pink
4 - Army
5 - LSPD
6 - Orange
7 - Platinum
Full list of weapons, components & tint indexes by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.SET_PED_WEAPON_TINT_INDEX(ped, weaponHash, tintIndex)
  native.invoke(
    Type.Void, 6518, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash),
    arg(Type.Int, tintIndex)
  )
end

-- int GET_PED_WEAPON_TINT_INDEX(Ped ped, Hash weaponHash) // 0x2B9EEDC07BD06B9F
--[[
Full list of weapons, components & tint indexes by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.GET_PED_WEAPON_TINT_INDEX(ped, weaponHash)
  return native.invoke(
    Type.Int, 6519, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash)
  )
end

-- void SET_WEAPON_OBJECT_TINT_INDEX(Object weapon, int tintIndex) // 0xF827589017D4E4A9
--[[
Full list of weapons, components & tint indexes by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.SET_WEAPON_OBJECT_TINT_INDEX(weapon, tintIndex)
  native.invoke(
    Type.Void, 6520, false,
    arg(Type.Object, weapon),
    arg(Type.Int, tintIndex)
  )
end

-- int GET_WEAPON_OBJECT_TINT_INDEX(Object weapon) // 0xCD183314F7CD2E57
function WEAPON.GET_WEAPON_OBJECT_TINT_INDEX(weapon)
  return native.invoke(
    Type.Int, 6521, false,
    arg(Type.Object, weapon)
  )
end

-- int GET_WEAPON_TINT_COUNT(Hash weaponHash) // 0x5DCF6C5CAB2E9BF7
--[[
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.GET_WEAPON_TINT_COUNT(weaponHash)
  return native.invoke(
    Type.Int, 6522, false,
    arg(Type.Hash, weaponHash)
  )
end

-- void SET_PED_WEAPON_COMPONENT_TINT_INDEX(Ped ped, Hash weaponHash, Hash camoComponentHash, int colorIndex) // 0x9FE5633880ECD8ED
--[[
Colors:
0 = Gray
1 = Dark Gray
2 = Black
3 = White
4 = Blue
5 = Cyan
6 = Aqua
7 = Cool Blue
8 = Dark Blue
9 = Royal Blue
10 = Plum
11 = Dark Purple
12 = Purple
13 = Red
14 = Wine Red
15 = Magenta
16 = Pink
17 = Salmon
18 = Hot Pink
19 = Rust Orange
20 = Brown
21 = Earth
22 = Orange
23 = Light Orange
24 = Dark Yellow
25 = Yellow
26 = Light Brown
27 = Lime Green
28 = Olive
29 = Moss
30 = Turquoise
31 = Dark Green
Full list of weapons, components, tint indexes & weapon liveries by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.SET_PED_WEAPON_COMPONENT_TINT_INDEX(ped, weaponHash, camoComponentHash, colorIndex)
  native.invoke(
    Type.Void, 6523, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash),
    arg(Type.Hash, camoComponentHash),
    arg(Type.Int, colorIndex)
  )
end

-- int GET_PED_WEAPON_COMPONENT_TINT_INDEX(Ped ped, Hash weaponHash, Hash camoComponentHash) // 0xF0A60040BE558F2D
--[[
Returns -1 if camoComponentHash is invalid/not attached to the weapon.
Full list of weapons, components, tint indexes & weapon liveries by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.GET_PED_WEAPON_COMPONENT_TINT_INDEX(ped, weaponHash, camoComponentHash)
  return native.invoke(
    Type.Int, 6524, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash),
    arg(Type.Hash, camoComponentHash)
  )
end

-- void SET_WEAPON_OBJECT_COMPONENT_TINT_INDEX(Object weaponObject, Hash camoComponentHash, int colorIndex) // 0x5DA825A85D0EA6E6
--[[
Colors:
0 = Gray
1 = Dark Gray
2 = Black
3 = White
4 = Blue
5 = Cyan
6 = Aqua
7 = Cool Blue
8 = Dark Blue
9 = Royal Blue
10 = Plum
11 = Dark Purple
12 = Purple
13 = Red
14 = Wine Red
15 = Magenta
16 = Pink
17 = Salmon
18 = Hot Pink
19 = Rust Orange
20 = Brown
21 = Earth
22 = Orange
23 = Light Orange
24 = Dark Yellow
25 = Yellow
26 = Light Brown
27 = Lime Green
28 = Olive
29 = Moss
30 = Turquoise
31 = Dark Green
Full list of weapons, components, tint indexes & weapon liveries by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.SET_WEAPON_OBJECT_COMPONENT_TINT_INDEX(weaponObject, camoComponentHash, colorIndex)
  native.invoke(
    Type.Void, 6525, false,
    arg(Type.Object, weaponObject),
    arg(Type.Hash, camoComponentHash),
    arg(Type.Int, colorIndex)
  )
end

-- int GET_WEAPON_OBJECT_COMPONENT_TINT_INDEX(Object weaponObject, Hash camoComponentHash) // 0xB3EA4FEABF41464B
--[[
Returns -1 if camoComponentHash is invalid/not attached to the weapon object.
Full list of weapons, components, tint indexes & weapon liveries by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.GET_WEAPON_OBJECT_COMPONENT_TINT_INDEX(weaponObject, camoComponentHash)
  return native.invoke(
    Type.Int, 6526, false,
    arg(Type.Object, weaponObject),
    arg(Type.Hash, camoComponentHash)
  )
end

-- int GET_PED_WEAPON_CAMO_INDEX(Ped ped, Hash weaponHash) // 0xA2C9AC24B4061285
function WEAPON.GET_PED_WEAPON_CAMO_INDEX(ped, weaponHash)
  return native.invoke(
    Type.Int, 6527, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash)
  )
end

-- void SET_WEAPON_OBJECT_CAMO_INDEX(Object weaponObject, int p1) // 0x977CA98939E82E4B
function WEAPON.SET_WEAPON_OBJECT_CAMO_INDEX(weaponObject, p1)
  native.invoke(
    Type.Void, 6528, false,
    arg(Type.Object, weaponObject),
    arg(Type.Int, p1)
  )
end

-- BOOL GET_WEAPON_HUD_STATS(Hash weaponHash, Any* outData) // 0xD92C739EE34C9EBA
--[[
struct WeaponHudStatsData
{
    BYTE hudDamage; // 0x0000
    char _0x0001[0x7]; // 0x0001
    BYTE hudSpeed; // 0x0008
    char _0x0009[0x7]; // 0x0009
    BYTE hudCapacity; // 0x0010
    char _0x0011[0x7]; // 0x0011
    BYTE hudAccuracy; // 0x0018
    char _0x0019[0x7]; // 0x0019
    BYTE hudRange; // 0x0020
};

Usage:

WeaponHudStatsData data;
if (GET_WEAPON_HUD_STATS(weaponHash, (int *)&data))
{
    // BYTE damagePercentage = data.hudDamage and so on
}
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.GET_WEAPON_HUD_STATS(weaponHash, outData)
  return native.invoke(
    Type.Bool, 6529, false,
    arg(Type.Hash, weaponHash),
    arg(Type.Any, outData)
  )
end

-- BOOL GET_WEAPON_COMPONENT_HUD_STATS(Hash componentHash, Any* outData) // 0xB3CAF387AE12E9F8
function WEAPON.GET_WEAPON_COMPONENT_HUD_STATS(componentHash, outData)
  return native.invoke(
    Type.Bool, 6530, false,
    arg(Type.Hash, componentHash),
    arg(Type.Any, outData)
  )
end

-- float GET_WEAPON_DAMAGE(Hash weaponHash, Hash componentHash) // 0x3133B907D8B32053
--[[
This native does not return damages of weapons from the melee and explosive group.
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.GET_WEAPON_DAMAGE(weaponHash, componentHash)
  return native.invoke(
    Type.Float, 6531, false,
    arg(Type.Hash, weaponHash),
    arg(Type.Hash, componentHash)
  )
end

-- int GET_WEAPON_CLIP_SIZE(Hash weaponHash) // 0x583BE370B1EC6EB4
--[[
// Returns the size of the default weapon component clip.

Use it like this:

char cClipSize[32];
Hash cur;
if (WEAPON::GET_CURRENT_PED_WEAPON(playerPed, &cur, 1))
{
    if (WEAPON::IS_WEAPON_VALID(cur))
    {
        int iClipSize = WEAPON::GET_WEAPON_CLIP_SIZE(cur);
        sprintf_s(cClipSize, "ClipSize: %.d", iClipSize);
        vDrawString(cClipSize, 0.5f, 0.5f);
    }
}
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.GET_WEAPON_CLIP_SIZE(weaponHash)
  return native.invoke(
    Type.Int, 6532, false,
    arg(Type.Hash, weaponHash)
  )
end

-- float GET_WEAPON_TIME_BETWEEN_SHOTS(Hash weaponHash) // 0x065D2AACAD8CF7A4
--[[
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.GET_WEAPON_TIME_BETWEEN_SHOTS(weaponHash)
  return native.invoke(
    Type.Float, 6533, false,
    arg(Type.Hash, weaponHash)
  )
end

-- void SET_PED_CHANCE_OF_FIRING_BLANKS(Ped ped, float xBias, float yBias) // 0x8378627201D5497D
function WEAPON.SET_PED_CHANCE_OF_FIRING_BLANKS(ped, xBias, yBias)
  native.invoke(
    Type.Void, 6534, false,
    arg(Type.Ped, ped),
    arg(Type.Float, xBias),
    arg(Type.Float, yBias)
  )
end

-- Object SET_PED_SHOOT_ORDNANCE_WEAPON(Ped ped, float p1) // 0xB4C8D77C80C0421E
--[[
Returns handle of the projectile.
--]]
function WEAPON.SET_PED_SHOOT_ORDNANCE_WEAPON(ped, p1)
  return native.invoke(
    Type.Object, 6535, false,
    arg(Type.Ped, ped),
    arg(Type.Float, p1)
  )
end

-- void REQUEST_WEAPON_HIGH_DETAIL_MODEL(Entity weaponObject) // 0x48164DBB970AC3F0
function WEAPON.REQUEST_WEAPON_HIGH_DETAIL_MODEL(weaponObject)
  native.invoke(
    Type.Void, 6536, false,
    arg(Type.Entity, weaponObject)
  )
end

-- void _SET_WEAPON_PED_DAMAGE_MODIFIER(Hash weapon, float damageModifier) // 0x1091922715B68DF0
function WEAPON._SET_WEAPON_PED_DAMAGE_MODIFIER(weapon, damageModifier)
  native.invoke(
    Type.Void, 6537, false,
    arg(Type.Hash, weapon),
    arg(Type.Float, damageModifier)
  )
end

-- void SET_WEAPON_DAMAGE_MODIFIER(Hash weaponHash, float damageMultiplier) // 0x4757F00BC6323CFE
--[[
Changes the weapon damage output by the given multiplier value. Must be run every frame.
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.SET_WEAPON_DAMAGE_MODIFIER(weaponHash, damageMultiplier)
  native.invoke(
    Type.Void, 6538, false,
    arg(Type.Hash, weaponHash),
    arg(Type.Float, damageMultiplier)
  )
end

-- void SET_WEAPON_AOE_MODIFIER(Hash weaponHash, float multiplier) // 0x4AE5AC8B852D642C
function WEAPON.SET_WEAPON_AOE_MODIFIER(weaponHash, multiplier)
  native.invoke(
    Type.Void, 6539, false,
    arg(Type.Hash, weaponHash),
    arg(Type.Float, multiplier)
  )
end

-- void SET_WEAPON_EFFECT_DURATION_MODIFIER(Hash p0, float p1) // 0xE6D2CEDD370FF98E
--[[
ex, WEAPON::SET_WEAPON_EFFECT_DURATION_MODIFIER(joaat("vehicle_weapon_mine_slick"), 1.0);
--]]
function WEAPON.SET_WEAPON_EFFECT_DURATION_MODIFIER(p0, p1)
  native.invoke(
    Type.Void, 6540, false,
    arg(Type.Hash, p0),
    arg(Type.Float, p1)
  )
end

-- BOOL IS_PED_CURRENT_WEAPON_SILENCED(Ped ped) // 0x65F0C5AE05943EC7
--[[
This native returns a true or false value.

Ped ped = The ped whose weapon you want to check.
--]]
function WEAPON.IS_PED_CURRENT_WEAPON_SILENCED(ped)
  return native.invoke(
    Type.Bool, 6541, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL IS_FLASH_LIGHT_ON(Ped ped) // 0x4B7620C47217126C
function WEAPON.IS_FLASH_LIGHT_ON(ped)
  return native.invoke(
    Type.Bool, 6542, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL SET_FLASH_LIGHT_FADE_DISTANCE(float distance) // 0xCEA66DAD478CD39B
function WEAPON.SET_FLASH_LIGHT_FADE_DISTANCE(distance)
  return native.invoke(
    Type.Bool, 6543, false,
    arg(Type.Float, distance)
  )
end

-- void SET_FLASH_LIGHT_ACTIVE_HISTORY(Ped ped, BOOL toggle) // 0x988DB6FE9B3AC000
--[[
Enables/disables flashlight on ped's weapon.
--]]
function WEAPON.SET_FLASH_LIGHT_ACTIVE_HISTORY(ped, toggle)
  native.invoke(
    Type.Void, 6544, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end

-- void SET_WEAPON_ANIMATION_OVERRIDE(Ped ped, Hash animStyle) // 0x1055AC3A667F09D9
--[[
Changes the selected ped aiming animation style. 
Note : You must use GET_HASH_KEY!

Strings to use with GET_HASH_KEY :

    "Ballistic",
    "Default",
  "Fat",
  "Female",
   "FirstPerson",
  "FirstPersonAiming",
    "FirstPersonFranklin",
  "FirstPersonFranklinAiming",
    "FirstPersonFranklinRNG",
   "FirstPersonFranklinScope",
 "FirstPersonMPFemale",
  "FirstPersonMichael",
   "FirstPersonMichaelAiming",
 "FirstPersonMichaelRNG",
    "FirstPersonMichaelScope",
  "FirstPersonRNG",
   "FirstPersonScope",
 "FirstPersonTrevor",
    "FirstPersonTrevorAiming",
  "FirstPersonTrevorRNG",
 "FirstPersonTrevorScope",
   "Franklin",
 "Gang",
 "Gang1H",
   "GangFemale",
   "Hillbilly",
    "MP_F_Freemode",
    "Michael",
  "SuperFat",
 "Trevor"
--]]
function WEAPON.SET_WEAPON_ANIMATION_OVERRIDE(ped, animStyle)
  native.invoke(
    Type.Void, 6545, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, animStyle)
  )
end

-- int GET_WEAPON_DAMAGE_TYPE(Hash weaponHash) // 0x3BE0BB12D25FB305
--[[
enum class eDamageType
{
	UNKNOWN = 0,
	NONE = 1,
	MELEE = 2,
	BULLET = 3,
	BULLET_RUBBER = 4,
	EXPLOSIVE = 5,
	FIRE = 6,
	COLLISION = 7,
	FALL = 8,
	DROWN = 9,
	ELECTRIC = 10,
	BARBED_WIRE = 11,
	FIRE_EXTINGUISHER = 12,
	SMOKE = 13,
	WATER_CANNON = 14,
	TRANQUILIZER = 15,
};

Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.GET_WEAPON_DAMAGE_TYPE(weaponHash)
  return native.invoke(
    Type.Int, 6546, false,
    arg(Type.Hash, weaponHash)
  )
end

-- void SET_EQIPPED_WEAPON_START_SPINNING_AT_FULL_SPEED(Ped ped) // 0xE4DCEC7FD5B739A5
function WEAPON.SET_EQIPPED_WEAPON_START_SPINNING_AT_FULL_SPEED(ped)
  native.invoke(
    Type.Void, 6547, false,
    arg(Type.Ped, ped)
  )
end

-- BOOL CAN_USE_WEAPON_ON_PARACHUTE(Hash weaponHash) // 0xBC7BE5ABC0879F74
--[[
this returns if you can use the weapon while using a parachute
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.CAN_USE_WEAPON_ON_PARACHUTE(weaponHash)
  return native.invoke(
    Type.Bool, 6548, false,
    arg(Type.Hash, weaponHash)
  )
end

-- int CREATE_AIR_DEFENCE_SPHERE(float x, float y, float z, float radius, float p4, float p5, float p6, Hash weaponHash) // 0x91EF34584710BE99
--[[
Both coordinates are from objects in the decompiled scripts. Native related to 0xECDC202B25E5CF48 p1 value. The only weapon hash used in the decompiled scripts is weapon_air_defence_gun. These two natives are used by the yacht script, decompiled scripts suggest it and the weapon hash used (valkyrie's rockets) are also used by yachts.
--]]
function WEAPON.CREATE_AIR_DEFENCE_SPHERE(x, y, z, radius, p4, p5, p6, weaponHash)
  return native.invoke(
    Type.Int, 6549, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Float, p6),
    arg(Type.Hash, weaponHash)
  )
end

-- int CREATE_AIR_DEFENCE_ANGLED_AREA(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float radius, Hash weaponHash) // 0x9DA58CDBF6BDBC08
--[[
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.CREATE_AIR_DEFENCE_ANGLED_AREA(p0, p1, p2, p3, p4, p5, p6, p7, p8, radius, weaponHash)
  return native.invoke(
    Type.Int, 6550, false,
    arg(Type.Float, p0),
    arg(Type.Float, p1),
    arg(Type.Float, p2),
    arg(Type.Float, p3),
    arg(Type.Float, p4),
    arg(Type.Float, p5),
    arg(Type.Float, p6),
    arg(Type.Float, p7),
    arg(Type.Float, p8),
    arg(Type.Float, radius),
    arg(Type.Hash, weaponHash)
  )
end

-- BOOL REMOVE_AIR_DEFENCE_SPHERE(int zoneId) // 0x0ABF535877897560
function WEAPON.REMOVE_AIR_DEFENCE_SPHERE(zoneId)
  return native.invoke(
    Type.Bool, 6551, false,
    arg(Type.Int, zoneId)
  )
end

-- void REMOVE_ALL_AIR_DEFENCE_SPHERES() // 0x1E45B34ADEBEE48E
function WEAPON.REMOVE_ALL_AIR_DEFENCE_SPHERES()
  native.invoke(
    Type.Void, 6552, false
  )
end

-- void SET_PLAYER_TARGETTABLE_FOR_AIR_DEFENCE_SPHERE(Player player, int zoneId, BOOL enable) // 0xECDC202B25E5CF48
function WEAPON.SET_PLAYER_TARGETTABLE_FOR_AIR_DEFENCE_SPHERE(player, zoneId, enable)
  native.invoke(
    Type.Void, 6553, false,
    arg(Type.Player, player),
    arg(Type.Int, zoneId),
    arg(Type.Bool, enable)
  )
end

-- BOOL IS_AIR_DEFENCE_SPHERE_IN_AREA(float x, float y, float z, float radius, int* outZoneId) // 0xDAB963831DBFD3F4
function WEAPON.IS_AIR_DEFENCE_SPHERE_IN_AREA(x, y, z, radius, outZoneId)
  return native.invoke(
    Type.Bool, 6554, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z),
    arg(Type.Float, radius),
    arg(Type.Int, outZoneId)
  )
end

-- void FIRE_AIR_DEFENCE_SPHERE_WEAPON_AT_POSITION(int zoneId, float x, float y, float z) // 0x44F1012B69313374
function WEAPON.FIRE_AIR_DEFENCE_SPHERE_WEAPON_AT_POSITION(zoneId, x, y, z)
  native.invoke(
    Type.Void, 6555, false,
    arg(Type.Int, zoneId),
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- BOOL DOES_AIR_DEFENCE_SPHERE_EXIST(int zoneId) // 0xCD79A550999D7D4F
function WEAPON.DOES_AIR_DEFENCE_SPHERE_EXIST(zoneId)
  return native.invoke(
    Type.Bool, 6556, false,
    arg(Type.Int, zoneId)
  )
end

-- void SET_CAN_PED_SELECT_INVENTORY_WEAPON(Ped ped, Hash weaponHash, BOOL toggle) // 0xB4771B9AAF4E68E4
--[[
Disables selecting the given weapon. Ped isn't forced to put the gun away. However you can't reselect the weapon if you holster then unholster. Weapon is also grayed out on the weapon wheel.
Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
--]]
function WEAPON.SET_CAN_PED_SELECT_INVENTORY_WEAPON(ped, weaponHash, toggle)
  native.invoke(
    Type.Void, 6557, false,
    arg(Type.Ped, ped),
    arg(Type.Hash, weaponHash),
    arg(Type.Bool, toggle)
  )
end

-- void SET_CAN_PED_SELECT_ALL_WEAPONS(Ped ped, BOOL toggle) // 0xEFF296097FF1E509
--[[
Disable all weapons. Does the same as 0xB4771B9AAF4E68E4 except for all weapons.
--]]
function WEAPON.SET_CAN_PED_SELECT_ALL_WEAPONS(ped, toggle)
  native.invoke(
    Type.Void, 6558, false,
    arg(Type.Ped, ped),
    arg(Type.Bool, toggle)
  )
end


ZONE = {}

-- int GET_ZONE_AT_COORDS(float x, float y, float z) // 0x27040C25DE6CB2F4
function ZONE.GET_ZONE_AT_COORDS(x, y, z)
  return native.invoke(
    Type.Int, 6559, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- int GET_ZONE_FROM_NAME_ID(const char* zoneName) // 0x98CD1D2934B76CC1
--[[
'zoneName' corresponds to an entry in 'popzone.ipl'.

AIRP = Los Santos International Airport
ALAMO = Alamo Sea
ALTA = Alta
ARMYB = Fort Zancudo
BANHAMC = Banham Canyon Dr
BANNING = Banning
BEACH = Vespucci Beach
BHAMCA = Banham Canyon
BRADP = Braddock Pass
BRADT = Braddock Tunnel
BURTON = Burton
CALAFB = Calafia Bridge
CANNY = Raton Canyon
CCREAK = Cassidy Creek
CHAMH = Chamberlain Hills
CHIL = Vinewood Hills
CHU = Chumash
CMSW = Chiliad Mountain State Wilderness
CYPRE = Cypress Flats
DAVIS = Davis
DELBE = Del Perro Beach
DELPE = Del Perro
DELSOL = La Puerta
DESRT = Grand Senora Desert
DOWNT = Downtown
DTVINE = Downtown Vinewood
EAST_V = East Vinewood
EBURO = El Burro Heights
ELGORL = El Gordo Lighthouse
ELYSIAN = Elysian Island
GALFISH = Galilee
GOLF = GWC and Golfing Society
GRAPES = Grapeseed
GREATC = Great Chaparral
HARMO = Harmony
HAWICK = Hawick
HORS = Vinewood Racetrack
HUMLAB = Humane Labs and Research
JAIL = Bolingbroke Penitentiary
KOREAT = Little Seoul
LACT = Land Act Reservoir
LAGO = Lago Zancudo
LDAM = Land Act Dam
LEGSQU = Legion Square
LMESA = La Mesa
LOSPUER = La Puerta
MIRR = Mirror Park
MORN = Morningwood
MOVIE = Richards Majestic
MTCHIL = Mount Chiliad
MTGORDO = Mount Gordo
MTJOSE = Mount Josiah
MURRI = Murrieta Heights
NCHU = North Chumash
NOOSE = N.O.O.S.E
OCEANA = Pacific Ocean
PALCOV = Paleto Cove
PALETO = Paleto Bay
PALFOR = Paleto Forest
PALHIGH = Palomino Highlands
PALMPOW = Palmer-Taylor Power Station
PBLUFF = Pacific Bluffs
PBOX = Pillbox Hill
PROCOB = Procopio Beach
RANCHO = Rancho
RGLEN = Richman Glen
RICHM = Richman
ROCKF = Rockford Hills
RTRAK = Redwood Lights Track
SANAND = San Andreas
SANCHIA = San Chianski Mountain Range
SANDY = Sandy Shores
SKID = Mission Row
SLAB = Stab City
STAD = Maze Bank Arena
STRAW = Strawberry
TATAMO = Tataviam Mountains
TERMINA = Terminal
TEXTI = Textile City
TONGVAH = Tongva Hills
TONGVAV = Tongva Valley
VCANA = Vespucci Canals
VESP = Vespucci
VINE = Vinewood
WINDF = Ron Alternates Wind Farm
WVINE = West Vinewood
ZANCUDO = Zancudo River
ZP_ORT = Port of South Los Santos
ZQ_UAR = Davis Quartz

Full list of zones by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/zones.json
--]]
function ZONE.GET_ZONE_FROM_NAME_ID(zoneName)
  return native.invoke(
    Type.Int, 6560, false,
    arg(Type.String, zoneName)
  )
end

-- int GET_ZONE_POPSCHEDULE(int zoneId) // 0x4334BC40AA0CB4BB
function ZONE.GET_ZONE_POPSCHEDULE(zoneId)
  return native.invoke(
    Type.Int, 6561, false,
    arg(Type.Int, zoneId)
  )
end

-- const char* GET_NAME_OF_ZONE(float x, float y, float z) // 0xCD90657D4C30E1CA
--[[
AIRP = Los Santos International Airport
ALAMO = Alamo Sea
ALTA = Alta
ARMYB = Fort Zancudo
BANHAMC = Banham Canyon Dr
BANNING = Banning
BEACH = Vespucci Beach
BHAMCA = Banham Canyon
BRADP = Braddock Pass
BRADT = Braddock Tunnel
BURTON = Burton
CALAFB = Calafia Bridge
CANNY = Raton Canyon
CCREAK = Cassidy Creek
CHAMH = Chamberlain Hills
CHIL = Vinewood Hills
CHU = Chumash
CMSW = Chiliad Mountain State Wilderness
CYPRE = Cypress Flats
DAVIS = Davis
DELBE = Del Perro Beach
DELPE = Del Perro
DELSOL = La Puerta
DESRT = Grand Senora Desert
DOWNT = Downtown
DTVINE = Downtown Vinewood
EAST_V = East Vinewood
EBURO = El Burro Heights
ELGORL = El Gordo Lighthouse
ELYSIAN = Elysian Island
GALFISH = Galilee
GOLF = GWC and Golfing Society
GRAPES = Grapeseed
GREATC = Great Chaparral
HARMO = Harmony
HAWICK = Hawick
HORS = Vinewood Racetrack
HUMLAB = Humane Labs and Research
JAIL = Bolingbroke Penitentiary
KOREAT = Little Seoul
LACT = Land Act Reservoir
LAGO = Lago Zancudo
LDAM = Land Act Dam
LEGSQU = Legion Square
LMESA = La Mesa
LOSPUER = La Puerta
MIRR = Mirror Park
MORN = Morningwood
MOVIE = Richards Majestic
MTCHIL = Mount Chiliad
MTGORDO = Mount Gordo
MTJOSE = Mount Josiah
MURRI = Murrieta Heights
NCHU = North Chumash
NOOSE = N.O.O.S.E
OCEANA = Pacific Ocean
PALCOV = Paleto Cove
PALETO = Paleto Bay
PALFOR = Paleto Forest
PALHIGH = Palomino Highlands
PALMPOW = Palmer-Taylor Power Station
PBLUFF = Pacific Bluffs
PBOX = Pillbox Hill
PROCOB = Procopio Beach
RANCHO = Rancho
RGLEN = Richman Glen
RICHM = Richman
ROCKF = Rockford Hills
RTRAK = Redwood Lights Track
SANAND = San Andreas
SANCHIA = San Chianski Mountain Range
SANDY = Sandy Shores
SKID = Mission Row
SLAB = Stab City
STAD = Maze Bank Arena
STRAW = Strawberry
TATAMO = Tataviam Mountains
TERMINA = Terminal
TEXTI = Textile City
TONGVAH = Tongva Hills
TONGVAV = Tongva Valley
VCANA = Vespucci Canals
VESP = Vespucci
VINE = Vinewood
WINDF = Ron Alternates Wind Farm
WVINE = West Vinewood
ZANCUDO = Zancudo River
ZP_ORT = Port of South Los Santos
ZQ_UAR = Davis Quartz

Full list of zones by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/zones.json
--]]
function ZONE.GET_NAME_OF_ZONE(x, y, z)
  return native.invoke(
    Type.Const char, 6562, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end

-- void SET_ZONE_ENABLED(int zoneId, BOOL toggle) // 0xBA5ECEEA120E5611
function ZONE.SET_ZONE_ENABLED(zoneId, toggle)
  native.invoke(
    Type.Void, 6563, false,
    arg(Type.Int, zoneId),
    arg(Type.Bool, toggle)
  )
end

-- int GET_ZONE_SCUMMINESS(int zoneId) // 0x5F7B268D15BA0739
--[[
cellphone range 1- 5 used for signal bar in iFruit phone
--]]
function ZONE.GET_ZONE_SCUMMINESS(zoneId)
  return native.invoke(
    Type.Int, 6564, false,
    arg(Type.Int, zoneId)
  )
end

-- void OVERRIDE_POPSCHEDULE_VEHICLE_MODEL(int scheduleId, Hash vehicleHash) // 0x5F7D596BAC2E7777
--[[
Only used once in the decompiled scripts. Seems to be related to scripted vehicle generators.

Modified example from "am_imp_exp.c4", line 6406:
/* popSchedules[0] = ZONE::GET_ZONE_POPSCHEDULE(ZONE::GET_ZONE_AT_COORDS(891.3, 807.9, 188.1));
etc.
*/
ZONE::OVERRIDE_POPSCHEDULE_VEHICLE_MODEL(popSchedules[index], vehicleHash);
STREAMING::REQUEST_MODEL(vehicleHash);
--]]
function ZONE.OVERRIDE_POPSCHEDULE_VEHICLE_MODEL(scheduleId, vehicleHash)
  native.invoke(
    Type.Void, 6565, false,
    arg(Type.Int, scheduleId),
    arg(Type.Hash, vehicleHash)
  )
end

-- void CLEAR_POPSCHEDULE_OVERRIDE_VEHICLE_MODEL(int scheduleId) // 0x5C0DE367AA0D911C
--[[
Only used once in the decompiled scripts. Seems to be related to scripted vehicle generators.

Modified example from "am_imp_exp.c4", line 6418:
/* popSchedules[0] = ZONE::GET_ZONE_POPSCHEDULE(ZONE::GET_ZONE_AT_COORDS(891.3, 807.9, 188.1));
etc.
*/
STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(vehicleHash);
ZONE::CLEAR_POPSCHEDULE_OVERRIDE_VEHICLE_MODEL(popSchedules[index]);
--]]
function ZONE.CLEAR_POPSCHEDULE_OVERRIDE_VEHICLE_MODEL(scheduleId)
  native.invoke(
    Type.Void, 6566, false,
    arg(Type.Int, scheduleId)
  )
end

-- Hash GET_HASH_OF_MAP_AREA_AT_COORDS(float x, float y, float z) // 0x7EE64D51E8498728
--[[
Returns a hash representing which part of the map the given coords are located.

Possible return values:
(Hash of) city -> -289320599
(Hash of) countryside -> 2072609373

C# Example :

Ped player = Game.Player.Character;
Hash h = Function.Call<Hash>(Hash.GET_HASH_OF_MAP_AREA_AT_COORDS, player.Position.X, player.Position.Y, player.Position.Z);
--]]
function ZONE.GET_HASH_OF_MAP_AREA_AT_COORDS(x, y, z)
  return native.invoke(
    Type.Hash, 6567, false,
    arg(Type.Float, x),
    arg(Type.Float, y),
    arg(Type.Float, z)
  )
end


